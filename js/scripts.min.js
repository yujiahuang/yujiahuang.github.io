function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}!function(e,t){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(m,e){"use strict";function g(e){return null!=e&&e===e.window}var t=[],v=m.document,n=Object.getPrototypeOf,o=t.slice,y=t.concat,l=t.push,r=t.indexOf,i={},s=i.toString,b=i.hasOwnProperty,a=b.toString,c=a.call(Object),w={},E=function(e){return"function"==typeof e&&"number"!=typeof e.nodeType},d={type:!0,src:!0,nonce:!0,noModule:!0};function x(e,t,i){var n,r,s=(i=i||v).createElement("script");if(s.text=e,t)for(n in d)(r=t[n]||t.getAttribute&&t.getAttribute(n))&&s.setAttribute(n,r);i.head.appendChild(s).parentNode.removeChild(s)}function _(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?i[s.call(e)]||"object":typeof e}var u="3.4.1 -ajax,-ajax/jsonp,-ajax/load,-ajax/parseXML,-ajax/script,-ajax/var/location,-ajax/var/nonce,-ajax/var/rquery,-ajax/xhr,-manipulation/_evalUrl,-event/ajax,-effects,-effects/Tween,-effects/animatedSelector",T=function(e,t){return new T.fn.init(e,t)},h=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;function p(e){var t=!!e&&"length"in e&&e.length,i=_(e);return!E(e)&&!g(e)&&("array"===i||0===t||"number"==typeof t&&0<t&&t-1 in e)}T.fn=T.prototype={jquery:u,constructor:T,length:0,toArray:function(){return o.call(this)},get:function(e){return null==e?o.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=T.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return T.each(this,e)},map:function(i){return this.pushStack(T.map(this,function(e,t){return i.call(e,t,e)}))},slice:function(){return this.pushStack(o.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,i=+e+(e<0?t:0);return this.pushStack(0<=i&&i<t?[this[i]]:[])},end:function(){return this.prevObject||this.constructor()},push:l,sort:t.sort,splice:t.splice},T.extend=T.fn.extend=function(){var e,t,i,n,r,s,a=arguments[0]||{},o=1,l=arguments.length,c=!1;for("boolean"==typeof a&&(c=a,a=arguments[o]||{},o++),"object"==typeof a||E(a)||(a={}),o===l&&(a=this,o--);o<l;o++)if(null!=(e=arguments[o]))for(t in e)n=e[t],"__proto__"!==t&&a!==n&&(c&&n&&(T.isPlainObject(n)||(r=Array.isArray(n)))?(i=a[t],s=r&&!Array.isArray(i)?[]:r||T.isPlainObject(i)?i:{},r=!1,a[t]=T.extend(c,s,n)):void 0!==n&&(a[t]=n));return a},T.extend({expando:"jQuery"+(u+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var t,i;return!(!e||"[object Object]"!==s.call(e))&&(!(t=n(e))||"function"==typeof(i=b.call(t,"constructor")&&t.constructor)&&a.call(i)===c)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},globalEval:function(e,t){x(e,{nonce:t&&t.nonce})},each:function(e,t){var i,n=0;if(p(e))for(i=e.length;n<i&&!1!==t.call(e[n],n,e[n]);n++);else for(n in e)if(!1===t.call(e[n],n,e[n]))break;return e},trim:function(e){return null==e?"":(e+"").replace(h,"")},makeArray:function(e,t){var i=t||[];return null!=e&&(p(Object(e))?T.merge(i,"string"==typeof e?[e]:e):l.call(i,e)),i},inArray:function(e,t,i){return null==t?-1:r.call(t,e,i)},merge:function(e,t){for(var i=+t.length,n=0,r=e.length;n<i;n++)e[r++]=t[n];return e.length=r,e},grep:function(e,t,i){for(var n=[],r=0,s=e.length,a=!i;r<s;r++)!t(e[r],r)!=a&&n.push(e[r]);return n},map:function(e,t,i){var n,r,s=0,a=[];if(p(e))for(n=e.length;s<n;s++)null!=(r=t(e[s],s,i))&&a.push(r);else for(s in e)null!=(r=t(e[s],s,i))&&a.push(r);return y.apply([],a)},guid:1,support:w}),"function"==typeof Symbol&&(T.fn[Symbol.iterator]=t[Symbol.iterator]),T.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){i["[object "+t+"]"]=t.toLowerCase()});var f=function(i){function u(e,t,i){var n="0x"+t-65536;return n!=n||i?t:n<0?String.fromCharCode(65536+n):String.fromCharCode(n>>10|55296,1023&n|56320)}function r(){x()}var e,p,w,s,a,f,h,m,E,l,c,x,_,o,T,g,d,v,y,C="sizzle"+ +new Date,b=i.document,S=0,n=0,k=le(),N=le(),L=le(),I=le(),D=function(e,t){return e===t&&(c=!0),0},A={}.hasOwnProperty,t=[],M=t.pop,O=t.push,P=t.push,z=t.slice,j=function(e,t){for(var i=0,n=e.length;i<n;i++)if(e[i]===t)return i;return-1},B="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",H="[\\x20\\t\\r\\n\\f]",R="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",$="\\["+H+"*("+R+")(?:"+H+"*([*^$|!~]?=)"+H+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+R+"))|)"+H+"*\\]",W=":("+R+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+$+")*)|.*)\\)|)",F=new RegExp(H+"+","g"),q=new RegExp("^"+H+"+|((?:^|[^\\\\])(?:\\\\.)*)"+H+"+$","g"),V=new RegExp("^"+H+"*,"+H+"*"),Y=new RegExp("^"+H+"*([>+~]|"+H+")"+H+"*"),X=new RegExp(H+"|>"),U=new RegExp(W),G=new RegExp("^"+R+"$"),K={ID:new RegExp("^#("+R+")"),CLASS:new RegExp("^\\.("+R+")"),TAG:new RegExp("^("+R+"|[*])"),ATTR:new RegExp("^"+$),PSEUDO:new RegExp("^"+W),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+H+"*(even|odd|(([+-]|)(\\d*)n|)"+H+"*(?:([+-]|)"+H+"*(\\d+)|))"+H+"*\\)|)","i"),bool:new RegExp("^(?:"+B+")$","i"),needsContext:new RegExp("^"+H+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+H+"*((?:-\\d)?\\d*)"+H+"*\\)|)(?=[^-]|$)","i")},Q=/HTML$/i,Z=/^(?:input|select|textarea|button)$/i,J=/^h\d$/i,ee=/^[^{]+\{\s*\[native \w/,te=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ie=/[+~]/,ne=new RegExp("\\\\([\\da-f]{1,6}"+H+"?|("+H+")|.)","ig"),re=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,se=function(e,t){return t?"\0"===e?"ï¿½":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},ae=we(function(e){return!0===e.disabled&&"fieldset"===e.nodeName.toLowerCase()},{dir:"parentNode",next:"legend"});try{P.apply(t=z.call(b.childNodes),b.childNodes),t[b.childNodes.length].nodeType}catch(e){P={apply:t.length?function(e,t){O.apply(e,z.call(t))}:function(e,t){for(var i=e.length,n=0;e[i++]=t[n++];);e.length=i-1}}}function oe(t,e,i,n){var r,s,a,o,l,c,d,u=e&&e.ownerDocument,h=e?e.nodeType:9;if(i=i||[],"string"!=typeof t||!t||1!==h&&9!==h&&11!==h)return i;if(!n&&((e?e.ownerDocument||e:b)!==_&&x(e),e=e||_,T)){if(11!==h&&(l=te.exec(t)))if(r=l[1]){if(9===h){if(!(a=e.getElementById(r)))return i;if(a.id===r)return i.push(a),i}else if(u&&(a=u.getElementById(r))&&y(e,a)&&a.id===r)return i.push(a),i}else{if(l[2])return P.apply(i,e.getElementsByTagName(t)),i;if((r=l[3])&&p.getElementsByClassName&&e.getElementsByClassName)return P.apply(i,e.getElementsByClassName(r)),i}if(p.qsa&&!I[t+" "]&&(!g||!g.test(t))&&(1!==h||"object"!==e.nodeName.toLowerCase())){if(d=t,u=e,1===h&&X.test(t)){for((o=e.getAttribute("id"))?o=o.replace(re,se):e.setAttribute("id",o=C),s=(c=f(t)).length;s--;)c[s]="#"+o+" "+be(c[s]);d=c.join(","),u=ie.test(t)&&ve(e.parentNode)||e}try{return P.apply(i,u.querySelectorAll(d)),i}catch(e){I(t,!0)}finally{o===C&&e.removeAttribute("id")}}}return m(t.replace(q,"$1"),e,i,n)}function le(){var i=[];function n(e,t){return i.push(e+" ")>w.cacheLength&&delete n[i.shift()],n[e+" "]=t}return n}function ce(e){return e[C]=!0,e}function de(e){var t=_.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function ue(e,t){for(var i=e.split("|"),n=i.length;n--;)w.attrHandle[i[n]]=t}function he(e,t){var i=t&&e,n=i&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(n)return n;if(i)for(;i=i.nextSibling;)if(i===t)return-1;return e?1:-1}function pe(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}function fe(i){return function(e){var t=e.nodeName.toLowerCase();return("input"===t||"button"===t)&&e.type===i}}function me(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&ae(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function ge(a){return ce(function(s){return s=+s,ce(function(e,t){for(var i,n=a([],e.length,s),r=n.length;r--;)e[i=n[r]]&&(e[i]=!(t[i]=e[i]))})})}function ve(e){return e&&void 0!==e.getElementsByTagName&&e}for(e in p=oe.support={},a=oe.isXML=function(e){var t=e.namespaceURI,i=(e.ownerDocument||e).documentElement;return!Q.test(t||i&&i.nodeName||"HTML")},x=oe.setDocument=function(e){var t,i,n=e?e.ownerDocument||e:b;return n!==_&&9===n.nodeType&&n.documentElement&&(o=(_=n).documentElement,T=!a(_),b!==_&&(i=_.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener("unload",r,!1):i.attachEvent&&i.attachEvent("onunload",r)),p.attributes=de(function(e){return e.className="i",!e.getAttribute("className")}),p.getElementsByTagName=de(function(e){return e.appendChild(_.createComment("")),!e.getElementsByTagName("*").length}),p.getElementsByClassName=ee.test(_.getElementsByClassName),p.getById=de(function(e){return o.appendChild(e).id=C,!_.getElementsByName||!_.getElementsByName(C).length}),p.getById?(w.filter.ID=function(e){var t=e.replace(ne,u);return function(e){return e.getAttribute("id")===t}},w.find.ID=function(e,t){if(void 0!==t.getElementById&&T){var i=t.getElementById(e);return i?[i]:[]}}):(w.filter.ID=function(e){var i=e.replace(ne,u);return function(e){var t=void 0!==e.getAttributeNode&&e.getAttributeNode("id");return t&&t.value===i}},w.find.ID=function(e,t){if(void 0!==t.getElementById&&T){var i,n,r,s=t.getElementById(e);if(s){if((i=s.getAttributeNode("id"))&&i.value===e)return[s];for(r=t.getElementsByName(e),n=0;s=r[n++];)if((i=s.getAttributeNode("id"))&&i.value===e)return[s]}return[]}}),w.find.TAG=p.getElementsByTagName?function(e,t){return void 0!==t.getElementsByTagName?t.getElementsByTagName(e):p.qsa?t.querySelectorAll(e):void 0}:function(e,t){var i,n=[],r=0,s=t.getElementsByTagName(e);if("*"!==e)return s;for(;i=s[r++];)1===i.nodeType&&n.push(i);return n},w.find.CLASS=p.getElementsByClassName&&function(e,t){if(void 0!==t.getElementsByClassName&&T)return t.getElementsByClassName(e)},d=[],g=[],(p.qsa=ee.test(_.querySelectorAll))&&(de(function(e){o.appendChild(e).innerHTML="<a id='"+C+"'></a><select id='"+C+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&g.push("[*^$]="+H+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||g.push("\\["+H+"*(?:value|"+B+")"),e.querySelectorAll("[id~="+C+"-]").length||g.push("~="),e.querySelectorAll(":checked").length||g.push(":checked"),e.querySelectorAll("a#"+C+"+*").length||g.push(".#.+[+~]")}),de(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=_.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&g.push("name"+H+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&g.push(":enabled",":disabled"),o.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&g.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),g.push(",.*:")})),(p.matchesSelector=ee.test(v=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&de(function(e){p.disconnectedMatch=v.call(e,"*"),v.call(e,"[s!='']:x"),d.push("!=",W)}),g=g.length&&new RegExp(g.join("|")),d=d.length&&new RegExp(d.join("|")),t=ee.test(o.compareDocumentPosition),y=t||ee.test(o.contains)?function(e,t){var i=9===e.nodeType?e.documentElement:e,n=t&&t.parentNode;return e===n||!(!n||1!==n.nodeType||!(i.contains?i.contains(n):e.compareDocumentPosition&&16&e.compareDocumentPosition(n)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},D=t?function(e,t){if(e===t)return c=!0,0;var i=!e.compareDocumentPosition-!t.compareDocumentPosition;return i||(1&(i=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!p.sortDetached&&t.compareDocumentPosition(e)===i?e===_||e.ownerDocument===b&&y(b,e)?-1:t===_||t.ownerDocument===b&&y(b,t)?1:l?j(l,e)-j(l,t):0:4&i?-1:1)}:function(e,t){if(e===t)return c=!0,0;var i,n=0,r=e.parentNode,s=t.parentNode,a=[e],o=[t];if(!r||!s)return e===_?-1:t===_?1:r?-1:s?1:l?j(l,e)-j(l,t):0;if(r===s)return he(e,t);for(i=e;i=i.parentNode;)a.unshift(i);for(i=t;i=i.parentNode;)o.unshift(i);for(;a[n]===o[n];)n++;return n?he(a[n],o[n]):a[n]===b?-1:o[n]===b?1:0}),_},oe.matches=function(e,t){return oe(e,null,null,t)},oe.matchesSelector=function(e,t){if((e.ownerDocument||e)!==_&&x(e),p.matchesSelector&&T&&!I[t+" "]&&(!d||!d.test(t))&&(!g||!g.test(t)))try{var i=v.call(e,t);if(i||p.disconnectedMatch||e.document&&11!==e.document.nodeType)return i}catch(e){I(t,!0)}return 0<oe(t,_,null,[e]).length},oe.contains=function(e,t){return(e.ownerDocument||e)!==_&&x(e),y(e,t)},oe.attr=function(e,t){(e.ownerDocument||e)!==_&&x(e);var i=w.attrHandle[t.toLowerCase()],n=i&&A.call(w.attrHandle,t.toLowerCase())?i(e,t,!T):void 0;return void 0!==n?n:p.attributes||!T?e.getAttribute(t):(n=e.getAttributeNode(t))&&n.specified?n.value:null},oe.escape=function(e){return(e+"").replace(re,se)},oe.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},oe.uniqueSort=function(e){var t,i=[],n=0,r=0;if(c=!p.detectDuplicates,l=!p.sortStable&&e.slice(0),e.sort(D),c){for(;t=e[r++];)t===e[r]&&(n=i.push(r));for(;n--;)e.splice(i[n],1)}return l=null,e},s=oe.getText=function(e){var t,i="",n=0,r=e.nodeType;if(r){if(1===r||9===r||11===r){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)i+=s(e)}else if(3===r||4===r)return e.nodeValue}else for(;t=e[n++];)i+=s(t);return i},(w=oe.selectors={cacheLength:50,createPseudo:ce,match:K,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(ne,u),e[3]=(e[3]||e[4]||e[5]||"").replace(ne,u),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||oe.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&oe.error(e[0]),e},PSEUDO:function(e){var t,i=!e[6]&&e[2];return K.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":i&&U.test(i)&&(t=f(i,!0))&&(t=i.indexOf(")",i.length-t)-i.length)&&(e[0]=e[0].slice(0,t),e[2]=i.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(ne,u).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=k[e+" "];return t||(t=new RegExp("(^|"+H+")"+e+"("+H+"|$)"))&&k(e,function(e){return t.test("string"==typeof e.className&&e.className||void 0!==e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(i,n,r){return function(e){var t=oe.attr(e,i);return null==t?"!="===n:!n||(t+="","="===n?t===r:"!="===n?t!==r:"^="===n?r&&0===t.indexOf(r):"*="===n?r&&-1<t.indexOf(r):"$="===n?r&&t.slice(-r.length)===r:"~="===n?-1<(" "+t.replace(F," ")+" ").indexOf(r):"|="===n&&(t===r||t.slice(0,r.length+1)===r+"-"))}},CHILD:function(f,e,t,m,g){var v="nth"!==f.slice(0,3),y="last"!==f.slice(-4),b="of-type"===e;return 1===m&&0===g?function(e){return!!e.parentNode}:function(e,t,i){var n,r,s,a,o,l,c=v!=y?"nextSibling":"previousSibling",d=e.parentNode,u=b&&e.nodeName.toLowerCase(),h=!i&&!b,p=!1;if(d){if(v){for(;c;){for(a=e;a=a[c];)if(b?a.nodeName.toLowerCase()===u:1===a.nodeType)return!1;l=c="only"===f&&!l&&"nextSibling"}return!0}if(l=[y?d.firstChild:d.lastChild],y&&h){for(p=(o=(n=(r=(s=(a=d)[C]||(a[C]={}))[a.uniqueID]||(s[a.uniqueID]={}))[f]||[])[0]===S&&n[1])&&n[2],a=o&&d.childNodes[o];a=++o&&a&&a[c]||(p=o=0)||l.pop();)if(1===a.nodeType&&++p&&a===e){r[f]=[S,o,p];break}}else if(h&&(p=o=(n=(r=(s=(a=e)[C]||(a[C]={}))[a.uniqueID]||(s[a.uniqueID]={}))[f]||[])[0]===S&&n[1]),!1===p)for(;(a=++o&&a&&a[c]||(p=o=0)||l.pop())&&((b?a.nodeName.toLowerCase()!==u:1!==a.nodeType)||!++p||(h&&((r=(s=a[C]||(a[C]={}))[a.uniqueID]||(s[a.uniqueID]={}))[f]=[S,p]),a!==e)););return(p-=g)===m||p%m==0&&0<=p/m}}},PSEUDO:function(e,s){var t,a=w.pseudos[e]||w.setFilters[e.toLowerCase()]||oe.error("unsupported pseudo: "+e);return a[C]?a(s):1<a.length?(t=[e,e,"",s],w.setFilters.hasOwnProperty(e.toLowerCase())?ce(function(e,t){for(var i,n=a(e,s),r=n.length;r--;)e[i=j(e,n[r])]=!(t[i]=n[r])}):function(e){return a(e,0,t)}):a}},pseudos:{not:ce(function(e){var n=[],r=[],o=h(e.replace(q,"$1"));return o[C]?ce(function(e,t,i,n){for(var r,s=o(e,null,n,[]),a=e.length;a--;)(r=s[a])&&(e[a]=!(t[a]=r))}):function(e,t,i){return n[0]=e,o(n,null,i,r),n[0]=null,!r.pop()}}),has:ce(function(t){return function(e){return 0<oe(t,e).length}}),contains:ce(function(t){return t=t.replace(ne,u),function(e){return-1<(e.textContent||s(e)).indexOf(t)}}),lang:ce(function(i){return G.test(i||"")||oe.error("unsupported lang: "+i),i=i.replace(ne,u).toLowerCase(),function(e){var t;do{if(t=T?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(t=t.toLowerCase())===i||0===t.indexOf(i+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=i.location&&i.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===o},focus:function(e){return e===_.activeElement&&(!_.hasFocus||_.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:me(!1),disabled:me(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!w.pseudos.empty(e)},header:function(e){return J.test(e.nodeName)},input:function(e){return Z.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:ge(function(){return[0]}),last:ge(function(e,t){return[t-1]}),eq:ge(function(e,t,i){return[i<0?i+t:i]}),even:ge(function(e,t){for(var i=0;i<t;i+=2)e.push(i);return e}),odd:ge(function(e,t){for(var i=1;i<t;i+=2)e.push(i);return e}),lt:ge(function(e,t,i){for(var n=i<0?i+t:t<i?t:i;0<=--n;)e.push(n);return e}),gt:ge(function(e,t,i){for(var n=i<0?i+t:i;++n<t;)e.push(n);return e})}}).pseudos.nth=w.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})w.pseudos[e]=pe(e);for(e in{submit:!0,reset:!0})w.pseudos[e]=fe(e);function ye(){}function be(e){for(var t=0,i=e.length,n="";t<i;t++)n+=e[t].value;return n}function we(o,e,t){var l=e.dir,c=e.next,d=c||l,u=t&&"parentNode"===d,h=n++;return e.first?function(e,t,i){for(;e=e[l];)if(1===e.nodeType||u)return o(e,t,i);return!1}:function(e,t,i){var n,r,s,a=[S,h];if(i){for(;e=e[l];)if((1===e.nodeType||u)&&o(e,t,i))return!0}else for(;e=e[l];)if(1===e.nodeType||u)if(r=(s=e[C]||(e[C]={}))[e.uniqueID]||(s[e.uniqueID]={}),c&&c===e.nodeName.toLowerCase())e=e[l]||e;else{if((n=r[d])&&n[0]===S&&n[1]===h)return a[2]=n[2];if((r[d]=a)[2]=o(e,t,i))return!0}return!1}}function Ee(r){return 1<r.length?function(e,t,i){for(var n=r.length;n--;)if(!r[n](e,t,i))return!1;return!0}:r[0]}function xe(e,t,i,n,r){for(var s,a=[],o=0,l=e.length,c=null!=t;o<l;o++)(s=e[o])&&(i&&!i(s,n,r)||(a.push(s),c&&t.push(o)));return a}function _e(p,f,m,g,v,e){return g&&!g[C]&&(g=_e(g)),v&&!v[C]&&(v=_e(v,e)),ce(function(e,t,i,n){var r,s,a,o=[],l=[],c=t.length,d=e||function(e,t,i){for(var n=0,r=t.length;n<r;n++)oe(e,t[n],i);return i}(f||"*",i.nodeType?[i]:i,[]),u=!p||!e&&f?d:xe(d,o,p,i,n),h=m?v||(e?p:c||g)?[]:t:u;if(m&&m(u,h,i,n),g)for(r=xe(h,l),g(r,[],i,n),s=r.length;s--;)(a=r[s])&&(h[l[s]]=!(u[l[s]]=a));if(e){if(v||p){if(v){for(r=[],s=h.length;s--;)(a=h[s])&&r.push(u[s]=a);v(null,h=[],r,n)}for(s=h.length;s--;)(a=h[s])&&-1<(r=v?j(e,a):o[s])&&(e[r]=!(t[r]=a))}}else h=xe(h===t?h.splice(c,h.length):h),v?v(null,t,h,n):P.apply(t,h)})}function Te(e){for(var r,t,i,n=e.length,s=w.relative[e[0].type],a=s||w.relative[" "],o=s?1:0,l=we(function(e){return e===r},a,!0),c=we(function(e){return-1<j(r,e)},a,!0),d=[function(e,t,i){var n=!s&&(i||t!==E)||((r=t).nodeType?l:c)(e,t,i);return r=null,n}];o<n;o++)if(t=w.relative[e[o].type])d=[we(Ee(d),t)];else{if((t=w.filter[e[o].type].apply(null,e[o].matches))[C]){for(i=++o;i<n&&!w.relative[e[i].type];i++);return _e(1<o&&Ee(d),1<o&&be(e.slice(0,o-1).concat({value:" "===e[o-2].type?"*":""})).replace(q,"$1"),t,o<i&&Te(e.slice(o,i)),i<n&&Te(e=e.slice(i)),i<n&&be(e))}d.push(t)}return Ee(d)}function Ce(g,v){function e(e,t,i,n,r){var s,a,o,l=0,c="0",d=e&&[],u=[],h=E,p=e||b&&w.find.TAG("*",r),f=S+=null==h?1:Math.random()||.1,m=p.length;for(r&&(E=t===_||t||r);c!==m&&null!=(s=p[c]);c++){if(b&&s){for(a=0,t||s.ownerDocument===_||(x(s),i=!T);o=g[a++];)if(o(s,t||_,i)){n.push(s);break}r&&(S=f)}y&&((s=!o&&s)&&l--,e&&d.push(s))}if(l+=c,y&&c!==l){for(a=0;o=v[a++];)o(d,u,t,i);if(e){if(0<l)for(;c--;)d[c]||u[c]||(u[c]=M.call(n));u=xe(u)}P.apply(n,u),r&&!e&&0<u.length&&1<l+v.length&&oe.uniqueSort(n)}return r&&(S=f,E=h),d}var y=0<v.length,b=0<g.length;return y?ce(e):e}return ye.prototype=w.filters=w.pseudos,w.setFilters=new ye,f=oe.tokenize=function(e,t){var i,n,r,s,a,o,l,c=N[e+" "];if(c)return t?0:c.slice(0);for(a=e,o=[],l=w.preFilter;a;){for(s in i&&!(n=V.exec(a))||(n&&(a=a.slice(n[0].length)||a),o.push(r=[])),i=!1,(n=Y.exec(a))&&(i=n.shift(),r.push({value:i,type:n[0].replace(q," ")}),a=a.slice(i.length)),w.filter)!(n=K[s].exec(a))||l[s]&&!(n=l[s](n))||(i=n.shift(),r.push({value:i,type:s,matches:n}),a=a.slice(i.length));if(!i)break}return t?a.length:a?oe.error(e):N(e,o).slice(0)},h=oe.compile=function(e,t){var i,n=[],r=[],s=L[e+" "];if(!s){for(i=(t=t||f(e)).length;i--;)(s=Te(t[i]))[C]?n.push(s):r.push(s);(s=L(e,Ce(r,n))).selector=e}return s},m=oe.select=function(e,t,i,n){var r,s,a,o,l,c="function"==typeof e&&e,d=!n&&f(e=c.selector||e);if(i=i||[],1===d.length){if(2<(s=d[0]=d[0].slice(0)).length&&"ID"===(a=s[0]).type&&9===t.nodeType&&T&&w.relative[s[1].type]){if(!(t=(w.find.ID(a.matches[0].replace(ne,u),t)||[])[0]))return i;c&&(t=t.parentNode),e=e.slice(s.shift().value.length)}for(r=K.needsContext.test(e)?0:s.length;r--&&(a=s[r],!w.relative[o=a.type]);)if((l=w.find[o])&&(n=l(a.matches[0].replace(ne,u),ie.test(s[0].type)&&ve(t.parentNode)||t))){if(s.splice(r,1),!(e=n.length&&be(s)))return P.apply(i,n),i;break}}return(c||h(e,d))(n,t,!T,i,!t||ie.test(e)&&ve(t.parentNode)||t),i},p.sortStable=C.split("").sort(D).join("")===C,p.detectDuplicates=!!c,x(),p.sortDetached=de(function(e){return 1&e.compareDocumentPosition(_.createElement("fieldset"))}),de(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||ue("type|href|height|width",function(e,t,i){if(!i)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),p.attributes&&de(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||ue("value",function(e,t,i){if(!i&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),de(function(e){return null==e.getAttribute("disabled")})||ue(B,function(e,t,i){var n;if(!i)return!0===e[t]?t.toLowerCase():(n=e.getAttributeNode(t))&&n.specified?n.value:null}),oe}(m);T.find=f,T.expr=f.selectors,T.expr[":"]=T.expr.pseudos,T.uniqueSort=T.unique=f.uniqueSort,T.text=f.getText,T.isXMLDoc=f.isXML,T.contains=f.contains,T.escapeSelector=f.escape;function C(e,t,i){for(var n=[],r=void 0!==i;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(r&&T(e).is(i))break;n.push(e)}return n}function S(e,t){for(var i=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&i.push(e);return i}var k=T.expr.match.needsContext;function N(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var L=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function I(e,i,n){return E(i)?T.grep(e,function(e,t){return!!i.call(e,t,e)!==n}):i.nodeType?T.grep(e,function(e){return e===i!==n}):"string"!=typeof i?T.grep(e,function(e){return-1<r.call(i,e)!==n}):T.filter(i,e,n)}T.filter=function(e,t,i){var n=t[0];return i&&(e=":not("+e+")"),1===t.length&&1===n.nodeType?T.find.matchesSelector(n,e)?[n]:[]:T.find.matches(e,T.grep(t,function(e){return 1===e.nodeType}))},T.fn.extend({find:function(e){var t,i,n=this.length,r=this;if("string"!=typeof e)return this.pushStack(T(e).filter(function(){for(t=0;t<n;t++)if(T.contains(r[t],this))return!0}));for(i=this.pushStack([]),t=0;t<n;t++)T.find(e,r[t],i);return 1<n?T.uniqueSort(i):i},filter:function(e){return this.pushStack(I(this,e||[],!1))},not:function(e){return this.pushStack(I(this,e||[],!0))},is:function(e){return!!I(this,"string"==typeof e&&k.test(e)?T(e):e||[],!1).length}});var D,A=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(T.fn.init=function(e,t,i){var n,r;if(!e)return this;if(i=i||D,"string"!=typeof e)return e.nodeType?(this[0]=e,this.length=1,this):E(e)?void 0!==i.ready?i.ready(e):e(T):T.makeArray(e,this);if(!(n="<"===e[0]&&">"===e[e.length-1]&&3<=e.length?[null,e,null]:A.exec(e))||!n[1]&&t)return!t||t.jquery?(t||i).find(e):this.constructor(t).find(e);if(n[1]){if(t=t instanceof T?t[0]:t,T.merge(this,T.parseHTML(n[1],t&&t.nodeType?t.ownerDocument||t:v,!0)),L.test(n[1])&&T.isPlainObject(t))for(n in t)E(this[n])?this[n](t[n]):this.attr(n,t[n]);return this}return(r=v.getElementById(n[2]))&&(this[0]=r,this.length=1),this}).prototype=T.fn,D=T(v);var M=/^(?:parents|prev(?:Until|All))/,O={children:!0,contents:!0,next:!0,prev:!0};function P(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}T.fn.extend({has:function(e){var t=T(e,this),i=t.length;return this.filter(function(){for(var e=0;e<i;e++)if(T.contains(this,t[e]))return!0})},closest:function(e,t){var i,n=0,r=this.length,s=[],a="string"!=typeof e&&T(e);if(!k.test(e))for(;n<r;n++)for(i=this[n];i&&i!==t;i=i.parentNode)if(i.nodeType<11&&(a?-1<a.index(i):1===i.nodeType&&T.find.matchesSelector(i,e))){s.push(i);break}return this.pushStack(1<s.length?T.uniqueSort(s):s)},index:function(e){return e?"string"==typeof e?r.call(T(e),this[0]):r.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(T.uniqueSort(T.merge(this.get(),T(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),T.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return C(e,"parentNode")},parentsUntil:function(e,t,i){return C(e,"parentNode",i)},next:function(e){return P(e,"nextSibling")},prev:function(e){return P(e,"previousSibling")},nextAll:function(e){return C(e,"nextSibling")},prevAll:function(e){return C(e,"previousSibling")},nextUntil:function(e,t,i){return C(e,"nextSibling",i)},prevUntil:function(e,t,i){return C(e,"previousSibling",i)},siblings:function(e){return S((e.parentNode||{}).firstChild,e)},children:function(e){return S(e.firstChild)},contents:function(e){return void 0!==e.contentDocument?e.contentDocument:(N(e,"template")&&(e=e.content||e),T.merge([],e.childNodes))}},function(n,r){T.fn[n]=function(e,t){var i=T.map(this,r,e);return"Until"!==n.slice(-5)&&(t=e),t&&"string"==typeof t&&(i=T.filter(t,i)),1<this.length&&(O[n]||T.uniqueSort(i),M.test(n)&&i.reverse()),this.pushStack(i)}});var z=/[^\x20\t\r\n\f]+/g;function j(e){return e}function B(e){throw e}function H(e,t,i,n){var r;try{e&&E(r=e.promise)?r.call(e).done(t).fail(i):e&&E(r=e.then)?r.call(e,t,i):t.apply(void 0,[e].slice(n))}catch(e){i.apply(void 0,[e])}}T.Callbacks=function(n){var e,i;n="string"==typeof n?(e=n,i={},T.each(e.match(z)||[],function(e,t){i[t]=!0}),i):T.extend({},n);function r(){for(o=o||n.once,a=s=!0;c.length;d=-1)for(t=c.shift();++d<l.length;)!1===l[d].apply(t[0],t[1])&&n.stopOnFalse&&(d=l.length,t=!1);n.memory||(t=!1),s=!1,o&&(l=t?[]:"")}var s,t,a,o,l=[],c=[],d=-1,u={add:function(){return l&&(t&&!s&&(d=l.length-1,c.push(t)),function i(e){T.each(e,function(e,t){E(t)?n.unique&&u.has(t)||l.push(t):t&&t.length&&"string"!==_(t)&&i(t)})}(arguments),t&&!s&&r()),this},remove:function(){return T.each(arguments,function(e,t){for(var i;-1<(i=T.inArray(t,l,i));)l.splice(i,1),i<=d&&d--}),this},has:function(e){return e?-1<T.inArray(e,l):0<l.length},empty:function(){return l=l&&[],this},disable:function(){return o=c=[],l=t="",this},disabled:function(){return!l},lock:function(){return o=c=[],t||s||(l=t=""),this},locked:function(){return!!o},fireWith:function(e,t){return o||(t=[e,(t=t||[]).slice?t.slice():t],c.push(t),s||r()),this},fire:function(){return u.fireWith(this,arguments),this},fired:function(){return!!a}};return u},T.extend({Deferred:function(e){var s=[["notify","progress",T.Callbacks("memory"),T.Callbacks("memory"),2],["resolve","done",T.Callbacks("once memory"),T.Callbacks("once memory"),0,"resolved"],["reject","fail",T.Callbacks("once memory"),T.Callbacks("once memory"),1,"rejected"]],r="pending",a={state:function(){return r},always:function(){return o.done(arguments).fail(arguments),this},catch:function(e){return a.then(null,e)},pipe:function(){var r=arguments;return T.Deferred(function(n){T.each(s,function(e,t){var i=E(r[t[4]])&&r[t[4]];o[t[1]](function(){var e=i&&i.apply(this,arguments);e&&E(e.promise)?e.promise().progress(n.notify).done(n.resolve).fail(n.reject):n[t[0]+"With"](this,i?[e]:arguments)})}),r=null}).promise()},then:function(t,i,n){var l=0;function c(r,s,a,o){return function(){function e(){var e,t;if(!(r<l)){if((e=a.apply(i,n))===s.promise())throw new TypeError("Thenable self-resolution");t=e&&("object"==typeof e||"function"==typeof e)&&e.then,E(t)?o?t.call(e,c(l,s,j,o),c(l,s,B,o)):(l++,t.call(e,c(l,s,j,o),c(l,s,B,o),c(l,s,j,s.notifyWith))):(a!==j&&(i=void 0,n=[e]),(o||s.resolveWith)(i,n))}}var i=this,n=arguments,t=o?e:function(){try{e()}catch(e){T.Deferred.exceptionHook&&T.Deferred.exceptionHook(e,t.stackTrace),l<=r+1&&(a!==B&&(i=void 0,n=[e]),s.rejectWith(i,n))}};r?t():(T.Deferred.getStackHook&&(t.stackTrace=T.Deferred.getStackHook()),m.setTimeout(t))}}return T.Deferred(function(e){s[0][3].add(c(0,e,E(n)?n:j,e.notifyWith)),s[1][3].add(c(0,e,E(t)?t:j)),s[2][3].add(c(0,e,E(i)?i:B))}).promise()},promise:function(e){return null!=e?T.extend(e,a):a}},o={};return T.each(s,function(e,t){var i=t[2],n=t[5];a[t[1]]=i.add,n&&i.add(function(){r=n},s[3-e][2].disable,s[3-e][3].disable,s[0][2].lock,s[0][3].lock),i.add(t[3].fire),o[t[0]]=function(){return o[t[0]+"With"](this===o?void 0:this,arguments),this},o[t[0]+"With"]=i.fireWith}),a.promise(o),e&&e.call(o,o),o},when:function(e){function t(t){return function(e){r[t]=this,s[t]=1<arguments.length?o.call(arguments):e,--i||a.resolveWith(r,s)}}var i=arguments.length,n=i,r=Array(n),s=o.call(arguments),a=T.Deferred();if(i<=1&&(H(e,a.done(t(n)).resolve,a.reject,!i),"pending"===a.state()||E(s[n]&&s[n].then)))return a.then();for(;n--;)H(s[n],t(n),a.reject);return a.promise()}});var R=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;T.Deferred.exceptionHook=function(e,t){m.console&&m.console.warn&&e&&R.test(e.name)&&m.console.warn("jQuery.Deferred exception: "+e.message,e.stack,t)},T.readyException=function(e){m.setTimeout(function(){throw e})};var $=T.Deferred();function W(){v.removeEventListener("DOMContentLoaded",W),m.removeEventListener("load",W),T.ready()}T.fn.ready=function(e){return $.then(e).catch(function(e){T.readyException(e)}),this},T.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--T.readyWait:T.isReady)||(T.isReady=!0)!==e&&0<--T.readyWait||$.resolveWith(v,[T])}}),T.ready.then=$.then,"complete"===v.readyState||"loading"!==v.readyState&&!v.documentElement.doScroll?m.setTimeout(T.ready):(v.addEventListener("DOMContentLoaded",W),m.addEventListener("load",W));var F=function(e,t,i,n,r,s,a){var o=0,l=e.length,c=null==i;if("object"===_(i))for(o in r=!0,i)F(e,t,o,i[o],!0,s,a);else if(void 0!==n&&(r=!0,E(n)||(a=!0),c&&(t=a?(t.call(e,n),null):(c=t,function(e,t,i){return c.call(T(e),i)})),t))for(;o<l;o++)t(e[o],i,a?n:n.call(e[o],o,t(e[o],i)));return r?e:c?t.call(e):l?t(e[0],i):s},q=/^-ms-/,V=/-([a-z])/g;function Y(e,t){return t.toUpperCase()}function X(e){return e.replace(q,"ms-").replace(V,Y)}function U(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType}function G(){this.expando=T.expando+G.uid++}G.uid=1,G.prototype={cache:function(e){var t=e[this.expando];return t||(t={},U(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,i){var n,r=this.cache(e);if("string"==typeof t)r[X(t)]=i;else for(n in t)r[X(n)]=t[n];return r},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][X(t)]},access:function(e,t,i){return void 0===t||t&&"string"==typeof t&&void 0===i?this.get(e,t):(this.set(e,t,i),void 0!==i?i:t)},remove:function(e,t){var i,n=e[this.expando];if(void 0!==n){if(void 0!==t){i=(t=Array.isArray(t)?t.map(X):(t=X(t))in n?[t]:t.match(z)||[]).length;for(;i--;)delete n[t[i]]}void 0!==t&&!T.isEmptyObject(n)||(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!T.isEmptyObject(t)}};var K=new G,Q=new G,Z=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,J=/[A-Z]/g;function ee(e,t,i){var n,r;if(void 0===i&&1===e.nodeType)if(n="data-"+t.replace(J,"-$&").toLowerCase(),"string"==typeof(i=e.getAttribute(n))){try{i="true"===(r=i)||"false"!==r&&("null"===r?null:r===+r+""?+r:Z.test(r)?JSON.parse(r):r)}catch(e){}Q.set(e,t,i)}else i=void 0;return i}T.extend({hasData:function(e){return Q.hasData(e)||K.hasData(e)},data:function(e,t,i){return Q.access(e,t,i)},removeData:function(e,t){Q.remove(e,t)},_data:function(e,t,i){return K.access(e,t,i)},_removeData:function(e,t){K.remove(e,t)}}),T.fn.extend({data:function(i,e){var t,n,r,s=this[0],a=s&&s.attributes;if(void 0!==i)return"object"==typeof i?this.each(function(){Q.set(this,i)}):F(this,function(e){var t;if(s&&void 0===e)return void 0!==(t=Q.get(s,i))||void 0!==(t=ee(s,i))?t:void 0;this.each(function(){Q.set(this,i,e)})},null,e,1<arguments.length,null,!0);if(this.length&&(r=Q.get(s),1===s.nodeType&&!K.get(s,"hasDataAttrs"))){for(t=a.length;t--;)a[t]&&0===(n=a[t].name).indexOf("data-")&&(n=X(n.slice(5)),ee(s,n,r[n]));K.set(s,"hasDataAttrs",!0)}return r},removeData:function(e){return this.each(function(){Q.remove(this,e)})}}),T.extend({queue:function(e,t,i){var n;if(e)return t=(t||"fx")+"queue",n=K.get(e,t),i&&(!n||Array.isArray(i)?n=K.access(e,t,T.makeArray(i)):n.push(i)),n||[]},dequeue:function(e,t){t=t||"fx";var i=T.queue(e,t),n=i.length,r=i.shift(),s=T._queueHooks(e,t);"inprogress"===r&&(r=i.shift(),n--),r&&("fx"===t&&i.unshift("inprogress"),delete s.stop,r.call(e,function(){T.dequeue(e,t)},s)),!n&&s&&s.empty.fire()},_queueHooks:function(e,t){var i=t+"queueHooks";return K.get(e,i)||K.access(e,i,{empty:T.Callbacks("once memory").add(function(){K.remove(e,[t+"queue",i])})})}}),T.fn.extend({queue:function(t,i){var e=2;return"string"!=typeof t&&(i=t,t="fx",e--),arguments.length<e?T.queue(this[0],t):void 0===i?this:this.each(function(){var e=T.queue(this,t,i);T._queueHooks(this,t),"fx"===t&&"inprogress"!==e[0]&&T.dequeue(this,t)})},dequeue:function(e){return this.each(function(){T.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){function i(){--r||s.resolveWith(a,[a])}var n,r=1,s=T.Deferred(),a=this,o=this.length;for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";o--;)(n=K.get(a[o],e+"queueHooks"))&&n.empty&&(r++,n.empty.add(i));return i(),s.promise(t)}});var te=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,ie=new RegExp("^(?:([+-])=|)("+te+")([a-z%]*)$","i"),ne=["Top","Right","Bottom","Left"],re=v.documentElement,se=function(e){return T.contains(e.ownerDocument,e)},ae={composed:!0};re.getRootNode&&(se=function(e){return T.contains(e.ownerDocument,e)||e.getRootNode(ae)===e.ownerDocument});function oe(e,t){return"none"===(e=t||e).style.display||""===e.style.display&&se(e)&&"none"===T.css(e,"display")}function le(e,t,i,n){var r,s,a={};for(s in t)a[s]=e.style[s],e.style[s]=t[s];for(s in r=i.apply(e,n||[]),t)e.style[s]=a[s];return r}var ce={};function de(e,t){for(var i,n,r,s,a,o,l,c=[],d=0,u=e.length;d<u;d++)(n=e[d]).style&&(i=n.style.display,t?("none"===i&&(c[d]=K.get(n,"display")||null,c[d]||(n.style.display="")),""===n.style.display&&oe(n)&&(c[d]=(l=a=s=void 0,a=(r=n).ownerDocument,o=r.nodeName,(l=ce[o])||(s=a.body.appendChild(a.createElement(o)),l=T.css(s,"display"),s.parentNode.removeChild(s),"none"===l&&(l="block"),ce[o]=l)))):"none"!==i&&(c[d]="none",K.set(n,"display",i)));for(d=0;d<u;d++)null!=c[d]&&(e[d].style.display=c[d]);return e}T.fn.extend({show:function(){return de(this,!0)},hide:function(){return de(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){oe(this)?T(this).show():T(this).hide()})}});var ue=/^(?:checkbox|radio)$/i,he=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,pe=/^$|^module$|\/(?:java|ecma)script/i,fe={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function me(e,t){var i=void 0!==e.getElementsByTagName?e.getElementsByTagName(t||"*"):void 0!==e.querySelectorAll?e.querySelectorAll(t||"*"):[];return void 0===t||t&&N(e,t)?T.merge([e],i):i}function ge(e,t){for(var i=0,n=e.length;i<n;i++)K.set(e[i],"globalEval",!t||K.get(t[i],"globalEval"))}fe.optgroup=fe.option,fe.tbody=fe.tfoot=fe.colgroup=fe.caption=fe.thead,fe.th=fe.td;var ve,ye,be=/<|&#?\w+;/;function we(e,t,i,n,r){for(var s,a,o,l,c,d,u=t.createDocumentFragment(),h=[],p=0,f=e.length;p<f;p++)if((s=e[p])||0===s)if("object"===_(s))T.merge(h,s.nodeType?[s]:s);else if(be.test(s)){for(a=a||u.appendChild(t.createElement("div")),o=(he.exec(s)||["",""])[1].toLowerCase(),l=fe[o]||fe._default,a.innerHTML=l[1]+T.htmlPrefilter(s)+l[2],d=l[0];d--;)a=a.lastChild;T.merge(h,a.childNodes),(a=u.firstChild).textContent=""}else h.push(t.createTextNode(s));for(u.textContent="",p=0;s=h[p++];)if(n&&-1<T.inArray(s,n))r&&r.push(s);else if(c=se(s),a=me(u.appendChild(s),"script"),c&&ge(a),i)for(d=0;s=a[d++];)pe.test(s.type||"")&&i.push(s);return u}ve=v.createDocumentFragment().appendChild(v.createElement("div")),(ye=v.createElement("input")).setAttribute("type","radio"),ye.setAttribute("checked","checked"),ye.setAttribute("name","t"),ve.appendChild(ye),w.checkClone=ve.cloneNode(!0).cloneNode(!0).lastChild.checked,ve.innerHTML="<textarea>x</textarea>",w.noCloneChecked=!!ve.cloneNode(!0).lastChild.defaultValue;var Ee=/^key/,xe=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,_e=/^([^.]*)(?:\.(.+)|)/;function Te(){return!0}function Ce(){return!1}function Se(e,t){return e===function(){try{return v.activeElement}catch(e){}}()==("focus"===t)}function ke(e,t,i,n,r,s){var a,o;if("object"==typeof t){for(o in"string"!=typeof i&&(n=n||i,i=void 0),t)ke(e,o,i,n,t[o],s);return e}if(null==n&&null==r?(r=i,n=i=void 0):null==r&&("string"==typeof i?(r=n,n=void 0):(r=n,n=i,i=void 0)),!1===r)r=Ce;else if(!r)return e;return 1===s&&(a=r,(r=function(e){return T().off(e),a.apply(this,arguments)}).guid=a.guid||(a.guid=T.guid++)),e.each(function(){T.event.add(this,t,r,n,i)})}function Ne(e,r,s){s?(K.set(e,r,!1),T.event.add(e,r,{namespace:!1,handler:function(e){var t,i,n=K.get(this,r);if(1&e.isTrigger&&this[r]){if(n.length)(T.event.special[r]||{}).delegateType&&e.stopPropagation();else if(n=o.call(arguments),K.set(this,r,n),t=s(this,r),this[r](),n!==(i=K.get(this,r))||t?K.set(this,r,!1):i={},n!==i)return e.stopImmediatePropagation(),e.preventDefault(),i.value}else n.length&&(K.set(this,r,{value:T.event.trigger(T.extend(n[0],T.Event.prototype),n.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===K.get(e,r)&&T.event.add(e,r,Te)}T.event={global:{},add:function(t,e,i,n,r){var s,a,o,l,c,d,u,h,p,f,m,g=K.get(t);if(g)for(i.handler&&(i=(s=i).handler,r=s.selector),r&&T.find.matchesSelector(re,r),i.guid||(i.guid=T.guid++),(l=g.events)||(l=g.events={}),(a=g.handle)||(a=g.handle=function(e){return void 0!==T&&T.event.triggered!==e.type?T.event.dispatch.apply(t,arguments):void 0}),c=(e=(e||"").match(z)||[""]).length;c--;)p=m=(o=_e.exec(e[c])||[])[1],f=(o[2]||"").split(".").sort(),p&&(u=T.event.special[p]||{},p=(r?u.delegateType:u.bindType)||p,u=T.event.special[p]||{},d=T.extend({type:p,origType:m,data:n,handler:i,guid:i.guid,selector:r,needsContext:r&&T.expr.match.needsContext.test(r),namespace:f.join(".")},s),(h=l[p])||((h=l[p]=[]).delegateCount=0,u.setup&&!1!==u.setup.call(t,n,f,a)||t.addEventListener&&t.addEventListener(p,a)),u.add&&(u.add.call(t,d),d.handler.guid||(d.handler.guid=i.guid)),r?h.splice(h.delegateCount++,0,d):h.push(d),T.event.global[p]=!0)},remove:function(e,t,i,n,r){var s,a,o,l,c,d,u,h,p,f,m,g=K.hasData(e)&&K.get(e);if(g&&(l=g.events)){for(c=(t=(t||"").match(z)||[""]).length;c--;)if(p=m=(o=_e.exec(t[c])||[])[1],f=(o[2]||"").split(".").sort(),p){for(u=T.event.special[p]||{},h=l[p=(n?u.delegateType:u.bindType)||p]||[],o=o[2]&&new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"),a=s=h.length;s--;)d=h[s],!r&&m!==d.origType||i&&i.guid!==d.guid||o&&!o.test(d.namespace)||n&&n!==d.selector&&("**"!==n||!d.selector)||(h.splice(s,1),d.selector&&h.delegateCount--,u.remove&&u.remove.call(e,d));a&&!h.length&&(u.teardown&&!1!==u.teardown.call(e,f,g.handle)||T.removeEvent(e,p,g.handle),delete l[p])}else for(p in l)T.event.remove(e,p+t[c],i,n,!0);T.isEmptyObject(l)&&K.remove(e,"handle events")}},dispatch:function(e){var t,i,n,r,s,a,o=T.event.fix(e),l=new Array(arguments.length),c=(K.get(this,"events")||{})[o.type]||[],d=T.event.special[o.type]||{};for(l[0]=o,t=1;t<arguments.length;t++)l[t]=arguments[t];if(o.delegateTarget=this,!d.preDispatch||!1!==d.preDispatch.call(this,o)){for(a=T.event.handlers.call(this,o,c),t=0;(r=a[t++])&&!o.isPropagationStopped();)for(o.currentTarget=r.elem,i=0;(s=r.handlers[i++])&&!o.isImmediatePropagationStopped();)o.rnamespace&&!1!==s.namespace&&!o.rnamespace.test(s.namespace)||(o.handleObj=s,o.data=s.data,void 0!==(n=((T.event.special[s.origType]||{}).handle||s.handler).apply(r.elem,l))&&!1===(o.result=n)&&(o.preventDefault(),o.stopPropagation()));return d.postDispatch&&d.postDispatch.call(this,o),o.result}},handlers:function(e,t){var i,n,r,s,a,o=[],l=t.delegateCount,c=e.target;if(l&&c.nodeType&&!("click"===e.type&&1<=e.button))for(;c!==this;c=c.parentNode||this)if(1===c.nodeType&&("click"!==e.type||!0!==c.disabled)){for(s=[],a={},i=0;i<l;i++)void 0===a[r=(n=t[i]).selector+" "]&&(a[r]=n.needsContext?-1<T(r,this).index(c):T.find(r,this,null,[c]).length),a[r]&&s.push(n);s.length&&o.push({elem:c,handlers:s})}return c=this,l<t.length&&o.push({elem:c,handlers:t.slice(l)}),o},addProp:function(t,e){Object.defineProperty(T.Event.prototype,t,{enumerable:!0,configurable:!0,get:E(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(e){return e[T.expando]?e:new T.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){var t=this||e;return ue.test(t.type)&&t.click&&N(t,"input")&&Ne(t,"click",Te),!1},trigger:function(e){var t=this||e;return ue.test(t.type)&&t.click&&N(t,"input")&&Ne(t,"click"),!0},_default:function(e){var t=e.target;return ue.test(t.type)&&t.click&&N(t,"input")&&K.get(t,"click")||N(t,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},T.removeEvent=function(e,t,i){e.removeEventListener&&e.removeEventListener(t,i)},T.Event=function(e,t){if(!(this instanceof T.Event))return new T.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?Te:Ce,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&T.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[T.expando]=!0},T.Event.prototype={constructor:T.Event,isDefaultPrevented:Ce,isPropagationStopped:Ce,isImmediatePropagationStopped:Ce,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=Te,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=Te,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=Te,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},T.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(e){var t=e.button;return null==e.which&&Ee.test(e.type)?null!=e.charCode?e.charCode:e.keyCode:!e.which&&void 0!==t&&xe.test(e.type)?1&t?1:2&t?3:4&t?2:0:e.which}},T.event.addProp),T.each({focus:"focusin",blur:"focusout"},function(e,t){T.event.special[e]={setup:function(){return Ne(this,e,Se),!1},trigger:function(){return Ne(this,e),!0},delegateType:t}}),T.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,r){T.event.special[e]={delegateType:r,bindType:r,handle:function(e){var t,i=e.relatedTarget,n=e.handleObj;return i&&(i===this||T.contains(this,i))||(e.type=n.origType,t=n.handler.apply(this,arguments),e.type=r),t}}}),T.fn.extend({on:function(e,t,i,n){return ke(this,e,t,i,n)},one:function(e,t,i,n){return ke(this,e,t,i,n,1)},off:function(e,t,i){var n,r;if(e&&e.preventDefault&&e.handleObj)return n=e.handleObj,T(e.delegateTarget).off(n.namespace?n.origType+"."+n.namespace:n.origType,n.selector,n.handler),this;if("object"!=typeof e)return!1!==t&&"function"!=typeof t||(i=t,t=void 0),!1===i&&(i=Ce),this.each(function(){T.event.remove(this,e,i,t)});for(r in e)this.off(r,t,e[r]);return this}});var Le=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,Ie=/<script|<style|<link/i,De=/checked\s*(?:[^=]|=\s*.checked.)/i,Ae=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function Me(e,t){return N(e,"table")&&N(11!==t.nodeType?t:t.firstChild,"tr")&&T(e).children("tbody")[0]||e}function Oe(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function Pe(e){return"true/"===(e.type||"").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute("type"),e}function ze(e,t){var i,n,r,s,a,o,l,c;if(1===t.nodeType){if(K.hasData(e)&&(s=K.access(e),a=K.set(t,s),c=s.events))for(r in delete a.handle,a.events={},c)for(i=0,n=c[r].length;i<n;i++)T.event.add(t,r,c[r][i]);Q.hasData(e)&&(o=Q.access(e),l=T.extend({},o),Q.set(t,l))}}function je(i,n,r,s){n=y.apply([],n);var e,t,a,o,l,c,d=0,u=i.length,h=u-1,p=n[0],f=E(p);if(f||1<u&&"string"==typeof p&&!w.checkClone&&De.test(p))return i.each(function(e){var t=i.eq(e);f&&(n[0]=p.call(this,e,t.html())),je(t,n,r,s)});if(u&&(t=(e=we(n,i[0].ownerDocument,!1,i,s)).firstChild,1===e.childNodes.length&&(e=t),t||s)){for(o=(a=T.map(me(e,"script"),Oe)).length;d<u;d++)l=e,d!==h&&(l=T.clone(l,!0,!0),o&&T.merge(a,me(l,"script"))),r.call(i[d],l,d);if(o)for(c=a[a.length-1].ownerDocument,T.map(a,Pe),d=0;d<o;d++)l=a[d],pe.test(l.type||"")&&!K.access(l,"globalEval")&&T.contains(c,l)&&(l.src&&"module"!==(l.type||"").toLowerCase()?T._evalUrl&&!l.noModule&&T._evalUrl(l.src,{nonce:l.nonce||l.getAttribute("nonce")}):x(l.textContent.replace(Ae,""),l,c))}return i}function Be(e,t,i){for(var n,r=t?T.filter(t,e):e,s=0;null!=(n=r[s]);s++)i||1!==n.nodeType||T.cleanData(me(n)),n.parentNode&&(i&&se(n)&&ge(me(n,"script")),n.parentNode.removeChild(n));return e}T.extend({htmlPrefilter:function(e){return e.replace(Le,"<$1></$2>")},clone:function(e,t,i){var n,r,s,a,o,l,c,d=e.cloneNode(!0),u=se(e);if(!(w.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||T.isXMLDoc(e)))for(a=me(d),n=0,r=(s=me(e)).length;n<r;n++)o=s[n],l=a[n],"input"===(c=l.nodeName.toLowerCase())&&ue.test(o.type)?l.checked=o.checked:"input"!==c&&"textarea"!==c||(l.defaultValue=o.defaultValue);if(t)if(i)for(s=s||me(e),a=a||me(d),n=0,r=s.length;n<r;n++)ze(s[n],a[n]);else ze(e,d);return 0<(a=me(d,"script")).length&&ge(a,!u&&me(e,"script")),d},cleanData:function(e){for(var t,i,n,r=T.event.special,s=0;void 0!==(i=e[s]);s++)if(U(i)){if(t=i[K.expando]){if(t.events)for(n in t.events)r[n]?T.event.remove(i,n):T.removeEvent(i,n,t.handle);i[K.expando]=void 0}i[Q.expando]&&(i[Q.expando]=void 0)}}}),T.fn.extend({detach:function(e){return Be(this,e,!0)},remove:function(e){return Be(this,e)},text:function(e){return F(this,function(e){return void 0===e?T.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return je(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Me(this,e).appendChild(e)})},prepend:function(){return je(this,arguments,function(e){var t;1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(t=Me(this,e)).insertBefore(e,t.firstChild)})},before:function(){return je(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return je(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(T.cleanData(me(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return T.clone(this,e,t)})},html:function(e){return F(this,function(e){var t=this[0]||{},i=0,n=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!Ie.test(e)&&!fe[(he.exec(e)||["",""])[1].toLowerCase()]){e=T.htmlPrefilter(e);try{for(;i<n;i++)1===(t=this[i]||{}).nodeType&&(T.cleanData(me(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var i=[];return je(this,arguments,function(e){var t=this.parentNode;T.inArray(this,i)<0&&(T.cleanData(me(this)),t&&t.replaceChild(e,this))},i)}}),T.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,a){T.fn[e]=function(e){for(var t,i=[],n=T(e),r=n.length-1,s=0;s<=r;s++)t=s===r?this:this.clone(!0),T(n[s])[a](t),l.apply(i,t.get());return this.pushStack(i)}});var He,Re,$e,We,Fe,qe,Ve,Ye=new RegExp("^("+te+")(?!px)[a-z%]+$","i"),Xe=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=m),t.getComputedStyle(e)},Ue=new RegExp(ne.join("|"),"i");function Ge(){var e;Ve&&(qe.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",Ve.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",re.appendChild(qe).appendChild(Ve),e=m.getComputedStyle(Ve),He="1%"!==e.top,Fe=12===Ke(e.marginLeft),Ve.style.right="60%",We=36===Ke(e.right),Re=36===Ke(e.width),Ve.style.position="absolute",$e=12===Ke(Ve.offsetWidth/3),re.removeChild(qe),Ve=null)}function Ke(e){return Math.round(parseFloat(e))}function Qe(e,t,i){var n,r,s,a,o=e.style;return(i=i||Xe(e))&&(""!==(a=i.getPropertyValue(t)||i[t])||se(e)||(a=T.style(e,t)),!w.pixelBoxStyles()&&Ye.test(a)&&Ue.test(t)&&(n=o.width,r=o.minWidth,s=o.maxWidth,o.minWidth=o.maxWidth=o.width=a,a=i.width,o.width=n,o.minWidth=r,o.maxWidth=s)),void 0!==a?a+"":a}function Ze(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}qe=v.createElement("div"),(Ve=v.createElement("div")).style&&(Ve.style.backgroundClip="content-box",Ve.cloneNode(!0).style.backgroundClip="",w.clearCloneStyle="content-box"===Ve.style.backgroundClip,T.extend(w,{boxSizingReliable:function(){return Ge(),Re},pixelBoxStyles:function(){return Ge(),We},pixelPosition:function(){return Ge(),He},reliableMarginLeft:function(){return Ge(),Fe},scrollboxSize:function(){return Ge(),$e}}));var Je=["Webkit","Moz","ms"],et=v.createElement("div").style,tt={};function it(e){var t=T.cssProps[e]||tt[e];return t||(e in et?e:tt[e]=function(e){for(var t=e[0].toUpperCase()+e.slice(1),i=Je.length;i--;)if((e=Je[i]+t)in et)return e}(e)||e)}var nt,rt,st=/^(none|table(?!-c[ea]).+)/,at=/^--/,ot={position:"absolute",visibility:"hidden",display:"block"},lt={letterSpacing:"0",fontWeight:"400"};function ct(e,t,i){var n=ie.exec(t);return n?Math.max(0,n[2]-(i||0))+(n[3]||"px"):t}function dt(e,t,i,n,r,s){var a="width"===t?1:0,o=0,l=0;if(i===(n?"border":"content"))return 0;for(;a<4;a+=2)"margin"===i&&(l+=T.css(e,i+ne[a],!0,r)),n?("content"===i&&(l-=T.css(e,"padding"+ne[a],!0,r)),"margin"!==i&&(l-=T.css(e,"border"+ne[a]+"Width",!0,r))):(l+=T.css(e,"padding"+ne[a],!0,r),"padding"!==i?l+=T.css(e,"border"+ne[a]+"Width",!0,r):o+=T.css(e,"border"+ne[a]+"Width",!0,r));return!n&&0<=s&&(l+=Math.max(0,Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-s-l-o-.5))||0),l}function ut(e,t,i){var n=Xe(e),r=(!w.boxSizingReliable()||i)&&"border-box"===T.css(e,"boxSizing",!1,n),s=r,a=Qe(e,t,n),o="offset"+t[0].toUpperCase()+t.slice(1);if(Ye.test(a)){if(!i)return a;a="auto"}return(!w.boxSizingReliable()&&r||"auto"===a||!parseFloat(a)&&"inline"===T.css(e,"display",!1,n))&&e.getClientRects().length&&(r="border-box"===T.css(e,"boxSizing",!1,n),(s=o in e)&&(a=e[o])),(a=parseFloat(a)||0)+dt(e,t,i||(r?"border":"content"),s,n,a)+"px"}T.extend({cssHooks:{opacity:{get:function(e,t){if(t){var i=Qe(e,"opacity");return""===i?"1":i}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,i,n){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var r,s,a,o=X(t),l=at.test(t),c=e.style;if(l||(t=it(o)),a=T.cssHooks[t]||T.cssHooks[o],void 0===i)return a&&"get"in a&&void 0!==(r=a.get(e,!1,n))?r:c[t];"string"===(s=typeof i)&&(r=ie.exec(i))&&r[1]&&(i=function(e,t,i,n){var r,s,a=20,o=n?function(){return n.cur()}:function(){return T.css(e,t,"")},l=o(),c=i&&i[3]||(T.cssNumber[t]?"":"px"),d=e.nodeType&&(T.cssNumber[t]||"px"!==c&&+l)&&ie.exec(T.css(e,t));if(d&&d[3]!==c){for(l/=2,c=c||d[3],d=+l||1;a--;)T.style(e,t,d+c),(1-s)*(1-(s=o()/l||.5))<=0&&(a=0),d/=s;d*=2,T.style(e,t,d+c),i=i||[]}return i&&(d=+d||+l||0,r=i[1]?d+(i[1]+1)*i[2]:+i[2],n&&(n.unit=c,n.start=d,n.end=r)),r}(e,t,r),s="number"),null!=i&&i==i&&("number"!==s||l||(i+=r&&r[3]||(T.cssNumber[o]?"":"px")),w.clearCloneStyle||""!==i||0!==t.indexOf("background")||(c[t]="inherit"),a&&"set"in a&&void 0===(i=a.set(e,i,n))||(l?c.setProperty(t,i):c[t]=i))}},css:function(e,t,i,n){var r,s,a,o=X(t);return at.test(t)||(t=it(o)),(a=T.cssHooks[t]||T.cssHooks[o])&&"get"in a&&(r=a.get(e,!0,i)),void 0===r&&(r=Qe(e,t,n)),"normal"===r&&t in lt&&(r=lt[t]),""===i||i?(s=parseFloat(r),!0===i||isFinite(s)?s||0:r):r}}),T.each(["height","width"],function(e,l){T.cssHooks[l]={get:function(e,t,i){if(t)return!st.test(T.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?ut(e,l,i):le(e,ot,function(){return ut(e,l,i)})},set:function(e,t,i){var n,r=Xe(e),s=!w.scrollboxSize()&&"absolute"===r.position,a=(s||i)&&"border-box"===T.css(e,"boxSizing",!1,r),o=i?dt(e,l,i,a,r):0;return a&&s&&(o-=Math.ceil(e["offset"+l[0].toUpperCase()+l.slice(1)]-parseFloat(r[l])-dt(e,l,"border",!1,r)-.5)),o&&(n=ie.exec(t))&&"px"!==(n[3]||"px")&&(e.style[l]=t,t=T.css(e,l)),ct(0,t,o)}}}),T.cssHooks.marginLeft=Ze(w.reliableMarginLeft,function(e,t){if(t)return(parseFloat(Qe(e,"marginLeft"))||e.getBoundingClientRect().left-le(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),T.each({margin:"",padding:"",border:"Width"},function(r,s){T.cssHooks[r+s]={expand:function(e){for(var t=0,i={},n="string"==typeof e?e.split(" "):[e];t<4;t++)i[r+ne[t]+s]=n[t]||n[t-2]||n[0];return i}},"margin"!==r&&(T.cssHooks[r+s].set=ct)}),T.fn.extend({css:function(e,t){return F(this,function(e,t,i){var n,r,s={},a=0;if(Array.isArray(t)){for(n=Xe(e),r=t.length;a<r;a++)s[t[a]]=T.css(e,t[a],!1,n);return s}return void 0!==i?T.style(e,t,i):T.css(e,t)},e,t,1<arguments.length)}}),T.fn.delay=function(n,e){return n=T.fx&&T.fx.speeds[n]||n,e=e||"fx",this.queue(e,function(e,t){var i=m.setTimeout(e,n);t.stop=function(){m.clearTimeout(i)}})},nt=v.createElement("input"),rt=v.createElement("select").appendChild(v.createElement("option")),nt.type="checkbox",w.checkOn=""!==nt.value,w.optSelected=rt.selected,(nt=v.createElement("input")).value="t",nt.type="radio",w.radioValue="t"===nt.value;var ht,pt=T.expr.attrHandle;T.fn.extend({attr:function(e,t){return F(this,T.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){T.removeAttr(this,e)})}}),T.extend({attr:function(e,t,i){var n,r,s=e.nodeType;if(3!==s&&8!==s&&2!==s)return void 0===e.getAttribute?T.prop(e,t,i):(1===s&&T.isXMLDoc(e)||(r=T.attrHooks[t.toLowerCase()]||(T.expr.match.bool.test(t)?ht:void 0)),void 0!==i?null===i?void T.removeAttr(e,t):r&&"set"in r&&void 0!==(n=r.set(e,i,t))?n:(e.setAttribute(t,i+""),i):!(r&&"get"in r&&null!==(n=r.get(e,t)))&&null==(n=T.find.attr(e,t))?void 0:n)},attrHooks:{type:{set:function(e,t){if(!w.radioValue&&"radio"===t&&N(e,"input")){var i=e.value;return e.setAttribute("type",t),i&&(e.value=i),t}}}},removeAttr:function(e,t){var i,n=0,r=t&&t.match(z);if(r&&1===e.nodeType)for(;i=r[n++];)e.removeAttribute(i)}}),ht={set:function(e,t,i){return!1===t?T.removeAttr(e,i):e.setAttribute(i,i),i}},T.each(T.expr.match.bool.source.match(/\w+/g),function(e,t){var a=pt[t]||T.find.attr;pt[t]=function(e,t,i){var n,r,s=t.toLowerCase();return i||(r=pt[s],pt[s]=n,n=null!=a(e,t,i)?s:null,pt[s]=r),n}});var ft=/^(?:input|select|textarea|button)$/i,mt=/^(?:a|area)$/i;function gt(e){return(e.match(z)||[]).join(" ")}function vt(e){return e.getAttribute&&e.getAttribute("class")||""}function yt(e){return Array.isArray(e)?e:"string"==typeof e&&e.match(z)||[]}T.fn.extend({prop:function(e,t){return F(this,T.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each(function(){delete this[T.propFix[e]||e]})}}),T.extend({prop:function(e,t,i){var n,r,s=e.nodeType;if(3!==s&&8!==s&&2!==s)return 1===s&&T.isXMLDoc(e)||(t=T.propFix[t]||t,r=T.propHooks[t]),void 0!==i?r&&"set"in r&&void 0!==(n=r.set(e,i,t))?n:e[t]=i:r&&"get"in r&&null!==(n=r.get(e,t))?n:e[t]},propHooks:{tabIndex:{get:function(e){var t=T.find.attr(e,"tabindex");return t?parseInt(t,10):ft.test(e.nodeName)||mt.test(e.nodeName)&&e.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),w.optSelected||(T.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),T.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){T.propFix[this.toLowerCase()]=this}),T.fn.extend({addClass:function(t){var e,i,n,r,s,a,o,l=0;if(E(t))return this.each(function(e){T(this).addClass(t.call(this,e,vt(this)))});if((e=yt(t)).length)for(;i=this[l++];)if(r=vt(i),n=1===i.nodeType&&" "+gt(r)+" "){for(a=0;s=e[a++];)n.indexOf(" "+s+" ")<0&&(n+=s+" ");r!==(o=gt(n))&&i.setAttribute("class",o)}return this},removeClass:function(t){var e,i,n,r,s,a,o,l=0;if(E(t))return this.each(function(e){T(this).removeClass(t.call(this,e,vt(this)))});if(!arguments.length)return this.attr("class","");if((e=yt(t)).length)for(;i=this[l++];)if(r=vt(i),n=1===i.nodeType&&" "+gt(r)+" "){for(a=0;s=e[a++];)for(;-1<n.indexOf(" "+s+" ");)n=n.replace(" "+s+" "," ");r!==(o=gt(n))&&i.setAttribute("class",o)}return this},toggleClass:function(r,t){var s=typeof r,a="string"==s||Array.isArray(r);return"boolean"==typeof t&&a?t?this.addClass(r):this.removeClass(r):E(r)?this.each(function(e){T(this).toggleClass(r.call(this,e,vt(this),t),t)}):this.each(function(){var e,t,i,n;if(a)for(t=0,i=T(this),n=yt(r);e=n[t++];)i.hasClass(e)?i.removeClass(e):i.addClass(e);else void 0!==r&&"boolean"!=s||((e=vt(this))&&K.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",!e&&!1!==r&&K.get(this,"__className__")||""))})},hasClass:function(e){for(var t,i=0,n=" "+e+" ";t=this[i++];)if(1===t.nodeType&&-1<(" "+gt(vt(t))+" ").indexOf(n))return!0;return!1}});var bt=/\r/g;T.fn.extend({val:function(i){var n,e,r,t=this[0];return arguments.length?(r=E(i),this.each(function(e){var t;1===this.nodeType&&(null==(t=r?i.call(this,e,T(this).val()):i)?t="":"number"==typeof t?t+="":Array.isArray(t)&&(t=T.map(t,function(e){return null==e?"":e+""})),(n=T.valHooks[this.type]||T.valHooks[this.nodeName.toLowerCase()])&&"set"in n&&void 0!==n.set(this,t,"value")||(this.value=t))})):t?(n=T.valHooks[t.type]||T.valHooks[t.nodeName.toLowerCase()])&&"get"in n&&void 0!==(e=n.get(t,"value"))?e:"string"==typeof(e=t.value)?e.replace(bt,""):null==e?"":e:void 0}}),T.extend({valHooks:{option:{get:function(e){var t=T.find.attr(e,"value");return null!=t?t:gt(T.text(e))}},select:{get:function(e){for(var t,i,n=e.options,r=e.selectedIndex,s="select-one"===e.type,a=s?null:[],o=s?r+1:n.length,l=r<0?o:s?r:0;l<o;l++)if(((i=n[l]).selected||l===r)&&!i.disabled&&(!i.parentNode.disabled||!N(i.parentNode,"optgroup"))){if(t=T(i).val(),s)return t;a.push(t)}return a},set:function(e,t){for(var i,n,r=e.options,s=T.makeArray(t),a=r.length;a--;)((n=r[a]).selected=-1<T.inArray(T.valHooks.option.get(n),s))&&(i=!0);return i||(e.selectedIndex=-1),s}}}}),T.each(["radio","checkbox"],function(){T.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<T.inArray(T(e).val(),t)}},w.checkOn||(T.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})}),w.focusin="onfocusin"in m;function wt(e){e.stopPropagation()}var Et=/^(?:focusinfocus|focusoutblur)$/;T.extend(T.event,{trigger:function(e,t,i,n){var r,s,a,o,l,c,d,u=[i||v],h=b.call(e,"type")?e.type:e,p=b.call(e,"namespace")?e.namespace.split("."):[],f=d=s=i=i||v;if(3!==i.nodeType&&8!==i.nodeType&&!Et.test(h+T.event.triggered)&&(-1<h.indexOf(".")&&(h=(p=h.split(".")).shift(),p.sort()),o=h.indexOf(":")<0&&"on"+h,(e=e[T.expando]?e:new T.Event(h,"object"==typeof e&&e)).isTrigger=n?2:3,e.namespace=p.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=i),t=null==t?[e]:T.makeArray(t,[e]),c=T.event.special[h]||{},n||!c.trigger||!1!==c.trigger.apply(i,t))){if(!n&&!c.noBubble&&!g(i)){for(a=c.delegateType||h,Et.test(a+h)||(f=f.parentNode);f;f=f.parentNode)u.push(f),s=f;s===(i.ownerDocument||v)&&u.push(s.defaultView||s.parentWindow||m)}for(r=0;(f=u[r++])&&!e.isPropagationStopped();)d=f,e.type=1<r?a:c.bindType||h,(l=(K.get(f,"events")||{})[e.type]&&K.get(f,"handle"))&&l.apply(f,t),(l=o&&f[o])&&l.apply&&U(f)&&(e.result=l.apply(f,t),!1===e.result&&e.preventDefault());return e.type=h,n||e.isDefaultPrevented()||c._default&&!1!==c._default.apply(u.pop(),t)||!U(i)||o&&E(i[h])&&!g(i)&&((s=i[o])&&(i[o]=null),T.event.triggered=h,e.isPropagationStopped()&&d.addEventListener(h,wt),i[h](),e.isPropagationStopped()&&d.removeEventListener(h,wt),T.event.triggered=void 0,s&&(i[o]=s)),e.result}},simulate:function(e,t,i){var n=T.extend(new T.Event,i,{type:e,isSimulated:!0});T.event.trigger(n,null,t)}}),T.fn.extend({trigger:function(e,t){return this.each(function(){T.event.trigger(e,t,this)})},triggerHandler:function(e,t){var i=this[0];if(i)return T.event.trigger(e,t,i,!0)}}),w.focusin||T.each({focus:"focusin",blur:"focusout"},function(i,n){function r(e){T.event.simulate(n,e.target,T.event.fix(e))}T.event.special[n]={setup:function(){var e=this.ownerDocument||this,t=K.access(e,n);t||e.addEventListener(i,r,!0),K.access(e,n,(t||0)+1)},teardown:function(){var e=this.ownerDocument||this,t=K.access(e,n)-1;t?K.access(e,n,t):(e.removeEventListener(i,r,!0),K.remove(e,n))}}});var xt,_t=/\[\]$/,Tt=/\r?\n/g,Ct=/^(?:submit|button|image|reset|file)$/i,St=/^(?:input|select|textarea|keygen)/i;function kt(i,e,n,r){var t;if(Array.isArray(e))T.each(e,function(e,t){n||_t.test(i)?r(i,t):kt(i+"["+("object"==typeof t&&null!=t?e:"")+"]",t,n,r)});else if(n||"object"!==_(e))r(i,e);else for(t in e)kt(i+"["+t+"]",e[t],n,r)}T.param=function(e,t){function i(e,t){var i=E(t)?t():t;r[r.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==i?"":i)}var n,r=[];if(null==e)return"";if(Array.isArray(e)||e.jquery&&!T.isPlainObject(e))T.each(e,function(){i(this.name,this.value)});else for(n in e)kt(n,e[n],t,i);return r.join("&")},T.fn.extend({serialize:function(){return T.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=T.prop(this,"elements");return e?T.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!T(this).is(":disabled")&&St.test(this.nodeName)&&!Ct.test(e)&&(this.checked||!ue.test(e))}).map(function(e,t){var i=T(this).val();return null==i?null:Array.isArray(i)?T.map(i,function(e){return{name:t.name,value:e.replace(Tt,"\r\n")}}):{name:t.name,value:i.replace(Tt,"\r\n")}}).get()}}),T.fn.extend({wrapAll:function(e){var t;return this[0]&&(E(e)&&(e=e.call(this[0])),t=T(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(i){return E(i)?this.each(function(e){T(this).wrapInner(i.call(this,e))}):this.each(function(){var e=T(this),t=e.contents();t.length?t.wrapAll(i):e.append(i)})},wrap:function(t){var i=E(t);return this.each(function(e){T(this).wrapAll(i?t.call(this,e):t)})},unwrap:function(e){return this.parent(e).not("body").each(function(){T(this).replaceWith(this.childNodes)}),this}}),T.expr.pseudos.hidden=function(e){return!T.expr.pseudos.visible(e)},T.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},w.createHTMLDocument=((xt=v.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===xt.childNodes.length),T.parseHTML=function(e,t,i){return"string"!=typeof e?[]:("boolean"==typeof t&&(i=t,t=!1),t||(w.createHTMLDocument?((n=(t=v.implementation.createHTMLDocument("")).createElement("base")).href=v.location.href,t.head.appendChild(n)):t=v),s=!i&&[],(r=L.exec(e))?[t.createElement(r[1])]:(r=we([e],t,s),s&&s.length&&T(s).remove(),T.merge([],r.childNodes)));var n,r,s},T.offset={setOffset:function(e,t,i){var n,r,s,a,o,l,c=T.css(e,"position"),d=T(e),u={};"static"===c&&(e.style.position="relative"),o=d.offset(),s=T.css(e,"top"),l=T.css(e,"left"),r=("absolute"===c||"fixed"===c)&&-1<(s+l).indexOf("auto")?(a=(n=d.position()).top,n.left):(a=parseFloat(s)||0,parseFloat(l)||0),E(t)&&(t=t.call(e,i,T.extend({},o))),null!=t.top&&(u.top=t.top-o.top+a),null!=t.left&&(u.left=t.left-o.left+r),"using"in t?t.using.call(e,u):d.css(u)}},T.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){T.offset.setOffset(this,t,e)});var e,i,n=this[0];return n?n.getClientRects().length?(e=n.getBoundingClientRect(),i=n.ownerDocument.defaultView,{top:e.top+i.pageYOffset,left:e.left+i.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,i,n=this[0],r={top:0,left:0};if("fixed"===T.css(n,"position"))t=n.getBoundingClientRect();else{for(t=this.offset(),i=n.ownerDocument,e=n.offsetParent||i.documentElement;e&&(e===i.body||e===i.documentElement)&&"static"===T.css(e,"position");)e=e.parentNode;e&&e!==n&&1===e.nodeType&&((r=T(e).offset()).top+=T.css(e,"borderTopWidth",!0),r.left+=T.css(e,"borderLeftWidth",!0))}return{top:t.top-r.top-T.css(n,"marginTop",!0),left:t.left-r.left-T.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent;e&&"static"===T.css(e,"position");)e=e.offsetParent;return e||re})}}),T.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,r){var s="pageYOffset"===r;T.fn[t]=function(e){return F(this,function(e,t,i){var n;if(g(e)?n=e:9===e.nodeType&&(n=e.defaultView),void 0===i)return n?n[r]:e[t];n?n.scrollTo(s?n.pageXOffset:i,s?i:n.pageYOffset):e[t]=i},t,e,arguments.length)}}),T.each(["top","left"],function(e,i){T.cssHooks[i]=Ze(w.pixelPosition,function(e,t){if(t)return t=Qe(e,i),Ye.test(t)?T(e).position()[i]+"px":t})}),T.each({Height:"height",Width:"width"},function(a,o){T.each({padding:"inner"+a,content:o,"":"outer"+a},function(n,s){T.fn[s]=function(e,t){var i=arguments.length&&(n||"boolean"!=typeof e),r=n||(!0===e||!0===t?"margin":"border");return F(this,function(e,t,i){var n;return g(e)?0===s.indexOf("outer")?e["inner"+a]:e.document.documentElement["client"+a]:9===e.nodeType?(n=e.documentElement,Math.max(e.body["scroll"+a],n["scroll"+a],e.body["offset"+a],n["offset"+a],n["client"+a])):void 0===i?T.css(e,t,r):T.style(e,t,i,r)},o,i?e:void 0,i)}})}),T.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(e,i){T.fn[i]=function(e,t){return 0<arguments.length?this.on(i,null,e,t):this.trigger(i)}}),T.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),T.fn.extend({bind:function(e,t,i){return this.on(e,null,t,i)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,i,n){return this.on(t,e,i,n)},undelegate:function(e,t,i){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",i)}}),T.proxy=function(e,t){var i,n,r;if("string"==typeof t&&(i=e[t],t=e,e=i),E(e))return n=o.call(arguments,2),(r=function(){return e.apply(t||this,n.concat(o.call(arguments)))}).guid=e.guid=e.guid||T.guid++,r},T.holdReady=function(e){e?T.readyWait++:T.ready(!0)},T.isArray=Array.isArray,T.parseJSON=JSON.parse,T.nodeName=N,T.isFunction=E,T.isWindow=g,T.camelCase=X,T.type=_,T.now=Date.now,T.isNumeric=function(e){var t=T.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},"function"==typeof define&&define.amd&&define("jquery",[],function(){return T});var Nt=m.jQuery,Lt=m.$;return T.noConflict=function(e){return m.$===T&&(m.$=Lt),e&&m.jQuery===T&&(m.jQuery=Nt),T},e||(m.jQuery=m.$=T),T}),function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("jquery")):"function"==typeof define&&define.amd?define(["exports","jquery"],t):t((e=e||self).bootstrap={},e.jQuery)}(this,function(e,f){"use strict";function n(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function a(e,t,i){return t&&n(e.prototype,t),i&&n(e,i),e}function t(t,e){var i,n=Object.keys(t);return Object.getOwnPropertySymbols&&(i=Object.getOwnPropertySymbols(t),e&&(i=i.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,i)),n}function l(r){for(var e=1;e<arguments.length;e++){var s=null!=arguments[e]?arguments[e]:{};e%2?t(Object(s),!0).forEach(function(e){var t,i,n;t=r,n=s[i=e],i in t?Object.defineProperty(t,i,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[i]=n}):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(s)):t(Object(s)).forEach(function(e){Object.defineProperty(r,e,Object.getOwnPropertyDescriptor(s,e))})}return r}f=f&&f.hasOwnProperty("default")?f.default:f;var i="transitionend";function r(e){var t=this,i=!1;return f(this).one(m.TRANSITION_END,function(){i=!0}),setTimeout(function(){i||m.triggerTransitionEnd(t)},e),this}var m={TRANSITION_END:"bsTransitionEnd",getUID:function(e){for(;e+=~~(1e6*Math.random()),document.getElementById(e););return e},getSelectorFromElement:function(e){var t,i=e.getAttribute("data-target");i&&"#"!==i||(i=(t=e.getAttribute("href"))&&"#"!==t?t.trim():"");try{return document.querySelector(i)?i:null}catch(e){return null}},getTransitionDurationFromElement:function(e){if(!e)return 0;var t=f(e).css("transition-duration"),i=f(e).css("transition-delay"),n=parseFloat(t),r=parseFloat(i);return n||r?(t=t.split(",")[0],i=i.split(",")[0],1e3*(parseFloat(t)+parseFloat(i))):0},reflow:function(e){return e.offsetHeight},triggerTransitionEnd:function(e){f(e).trigger(i)},supportsTransitionEnd:function(){return Boolean(i)},isElement:function(e){return(e[0]||e).nodeType},typeCheckConfig:function(e,t,i){for(var n in i)if(Object.prototype.hasOwnProperty.call(i,n)){var r=i[n],s=t[n],a=s&&m.isElement(s)?"element":(o=s,{}.toString.call(o).match(/\s([a-z]+)/i)[1].toLowerCase());if(!new RegExp(r).test(a))throw new Error(e.toUpperCase()+': Option "'+n+'" provided type "'+a+'" but expected type "'+r+'".')}var o},findShadowRoot:function(e){if(!document.documentElement.attachShadow)return null;if("function"!=typeof e.getRootNode)return e instanceof ShadowRoot?e:e.parentNode?m.findShadowRoot(e.parentNode):null;var t=e.getRootNode();return t instanceof ShadowRoot?t:null},jQueryDetection:function(){if(void 0===f)throw new TypeError("Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript.");var e=f.fn.jquery.split(" ")[0].split(".");if(e[0]<2&&e[1]<9||1===e[0]&&9===e[1]&&e[2]<1||4<=e[0])throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0")}};m.jQueryDetection(),f.fn.emulateTransitionEnd=r,f.event.special[m.TRANSITION_END]={bindType:i,delegateType:i,handle:function(e){if(f(e.target).is(this))return e.handleObj.handler.apply(this,arguments)}};var s="alert",o="bs.alert",c="."+o,d=f.fn[s],u={CLOSE:"close"+c,CLOSED:"closed"+c,CLICK_DATA_API:"click"+c+".data-api"},h="alert",p="fade",g="show",v=function(){function n(e){this._element=e}var e=n.prototype;return e.close=function(e){var t=this._element;e&&(t=this._getRootElement(e)),this._triggerCloseEvent(t).isDefaultPrevented()||this._removeElement(t)},e.dispose=function(){f.removeData(this._element,o),this._element=null},e._getRootElement=function(e){var t=m.getSelectorFromElement(e),i=!1;return t&&(i=document.querySelector(t)),i=i||f(e).closest("."+h)[0]},e._triggerCloseEvent=function(e){var t=f.Event(u.CLOSE);return f(e).trigger(t),t},e._removeElement=function(t){var e,i=this;f(t).removeClass(g),f(t).hasClass(p)?(e=m.getTransitionDurationFromElement(t),f(t).one(m.TRANSITION_END,function(e){return i._destroyElement(t,e)}).emulateTransitionEnd(e)):this._destroyElement(t)},e._destroyElement=function(e){f(e).detach().trigger(u.CLOSED).remove()},n._jQueryInterface=function(i){return this.each(function(){var e=f(this),t=e.data(o);t||(t=new n(this),e.data(o,t)),"close"===i&&t[i](this)})},n._handleDismiss=function(t){return function(e){e&&e.preventDefault(),t.close(this)}},a(n,null,[{key:"VERSION",get:function(){return"4.4.1"}}]),n}();f(document).on(u.CLICK_DATA_API,'[data-dismiss="alert"]',v._handleDismiss(new v)),f.fn[s]=v._jQueryInterface,f.fn[s].Constructor=v,f.fn[s].noConflict=function(){return f.fn[s]=d,v._jQueryInterface};var y="button",b="bs.button",w="."+b,E=".data-api",x=f.fn[y],_="active",T="btn",C="focus",S='[data-toggle^="button"]',k='[data-toggle="buttons"]',N='[data-toggle="button"]',L='[data-toggle="buttons"] .btn',I='input:not([type="hidden"])',D=".active",A=".btn",M={CLICK_DATA_API:"click"+w+E,FOCUS_BLUR_DATA_API:"focus"+w+E+" blur"+w+E,LOAD_DATA_API:"load"+w+E},O=function(){function i(e){this._element=e}var e=i.prototype;return e.toggle=function(){var e,t,i=!0,n=!0,r=f(this._element).closest(k)[0];!r||(e=this._element.querySelector(I))&&("radio"===e.type?e.checked&&this._element.classList.contains(_)?i=!1:(t=r.querySelector(D))&&f(t).removeClass(_):("checkbox"!==e.type||"LABEL"===this._element.tagName&&e.checked===this._element.classList.contains(_))&&(i=!1),i&&(e.checked=!this._element.classList.contains(_),f(e).trigger("change")),e.focus(),n=!1),this._element.hasAttribute("disabled")||this._element.classList.contains("disabled")||(n&&this._element.setAttribute("aria-pressed",!this._element.classList.contains(_)),i&&f(this._element).toggleClass(_))},e.dispose=function(){f.removeData(this._element,b),this._element=null},i._jQueryInterface=function(t){return this.each(function(){var e=f(this).data(b);e||(e=new i(this),f(this).data(b,e)),"toggle"===t&&e[t]()})},a(i,null,[{key:"VERSION",get:function(){return"4.4.1"}}]),i}();f(document).on(M.CLICK_DATA_API,S,function(e){var t=e.target;if(f(t).hasClass(T)||(t=f(t).closest(A)[0]),!t||t.hasAttribute("disabled")||t.classList.contains("disabled"))e.preventDefault();else{var i=t.querySelector(I);if(i&&(i.hasAttribute("disabled")||i.classList.contains("disabled")))return void e.preventDefault();O._jQueryInterface.call(f(t),"toggle")}}).on(M.FOCUS_BLUR_DATA_API,S,function(e){var t=f(e.target).closest(A)[0];f(t).toggleClass(C,/^focus(in)?$/.test(e.type))}),f(window).on(M.LOAD_DATA_API,function(){for(var e=[].slice.call(document.querySelectorAll(L)),t=0,i=e.length;t<i;t++){var n=e[t],r=n.querySelector(I);r.checked||r.hasAttribute("checked")?n.classList.add(_):n.classList.remove(_)}for(var s=0,a=(e=[].slice.call(document.querySelectorAll(N))).length;s<a;s++){var o=e[s];"true"===o.getAttribute("aria-pressed")?o.classList.add(_):o.classList.remove(_)}}),f.fn[y]=O._jQueryInterface,f.fn[y].Constructor=O,f.fn[y].noConflict=function(){return f.fn[y]=x,O._jQueryInterface};var P="carousel",z="bs.carousel",j="."+z,B=".data-api",H=f.fn[P],R={interval:5e3,keyboard:!0,slide:!1,pause:"hover",wrap:!0,touch:!0},$={interval:"(number|boolean)",keyboard:"boolean",slide:"(boolean|string)",pause:"(string|boolean)",wrap:"boolean",touch:"boolean"},W="next",F="prev",q="left",V="right",Y={SLIDE:"slide"+j,SLID:"slid"+j,KEYDOWN:"keydown"+j,MOUSEENTER:"mouseenter"+j,MOUSELEAVE:"mouseleave"+j,TOUCHSTART:"touchstart"+j,TOUCHMOVE:"touchmove"+j,TOUCHEND:"touchend"+j,POINTERDOWN:"pointerdown"+j,POINTERUP:"pointerup"+j,DRAG_START:"dragstart"+j,LOAD_DATA_API:"load"+j+B,CLICK_DATA_API:"click"+j+B},X="carousel",U="active",G="slide",K="carousel-item-right",Q="carousel-item-left",Z="carousel-item-next",J="carousel-item-prev",ee="pointer-event",te=".active",ie=".active.carousel-item",ne=".carousel-item",re=".carousel-item img",se=".carousel-item-next, .carousel-item-prev",ae=".carousel-indicators",oe="[data-slide], [data-slide-to]",le='[data-ride="carousel"]',ce={TOUCH:"touch",PEN:"pen"},de=function(){function s(e,t){this._items=null,this._interval=null,this._activeElement=null,this._isPaused=!1,this._isSliding=!1,this.touchTimeout=null,this.touchStartX=0,this.touchDeltaX=0,this._config=this._getConfig(t),this._element=e,this._indicatorsElement=this._element.querySelector(ae),this._touchSupported="ontouchstart"in document.documentElement||0<navigator.maxTouchPoints,this._pointerEvent=Boolean(window.PointerEvent||window.MSPointerEvent),this._addEventListeners()}var e=s.prototype;return e.next=function(){this._isSliding||this._slide(W)},e.nextWhenVisible=function(){!document.hidden&&f(this._element).is(":visible")&&"hidden"!==f(this._element).css("visibility")&&this.next()},e.prev=function(){this._isSliding||this._slide(F)},e.pause=function(e){e||(this._isPaused=!0),this._element.querySelector(se)&&(m.triggerTransitionEnd(this._element),this.cycle(!0)),clearInterval(this._interval),this._interval=null},e.cycle=function(e){e||(this._isPaused=!1),this._interval&&(clearInterval(this._interval),this._interval=null),this._config.interval&&!this._isPaused&&(this._interval=setInterval((document.visibilityState?this.nextWhenVisible:this.next).bind(this),this._config.interval))},e.to=function(e){var t=this;this._activeElement=this._element.querySelector(ie);var i=this._getItemIndex(this._activeElement);if(!(e>this._items.length-1||e<0))if(this._isSliding)f(this._element).one(Y.SLID,function(){return t.to(e)});else{if(i===e)return this.pause(),void this.cycle();var n=i<e?W:F;this._slide(n,this._items[e])}},e.dispose=function(){f(this._element).off(j),f.removeData(this._element,z),this._items=null,this._config=null,this._element=null,this._interval=null,this._isPaused=null,this._isSliding=null,this._activeElement=null,this._indicatorsElement=null},e._getConfig=function(e){return e=l({},R,{},e),m.typeCheckConfig(P,e,$),e},e._handleSwipe=function(){var e,t=Math.abs(this.touchDeltaX);t<=40||(e=t/this.touchDeltaX,(this.touchDeltaX=0)<e&&this.prev(),e<0&&this.next())},e._addEventListeners=function(){var t=this;this._config.keyboard&&f(this._element).on(Y.KEYDOWN,function(e){return t._keydown(e)}),"hover"===this._config.pause&&f(this._element).on(Y.MOUSEENTER,function(e){return t.pause(e)}).on(Y.MOUSELEAVE,function(e){return t.cycle(e)}),this._config.touch&&this._addTouchEventListeners()},e._addTouchEventListeners=function(){var e,t,i=this;this._touchSupported&&(e=function(e){i._pointerEvent&&ce[e.originalEvent.pointerType.toUpperCase()]?i.touchStartX=e.originalEvent.clientX:i._pointerEvent||(i.touchStartX=e.originalEvent.touches[0].clientX)},t=function(e){i._pointerEvent&&ce[e.originalEvent.pointerType.toUpperCase()]&&(i.touchDeltaX=e.originalEvent.clientX-i.touchStartX),i._handleSwipe(),"hover"===i._config.pause&&(i.pause(),i.touchTimeout&&clearTimeout(i.touchTimeout),i.touchTimeout=setTimeout(function(e){return i.cycle(e)},500+i._config.interval))},f(this._element.querySelectorAll(re)).on(Y.DRAG_START,function(e){return e.preventDefault()}),this._pointerEvent?(f(this._element).on(Y.POINTERDOWN,e),f(this._element).on(Y.POINTERUP,t),this._element.classList.add(ee)):(f(this._element).on(Y.TOUCHSTART,e),f(this._element).on(Y.TOUCHMOVE,function(e){var t;(t=e).originalEvent.touches&&1<t.originalEvent.touches.length?i.touchDeltaX=0:i.touchDeltaX=t.originalEvent.touches[0].clientX-i.touchStartX}),f(this._element).on(Y.TOUCHEND,t)))},e._keydown=function(e){if(!/input|textarea/i.test(e.target.tagName))switch(e.which){case 37:e.preventDefault(),this.prev();break;case 39:e.preventDefault(),this.next()}},e._getItemIndex=function(e){return this._items=e&&e.parentNode?[].slice.call(e.parentNode.querySelectorAll(ne)):[],this._items.indexOf(e)},e._getItemByDirection=function(e,t){var i=e===W,n=e===F,r=this._getItemIndex(t),s=this._items.length-1;if((n&&0===r||i&&r===s)&&!this._config.wrap)return t;var a=(r+(e===F?-1:1))%this._items.length;return-1==a?this._items[this._items.length-1]:this._items[a]},e._triggerSlideEvent=function(e,t){var i=this._getItemIndex(e),n=this._getItemIndex(this._element.querySelector(ie)),r=f.Event(Y.SLIDE,{relatedTarget:e,direction:t,from:n,to:i});return f(this._element).trigger(r),r},e._setActiveIndicatorElement=function(e){var t,i;this._indicatorsElement&&(t=[].slice.call(this._indicatorsElement.querySelectorAll(te)),f(t).removeClass(U),(i=this._indicatorsElement.children[this._getItemIndex(e)])&&f(i).addClass(U))},e._slide=function(e,t){var i,n,r,s,a,o=this,l=this._element.querySelector(ie),c=this._getItemIndex(l),d=t||l&&this._getItemByDirection(e,l),u=this._getItemIndex(d),h=Boolean(this._interval),p=e===W?(i=Q,n=Z,q):(i=K,n=J,V);d&&f(d).hasClass(U)?this._isSliding=!1:this._triggerSlideEvent(d,p).isDefaultPrevented()||l&&d&&(this._isSliding=!0,h&&this.pause(),this._setActiveIndicatorElement(d),r=f.Event(Y.SLID,{relatedTarget:d,direction:p,from:c,to:u}),f(this._element).hasClass(G)?(f(d).addClass(n),m.reflow(d),f(l).addClass(i),f(d).addClass(i),(s=parseInt(d.getAttribute("data-interval"),10))?(this._config.defaultInterval=this._config.defaultInterval||this._config.interval,this._config.interval=s):this._config.interval=this._config.defaultInterval||this._config.interval,a=m.getTransitionDurationFromElement(l),f(l).one(m.TRANSITION_END,function(){f(d).removeClass(i+" "+n).addClass(U),f(l).removeClass(U+" "+n+" "+i),o._isSliding=!1,setTimeout(function(){return f(o._element).trigger(r)},0)}).emulateTransitionEnd(a)):(f(l).removeClass(U),f(d).addClass(U),this._isSliding=!1,f(this._element).trigger(r)),h&&this.cycle())},s._jQueryInterface=function(n){return this.each(function(){var e=f(this).data(z),t=l({},R,{},f(this).data());"object"==typeof n&&(t=l({},t,{},n));var i="string"==typeof n?n:t.slide;if(e||(e=new s(this,t),f(this).data(z,e)),"number"==typeof n)e.to(n);else if("string"==typeof i){if(void 0===e[i])throw new TypeError('No method named "'+i+'"');e[i]()}else t.interval&&t.ride&&(e.pause(),e.cycle())})},s._dataApiClickHandler=function(e){var t,i,n,r=m.getSelectorFromElement(this);!r||(t=f(r)[0])&&f(t).hasClass(X)&&(i=l({},f(t).data(),{},f(this).data()),(n=this.getAttribute("data-slide-to"))&&(i.interval=!1),s._jQueryInterface.call(f(t),i),n&&f(t).data(z).to(n),e.preventDefault())},a(s,null,[{key:"VERSION",get:function(){return"4.4.1"}},{key:"Default",get:function(){return R}}]),s}();f(document).on(Y.CLICK_DATA_API,oe,de._dataApiClickHandler),f(window).on(Y.LOAD_DATA_API,function(){for(var e=[].slice.call(document.querySelectorAll(le)),t=0,i=e.length;t<i;t++){var n=f(e[t]);de._jQueryInterface.call(n,n.data())}}),f.fn[P]=de._jQueryInterface,f.fn[P].Constructor=de,f.fn[P].noConflict=function(){return f.fn[P]=H,de._jQueryInterface};var ue="collapse",he="bs.collapse",pe="."+he,fe=f.fn[ue],me={toggle:!0,parent:""},ge={toggle:"boolean",parent:"(string|element)"},ve={SHOW:"show"+pe,SHOWN:"shown"+pe,HIDE:"hide"+pe,HIDDEN:"hidden"+pe,CLICK_DATA_API:"click"+pe+".data-api"},ye="show",be="collapse",we="collapsing",Ee="collapsed",xe="width",_e="height",Te=".show, .collapsing",Ce='[data-toggle="collapse"]',Se=function(){function o(t,e){this._isTransitioning=!1,this._element=t,this._config=this._getConfig(e),this._triggerArray=[].slice.call(document.querySelectorAll('[data-toggle="collapse"][href="#'+t.id+'"],[data-toggle="collapse"][data-target="#'+t.id+'"]'));for(var i=[].slice.call(document.querySelectorAll(Ce)),n=0,r=i.length;n<r;n++){var s=i[n],a=m.getSelectorFromElement(s),o=[].slice.call(document.querySelectorAll(a)).filter(function(e){return e===t});null!==a&&0<o.length&&(this._selector=a,this._triggerArray.push(s))}this._parent=this._config.parent?this._getParent():null,this._config.parent||this._addAriaAndCollapsedClass(this._element,this._triggerArray),this._config.toggle&&this.toggle()}var e=o.prototype;return e.toggle=function(){f(this._element).hasClass(ye)?this.hide():this.show()},e.show=function(){var e,t,i,n,r,s,a=this;this._isTransitioning||f(this._element).hasClass(ye)||(this._parent&&0===(e=[].slice.call(this._parent.querySelectorAll(Te)).filter(function(e){return"string"==typeof a._config.parent?e.getAttribute("data-parent")===a._config.parent:e.classList.contains(be)})).length&&(e=null),e&&(t=f(e).not(this._selector).data(he))&&t._isTransitioning||(i=f.Event(ve.SHOW),f(this._element).trigger(i),i.isDefaultPrevented()||(e&&(o._jQueryInterface.call(f(e).not(this._selector),"hide"),t||f(e).data(he,null)),n=this._getDimension(),f(this._element).removeClass(be).addClass(we),this._element.style[n]=0,this._triggerArray.length&&f(this._triggerArray).removeClass(Ee).attr("aria-expanded",!0),this.setTransitioning(!0),r="scroll"+(n[0].toUpperCase()+n.slice(1)),s=m.getTransitionDurationFromElement(this._element),f(this._element).one(m.TRANSITION_END,function(){f(a._element).removeClass(we).addClass(be).addClass(ye),a._element.style[n]="",a.setTransitioning(!1),f(a._element).trigger(ve.SHOWN)}).emulateTransitionEnd(s),this._element.style[n]=this._element[r]+"px")))},e.hide=function(){var e=this;if(!this._isTransitioning&&f(this._element).hasClass(ye)){var t=f.Event(ve.HIDE);if(f(this._element).trigger(t),!t.isDefaultPrevented()){var i=this._getDimension();this._element.style[i]=this._element.getBoundingClientRect()[i]+"px",m.reflow(this._element),f(this._element).addClass(we).removeClass(be).removeClass(ye);var n=this._triggerArray.length;if(0<n)for(var r=0;r<n;r++){var s=this._triggerArray[r],a=m.getSelectorFromElement(s);null!==a&&(f([].slice.call(document.querySelectorAll(a))).hasClass(ye)||f(s).addClass(Ee).attr("aria-expanded",!1))}this.setTransitioning(!0);this._element.style[i]="";var o=m.getTransitionDurationFromElement(this._element);f(this._element).one(m.TRANSITION_END,function(){e.setTransitioning(!1),f(e._element).removeClass(we).addClass(be).trigger(ve.HIDDEN)}).emulateTransitionEnd(o)}}},e.setTransitioning=function(e){this._isTransitioning=e},e.dispose=function(){f.removeData(this._element,he),this._config=null,this._parent=null,this._element=null,this._triggerArray=null,this._isTransitioning=null},e._getConfig=function(e){return(e=l({},me,{},e)).toggle=Boolean(e.toggle),m.typeCheckConfig(ue,e,ge),e},e._getDimension=function(){return f(this._element).hasClass(xe)?xe:_e},e._getParent=function(){var e,i=this;m.isElement(this._config.parent)?(e=this._config.parent,void 0!==this._config.parent.jquery&&(e=this._config.parent[0])):e=document.querySelector(this._config.parent);var t='[data-toggle="collapse"][data-parent="'+this._config.parent+'"]',n=[].slice.call(e.querySelectorAll(t));return f(n).each(function(e,t){i._addAriaAndCollapsedClass(o._getTargetFromElement(t),[t])}),e},e._addAriaAndCollapsedClass=function(e,t){var i=f(e).hasClass(ye);t.length&&f(t).toggleClass(Ee,!i).attr("aria-expanded",i)},o._getTargetFromElement=function(e){var t=m.getSelectorFromElement(e);return t?document.querySelector(t):null},o._jQueryInterface=function(n){return this.each(function(){var e=f(this),t=e.data(he),i=l({},me,{},e.data(),{},"object"==typeof n&&n?n:{});if(!t&&i.toggle&&/show|hide/.test(n)&&(i.toggle=!1),t||(t=new o(this,i),e.data(he,t)),"string"==typeof n){if(void 0===t[n])throw new TypeError('No method named "'+n+'"');t[n]()}})},a(o,null,[{key:"VERSION",get:function(){return"4.4.1"}},{key:"Default",get:function(){return me}}]),o}();f(document).on(ve.CLICK_DATA_API,Ce,function(e){"A"===e.currentTarget.tagName&&e.preventDefault();var i=f(this),t=m.getSelectorFromElement(this),n=[].slice.call(document.querySelectorAll(t));f(n).each(function(){var e=f(this),t=e.data(he)?"toggle":i.data();Se._jQueryInterface.call(e,t)})}),f.fn[ue]=Se._jQueryInterface,f.fn[ue].Constructor=Se,f.fn[ue].noConflict=function(){return f.fn[ue]=fe,Se._jQueryInterface};
/**!
   * @fileOverview Kickass library to create and place poppers near their reference elements.
   * @version 1.16.0
   * @license
   * Copyright (c) 2016 Federico Zivolo and contributors
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in all
   * copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
   * SOFTWARE.
   */
var ke="undefined"!=typeof window&&"undefined"!=typeof document&&"undefined"!=typeof navigator,Ne=function(){for(var e=["Edge","Trident","Firefox"],t=0;t<e.length;t+=1)if(ke&&0<=navigator.userAgent.indexOf(e[t]))return 1;return 0}();var Le=ke&&window.Promise?function(e){var t=!1;return function(){t||(t=!0,window.Promise.resolve().then(function(){t=!1,e()}))}}:function(e){var t=!1;return function(){t||(t=!0,setTimeout(function(){t=!1,e()},Ne))}};function Ie(e){return e&&"[object Function]"==={}.toString.call(e)}function De(e,t){if(1!==e.nodeType)return[];var i=e.ownerDocument.defaultView.getComputedStyle(e,null);return t?i[t]:i}function Ae(e){return"HTML"===e.nodeName?e:e.parentNode||e.host}function Me(e){if(!e)return document.body;switch(e.nodeName){case"HTML":case"BODY":return e.ownerDocument.body;case"#document":return e.body}var t=De(e),i=t.overflow,n=t.overflowX,r=t.overflowY;return/(auto|scroll|overlay)/.test(i+r+n)?e:Me(Ae(e))}function Oe(e){return e&&e.referenceNode?e.referenceNode:e}var Pe=ke&&!(!window.MSInputMethodContext||!document.documentMode),ze=ke&&/MSIE 10/.test(navigator.userAgent);function je(e){return 11===e?Pe:10!==e&&Pe||ze}function Be(e){if(!e)return document.documentElement;for(var t=je(10)?document.body:null,i=e.offsetParent||null;i===t&&e.nextElementSibling;)i=(e=e.nextElementSibling).offsetParent;var n=i&&i.nodeName;return n&&"BODY"!==n&&"HTML"!==n?-1!==["TH","TD","TABLE"].indexOf(i.nodeName)&&"static"===De(i,"position")?Be(i):i:e?e.ownerDocument.documentElement:document.documentElement}function He(e){return null!==e.parentNode?He(e.parentNode):e}function Re(e,t){if(!(e&&e.nodeType&&t&&t.nodeType))return document.documentElement;var i=e.compareDocumentPosition(t)&Node.DOCUMENT_POSITION_FOLLOWING,n=i?e:t,r=i?t:e,s=document.createRange();s.setStart(n,0),s.setEnd(r,0);var a,o,l=s.commonAncestorContainer;if(e!==l&&t!==l||n.contains(r))return"BODY"===(o=(a=l).nodeName)||"HTML"!==o&&Be(a.firstElementChild)!==a?Be(l):l;var c=He(e);return c.host?Re(c.host,t):Re(e,He(t).host)}function $e(e,t){var i="top"===(1<arguments.length&&void 0!==t?t:"top")?"scrollTop":"scrollLeft",n=e.nodeName;if("BODY"!==n&&"HTML"!==n)return e[i];var r=e.ownerDocument.documentElement;return(e.ownerDocument.scrollingElement||r)[i]}function We(e,t){var i="x"===t?"Left":"Top",n="Left"==i?"Right":"Bottom";return parseFloat(e["border"+i+"Width"],10)+parseFloat(e["border"+n+"Width"],10)}function Fe(e,t,i,n){return Math.max(t["offset"+e],t["scroll"+e],i["client"+e],i["offset"+e],i["scroll"+e],je(10)?parseInt(i["offset"+e])+parseInt(n["margin"+("Height"===e?"Top":"Left")])+parseInt(n["margin"+("Height"===e?"Bottom":"Right")]):0)}function qe(e){var t=e.body,i=e.documentElement,n=je(10)&&getComputedStyle(i);return{height:Fe("Height",t,i,n),width:Fe("Width",t,i,n)}}var Ve=function(e,t,i){return t&&Ye(e.prototype,t),i&&Ye(e,i),e};function Ye(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function Xe(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}var Ue=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var n in i)Object.prototype.hasOwnProperty.call(i,n)&&(e[n]=i[n])}return e};function Ge(e){return Ue({},e,{right:e.left+e.width,bottom:e.top+e.height})}function Ke(e){var t,i,n={};try{je(10)?(n=e.getBoundingClientRect(),t=$e(e,"top"),i=$e(e,"left"),n.top+=t,n.left+=i,n.bottom+=t,n.right+=i):n=e.getBoundingClientRect()}catch(e){}var r,s={left:n.left,top:n.top,width:n.right-n.left,height:n.bottom-n.top},a="HTML"===e.nodeName?qe(e.ownerDocument):{},o=a.width||e.clientWidth||s.width,l=a.height||e.clientHeight||s.height,c=e.offsetWidth-o,d=e.offsetHeight-l;return(c||d)&&(c-=We(r=De(e),"x"),d-=We(r,"y"),s.width-=c,s.height-=d),Ge(s)}function Qe(e,t,i){var n=2<arguments.length&&void 0!==i&&i,r=je(10),s="HTML"===t.nodeName,a=Ke(e),o=Ke(t),l=Me(e),c=De(t),d=parseFloat(c.borderTopWidth,10),u=parseFloat(c.borderLeftWidth,10);n&&s&&(o.top=Math.max(o.top,0),o.left=Math.max(o.left,0));var h,p,f=Ge({top:a.top-o.top-d,left:a.left-o.left-u,width:a.width,height:a.height});return f.marginTop=0,f.marginLeft=0,!r&&s&&(h=parseFloat(c.marginTop,10),p=parseFloat(c.marginLeft,10),f.top-=d-h,f.bottom-=d-h,f.left-=u-p,f.right-=u-p,f.marginTop=h,f.marginLeft=p),(r&&!n?t.contains(l):t===l&&"BODY"!==l.nodeName)&&(f=function(e,t,i){var n=2<arguments.length&&void 0!==i&&i,r=$e(t,"top"),s=$e(t,"left"),a=n?-1:1;return e.top+=r*a,e.bottom+=r*a,e.left+=s*a,e.right+=s*a,e}(f,t)),f}function Ze(e){if(!e||!e.parentElement||je())return document.documentElement;for(var t=e.parentElement;t&&"none"===De(t,"transform");)t=t.parentElement;return t||document.documentElement}function Je(e,t,i,n,r){var s,a,o,l,c,d=4<arguments.length&&void 0!==r&&r,u={top:0,left:0},h=d?Ze(e):Re(e,Oe(t));"viewport"===n?u=function(e,t){var i=1<arguments.length&&void 0!==t&&t,n=e.ownerDocument.documentElement,r=Qe(e,n),s=Math.max(n.clientWidth,window.innerWidth||0),a=Math.max(n.clientHeight,window.innerHeight||0),o=i?0:$e(n),l=i?0:$e(n,"left");return Ge({top:o-r.top+r.marginTop,left:l-r.left+r.marginLeft,width:s,height:a})}(h,d):(s=void 0,"scrollParent"===n?"BODY"===(s=Me(Ae(t))).nodeName&&(s=e.ownerDocument.documentElement):s="window"===n?e.ownerDocument.documentElement:n,a=Qe(s,h,d),"HTML"!==s.nodeName||function e(t){var i=t.nodeName;if("BODY"===i||"HTML"===i)return!1;if("fixed"===De(t,"position"))return!0;var n=Ae(t);return!!n&&e(n)}(h)?u=a:(l=(o=qe(e.ownerDocument)).height,c=o.width,u.top+=a.top-a.marginTop,u.bottom=l+a.top,u.left+=a.left-a.marginLeft,u.right=c+a.left));var p="number"==typeof(i=i||0);return u.left+=p?i:i.left||0,u.top+=p?i:i.top||0,u.right-=p?i:i.right||0,u.bottom-=p?i:i.bottom||0,u}function et(e,t,n,i,r,s){var a=5<arguments.length&&void 0!==s?s:0;if(-1===e.indexOf("auto"))return e;var o=Je(n,i,a,r),l={top:{width:o.width,height:t.top-o.top},right:{width:o.right-t.right,height:o.height},bottom:{width:o.width,height:o.bottom-t.bottom},left:{width:t.left-o.left,height:o.height}},c=Object.keys(l).map(function(e){return Ue({key:e},l[e],{area:(t=l[e]).width*t.height});var t}).sort(function(e,t){return t.area-e.area}),d=c.filter(function(e){var t=e.width,i=e.height;return t>=n.clientWidth&&i>=n.clientHeight}),u=0<d.length?d[0].key:c[0].key,h=e.split("-")[1];return u+(h?"-"+h:"")}function tt(e,t,i,n){var r=3<arguments.length&&void 0!==n?n:null;return Qe(i,r?Ze(t):Re(t,Oe(i)),r)}function it(e){var t=e.ownerDocument.defaultView.getComputedStyle(e),i=parseFloat(t.marginTop||0)+parseFloat(t.marginBottom||0),n=parseFloat(t.marginLeft||0)+parseFloat(t.marginRight||0);return{width:e.offsetWidth+n,height:e.offsetHeight+i}}function nt(e){var t={left:"right",right:"left",bottom:"top",top:"bottom"};return e.replace(/left|right|bottom|top/g,function(e){return t[e]})}function rt(e,t,i){i=i.split("-")[0];var n=it(e),r={width:n.width,height:n.height},s=-1!==["right","left"].indexOf(i),a=s?"top":"left",o=s?"left":"top",l=s?"height":"width",c=s?"width":"height";return r[a]=t[a]+t[l]/2-n[l]/2,r[o]=i===o?t[o]-n[c]:t[nt(o)],r}function st(e,t){return Array.prototype.find?e.find(t):e.filter(t)[0]}function at(e,i,t){return(void 0===t?e:e.slice(0,function(e,t,i){if(Array.prototype.findIndex)return e.findIndex(function(e){return e[t]===i});var n=st(e,function(e){return e[t]===i});return e.indexOf(n)}(e,"name",t))).forEach(function(e){e.function&&console.warn("`modifier.function` is deprecated, use `modifier.fn`!");var t=e.function||e.fn;e.enabled&&Ie(t)&&(i.offsets.popper=Ge(i.offsets.popper),i.offsets.reference=Ge(i.offsets.reference),i=t(i,e))}),i}function ot(e,i){return e.some(function(e){var t=e.name;return e.enabled&&t===i})}function lt(e){for(var t=[!1,"ms","Webkit","Moz","O"],i=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<t.length;n++){var r=t[n],s=r?""+r+i:e;if(void 0!==document.body.style[s])return s}return null}function ct(e){var t=e.ownerDocument;return t?t.defaultView:window}function dt(e,t,i,n){i.updateBound=n,ct(e).addEventListener("resize",i.updateBound,{passive:!0});var r=Me(e);return function e(t,i,n,r){var s="BODY"===t.nodeName,a=s?t.ownerDocument.defaultView:t;a.addEventListener(i,n,{passive:!0}),s||e(Me(a.parentNode),i,n,r),r.push(a)}(r,"scroll",i.updateBound,i.scrollParents),i.scrollElement=r,i.eventsEnabled=!0,i}function ut(){var e,t;this.state.eventsEnabled&&(cancelAnimationFrame(this.scheduleUpdate),this.state=(e=this.reference,t=this.state,ct(e).removeEventListener("resize",t.updateBound),t.scrollParents.forEach(function(e){e.removeEventListener("scroll",t.updateBound)}),t.updateBound=null,t.scrollParents=[],t.scrollElement=null,t.eventsEnabled=!1,t))}function ht(e){return""!==e&&!isNaN(parseFloat(e))&&isFinite(e)}function pt(i,n){Object.keys(n).forEach(function(e){var t="";-1!==["width","height","top","right","bottom","left"].indexOf(e)&&ht(n[e])&&(t="px"),i.style[e]=n[e]+t})}function ft(e,t){function i(e){return e}var n=e.offsets,r=n.popper,s=n.reference,a=Math.round,o=Math.floor,l=a(s.width),c=a(r.width),d=-1!==["left","right"].indexOf(e.placement),u=-1!==e.placement.indexOf("-"),h=t?d||u||l%2==c%2?a:o:i,p=t?a:i;return{left:h(l%2==1&&c%2==1&&!u&&t?r.left-1:r.left),top:p(r.top),bottom:p(r.bottom),right:h(r.right)}}var mt=ke&&/Firefox/i.test(navigator.userAgent);function gt(e,t,i){var n,r,s=st(e,function(e){return e.name===t}),a=!!s&&e.some(function(e){return e.name===i&&e.enabled&&e.order<s.order});return a||(n="`"+t+"`",r="`"+i+"`",console.warn(r+" modifier is required by "+n+" modifier in order to work, be sure to include it before "+n+"!")),a}var vt=["auto-start","auto","auto-end","top-start","top","top-end","right-start","right","right-end","bottom-end","bottom","bottom-start","left-end","left","left-start"],yt=vt.slice(3);function bt(e,t){var i=1<arguments.length&&void 0!==t&&t,n=yt.indexOf(e),r=yt.slice(n+1).concat(yt.slice(0,n));return i?r.reverse():r}var wt="flip",Et="clockwise",xt="counterclockwise";function _t(e,r,s,t){var a=[0,0],o=-1!==["right","left"].indexOf(t),i=e.split(/(\+|\-)/).map(function(e){return e.trim()}),n=i.indexOf(st(i,function(e){return-1!==e.search(/,|\s/)}));i[n]&&-1===i[n].indexOf(",")&&console.warn("Offsets separated by white space(s) are deprecated, use a comma (,) instead.");var l=/\s*,\s*|\s+/;return(-1!==n?[i.slice(0,n).concat([i[n].split(l)[0]]),[i[n].split(l)[1]].concat(i.slice(n+1))]:[i]).map(function(e,t){var i=(1===t?!o:o)?"height":"width",n=!1;return e.reduce(function(e,t){return""===e[e.length-1]&&-1!==["+","-"].indexOf(t)?(e[e.length-1]=t,n=!0,e):n?(e[e.length-1]+=t,n=!1,e):e.concat(t)},[]).map(function(e){return function(e,t,i,n){var r=e.match(/((?:\-|\+)?\d*\.?\d*)(.*)/),s=+r[1],a=r[2];if(!s)return e;if(0!==a.indexOf("%"))return"vh"!==a&&"vw"!==a?s:("vh"===a?Math.max(document.documentElement.clientHeight,window.innerHeight||0):Math.max(document.documentElement.clientWidth,window.innerWidth||0))/100*s;var o=void 0;switch(a){case"%p":o=i;break;case"%":case"%r":default:o=n}return Ge(o)[t]/100*s}(e,i,r,s)})}).forEach(function(i,n){i.forEach(function(e,t){ht(e)&&(a[n]+=e*("-"===i[t-1]?-1:1))})}),a}var Tt={placement:"bottom",positionFixed:!1,eventsEnabled:!0,removeOnDestroy:!1,onCreate:function(){},onUpdate:function(){},modifiers:{shift:{order:100,enabled:!0,fn:function(e){var t,i,n,r,s,a,o,l=e.placement,c=l.split("-")[0],d=l.split("-")[1];return d&&(i=(t=e.offsets).reference,n=t.popper,a=(r=-1!==["bottom","top"].indexOf(c))?"width":"height",o={start:Xe({},s=r?"left":"top",i[s]),end:Xe({},s,i[s]+i[a]-n[a])},e.offsets.popper=Ue({},n,o[d])),e}},offset:{order:200,enabled:!0,fn:function(e,t){var i=t.offset,n=e.placement,r=e.offsets,s=r.popper,a=r.reference,o=n.split("-")[0],l=void 0,l=ht(+i)?[+i,0]:_t(i,s,a,o);return"left"===o?(s.top+=l[0],s.left-=l[1]):"right"===o?(s.top+=l[0],s.left+=l[1]):"top"===o?(s.left+=l[0],s.top-=l[1]):"bottom"===o&&(s.left+=l[0],s.top+=l[1]),e.popper=s,e},offset:0},preventOverflow:{order:300,enabled:!0,fn:function(e,n){var t=n.boundariesElement||Be(e.instance.popper);e.instance.reference===t&&(t=Be(t));var i=lt("transform"),r=e.instance.popper.style,s=r.top,a=r.left,o=r[i];r.top="",r.left="",r[i]="";var l=Je(e.instance.popper,e.instance.reference,n.padding,t,e.positionFixed);r.top=s,r.left=a,r[i]=o,n.boundaries=l;var c=n.priority,d=e.offsets.popper,u={primary:function(e){var t=d[e];return d[e]<l[e]&&!n.escapeWithReference&&(t=Math.max(d[e],l[e])),Xe({},e,t)},secondary:function(e){var t="right"===e?"left":"top",i=d[t];return d[e]>l[e]&&!n.escapeWithReference&&(i=Math.min(d[t],l[e]-("right"===e?d.width:d.height))),Xe({},t,i)}};return c.forEach(function(e){var t=-1!==["left","top"].indexOf(e)?"primary":"secondary";d=Ue({},d,u[t](e))}),e.offsets.popper=d,e},priority:["left","right","top","bottom"],padding:5,boundariesElement:"scrollParent"},keepTogether:{order:400,enabled:!0,fn:function(e){var t=e.offsets,i=t.popper,n=t.reference,r=e.placement.split("-")[0],s=Math.floor,a=-1!==["top","bottom"].indexOf(r),o=a?"right":"bottom",l=a?"left":"top",c=a?"width":"height";return i[o]<s(n[l])&&(e.offsets.popper[l]=s(n[l])-i[c]),i[l]>s(n[o])&&(e.offsets.popper[l]=s(n[o])),e}},arrow:{order:500,enabled:!0,fn:function(e,t){var i;if(!gt(e.instance.modifiers,"arrow","keepTogether"))return e;var n=t.element;if("string"==typeof n){if(!(n=e.instance.popper.querySelector(n)))return e}else if(!e.instance.popper.contains(n))return console.warn("WARNING: `arrow.element` must be child of its popper element!"),e;var r=e.placement.split("-")[0],s=e.offsets,a=s.popper,o=s.reference,l=-1!==["left","right"].indexOf(r),c=l?"height":"width",d=l?"Top":"Left",u=d.toLowerCase(),h=l?"left":"top",p=l?"bottom":"right",f=it(n)[c];o[p]-f<a[u]&&(e.offsets.popper[u]-=a[u]-(o[p]-f)),o[u]+f>a[p]&&(e.offsets.popper[u]+=o[u]+f-a[p]),e.offsets.popper=Ge(e.offsets.popper);var m=o[u]+o[c]/2-f/2,g=De(e.instance.popper),v=parseFloat(g["margin"+d],10),y=parseFloat(g["border"+d+"Width"],10),b=m-e.offsets.popper[u]-v-y,b=Math.max(Math.min(a[c]-f,b),0);return e.arrowElement=n,e.offsets.arrow=(Xe(i={},u,Math.round(b)),Xe(i,h,""),i),e},element:"[x-arrow]"},flip:{order:600,enabled:!0,fn:function(g,v){if(ot(g.instance.modifiers,"inner"))return g;if(g.flipped&&g.placement===g.originalPlacement)return g;var y=Je(g.instance.popper,g.instance.reference,v.padding,v.boundariesElement,g.positionFixed),b=g.placement.split("-")[0],w=nt(b),E=g.placement.split("-")[1]||"",x=[];switch(v.behavior){case wt:x=[b,w];break;case Et:x=bt(b);break;case xt:x=bt(b,!0);break;default:x=v.behavior}return x.forEach(function(e,t){if(b!==e||x.length===t+1)return g;b=g.placement.split("-")[0],w=nt(b);var i,n=g.offsets.popper,r=g.offsets.reference,s=Math.floor,a="left"===b&&s(n.right)>s(r.left)||"right"===b&&s(n.left)<s(r.right)||"top"===b&&s(n.bottom)>s(r.top)||"bottom"===b&&s(n.top)<s(r.bottom),o=s(n.left)<s(y.left),l=s(n.right)>s(y.right),c=s(n.top)<s(y.top),d=s(n.bottom)>s(y.bottom),u="left"===b&&o||"right"===b&&l||"top"===b&&c||"bottom"===b&&d,h=-1!==["top","bottom"].indexOf(b),p=!!v.flipVariations&&(h&&"start"===E&&o||h&&"end"===E&&l||!h&&"start"===E&&c||!h&&"end"===E&&d),f=!!v.flipVariationsByContent&&(h&&"start"===E&&l||h&&"end"===E&&o||!h&&"start"===E&&d||!h&&"end"===E&&c),m=p||f;(a||u||m)&&(g.flipped=!0,(a||u)&&(b=x[t+1]),m&&(E="end"===(i=E)?"start":"start"===i?"end":i),g.placement=b+(E?"-"+E:""),g.offsets.popper=Ue({},g.offsets.popper,rt(g.instance.popper,g.offsets.reference,g.placement)),g=at(g.instance.modifiers,g,"flip"))}),g},behavior:"flip",padding:5,boundariesElement:"viewport",flipVariations:!1,flipVariationsByContent:!1},inner:{order:700,enabled:!1,fn:function(e){var t=e.placement,i=t.split("-")[0],n=e.offsets,r=n.popper,s=n.reference,a=-1!==["left","right"].indexOf(i),o=-1===["top","left"].indexOf(i);return r[a?"left":"top"]=s[i]-(o?r[a?"width":"height"]:0),e.placement=nt(t),e.offsets.popper=Ge(r),e}},hide:{order:800,enabled:!0,fn:function(e){if(!gt(e.instance.modifiers,"hide","preventOverflow"))return e;var t=e.offsets.reference,i=st(e.instance.modifiers,function(e){return"preventOverflow"===e.name}).boundaries;if(t.bottom<i.top||t.left>i.right||t.top>i.bottom||t.right<i.left){if(!0===e.hide)return e;e.hide=!0,e.attributes["x-out-of-boundaries"]=""}else{if(!1===e.hide)return e;e.hide=!1,e.attributes["x-out-of-boundaries"]=!1}return e}},computeStyle:{order:850,enabled:!0,fn:function(e,t){var i=t.x,n=t.y,r=e.offsets.popper,s=st(e.instance.modifiers,function(e){return"applyStyle"===e.name}).gpuAcceleration;void 0!==s&&console.warn("WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!");var a,o,l=void 0!==s?s:t.gpuAcceleration,c=Be(e.instance.popper),d=Ke(c),u={position:r.position},h=ft(e,window.devicePixelRatio<2||!mt),p="bottom"===i?"top":"bottom",f="right"===n?"left":"right",m=lt("transform"),g=void 0,v=void 0,v="bottom"==p?"HTML"===c.nodeName?-c.clientHeight+h.bottom:-d.height+h.bottom:h.top,g="right"==f?"HTML"===c.nodeName?-c.clientWidth+h.right:-d.width+h.right:h.left;l&&m?(u[m]="translate3d("+g+"px, "+v+"px, 0)",u[p]=0,u[f]=0,u.willChange="transform"):(a="bottom"==p?-1:1,o="right"==f?-1:1,u[p]=v*a,u[f]=g*o,u.willChange=p+", "+f);var y={"x-placement":e.placement};return e.attributes=Ue({},y,e.attributes),e.styles=Ue({},u,e.styles),e.arrowStyles=Ue({},e.offsets.arrow,e.arrowStyles),e},gpuAcceleration:!0,x:"bottom",y:"right"},applyStyle:{order:900,enabled:!0,fn:function(e){var t,i;return pt(e.instance.popper,e.styles),t=e.instance.popper,i=e.attributes,Object.keys(i).forEach(function(e){!1!==i[e]?t.setAttribute(e,i[e]):t.removeAttribute(e)}),e.arrowElement&&Object.keys(e.arrowStyles).length&&pt(e.arrowElement,e.arrowStyles),e},onLoad:function(e,t,i,n,r){var s=tt(r,t,e,i.positionFixed),a=et(i.placement,s,t,e,i.modifiers.flip.boundariesElement,i.modifiers.flip.padding);return t.setAttribute("x-placement",a),pt(t,{position:i.positionFixed?"fixed":"absolute"}),i},gpuAcceleration:void 0}}},Ct=(Ve(St,[{key:"update",value:function(){return function(){var e;this.state.isDestroyed||((e={instance:this,styles:{},arrowStyles:{},attributes:{},flipped:!1,offsets:{}}).offsets.reference=tt(this.state,this.popper,this.reference,this.options.positionFixed),e.placement=et(this.options.placement,e.offsets.reference,this.popper,this.reference,this.options.modifiers.flip.boundariesElement,this.options.modifiers.flip.padding),e.originalPlacement=e.placement,e.positionFixed=this.options.positionFixed,e.offsets.popper=rt(this.popper,e.offsets.reference,e.placement),e.offsets.popper.position=this.options.positionFixed?"fixed":"absolute",e=at(this.modifiers,e),this.state.isCreated?this.options.onUpdate(e):(this.state.isCreated=!0,this.options.onCreate(e)))}.call(this)}},{key:"destroy",value:function(){return function(){return this.state.isDestroyed=!0,ot(this.modifiers,"applyStyle")&&(this.popper.removeAttribute("x-placement"),this.popper.style.position="",this.popper.style.top="",this.popper.style.left="",this.popper.style.right="",this.popper.style.bottom="",this.popper.style.willChange="",this.popper.style[lt("transform")]=""),this.disableEventListeners(),this.options.removeOnDestroy&&this.popper.parentNode.removeChild(this.popper),this}.call(this)}},{key:"enableEventListeners",value:function(){return function(){this.state.eventsEnabled||(this.state=dt(this.reference,this.options,this.state,this.scheduleUpdate))}.call(this)}},{key:"disableEventListeners",value:function(){return ut.call(this)}}]),St);function St(e,t){var i=this,n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{};!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,St),this.scheduleUpdate=function(){return requestAnimationFrame(i.update)},this.update=Le(this.update.bind(this)),this.options=Ue({},St.Defaults,n),this.state={isDestroyed:!1,isCreated:!1,scrollParents:[]},this.reference=e&&e.jquery?e[0]:e,this.popper=t&&t.jquery?t[0]:t,this.options.modifiers={},Object.keys(Ue({},St.Defaults.modifiers,n.modifiers)).forEach(function(e){i.options.modifiers[e]=Ue({},St.Defaults.modifiers[e]||{},n.modifiers?n.modifiers[e]:{})}),this.modifiers=Object.keys(this.options.modifiers).map(function(e){return Ue({name:e},i.options.modifiers[e])}).sort(function(e,t){return e.order-t.order}),this.modifiers.forEach(function(e){e.enabled&&Ie(e.onLoad)&&e.onLoad(i.reference,i.popper,i.options,e,i.state)}),this.update();var r=this.options.eventsEnabled;r&&this.enableEventListeners(),this.state.eventsEnabled=r}Ct.Utils=("undefined"!=typeof window?window:global).PopperUtils,Ct.placements=vt,Ct.Defaults=Tt;var kt="dropdown",Nt="bs.dropdown",Lt="."+Nt,It=".data-api",Dt=f.fn[kt],At=new RegExp("38|40|27"),Mt={HIDE:"hide"+Lt,HIDDEN:"hidden"+Lt,SHOW:"show"+Lt,SHOWN:"shown"+Lt,CLICK:"click"+Lt,CLICK_DATA_API:"click"+Lt+It,KEYDOWN_DATA_API:"keydown"+Lt+It,KEYUP_DATA_API:"keyup"+Lt+It},Ot="disabled",Pt="show",zt="dropup",jt="dropright",Bt="dropleft",Ht="dropdown-menu-right",Rt="position-static",$t='[data-toggle="dropdown"]',Wt=".dropdown form",Ft=".dropdown-menu",qt=".navbar-nav",Vt=".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)",Yt="top-start",Xt="top-end",Ut="bottom-start",Gt="bottom-end",Kt="right-start",Qt="left-start",Zt={offset:0,flip:!0,boundary:"scrollParent",reference:"toggle",display:"dynamic",popperConfig:null},Jt={offset:"(number|string|function)",flip:"boolean",boundary:"(string|element)",reference:"(string|element)",display:"string",popperConfig:"(null|object)"},ei=function(){function c(e,t){this._element=e,this._popper=null,this._config=this._getConfig(t),this._menu=this._getMenuElement(),this._inNavbar=this._detectNavbar(),this._addEventListeners()}var e=c.prototype;return e.toggle=function(){var e;this._element.disabled||f(this._element).hasClass(Ot)||(e=f(this._menu).hasClass(Pt),c._clearMenus(),e||this.show(!0))},e.show=function(e){if(void 0===e&&(e=!1),!(this._element.disabled||f(this._element).hasClass(Ot)||f(this._menu).hasClass(Pt))){var t={relatedTarget:this._element},i=f.Event(Mt.SHOW,t),n=c._getParentFromElement(this._element);if(f(n).trigger(i),!i.isDefaultPrevented()){if(!this._inNavbar&&e){if(void 0===Ct)throw new TypeError("Bootstrap's dropdowns require Popper.js (https://popper.js.org/)");var r=this._element;"parent"===this._config.reference?r=n:m.isElement(this._config.reference)&&(r=this._config.reference,void 0!==this._config.reference.jquery&&(r=this._config.reference[0])),"scrollParent"!==this._config.boundary&&f(n).addClass(Rt),this._popper=new Ct(r,this._menu,this._getPopperConfig())}"ontouchstart"in document.documentElement&&0===f(n).closest(qt).length&&f(document.body).children().on("mouseover",null,f.noop),this._element.focus(),this._element.setAttribute("aria-expanded",!0),f(this._menu).toggleClass(Pt),f(n).toggleClass(Pt).trigger(f.Event(Mt.SHOWN,t))}}},e.hide=function(){var e,t,i;this._element.disabled||f(this._element).hasClass(Ot)||!f(this._menu).hasClass(Pt)||(e={relatedTarget:this._element},t=f.Event(Mt.HIDE,e),i=c._getParentFromElement(this._element),f(i).trigger(t),t.isDefaultPrevented()||(this._popper&&this._popper.destroy(),f(this._menu).toggleClass(Pt),f(i).toggleClass(Pt).trigger(f.Event(Mt.HIDDEN,e))))},e.dispose=function(){f.removeData(this._element,Nt),f(this._element).off(Lt),this._element=null,(this._menu=null)!==this._popper&&(this._popper.destroy(),this._popper=null)},e.update=function(){this._inNavbar=this._detectNavbar(),null!==this._popper&&this._popper.scheduleUpdate()},e._addEventListeners=function(){var t=this;f(this._element).on(Mt.CLICK,function(e){e.preventDefault(),e.stopPropagation(),t.toggle()})},e._getConfig=function(e){return e=l({},this.constructor.Default,{},f(this._element).data(),{},e),m.typeCheckConfig(kt,e,this.constructor.DefaultType),e},e._getMenuElement=function(){var e;return this._menu||(e=c._getParentFromElement(this._element))&&(this._menu=e.querySelector(Ft)),this._menu},e._getPlacement=function(){var e=f(this._element.parentNode),t=Ut;return e.hasClass(zt)?(t=Yt,f(this._menu).hasClass(Ht)&&(t=Xt)):e.hasClass(jt)?t=Kt:e.hasClass(Bt)?t=Qt:f(this._menu).hasClass(Ht)&&(t=Gt),t},e._detectNavbar=function(){return 0<f(this._element).closest(".navbar").length},e._getOffset=function(){var t=this,e={};return"function"==typeof this._config.offset?e.fn=function(e){return e.offsets=l({},e.offsets,{},t._config.offset(e.offsets,t._element)||{}),e}:e.offset=this._config.offset,e},e._getPopperConfig=function(){var e={placement:this._getPlacement(),modifiers:{offset:this._getOffset(),flip:{enabled:this._config.flip},preventOverflow:{boundariesElement:this._config.boundary}}};return"static"===this._config.display&&(e.modifiers.applyStyle={enabled:!1}),l({},e,{},this._config.popperConfig)},c._jQueryInterface=function(t){return this.each(function(){var e=f(this).data(Nt);if(e||(e=new c(this,"object"==typeof t?t:null),f(this).data(Nt,e)),"string"==typeof t){if(void 0===e[t])throw new TypeError('No method named "'+t+'"');e[t]()}})},c._clearMenus=function(e){if(!e||3!==e.which&&("keyup"!==e.type||9===e.which))for(var t=[].slice.call(document.querySelectorAll($t)),i=0,n=t.length;i<n;i++){var r,s,a=c._getParentFromElement(t[i]),o=f(t[i]).data(Nt),l={relatedTarget:t[i]};e&&"click"===e.type&&(l.clickEvent=e),o&&(r=o._menu,f(a).hasClass(Pt)&&(e&&("click"===e.type&&/input|textarea/i.test(e.target.tagName)||"keyup"===e.type&&9===e.which)&&f.contains(a,e.target)||(s=f.Event(Mt.HIDE,l),f(a).trigger(s),s.isDefaultPrevented()||("ontouchstart"in document.documentElement&&f(document.body).children().off("mouseover",null,f.noop),t[i].setAttribute("aria-expanded","false"),o._popper&&o._popper.destroy(),f(r).removeClass(Pt),f(a).removeClass(Pt).trigger(f.Event(Mt.HIDDEN,l))))))}},c._getParentFromElement=function(e){var t,i=m.getSelectorFromElement(e);return i&&(t=document.querySelector(i)),t||e.parentNode},c._dataApiKeydownHandler=function(e){if((/input|textarea/i.test(e.target.tagName)?!(32===e.which||27!==e.which&&(40!==e.which&&38!==e.which||f(e.target).closest(Ft).length)):At.test(e.which))&&(e.preventDefault(),e.stopPropagation(),!this.disabled&&!f(this).hasClass(Ot))){var t,i=c._getParentFromElement(this),n=f(i).hasClass(Pt);if(n||27!==e.which){if(!n||n&&(27===e.which||32===e.which))return 27===e.which&&(t=i.querySelector($t),f(t).trigger("focus")),void f(this).trigger("click");var r,s=[].slice.call(i.querySelectorAll(Vt)).filter(function(e){return f(e).is(":visible")});0!==s.length&&(r=s.indexOf(e.target),38===e.which&&0<r&&r--,40===e.which&&r<s.length-1&&r++,r<0&&(r=0),s[r].focus())}}},a(c,null,[{key:"VERSION",get:function(){return"4.4.1"}},{key:"Default",get:function(){return Zt}},{key:"DefaultType",get:function(){return Jt}}]),c}();f(document).on(Mt.KEYDOWN_DATA_API,$t,ei._dataApiKeydownHandler).on(Mt.KEYDOWN_DATA_API,Ft,ei._dataApiKeydownHandler).on(Mt.CLICK_DATA_API+" "+Mt.KEYUP_DATA_API,ei._clearMenus).on(Mt.CLICK_DATA_API,$t,function(e){e.preventDefault(),e.stopPropagation(),ei._jQueryInterface.call(f(this),"toggle")}).on(Mt.CLICK_DATA_API,Wt,function(e){e.stopPropagation()}),f.fn[kt]=ei._jQueryInterface,f.fn[kt].Constructor=ei,f.fn[kt].noConflict=function(){return f.fn[kt]=Dt,ei._jQueryInterface};var ti="modal",ii="bs.modal",ni="."+ii,ri=f.fn[ti],si={backdrop:!0,keyboard:!0,focus:!0,show:!0},ai={backdrop:"(boolean|string)",keyboard:"boolean",focus:"boolean",show:"boolean"},oi={HIDE:"hide"+ni,HIDE_PREVENTED:"hidePrevented"+ni,HIDDEN:"hidden"+ni,SHOW:"show"+ni,SHOWN:"shown"+ni,FOCUSIN:"focusin"+ni,RESIZE:"resize"+ni,CLICK_DISMISS:"click.dismiss"+ni,KEYDOWN_DISMISS:"keydown.dismiss"+ni,MOUSEUP_DISMISS:"mouseup.dismiss"+ni,MOUSEDOWN_DISMISS:"mousedown.dismiss"+ni,CLICK_DATA_API:"click"+ni+".data-api"},li="modal-dialog-scrollable",ci="modal-scrollbar-measure",di="modal-backdrop",ui="modal-open",hi="fade",pi="show",fi="modal-static",mi=".modal-dialog",gi=".modal-body",vi='[data-toggle="modal"]',yi='[data-dismiss="modal"]',bi=".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",wi=".sticky-top",Ei=function(){function r(e,t){this._config=this._getConfig(t),this._element=e,this._dialog=e.querySelector(mi),this._backdrop=null,this._isShown=!1,this._isBodyOverflowing=!1,this._ignoreBackdropClick=!1,this._isTransitioning=!1,this._scrollbarWidth=0}var e=r.prototype;return e.toggle=function(e){return this._isShown?this.hide():this.show(e)},e.show=function(e){var t,i=this;this._isShown||this._isTransitioning||(f(this._element).hasClass(hi)&&(this._isTransitioning=!0),t=f.Event(oi.SHOW,{relatedTarget:e}),f(this._element).trigger(t),this._isShown||t.isDefaultPrevented()||(this._isShown=!0,this._checkScrollbar(),this._setScrollbar(),this._adjustDialog(),this._setEscapeEvent(),this._setResizeEvent(),f(this._element).on(oi.CLICK_DISMISS,yi,function(e){return i.hide(e)}),f(this._dialog).on(oi.MOUSEDOWN_DISMISS,function(){f(i._element).one(oi.MOUSEUP_DISMISS,function(e){f(e.target).is(i._element)&&(i._ignoreBackdropClick=!0)})}),this._showBackdrop(function(){return i._showElement(e)})))},e.hide=function(e){var t,i,n,r=this;e&&e.preventDefault(),this._isShown&&!this._isTransitioning&&(t=f.Event(oi.HIDE),f(this._element).trigger(t),this._isShown&&!t.isDefaultPrevented()&&(this._isShown=!1,(i=f(this._element).hasClass(hi))&&(this._isTransitioning=!0),this._setEscapeEvent(),this._setResizeEvent(),f(document).off(oi.FOCUSIN),f(this._element).removeClass(pi),f(this._element).off(oi.CLICK_DISMISS),f(this._dialog).off(oi.MOUSEDOWN_DISMISS),i?(n=m.getTransitionDurationFromElement(this._element),f(this._element).one(m.TRANSITION_END,function(e){return r._hideModal(e)}).emulateTransitionEnd(n)):this._hideModal()))},e.dispose=function(){[window,this._element,this._dialog].forEach(function(e){return f(e).off(ni)}),f(document).off(oi.FOCUSIN),f.removeData(this._element,ii),this._config=null,this._element=null,this._dialog=null,this._backdrop=null,this._isShown=null,this._isBodyOverflowing=null,this._ignoreBackdropClick=null,this._isTransitioning=null,this._scrollbarWidth=null},e.handleUpdate=function(){this._adjustDialog()},e._getConfig=function(e){return e=l({},si,{},e),m.typeCheckConfig(ti,e,ai),e},e._triggerBackdropTransition=function(){var e=this;if("static"===this._config.backdrop){var t=f.Event(oi.HIDE_PREVENTED);if(f(this._element).trigger(t),t.defaultPrevented)return;this._element.classList.add(fi);var i=m.getTransitionDurationFromElement(this._element);f(this._element).one(m.TRANSITION_END,function(){e._element.classList.remove(fi)}).emulateTransitionEnd(i),this._element.focus()}else this.hide()},e._showElement=function(e){var t=this,i=f(this._element).hasClass(hi),n=this._dialog?this._dialog.querySelector(gi):null;this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE||document.body.appendChild(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.setAttribute("aria-modal",!0),f(this._dialog).hasClass(li)&&n?n.scrollTop=0:this._element.scrollTop=0,i&&m.reflow(this._element),f(this._element).addClass(pi),this._config.focus&&this._enforceFocus();function r(){t._config.focus&&t._element.focus(),t._isTransitioning=!1,f(t._element).trigger(a)}var s,a=f.Event(oi.SHOWN,{relatedTarget:e});i?(s=m.getTransitionDurationFromElement(this._dialog),f(this._dialog).one(m.TRANSITION_END,r).emulateTransitionEnd(s)):r()},e._enforceFocus=function(){var t=this;f(document).off(oi.FOCUSIN).on(oi.FOCUSIN,function(e){document!==e.target&&t._element!==e.target&&0===f(t._element).has(e.target).length&&t._element.focus()})},e._setEscapeEvent=function(){var t=this;this._isShown&&this._config.keyboard?f(this._element).on(oi.KEYDOWN_DISMISS,function(e){27===e.which&&t._triggerBackdropTransition()}):this._isShown||f(this._element).off(oi.KEYDOWN_DISMISS)},e._setResizeEvent=function(){var t=this;this._isShown?f(window).on(oi.RESIZE,function(e){return t.handleUpdate(e)}):f(window).off(oi.RESIZE)},e._hideModal=function(){var e=this;this._element.style.display="none",this._element.setAttribute("aria-hidden",!0),this._element.removeAttribute("aria-modal"),this._isTransitioning=!1,this._showBackdrop(function(){f(document.body).removeClass(ui),e._resetAdjustments(),e._resetScrollbar(),f(e._element).trigger(oi.HIDDEN)})},e._removeBackdrop=function(){this._backdrop&&(f(this._backdrop).remove(),this._backdrop=null)},e._showBackdrop=function(e){var t,i,n=this,r=f(this._element).hasClass(hi)?hi:"";if(this._isShown&&this._config.backdrop){if(this._backdrop=document.createElement("div"),this._backdrop.className=di,r&&this._backdrop.classList.add(r),f(this._backdrop).appendTo(document.body),f(this._element).on(oi.CLICK_DISMISS,function(e){n._ignoreBackdropClick?n._ignoreBackdropClick=!1:e.target===e.currentTarget&&n._triggerBackdropTransition()}),r&&m.reflow(this._backdrop),f(this._backdrop).addClass(pi),!e)return;if(!r)return void e();var s=m.getTransitionDurationFromElement(this._backdrop);f(this._backdrop).one(m.TRANSITION_END,e).emulateTransitionEnd(s)}else{!this._isShown&&this._backdrop?(f(this._backdrop).removeClass(pi),t=function(){n._removeBackdrop(),e&&e()},f(this._element).hasClass(hi)?(i=m.getTransitionDurationFromElement(this._backdrop),f(this._backdrop).one(m.TRANSITION_END,t).emulateTransitionEnd(i)):t()):e&&e()}},e._adjustDialog=function(){var e=this._element.scrollHeight>document.documentElement.clientHeight;!this._isBodyOverflowing&&e&&(this._element.style.paddingLeft=this._scrollbarWidth+"px"),this._isBodyOverflowing&&!e&&(this._element.style.paddingRight=this._scrollbarWidth+"px")},e._resetAdjustments=function(){this._element.style.paddingLeft="",this._element.style.paddingRight=""},e._checkScrollbar=function(){var e=document.body.getBoundingClientRect();this._isBodyOverflowing=e.left+e.right<window.innerWidth,this._scrollbarWidth=this._getScrollbarWidth()},e._setScrollbar=function(){var e,t,i,n,r=this;this._isBodyOverflowing&&(e=[].slice.call(document.querySelectorAll(bi)),t=[].slice.call(document.querySelectorAll(wi)),f(e).each(function(e,t){var i=t.style.paddingRight,n=f(t).css("padding-right");f(t).data("padding-right",i).css("padding-right",parseFloat(n)+r._scrollbarWidth+"px")}),f(t).each(function(e,t){var i=t.style.marginRight,n=f(t).css("margin-right");f(t).data("margin-right",i).css("margin-right",parseFloat(n)-r._scrollbarWidth+"px")}),i=document.body.style.paddingRight,n=f(document.body).css("padding-right"),f(document.body).data("padding-right",i).css("padding-right",parseFloat(n)+this._scrollbarWidth+"px")),f(document.body).addClass(ui)},e._resetScrollbar=function(){var e=[].slice.call(document.querySelectorAll(bi));f(e).each(function(e,t){var i=f(t).data("padding-right");f(t).removeData("padding-right"),t.style.paddingRight=i||""});var t=[].slice.call(document.querySelectorAll(""+wi));f(t).each(function(e,t){var i=f(t).data("margin-right");void 0!==i&&f(t).css("margin-right",i).removeData("margin-right")});var i=f(document.body).data("padding-right");f(document.body).removeData("padding-right"),document.body.style.paddingRight=i||""},e._getScrollbarWidth=function(){var e=document.createElement("div");e.className=ci,document.body.appendChild(e);var t=e.getBoundingClientRect().width-e.clientWidth;return document.body.removeChild(e),t},r._jQueryInterface=function(i,n){return this.each(function(){var e=f(this).data(ii),t=l({},si,{},f(this).data(),{},"object"==typeof i&&i?i:{});if(e||(e=new r(this,t),f(this).data(ii,e)),"string"==typeof i){if(void 0===e[i])throw new TypeError('No method named "'+i+'"');e[i](n)}else t.show&&e.show(n)})},a(r,null,[{key:"VERSION",get:function(){return"4.4.1"}},{key:"Default",get:function(){return si}}]),r}();f(document).on(oi.CLICK_DATA_API,vi,function(e){var t,i=this,n=m.getSelectorFromElement(this);n&&(t=document.querySelector(n));var r=f(t).data(ii)?"toggle":l({},f(t).data(),{},f(this).data());"A"!==this.tagName&&"AREA"!==this.tagName||e.preventDefault();var s=f(t).one(oi.SHOW,function(e){e.isDefaultPrevented()||s.one(oi.HIDDEN,function(){f(i).is(":visible")&&i.focus()})});Ei._jQueryInterface.call(f(t),r,this)}),f.fn[ti]=Ei._jQueryInterface,f.fn[ti].Constructor=Ei,f.fn[ti].noConflict=function(){return f.fn[ti]=ri,Ei._jQueryInterface};var xi=["background","cite","href","itemtype","longdesc","poster","src","xlink:href"],_i={"*":["class","dir","id","lang","role",/^aria-[\w-]*$/i],a:["target","href","title","rel"],area:[],b:[],br:[],col:[],code:[],div:[],em:[],hr:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],i:[],img:["src","alt","title","width","height"],li:[],ol:[],p:[],pre:[],s:[],small:[],span:[],sub:[],sup:[],strong:[],u:[],ul:[]},Ti=/^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi,Ci=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+/]+=*$/i;function Si(e,s,t){if(0===e.length)return e;if(t&&"function"==typeof t)return t(e);for(var i=(new window.DOMParser).parseFromString(e,"text/html"),a=Object.keys(s),o=[].slice.call(i.body.querySelectorAll("*")),n=function(e){var t=o[e],i=t.nodeName.toLowerCase();if(-1===a.indexOf(t.nodeName.toLowerCase()))return t.parentNode.removeChild(t),"continue";var n=[].slice.call(t.attributes),r=[].concat(s["*"]||[],s[i]||[]);n.forEach(function(e){!function(e,t){var i=e.nodeName.toLowerCase();if(-1!==t.indexOf(i))return-1===xi.indexOf(i)||Boolean(e.nodeValue.match(Ti)||e.nodeValue.match(Ci));for(var n=t.filter(function(e){return e instanceof RegExp}),r=0,s=n.length;r<s;r++)if(i.match(n[r]))return 1}(e,r)&&t.removeAttribute(e.nodeName)})},r=0,l=o.length;r<l;r++)n(r);return i.body.innerHTML}var ki="tooltip",Ni="bs.tooltip",Li="."+Ni,Ii=f.fn[ki],Di="bs-tooltip",Ai=new RegExp("(^|\\s)"+Di+"\\S+","g"),Mi=["sanitize","whiteList","sanitizeFn"],Oi={animation:"boolean",template:"string",title:"(string|element|function)",trigger:"string",delay:"(number|object)",html:"boolean",selector:"(string|boolean)",placement:"(string|function)",offset:"(number|string|function)",container:"(string|element|boolean)",fallbackPlacement:"(string|array)",boundary:"(string|element)",sanitize:"boolean",sanitizeFn:"(null|function)",whiteList:"object",popperConfig:"(null|object)"},Pi={AUTO:"auto",TOP:"top",RIGHT:"right",BOTTOM:"bottom",LEFT:"left"},zi={animation:!0,template:'<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,selector:!1,placement:"top",offset:0,container:!1,fallbackPlacement:"flip",boundary:"scrollParent",sanitize:!0,sanitizeFn:null,whiteList:_i,popperConfig:null},ji="show",Bi="out",Hi={HIDE:"hide"+Li,HIDDEN:"hidden"+Li,SHOW:"show"+Li,SHOWN:"shown"+Li,INSERTED:"inserted"+Li,CLICK:"click"+Li,FOCUSIN:"focusin"+Li,FOCUSOUT:"focusout"+Li,MOUSEENTER:"mouseenter"+Li,MOUSELEAVE:"mouseleave"+Li},Ri="fade",$i="show",Wi=".tooltip-inner",Fi=".arrow",qi="hover",Vi="focus",Yi="click",Xi="manual",Ui=function(){function n(e,t){if(void 0===Ct)throw new TypeError("Bootstrap's tooltips require Popper.js (https://popper.js.org/)");this._isEnabled=!0,this._timeout=0,this._hoverState="",this._activeTrigger={},this._popper=null,this.element=e,this.config=this._getConfig(t),this.tip=null,this._setListeners()}var e=n.prototype;return e.enable=function(){this._isEnabled=!0},e.disable=function(){this._isEnabled=!1},e.toggleEnabled=function(){this._isEnabled=!this._isEnabled},e.toggle=function(e){if(this._isEnabled)if(e){var t=this.constructor.DATA_KEY,i=f(e.currentTarget).data(t);i||(i=new this.constructor(e.currentTarget,this._getDelegateConfig()),f(e.currentTarget).data(t,i)),i._activeTrigger.click=!i._activeTrigger.click,i._isWithActiveTrigger()?i._enter(null,i):i._leave(null,i)}else{if(f(this.getTipElement()).hasClass($i))return void this._leave(null,this);this._enter(null,this)}},e.dispose=function(){clearTimeout(this._timeout),f.removeData(this.element,this.constructor.DATA_KEY),f(this.element).off(this.constructor.EVENT_KEY),f(this.element).closest(".modal").off("hide.bs.modal",this._hideModalHandler),this.tip&&f(this.tip).remove(),this._isEnabled=null,this._timeout=null,this._hoverState=null,this._activeTrigger=null,this._popper&&this._popper.destroy(),this._popper=null,this.element=null,this.config=null,this.tip=null},e.show=function(){var t=this;if("none"===f(this.element).css("display"))throw new Error("Please use show on visible elements");var e=f.Event(this.constructor.Event.SHOW);if(this.isWithContent()&&this._isEnabled){f(this.element).trigger(e);var i=m.findShadowRoot(this.element),n=f.contains(null!==i?i:this.element.ownerDocument.documentElement,this.element);if(e.isDefaultPrevented()||!n)return;var r=this.getTipElement(),s=m.getUID(this.constructor.NAME);r.setAttribute("id",s),this.element.setAttribute("aria-describedby",s),this.setContent(),this.config.animation&&f(r).addClass(Ri);var a="function"==typeof this.config.placement?this.config.placement.call(this,r,this.element):this.config.placement,o=this._getAttachment(a);this.addAttachmentClass(o);var l=this._getContainer();f(r).data(this.constructor.DATA_KEY,this),f.contains(this.element.ownerDocument.documentElement,this.tip)||f(r).appendTo(l),f(this.element).trigger(this.constructor.Event.INSERTED),this._popper=new Ct(this.element,r,this._getPopperConfig(o)),f(r).addClass($i),"ontouchstart"in document.documentElement&&f(document.body).children().on("mouseover",null,f.noop);var c,d=function(){t.config.animation&&t._fixTransition();var e=t._hoverState;t._hoverState=null,f(t.element).trigger(t.constructor.Event.SHOWN),e===Bi&&t._leave(null,t)};f(this.tip).hasClass(Ri)?(c=m.getTransitionDurationFromElement(this.tip),f(this.tip).one(m.TRANSITION_END,d).emulateTransitionEnd(c)):d()}},e.hide=function(e){function t(){n._hoverState!==ji&&r.parentNode&&r.parentNode.removeChild(r),n._cleanTipClass(),n.element.removeAttribute("aria-describedby"),f(n.element).trigger(n.constructor.Event.HIDDEN),null!==n._popper&&n._popper.destroy(),e&&e()}var i,n=this,r=this.getTipElement(),s=f.Event(this.constructor.Event.HIDE);f(this.element).trigger(s),s.isDefaultPrevented()||(f(r).removeClass($i),"ontouchstart"in document.documentElement&&f(document.body).children().off("mouseover",null,f.noop),this._activeTrigger[Yi]=!1,this._activeTrigger[Vi]=!1,this._activeTrigger[qi]=!1,f(this.tip).hasClass(Ri)?(i=m.getTransitionDurationFromElement(r),f(r).one(m.TRANSITION_END,t).emulateTransitionEnd(i)):t(),this._hoverState="")},e.update=function(){null!==this._popper&&this._popper.scheduleUpdate()},e.isWithContent=function(){return Boolean(this.getTitle())},e.addAttachmentClass=function(e){f(this.getTipElement()).addClass(Di+"-"+e)},e.getTipElement=function(){return this.tip=this.tip||f(this.config.template)[0],this.tip},e.setContent=function(){var e=this.getTipElement();this.setElementContent(f(e.querySelectorAll(Wi)),this.getTitle()),f(e).removeClass(Ri+" "+$i)},e.setElementContent=function(e,t){"object"!=typeof t||!t.nodeType&&!t.jquery?this.config.html?(this.config.sanitize&&(t=Si(t,this.config.whiteList,this.config.sanitizeFn)),e.html(t)):e.text(t):this.config.html?f(t).parent().is(e)||e.empty().append(t):e.text(f(t).text())},e.getTitle=function(){return this.element.getAttribute("data-original-title")||("function"==typeof this.config.title?this.config.title.call(this.element):this.config.title)},e._getPopperConfig=function(e){var t=this;return l({},{placement:e,modifiers:{offset:this._getOffset(),flip:{behavior:this.config.fallbackPlacement},arrow:{element:Fi},preventOverflow:{boundariesElement:this.config.boundary}},onCreate:function(e){e.originalPlacement!==e.placement&&t._handlePopperPlacementChange(e)},onUpdate:function(e){return t._handlePopperPlacementChange(e)}},{},this.config.popperConfig)},e._getOffset=function(){var t=this,e={};return"function"==typeof this.config.offset?e.fn=function(e){return e.offsets=l({},e.offsets,{},t.config.offset(e.offsets,t.element)||{}),e}:e.offset=this.config.offset,e},e._getContainer=function(){return!1===this.config.container?document.body:m.isElement(this.config.container)?f(this.config.container):f(document).find(this.config.container)},e._getAttachment=function(e){return Pi[e.toUpperCase()]},e._setListeners=function(){var n=this;this.config.trigger.split(" ").forEach(function(e){var t,i;"click"===e?f(n.element).on(n.constructor.Event.CLICK,n.config.selector,function(e){return n.toggle(e)}):e!==Xi&&(t=e===qi?n.constructor.Event.MOUSEENTER:n.constructor.Event.FOCUSIN,i=e===qi?n.constructor.Event.MOUSELEAVE:n.constructor.Event.FOCUSOUT,f(n.element).on(t,n.config.selector,function(e){return n._enter(e)}).on(i,n.config.selector,function(e){return n._leave(e)}))}),this._hideModalHandler=function(){n.element&&n.hide()},f(this.element).closest(".modal").on("hide.bs.modal",this._hideModalHandler),this.config.selector?this.config=l({},this.config,{trigger:"manual",selector:""}):this._fixTitle()},e._fixTitle=function(){var e=typeof this.element.getAttribute("data-original-title");!this.element.getAttribute("title")&&"string"==e||(this.element.setAttribute("data-original-title",this.element.getAttribute("title")||""),this.element.setAttribute("title",""))},e._enter=function(e,t){var i=this.constructor.DATA_KEY;(t=t||f(e.currentTarget).data(i))||(t=new this.constructor(e.currentTarget,this._getDelegateConfig()),f(e.currentTarget).data(i,t)),e&&(t._activeTrigger["focusin"===e.type?Vi:qi]=!0),f(t.getTipElement()).hasClass($i)||t._hoverState===ji?t._hoverState=ji:(clearTimeout(t._timeout),t._hoverState=ji,t.config.delay&&t.config.delay.show?t._timeout=setTimeout(function(){t._hoverState===ji&&t.show()},t.config.delay.show):t.show())},e._leave=function(e,t){var i=this.constructor.DATA_KEY;(t=t||f(e.currentTarget).data(i))||(t=new this.constructor(e.currentTarget,this._getDelegateConfig()),f(e.currentTarget).data(i,t)),e&&(t._activeTrigger["focusout"===e.type?Vi:qi]=!1),t._isWithActiveTrigger()||(clearTimeout(t._timeout),t._hoverState=Bi,t.config.delay&&t.config.delay.hide?t._timeout=setTimeout(function(){t._hoverState===Bi&&t.hide()},t.config.delay.hide):t.hide())},e._isWithActiveTrigger=function(){for(var e in this._activeTrigger)if(this._activeTrigger[e])return!0;return!1},e._getConfig=function(e){var t=f(this.element).data();return Object.keys(t).forEach(function(e){-1!==Mi.indexOf(e)&&delete t[e]}),"number"==typeof(e=l({},this.constructor.Default,{},t,{},"object"==typeof e&&e?e:{})).delay&&(e.delay={show:e.delay,hide:e.delay}),"number"==typeof e.title&&(e.title=e.title.toString()),"number"==typeof e.content&&(e.content=e.content.toString()),m.typeCheckConfig(ki,e,this.constructor.DefaultType),e.sanitize&&(e.template=Si(e.template,e.whiteList,e.sanitizeFn)),e},e._getDelegateConfig=function(){var e={};if(this.config)for(var t in this.config)this.constructor.Default[t]!==this.config[t]&&(e[t]=this.config[t]);return e},e._cleanTipClass=function(){var e=f(this.getTipElement()),t=e.attr("class").match(Ai);null!==t&&t.length&&e.removeClass(t.join(""))},e._handlePopperPlacementChange=function(e){var t=e.instance;this.tip=t.popper,this._cleanTipClass(),this.addAttachmentClass(this._getAttachment(e.placement))},e._fixTransition=function(){var e=this.getTipElement(),t=this.config.animation;null===e.getAttribute("x-placement")&&(f(e).removeClass(Ri),this.config.animation=!1,this.hide(),this.show(),this.config.animation=t)},n._jQueryInterface=function(i){return this.each(function(){var e=f(this).data(Ni),t="object"==typeof i&&i;if((e||!/dispose|hide/.test(i))&&(e||(e=new n(this,t),f(this).data(Ni,e)),"string"==typeof i)){if(void 0===e[i])throw new TypeError('No method named "'+i+'"');e[i]()}})},a(n,null,[{key:"VERSION",get:function(){return"4.4.1"}},{key:"Default",get:function(){return zi}},{key:"NAME",get:function(){return ki}},{key:"DATA_KEY",get:function(){return Ni}},{key:"Event",get:function(){return Hi}},{key:"EVENT_KEY",get:function(){return Li}},{key:"DefaultType",get:function(){return Oi}}]),n}();f.fn[ki]=Ui._jQueryInterface,f.fn[ki].Constructor=Ui,f.fn[ki].noConflict=function(){return f.fn[ki]=Ii,Ui._jQueryInterface};var Gi="popover",Ki="bs.popover",Qi="."+Ki,Zi=f.fn[Gi],Ji="bs-popover",en=new RegExp("(^|\\s)"+Ji+"\\S+","g"),tn=l({},Ui.Default,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>'}),nn=l({},Ui.DefaultType,{content:"(string|element|function)"}),rn="fade",sn="show",an=".popover-header",on=".popover-body",ln={HIDE:"hide"+Qi,HIDDEN:"hidden"+Qi,SHOW:"show"+Qi,SHOWN:"shown"+Qi,INSERTED:"inserted"+Qi,CLICK:"click"+Qi,FOCUSIN:"focusin"+Qi,FOCUSOUT:"focusout"+Qi,MOUSEENTER:"mouseenter"+Qi,MOUSELEAVE:"mouseleave"+Qi},cn=function(e){var t,i;function n(){return e.apply(this,arguments)||this}i=e,(t=n).prototype=Object.create(i.prototype),(t.prototype.constructor=t).__proto__=i;var r=n.prototype;return r.isWithContent=function(){return this.getTitle()||this._getContent()},r.addAttachmentClass=function(e){f(this.getTipElement()).addClass(Ji+"-"+e)},r.getTipElement=function(){return this.tip=this.tip||f(this.config.template)[0],this.tip},r.setContent=function(){var e=f(this.getTipElement());this.setElementContent(e.find(an),this.getTitle());var t=this._getContent();"function"==typeof t&&(t=t.call(this.element)),this.setElementContent(e.find(on),t),e.removeClass(rn+" "+sn)},r._getContent=function(){return this.element.getAttribute("data-content")||this.config.content},r._cleanTipClass=function(){var e=f(this.getTipElement()),t=e.attr("class").match(en);null!==t&&0<t.length&&e.removeClass(t.join(""))},n._jQueryInterface=function(i){return this.each(function(){var e=f(this).data(Ki),t="object"==typeof i?i:null;if((e||!/dispose|hide/.test(i))&&(e||(e=new n(this,t),f(this).data(Ki,e)),"string"==typeof i)){if(void 0===e[i])throw new TypeError('No method named "'+i+'"');e[i]()}})},a(n,null,[{key:"VERSION",get:function(){return"4.4.1"}},{key:"Default",get:function(){return tn}},{key:"NAME",get:function(){return Gi}},{key:"DATA_KEY",get:function(){return Ki}},{key:"Event",get:function(){return ln}},{key:"EVENT_KEY",get:function(){return Qi}},{key:"DefaultType",get:function(){return nn}}]),n}(Ui);f.fn[Gi]=cn._jQueryInterface,f.fn[Gi].Constructor=cn,f.fn[Gi].noConflict=function(){return f.fn[Gi]=Zi,cn._jQueryInterface};var dn="scrollspy",un="bs.scrollspy",hn="."+un,pn=f.fn[dn],fn={offset:10,method:"auto",target:""},mn={offset:"number",method:"string",target:"(string|element)"},gn={ACTIVATE:"activate"+hn,SCROLL:"scroll"+hn,LOAD_DATA_API:"load"+hn+".data-api"},vn="dropdown-item",yn="active",bn='[data-spy="scroll"]',wn=".nav, .list-group",En=".nav-link",xn=".nav-item",_n=".list-group-item",Tn=".dropdown",Cn=".dropdown-item",Sn=".dropdown-toggle",kn="offset",Nn="position",Ln=function(){function i(e,t){var i=this;this._element=e,this._scrollElement="BODY"===e.tagName?window:e,this._config=this._getConfig(t),this._selector=this._config.target+" "+En+","+this._config.target+" "+_n+","+this._config.target+" "+Cn,this._offsets=[],this._targets=[],this._activeTarget=null,this._scrollHeight=0,f(this._scrollElement).on(gn.SCROLL,function(e){return i._process(e)}),this.refresh(),this._process()}var e=i.prototype;return e.refresh=function(){var t=this,e=this._scrollElement===this._scrollElement.window?kn:Nn,r="auto"===this._config.method?e:this._config.method,s=r===Nn?this._getScrollTop():0;this._offsets=[],this._targets=[],this._scrollHeight=this._getScrollHeight(),[].slice.call(document.querySelectorAll(this._selector)).map(function(e){var t,i=m.getSelectorFromElement(e);if(i&&(t=document.querySelector(i)),t){var n=t.getBoundingClientRect();if(n.width||n.height)return[f(t)[r]().top+s,i]}return null}).filter(function(e){return e}).sort(function(e,t){return e[0]-t[0]}).forEach(function(e){t._offsets.push(e[0]),t._targets.push(e[1])})},e.dispose=function(){f.removeData(this._element,un),f(this._scrollElement).off(hn),this._element=null,this._scrollElement=null,this._config=null,this._selector=null,this._offsets=null,this._targets=null,this._activeTarget=null,this._scrollHeight=null},e._getConfig=function(e){var t;return"string"!=typeof(e=l({},fn,{},"object"==typeof e&&e?e:{})).target&&((t=f(e.target).attr("id"))||(t=m.getUID(dn),f(e.target).attr("id",t)),e.target="#"+t),m.typeCheckConfig(dn,e,mn),e},e._getScrollTop=function(){return this._scrollElement===window?this._scrollElement.pageYOffset:this._scrollElement.scrollTop},e._getScrollHeight=function(){return this._scrollElement.scrollHeight||Math.max(document.body.scrollHeight,document.documentElement.scrollHeight)},e._getOffsetHeight=function(){return this._scrollElement===window?window.innerHeight:this._scrollElement.getBoundingClientRect().height},e._process=function(){var e=this._getScrollTop()+this._config.offset,t=this._getScrollHeight(),i=this._config.offset+t-this._getOffsetHeight();if(this._scrollHeight!==t&&this.refresh(),i<=e){var n=this._targets[this._targets.length-1];this._activeTarget!==n&&this._activate(n)}else{if(this._activeTarget&&e<this._offsets[0]&&0<this._offsets[0])return this._activeTarget=null,void this._clear();for(var r=this._offsets.length;r--;){this._activeTarget!==this._targets[r]&&e>=this._offsets[r]&&(void 0===this._offsets[r+1]||e<this._offsets[r+1])&&this._activate(this._targets[r])}}},e._activate=function(t){this._activeTarget=t,this._clear();var e=this._selector.split(",").map(function(e){return e+'[data-target="'+t+'"],'+e+'[href="'+t+'"]'}),i=f([].slice.call(document.querySelectorAll(e.join(","))));i.hasClass(vn)?(i.closest(Tn).find(Sn).addClass(yn),i.addClass(yn)):(i.addClass(yn),i.parents(wn).prev(En+", "+_n).addClass(yn),i.parents(wn).prev(xn).children(En).addClass(yn)),f(this._scrollElement).trigger(gn.ACTIVATE,{relatedTarget:t})},e._clear=function(){[].slice.call(document.querySelectorAll(this._selector)).filter(function(e){return e.classList.contains(yn)}).forEach(function(e){return e.classList.remove(yn)})},i._jQueryInterface=function(t){return this.each(function(){var e=f(this).data(un);if(e||(e=new i(this,"object"==typeof t&&t),f(this).data(un,e)),"string"==typeof t){if(void 0===e[t])throw new TypeError('No method named "'+t+'"');e[t]()}})},a(i,null,[{key:"VERSION",get:function(){return"4.4.1"}},{key:"Default",get:function(){return fn}}]),i}();f(window).on(gn.LOAD_DATA_API,function(){for(var e=[].slice.call(document.querySelectorAll(bn)),t=e.length;t--;){var i=f(e[t]);Ln._jQueryInterface.call(i,i.data())}}),f.fn[dn]=Ln._jQueryInterface,f.fn[dn].Constructor=Ln,f.fn[dn].noConflict=function(){return f.fn[dn]=pn,Ln._jQueryInterface};var In="bs.tab",Dn="."+In,An=f.fn.tab,Mn={HIDE:"hide"+Dn,HIDDEN:"hidden"+Dn,SHOW:"show"+Dn,SHOWN:"shown"+Dn,CLICK_DATA_API:"click"+Dn+".data-api"},On="dropdown-menu",Pn="active",zn="disabled",jn="fade",Bn="show",Hn=".dropdown",Rn=".nav, .list-group",$n=".active",Wn="> li > .active",Fn='[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]',qn=".dropdown-toggle",Vn="> .dropdown-menu .active",Yn=function(){function n(e){this._element=e}var e=n.prototype;return e.show=function(){var e,t,i,n,r,s,a,o,l=this;this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE&&f(this._element).hasClass(Pn)||f(this._element).hasClass(zn)||(t=f(this._element).closest(Rn)[0],i=m.getSelectorFromElement(this._element),t&&(n="UL"===t.nodeName||"OL"===t.nodeName?Wn:$n,r=(r=f.makeArray(f(t).find(n)))[r.length-1]),s=f.Event(Mn.HIDE,{relatedTarget:this._element}),a=f.Event(Mn.SHOW,{relatedTarget:r}),r&&f(r).trigger(s),f(this._element).trigger(a),a.isDefaultPrevented()||s.isDefaultPrevented()||(i&&(e=document.querySelector(i)),this._activate(this._element,t),o=function(){var e=f.Event(Mn.HIDDEN,{relatedTarget:l._element}),t=f.Event(Mn.SHOWN,{relatedTarget:r});f(r).trigger(e),f(l._element).trigger(t)},e?this._activate(e,e.parentNode,o):o()))},e.dispose=function(){f.removeData(this._element,In),this._element=null},e._activate=function(e,t,i){function n(){return s._transitionComplete(e,a,i)}var r,s=this,a=(!t||"UL"!==t.nodeName&&"OL"!==t.nodeName?f(t).children($n):f(t).find(Wn))[0],o=i&&a&&f(a).hasClass(jn);a&&o?(r=m.getTransitionDurationFromElement(a),f(a).removeClass(Bn).one(m.TRANSITION_END,n).emulateTransitionEnd(r)):n()},e._transitionComplete=function(e,t,i){var n,r,s;t&&(f(t).removeClass(Pn),(n=f(t.parentNode).find(Vn)[0])&&f(n).removeClass(Pn),"tab"===t.getAttribute("role")&&t.setAttribute("aria-selected",!1)),f(e).addClass(Pn),"tab"===e.getAttribute("role")&&e.setAttribute("aria-selected",!0),m.reflow(e),e.classList.contains(jn)&&e.classList.add(Bn),e.parentNode&&f(e.parentNode).hasClass(On)&&((r=f(e).closest(Hn)[0])&&(s=[].slice.call(r.querySelectorAll(qn)),f(s).addClass(Pn)),e.setAttribute("aria-expanded",!0)),i&&i()},n._jQueryInterface=function(i){return this.each(function(){var e=f(this),t=e.data(In);if(t||(t=new n(this),e.data(In,t)),"string"==typeof i){if(void 0===t[i])throw new TypeError('No method named "'+i+'"');t[i]()}})},a(n,null,[{key:"VERSION",get:function(){return"4.4.1"}}]),n}();f(document).on(Mn.CLICK_DATA_API,Fn,function(e){e.preventDefault(),Yn._jQueryInterface.call(f(this),"show")}),f.fn.tab=Yn._jQueryInterface,f.fn.tab.Constructor=Yn,f.fn.tab.noConflict=function(){return f.fn.tab=An,Yn._jQueryInterface};var Xn="toast",Un="bs.toast",Gn="."+Un,Kn=f.fn[Xn],Qn={CLICK_DISMISS:"click.dismiss"+Gn,HIDE:"hide"+Gn,HIDDEN:"hidden"+Gn,SHOW:"show"+Gn,SHOWN:"shown"+Gn},Zn="fade",Jn="hide",er="show",tr="showing",ir={animation:"boolean",autohide:"boolean",delay:"number"},nr={animation:!0,autohide:!0,delay:500},rr='[data-dismiss="toast"]',sr=function(){function n(e,t){this._element=e,this._config=this._getConfig(t),this._timeout=null,this._setListeners()}var e=n.prototype;return e.show=function(){var e,t,i=this,n=f.Event(Qn.SHOW);f(this._element).trigger(n),n.isDefaultPrevented()||(this._config.animation&&this._element.classList.add(Zn),e=function(){i._element.classList.remove(tr),i._element.classList.add(er),f(i._element).trigger(Qn.SHOWN),i._config.autohide&&(i._timeout=setTimeout(function(){i.hide()},i._config.delay))},this._element.classList.remove(Jn),m.reflow(this._element),this._element.classList.add(tr),this._config.animation?(t=m.getTransitionDurationFromElement(this._element),f(this._element).one(m.TRANSITION_END,e).emulateTransitionEnd(t)):e())},e.hide=function(){var e;this._element.classList.contains(er)&&(e=f.Event(Qn.HIDE),f(this._element).trigger(e),e.isDefaultPrevented()||this._close())},e.dispose=function(){clearTimeout(this._timeout),this._timeout=null,this._element.classList.contains(er)&&this._element.classList.remove(er),f(this._element).off(Qn.CLICK_DISMISS),f.removeData(this._element,Un),this._element=null,this._config=null},e._getConfig=function(e){return e=l({},nr,{},f(this._element).data(),{},"object"==typeof e&&e?e:{}),m.typeCheckConfig(Xn,e,this.constructor.DefaultType),e},e._setListeners=function(){var e=this;f(this._element).on(Qn.CLICK_DISMISS,rr,function(){return e.hide()})},e._close=function(){function e(){i._element.classList.add(Jn),f(i._element).trigger(Qn.HIDDEN)}var t,i=this;this._element.classList.remove(er),this._config.animation?(t=m.getTransitionDurationFromElement(this._element),f(this._element).one(m.TRANSITION_END,e).emulateTransitionEnd(t)):e()},n._jQueryInterface=function(i){return this.each(function(){var e=f(this),t=e.data(Un);if(t||(t=new n(this,"object"==typeof i&&i),e.data(Un,t)),"string"==typeof i){if(void 0===t[i])throw new TypeError('No method named "'+i+'"');t[i](this)}})},a(n,null,[{key:"VERSION",get:function(){return"4.4.1"}},{key:"DefaultType",get:function(){return ir}},{key:"Default",get:function(){return nr}}]),n}();f.fn[Xn]=sr._jQueryInterface,f.fn[Xn].Constructor=sr,f.fn[Xn].noConflict=function(){return f.fn[Xn]=Kn,sr._jQueryInterface},e.Alert=v,e.Button=O,e.Carousel=de,e.Collapse=Se,e.Dropdown=ei,e.Modal=Ei,e.Popover=cn,e.Scrollspy=Ln,e.Tab=Yn,e.Toast=sr,e.Tooltip=Ui,e.Util=m,Object.defineProperty(e,"__esModule",{value:!0})}),function(e){var t="object"==typeof window&&window||"object"==typeof self&&self;"undefined"!=typeof exports?e(exports):t&&(t.hljs=e({}),"function"==typeof define&&define.amd&&define([],function(){return t.hljs}))}(function(r){function y(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}function u(e){return e.nodeName.toLowerCase()}function b(e,t){var i=e&&e.exec(t);return i&&0===i.index}function h(e){return n.test(e)}function c(e){var t,i={},n=Array.prototype.slice.call(arguments,1);for(t in e)i[t]=e[t];return n.forEach(function(e){for(t in e)i[t]=e[t]}),i}function p(e){var r=[];return function e(t,i){for(var n=t.firstChild;n;n=n.nextSibling)3===n.nodeType?i+=n.nodeValue.length:1===n.nodeType&&(r.push({event:"start",offset:i,node:n}),i=e(n,i),u(n).match(/br|hr|img|input/)||r.push({event:"stop",offset:i,node:n}));return i}(e,0),r}function f(e,t,i){function n(){return e.length&&t.length?e[0].offset!==t[0].offset?e[0].offset<t[0].offset?e:t:"start"===t[0].event?e:t:e.length?e:t}function r(e){l+="<"+u(e)+g.map.call(e.attributes,function(e){return" "+e.nodeName+'="'+y(e.value).replace('"',"&quot;")+'"'}).join("")+">"}function s(e){l+="</"+u(e)+">"}function a(e){("start"===e.event?r:s)(e.node)}for(var o=0,l="",c=[];e.length||t.length;){var d=n();if(l+=y(i.substring(o,d[0].offset)),o=d[0].offset,d===e){for(c.reverse().forEach(s);a(d.splice(0,1)[0]),(d=n())===e&&d.length&&d[0].offset===o;);c.reverse().forEach(r)}else"start"===d[0].event?c.push(d[0].node):c.pop(),a(d.splice(0,1)[0])}return l+y(i.substr(o))}function w(a){function o(e){return e&&e.source||e}function l(e,t){return new RegExp(o(e),"m"+(a.cI?"i":"")+(t?"g":""))}!function t(i,e){var n,r,s;i.compiled||(i.compiled=!0,i.k=i.k||i.bK,i.k&&(n={},r=function(i,e){a.cI&&(e=e.toLowerCase()),e.split(" ").forEach(function(e){var t=e.split("|");n[t[0]]=[i,t[1]?Number(t[1]):1]})},"string"==typeof i.k?r("keyword",i.k):d(i.k).forEach(function(e){r(e,i.k[e])}),i.k=n),i.lR=l(i.l||/\w+/,!0),e&&(i.bK&&(i.b="\\b("+i.bK.split(" ").join("|")+")\\b"),i.b||(i.b=/\B|\b/),i.bR=l(i.b),i.endSameAsBegin&&(i.e=i.b),i.e||i.eW||(i.e=/\B|\b/),i.e&&(i.eR=l(i.e)),i.tE=o(i.e)||"",i.eW&&e.tE&&(i.tE+=(i.e?"|":"")+e.tE)),i.i&&(i.iR=l(i.i)),null==i.r&&(i.r=1),i.c||(i.c=[]),i.c=Array.prototype.concat.apply([],i.c.map(function(e){return(t="self"===e?i:e).v&&!t.cached_variants&&(t.cached_variants=t.v.map(function(e){return c(t,{v:null},e)})),t.cached_variants||t.eW&&[c(t)]||[t];var t})),i.c.forEach(function(e){t(e,i)}),i.starts&&t(i.starts,e),s=i.c.map(function(e){return e.bK?"\\.?("+e.b+")\\.?":e.b}).concat([i.tE,i.i]).map(o).filter(Boolean),i.t=s.length?l(s.join("|"),!0):{exec:function(){return null}})}(a)}function E(e,t,o,i){function l(e,t,i,n){var r='<span class="'+(n?"":k.classPrefix);return(r+=e+'">')+t+(i?"":S)}function c(){p+=(null!=h.sL?function(){var e="string"==typeof h.sL;if(e&&!T[h.sL])return y(f);var t=e?E(h.sL,f,!0,r[h.sL]):x(f,h.sL.length?h.sL:void 0);return 0<h.r&&(m+=t.r),e&&(r[h.sL]=t.top),l(t.language,t.value,!1,!0)}:function(){var e,t,i,n,r,s,a;if(!h.k)return y(f);for(n="",t=0,h.lR.lastIndex=0,i=h.lR.exec(f);i;)n+=y(f.substring(t,i.index)),r=h,s=i,a=u.cI?s[0].toLowerCase():s[0],(e=r.k.hasOwnProperty(a)&&r.k[a])?(m+=e[1],n+=l(e[0],y(i[0]))):n+=y(i[0]),t=h.lR.lastIndex,i=h.lR.exec(f);return n+y(f.substr(t))})(),f=""}function d(e){p+=e.cN?l(e.cN,"",!0):"",h=Object.create(e,{parent:{value:h}})}function n(e,t){if(f+=e,null==t)return c(),0;var i=function(e,t){for(var i,n=0,r=t.c.length;n<r;n++)if(b(t.c[n].bR,e))return t.c[n].endSameAsBegin&&(t.c[n].eR=(i=t.c[n].bR.exec(e)[0],new RegExp(i.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&"),"m"))),t.c[n]}(t,h);if(i)return i.skip?f+=t:(i.eB&&(f+=t),c(),i.rB||i.eB||(f=t)),d(i),i.rB?0:t.length;var n,r,s=function e(t,i){if(b(t.eR,i)){for(;t.endsParent&&t.parent;)t=t.parent;return t}return t.eW?e(t.parent,i):void 0}(h,t);if(s){var a=h;for(a.skip?f+=t:(a.rE||a.eE||(f+=t),c(),a.eE&&(f=t));h.cN&&(p+=S),h.skip||h.sL||(m+=h.r),(h=h.parent)!==s.parent;);return s.starts&&(s.endSameAsBegin&&(s.starts.eR=s.eR),d(s.starts)),a.rE?0:t.length}if(n=t,r=h,!o&&b(r.iR,n))throw new Error('Illegal lexeme "'+t+'" for mode "'+(h.cN||"<unnamed>")+'"');return f+=t,t.length||1}var u=_(e);if(!u)throw new Error('Unknown language: "'+e+'"');w(u);for(var h=i||u,r={},p="",s=h;s!==u;s=s.parent)s.cN&&(p=l(s.cN,"",!0)+p);var f="",m=0;try{for(var a,g,v=0;h.t.lastIndex=v,a=h.t.exec(t);)g=n(t.substring(v,a.index),a[0]),v=a.index+g;for(n(t.substr(v)),s=h;s.parent;s=s.parent)s.cN&&(p+=S);return{r:m,value:p,language:e,top:h}}catch(e){if(e.message&&-1!==e.message.indexOf("Illegal"))return{r:0,value:y(t)};throw e}}function x(i,e){e=e||k.languages||d(T);var n={r:0,value:y(i)},r=n;return e.filter(_).filter(s).forEach(function(e){var t=E(e,i,!1);t.language=e,t.r>r.r&&(r=t),t.r>n.r&&(r=n,n=t)}),r.language&&(n.second_best=r),n}function m(e){return k.tabReplace||k.useBR?e.replace(a,function(e,t){return k.useBR&&"\n"===e?"<br>":k.tabReplace?t.replace(/\t/g,k.tabReplace):""}):e}function t(e){var t,i,n,r,s,a,o,l,c,d,u=function(e){var t,i,n,r,s=e.className+" ";if(s+=e.parentNode?e.parentNode.className:"",i=C.exec(s))return _(i[1])?i[1]:"no-highlight";for(t=0,n=(s=s.split(/\s+/)).length;t<n;t++)if(h(r=s[t])||_(r))return r}(e);h(u)||(k.useBR?(t=document.createElementNS("http://www.w3.org/1999/xhtml","div")).innerHTML=e.innerHTML.replace(/\n/g,"").replace(/<br[ \/]*>/g,"\n"):t=e,s=t.textContent,n=u?E(u,s,!0):x(s),(i=p(t)).length&&((r=document.createElementNS("http://www.w3.org/1999/xhtml","div")).innerHTML=n.value,n.value=f(i,p(r),s)),n.value=m(n.value),e.innerHTML=n.value,e.className=(a=e.className,o=u,l=n.language,c=o?v[o]:l,d=[a.trim()],a.match(/\bhljs\b/)||d.push("hljs"),-1===a.indexOf(c)&&d.push(c),d.join(" ").trim()),e.result={language:n.language,re:n.r},n.second_best&&(e.second_best={language:n.second_best.language,re:n.second_best.r}))}function i(){var e;i.called||(i.called=!0,e=document.querySelectorAll("pre code"),g.forEach.call(e,t))}function _(e){return e=(e||"").toLowerCase(),T[e]||T[v[e]]}function s(e){var t=_(e);return t&&!t.disableAutodetect}var g=[],d=Object.keys,T={},v={},n=/^(no-?highlight|plain|text)$/i,C=/\blang(?:uage)?-([\w-]+)\b/i,a=/((^(<[^>]+>|\t|)+|(?:\n)))/gm,S="</span>",k={classPrefix:"hljs-",tabReplace:null,useBR:!1,languages:void 0};return r.highlight=E,r.highlightAuto=x,r.fixMarkup=m,r.highlightBlock=t,r.configure=function(e){k=c(k,e)},r.initHighlighting=i,r.initHighlightingOnLoad=function(){addEventListener("DOMContentLoaded",i,!1),addEventListener("load",i,!1)},r.registerLanguage=function(t,e){var i=T[t]=e(r);i.aliases&&i.aliases.forEach(function(e){v[e]=t})},r.listLanguages=function(){return d(T)},r.getLanguage=_,r.autoDetection=s,r.inherit=c,r.IR="[a-zA-Z]\\w*",r.UIR="[a-zA-Z_]\\w*",r.NR="\\b\\d+(\\.\\d+)?",r.CNR="(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)",r.BNR="\\b(0b[01]+)",r.RSR="!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~",r.BE={b:"\\\\[\\s\\S]",r:0},r.ASM={cN:"string",b:"'",e:"'",i:"\\n",c:[r.BE]},r.QSM={cN:"string",b:'"',e:'"',i:"\\n",c:[r.BE]},r.PWM={b:/\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\b/},r.C=function(e,t,i){var n=r.inherit({cN:"comment",b:e,e:t,c:[]},i||{});return n.c.push(r.PWM),n.c.push({cN:"doctag",b:"(?:TODO|FIXME|NOTE|BUG|XXX):",r:0}),n},r.CLCM=r.C("//","$"),r.CBCM=r.C("/\\*","\\*/"),r.HCM=r.C("#","$"),r.NM={cN:"number",b:r.NR,r:0},r.CNM={cN:"number",b:r.CNR,r:0},r.BNM={cN:"number",b:r.BNR,r:0},r.CSSNM={cN:"number",b:r.NR+"(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?",r:0},r.RM={cN:"regexp",b:/\//,e:/\/[gimuy]*/,i:/\n/,c:[r.BE,{b:/\[/,e:/\]/,r:0,c:[r.BE]}]},r.TM={cN:"title",b:r.IR,r:0},r.UTM={cN:"title",b:r.UIR,r:0},r.METHOD_GUARD={b:"\\.\\s*"+r.UIR,r:0},r}),hljs.registerLanguage("css",function(e){var t={b:/[A-Z\_\.\-]+\s*:/,rB:!0,e:";",eW:!0,c:[{cN:"attribute",b:/\S/,e:":",eE:!0,starts:{eW:!0,eE:!0,c:[{b:/[\w-]+\(/,rB:!0,c:[{cN:"built_in",b:/[\w-]+/},{b:/\(/,e:/\)/,c:[e.ASM,e.QSM]}]},e.CSSNM,e.QSM,e.ASM,e.CBCM,{cN:"number",b:"#[0-9A-Fa-f]+"},{cN:"meta",b:"!important"}]}}]};return{cI:!0,i:/[=\/|'\$]/,c:[e.CBCM,{cN:"selector-id",b:/#[A-Za-z0-9_-]+/},{cN:"selector-class",b:/\.[A-Za-z0-9_-]+/},{cN:"selector-attr",b:/\[/,e:/\]/,i:"$"},{cN:"selector-pseudo",b:/:(:)?[a-zA-Z0-9\_\-\+\(\)"'.]+/},{b:"@(font-face|page)",l:"[a-z-]+",k:"font-face page"},{b:"@",e:"[{;]",i:/:/,c:[{cN:"keyword",b:/\w+/},{b:/\s/,eW:!0,eE:!0,r:0,c:[e.ASM,e.QSM,e.CSSNM]}]},{cN:"selector-tag",b:"[a-zA-Z-][a-zA-Z0-9_-]*",r:0},{b:"{",e:"}",i:/\S/,c:[e.CBCM,t]}]}}),hljs.registerLanguage("xml",function(e){var t={eW:!0,i:/</,r:0,c:[{cN:"attr",b:"[A-Za-z0-9\\._:-]+",r:0},{b:/=\s*/,r:0,c:[{cN:"string",endsParent:!0,v:[{b:/"/,e:/"/},{b:/'/,e:/'/},{b:/[^\s"'=<>`]+/}]}]}]};return{aliases:["html","xhtml","rss","atom","xjb","xsd","xsl","plist"],cI:!0,c:[{cN:"meta",b:"<!DOCTYPE",e:">",r:10,c:[{b:"\\[",e:"\\]"}]},e.C("\x3c!--","--\x3e",{r:10}),{b:"<\\!\\[CDATA\\[",e:"\\]\\]>",r:10},{cN:"meta",b:/<\?xml/,e:/\?>/,r:10},{b:/<\?(php)?/,e:/\?>/,sL:"php",c:[{b:"/\\*",e:"\\*/",skip:!0},{b:'b"',e:'"',skip:!0},{b:"b'",e:"'",skip:!0},e.inherit(e.ASM,{i:null,cN:null,c:null,skip:!0}),e.inherit(e.QSM,{i:null,cN:null,c:null,skip:!0})]},{cN:"tag",b:"<style(?=\\s|>|$)",e:">",k:{name:"style"},c:[t],starts:{e:"</style>",rE:!0,sL:["css","xml"]}},{cN:"tag",b:"<script(?=\\s|>|$)",e:">",k:{name:"script"},c:[t],starts:{e:"<\/script>",rE:!0,sL:["actionscript","javascript","handlebars","xml"]}},{cN:"tag",b:"</?",e:"/?>",c:[{cN:"name",b:/[^\/><\s]+/,r:0},t]}]}}),hljs.registerLanguage("markdown",function(e){return{aliases:["md","mkdown","mkd"],c:[{cN:"section",v:[{b:"^#{1,6}",e:"$"},{b:"^.+?\\n[=-]{2,}$"}]},{b:"<",e:">",sL:"xml",r:0},{cN:"bullet",b:"^([*+-]|(\\d+\\.))\\s+"},{cN:"strong",b:"[*_]{2}.+?[*_]{2}"},{cN:"emphasis",v:[{b:"\\*.+?\\*"},{b:"_.+?_",r:0}]},{cN:"quote",b:"^>\\s+",e:"$"},{cN:"code",v:[{b:"^```w*s*$",e:"^```s*$"},{b:"`.+?`"},{b:"^( {4}|\t)",e:"$",r:0}]},{b:"^[-\\*]{3,}",e:"$"},{b:"\\[.+?\\][\\(\\[].*?[\\)\\]]",rB:!0,c:[{cN:"string",b:"\\[",e:"\\]",eB:!0,rE:!0,r:0},{cN:"link",b:"\\]\\(",e:"\\)",eB:!0,eE:!0},{cN:"symbol",b:"\\]\\[",e:"\\]",eB:!0,eE:!0}],r:10},{b:/^\[[^\n]+\]:/,rB:!0,c:[{cN:"symbol",b:/\[/,e:/\]/,eB:!0,eE:!0},{cN:"link",b:/:\s*/,e:/$/,eB:!0}]}]}}),hljs.registerLanguage("javascript",function(e){var t="[A-Za-z$_][0-9A-Za-z$_]*",i={keyword:"in of if for while finally var new function do return void else break catch instanceof with throw case default try this switch continue typeof delete let yield const export super debugger as async await static import from as",literal:"true false null undefined NaN Infinity",built_in:"eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent encodeURI encodeURIComponent escape unescape Object Function Boolean Error EvalError InternalError RangeError ReferenceError StopIteration SyntaxError TypeError URIError Number Math Date String RegExp Array Float32Array Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect Promise"},n={cN:"number",v:[{b:"\\b(0[bB][01]+)"},{b:"\\b(0[oO][0-7]+)"},{b:e.CNR}],r:0},r={cN:"subst",b:"\\$\\{",e:"\\}",k:i,c:[]},s={cN:"string",b:"`",e:"`",c:[e.BE,r]};r.c=[e.ASM,e.QSM,s,n,e.RM];var a=r.c.concat([e.CBCM,e.CLCM]);return{aliases:["js","jsx"],k:i,c:[{cN:"meta",r:10,b:/^\s*['"]use (strict|asm)['"]/},{cN:"meta",b:/^#!/,e:/$/},e.ASM,e.QSM,s,e.CLCM,e.CBCM,n,{b:/[{,]\s*/,r:0,c:[{b:t+"\\s*:",rB:!0,r:0,c:[{cN:"attr",b:t,r:0}]}]},{b:"("+e.RSR+"|\\b(case|return|throw)\\b)\\s*",k:"return throw case",c:[e.CLCM,e.CBCM,e.RM,{cN:"function",b:"(\\(.*?\\)|"+t+")\\s*=>",rB:!0,e:"\\s*=>",c:[{cN:"params",v:[{b:t},{b:/\(\s*\)/},{b:/\(/,e:/\)/,eB:!0,eE:!0,k:i,c:a}]}]},{b:/</,e:/(\/\w+|\w+\/)>/,sL:"xml",c:[{b:/<\w+\s*\/>/,skip:!0},{b:/<\w+/,e:/(\/\w+|\w+\/)>/,skip:!0,c:[{b:/<\w+\s*\/>/,skip:!0},"self"]}]}],r:0},{cN:"function",bK:"function",e:/\{/,eE:!0,c:[e.inherit(e.TM,{b:t}),{cN:"params",b:/\(/,e:/\)/,eB:!0,eE:!0,c:a}],i:/\[|%/},{b:/\$[(.]/},e.METHOD_GUARD,{cN:"class",bK:"class",e:/[{;=]/,eE:!0,i:/[:"\[\]]/,c:[{bK:"extends"},e.UTM]},{bK:"constructor get set",e:/\{/,eE:!0}],i:/#(?!!)/}}),hljs.registerLanguage("php",function(e){var t={b:"\\$+[a-zA-Z_-Ã¿][a-zA-Z0-9_-Ã¿]*"},i={cN:"meta",b:/<\?(php)?|\?>/},n={cN:"string",c:[e.BE,i],v:[{b:'b"',e:'"'},{b:"b'",e:"'"},e.inherit(e.ASM,{i:null}),e.inherit(e.QSM,{i:null})]},r={v:[e.BNM,e.CNM]};return{aliases:["php","php3","php4","php5","php6","php7"],cI:!0,k:"and include_once list abstract global private echo interface as static endswitch array null if endwhile or const for endforeach self var while isset public protected exit foreach throw elseif include __FILE__ empty require_once do xor return parent clone use __CLASS__ __LINE__ else break print eval new catch __METHOD__ case exception default die require __FUNCTION__ enddeclare final try switch continue endfor endif declare unset true false trait goto instanceof insteadof __DIR__ __NAMESPACE__ yield finally",c:[e.HCM,e.C("//","$",{c:[i]}),e.C("/\\*","\\*/",{c:[{cN:"doctag",b:"@[A-Za-z]+"}]}),e.C("__halt_compiler.+?;",!1,{eW:!0,k:"__halt_compiler",l:e.UIR}),{cN:"string",b:/<<<['"]?\w+['"]?$/,e:/^\w+;?$/,c:[e.BE,{cN:"subst",v:[{b:/\$\w+/},{b:/\{\$/,e:/\}/}]}]},i,{cN:"keyword",b:/\$this\b/},t,{b:/(::|->)+[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*/},{cN:"function",bK:"function",e:/[;{]/,eE:!0,i:"\\$|\\[|%",c:[e.UTM,{cN:"params",b:"\\(",e:"\\)",c:["self",t,e.CBCM,n,r]}]},{cN:"class",bK:"class interface",e:"{",eE:!0,i:/[:\(\$"]/,c:[{bK:"extends implements"},e.UTM]},{bK:"namespace",e:";",i:/[\.']/,c:[e.UTM]},{bK:"use",e:";",c:[e.UTM]},{b:"=>"},n,r]}}),function(e,t){"function"==typeof define&&define.amd?define([],t):"object"===("undefined"==typeof exports?"undefined":_typeof(exports))?module.exports=t():e.InstagramFeed=t()}(this,function(){var t={host:"https://www.instagram.com/",username:"",tag:"",container:"",display_profile:!0,display_biography:!0,display_gallery:!0,display_igtv:!1,get_data:!1,callback:null,styling:!0,items:8,items_per_row:4,margin:.5,image_size:640},p={150:0,240:1,320:2,480:3,640:4},f={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;","`":"&#x60;","=":"&#x3D;"};return function(e){this.options=Object.assign({},t),this.options=Object.assign(this.options,e),this.is_tag=""==this.options.username,this.valid=!0,""==this.options.username&&""==this.options.tag?(console.error("InstagramFeed: Error, no username or tag defined."),this.valid=!1):this.options.get_data||""!=this.options.container?this.options.get_data&&"function"!=typeof this.options.callback&&(console.error("InstagramFeed: Error, invalid or undefined callback for get_data"),this.valid=!1):(console.error("InstagramFeed: Error, no container found."),this.valid=!1),this.get=function(t){var e=this.is_tag?this.options.host+"explore/tags/"+this.options.tag+"/":this.options.host+this.options.username+"/",i=new XMLHttpRequest,n=this;i.onload=function(){if(4===i.readyState)if(200===i.status){var e=i.responseText.split("window._sharedData = ")[1].split("<\/script>")[0];if(void 0===(e=(e=JSON.parse(e.substr(0,e.length-1))).entry_data.ProfilePage||e.entry_data.TagPage))return void console.error("Instagram Feed: It looks like YOUR network has been temporary banned because of too many requests. See https://github.com/jsanahuja/jquery.instagramFeed/issues/25");e=e[0].graphql.user||e[0].graphql.hashtag,t(e,n)}else console.error("InstagramFeed: Request error. Response: "+i.statusText)},i.open("GET",e,!0),i.send()},this.parse_caption=function(e,t){return void 0!==e.node.edge_media_to_caption.edges[0]&&void 0!==e.node.edge_media_to_caption.edges[0].node&&void 0!==e.node.edge_media_to_caption.edges[0].node.text&&null!==e.node.edge_media_to_caption.edges[0].node.text?e.node.edge_media_to_caption.edges[0].node.text:void 0!==e.node.title&&null!==e.node.title&&0!=e.node.title.length?e.node.title:void 0!==e.node.accessibility_caption&&null!==e.node.accessibility_caption&&0!=e.node.accessibility_caption.length?e.node.accessibility_caption:(this.is_tag?t.name:t.username)+" image "},this.display=function(e){var t,i;i=this.options.styling?(t=(100-2*this.options.margin*this.options.items_per_row)/this.options.items_per_row,{profile_container:" style='text-align:center;'",profile_image:" style='border-radius:10em;width:15%;max-width:125px;min-width:50px;'",profile_name:" style='font-size:1.2em;'",profile_biography:" style='font-size:1em;'",gallery_image:" style='margin:"+this.options.margin+"% "+this.options.margin+"%;width:"+t+"%;float:left;'"}):{profile_container:"",profile_image:"",profile_name:"",profile_biography:"",gallery_image:""};var n="";if(this.options.display_profile&&(n+="<div class='instagram_profile'"+i.profile_container+">",n+="<img class='instagram_profile_image' src='"+e.profile_pic_url+"' alt='"+(this.is_tag?e.name+" tag pic":e.username+" profile pic")+" profile pic'"+i.profile_image+" />",n+=this.is_tag?"<p class='instagram_tag'"+i.profile_name+"><a href='https://www.instagram.com/explore/tags/"+this.options.tag+"' rel='noopener' target='_blank'>#"+this.options.tag+"</a></p>":"<p class='instagram_username'"+i.profile_name+">@"+e.full_name+" (<a href='https://www.instagram.com/"+this.options.username+"' rel='noopener' target='_blank'>@"+this.options.username+"</a>)</p>",!this.is_tag&&this.options.display_biography&&(n+="<p class='instagram_biography'"+i.profile_biography+">"+e.biography+"</p>"),n+="</div>"),this.options.display_gallery){var r=void 0===p[this.options.image_size]?p[640]:p[this.options.image_size];if(void 0!==e.is_private&&!0===e.is_private)n+="<p class='instagram_private'><strong>This profile is private</strong></p>";else{var s=(e.edge_owner_to_timeline_media||e.edge_hashtag_to_media).edges,a=s.length>this.options.items?this.options.items:s.length;n+="<div class='instagram_gallery'>";for(var o=0;o<a;o++){var l,c,d="https://www.instagram.com/p/"+s[o].node.shortcode,u=this.parse_caption(s[o],e).replace(/[&<>"'`=\/]/g,function(e){return f[e]});switch(s[o].node.__typename){case"GraphSidecar":c="sidecar",l=s[o].node.thumbnail_resources[r].src;break;case"GraphVideo":c="video",l=s[o].node.thumbnail_src;break;default:c="image",l=s[o].node.thumbnail_resources[r].src}this.is_tag&&(e.username=""),n+="<a href='"+d+"' class='instagram-"+c+"' title='"+u+"' rel='noopener' target='_blank'>",n+="<img src='"+l+"' alt='"+u+"'"+i.gallery_image+" />",n+="</a>"}n+="</div>"}}if(this.options.display_igtv&&void 0!==e.edge_felix_video_timeline){var h=e.edge_felix_video_timeline.edges,a=h.length>this.options.items?this.options.items:h.length;if(0<h.length){n+="<div class='instagram_igtv'>";for(o=0;o<a;o++){n+="<a href='"+(d="https://www.instagram.com/p/"+h[o].node.shortcode)+"' rel='noopener' title='"+(u=this.parse_caption(h[o],e))+"' target='_blank'>",n+="<img src='"+h[o].node.thumbnail_src+"' alt='"+u+"'"+i.gallery_image+" />",n+="</a>"}n+="</div>"}}this.options.container.innerHTML=n},this.run=function(){this.get(function(e,t){t.options.get_data?t.options.callback(e):t.display(e)})},this.valid&&this.run()}}),function(){var e=document.getElementsByClassName("js-subscribe-form");[].forEach.call(e,function(a){var o;0<a.getElementsByClassName("js-subscribe-response").length?o=a.getElementsByClassName("js-subscribe-response")[0]:((o=document.createElement("DIV")).classList.add("subscribe__response"),a.appendChild(o)),a.addEventListener("submit",function(e){e.preventDefault(),a.classList.remove("subscribe-form-is-invalid"),a.classList.remove("subscribe-form-is-valid");var t=this.action.replace("/post?","/post-json?"),i="",n=a.getElementsByTagName("input");[].forEach.call(n,function(e){i+="&"+e.name+"="+encodeURIComponent(e.value)});var r=document.createElement("script");r.src=t+i,document.body.appendChild(r);var s="callback";window[s]=function(e){delete window[s],document.body.removeChild(r),o.innerHTML=e.msg.replace(/^\d*\s[-ââ]\s/g,""),"error"===e.result?a.classList.add("subscribe-form-is-invalid"):a.classList.add("subscribe-form-is-valid")}})})}(),function(t,i){"function"==typeof define&&define.amd?define("jquery-bridget/jquery-bridget",["jquery"],function(e){return i(t,e)}):"object"==typeof module&&module.exports?module.exports=i(t,require("jquery")):t.jQueryBridget=i(t,t.jQuery)}(window,function(e,t){"use strict";function i(c,r,d){(d=d||t||e.jQuery)&&(r.prototype.option||(r.prototype.option=function(e){d.isPlainObject(e)&&(this.options=d.extend(!0,this.options,e))}),d.fn[c]=function(e){if("string"!=typeof e)return n=e,this.each(function(e,t){var i=d.data(t,c);i?(i.option(n),i._init()):(i=new r(t,n),d.data(t,c,i))}),this;var t,s,a,o,l,n,i=u.call(arguments,1);return a=i,l="$()."+c+'("'+(s=e)+'")',(t=this).each(function(e,t){var i,n,r=d.data(t,c);r?(i=r[s])&&"_"!=s.charAt(0)?(n=i.apply(r,a),o=void 0===o?n:o):h(l+" is not a valid method"):h(c+" not initialized. Cannot call methods, i.e. "+l)}),void 0!==o?o:t},n(d))}function n(e){!e||e&&e.bridget||(e.bridget=i)}var u=Array.prototype.slice,r=e.console,h=void 0===r?function(){}:function(e){r.error(e)};return n(t||e.jQuery),i}),function(e,t){"function"==typeof define&&define.amd?define("ev-emitter/ev-emitter",t):"object"==typeof module&&module.exports?module.exports=t():e.EvEmitter=t()}("undefined"!=typeof window?window:this,function(){function e(){}var t=e.prototype;return t.on=function(e,t){if(e&&t){var i=this._events=this._events||{},n=i[e]=i[e]||[];return-1==n.indexOf(t)&&n.push(t),this}},t.once=function(e,t){if(e&&t){this.on(e,t);var i=this._onceEvents=this._onceEvents||{};return(i[e]=i[e]||{})[t]=!0,this}},t.off=function(e,t){var i=this._events&&this._events[e];if(i&&i.length){var n=i.indexOf(t);return-1!=n&&i.splice(n,1),this}},t.emitEvent=function(e,t){var i=this._events&&this._events[e];if(i&&i.length){i=i.slice(0),t=t||[];for(var n=this._onceEvents&&this._onceEvents[e],r=0;r<i.length;r++){var s=i[r];n&&n[s]&&(this.off(e,s),delete n[s]),s.apply(this,t)}return this}},t.allOff=function(){delete this._events,delete this._onceEvents},e}),function(e,t){"use strict";"function"==typeof define&&define.amd?define("get-size/get-size",[],t):"object"==typeof module&&module.exports?module.exports=t():e.getSize=t()}(window,function(){"use strict";function w(e){var t=parseFloat(e);return-1==e.indexOf("%")&&!isNaN(t)&&t}function E(e){var t=getComputedStyle(e);return t||i("Style returned "+t+". Are you running this code in a hidden iframe on Firefox? See http://bit.ly/getsizebug1"),t}function x(e){if(S||(S=!0,(v=document.createElement("div")).style.width="200px",v.style.padding="1px 2px 3px 4px",v.style.borderStyle="solid",v.style.borderWidth="1px 2px 3px 4px",v.style.boxSizing="border-box",(y=document.body||document.documentElement).appendChild(v),b=E(v),x.isBoxSizeOuter=_=200==w(b.width),y.removeChild(v)),"string"==typeof e&&(e=document.querySelector(e)),e&&"object"==typeof e&&e.nodeType){var t=E(e);if("none"==t.display)return function(){for(var e={width:0,height:0,innerWidth:0,innerHeight:0,outerWidth:0,outerHeight:0},t=0;t<C;t++){e[T[t]]=0}return e}();var i={};i.width=e.offsetWidth,i.height=e.offsetHeight;for(var n=i.isBorderBox="border-box"==t.boxSizing,r=0;r<C;r++){var s=T[r],a=t[s],o=parseFloat(a);i[s]=isNaN(o)?0:o}var l=i.paddingLeft+i.paddingRight,c=i.paddingTop+i.paddingBottom,d=i.marginLeft+i.marginRight,u=i.marginTop+i.marginBottom,h=i.borderLeftWidth+i.borderRightWidth,p=i.borderTopWidth+i.borderBottomWidth,f=n&&_,m=w(t.width);!1!==m&&(i.width=m+(f?0:l+h));var g=w(t.height);return!1!==g&&(i.height=g+(f?0:c+p)),i.innerWidth=i.width-(l+h),i.innerHeight=i.height-(c+p),i.outerWidth=i.width+d,i.outerHeight=i.height+u,i}var v,y,b}var _,i="undefined"==typeof console?function(){}:function(e){console.error(e)},T=["paddingLeft","paddingRight","paddingTop","paddingBottom","marginLeft","marginRight","marginTop","marginBottom","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth"],C=T.length,S=!1;return x}),function(e,t){"use strict";"function"==typeof define&&define.amd?define("desandro-matches-selector/matches-selector",t):"object"==typeof module&&module.exports?module.exports=t():e.matchesSelector=t()}(window,function(){"use strict";var i=function(){var e=window.Element.prototype;if(e.matches)return"matches";if(e.matchesSelector)return"matchesSelector";for(var t=["webkit","moz","ms","o"],i=0;i<t.length;i++){var n=t[i]+"MatchesSelector";if(e[n])return n}}();return function(e,t){return e[i](t)}}),function(t,i){"function"==typeof define&&define.amd?define("fizzy-ui-utils/utils",["desandro-matches-selector/matches-selector"],function(e){return i(t,e)}):"object"==typeof module&&module.exports?module.exports=i(t,require("desandro-matches-selector")):t.fizzyUIUtils=i(t,t.matchesSelector)}(window,function(c,s){var d={extend:function(e,t){for(var i in t)e[i]=t[i];return e},modulo:function(e,t){return(e%t+t)%t},makeArray:function(e){var t=[];if(Array.isArray(e))t=e;else if(e&&"object"==typeof e&&"number"==typeof e.length)for(var i=0;i<e.length;i++)t.push(e[i]);else t.push(e);return t},removeFrom:function(e,t){var i=e.indexOf(t);-1!=i&&e.splice(i,1)},getParent:function(e,t){for(;e.parentNode&&e!=document.body;)if(e=e.parentNode,s(e,t))return e},getQueryElement:function(e){return"string"==typeof e?document.querySelector(e):e},handleEvent:function(e){var t="on"+e.type;this[t]&&this[t](e)},filterFindElements:function(e,n){e=d.makeArray(e);var r=[];return e.forEach(function(e){if(e instanceof HTMLElement){if(!n)return void r.push(e);s(e,n)&&r.push(e);for(var t=e.querySelectorAll(n),i=0;i<t.length;i++)r.push(t[i])}}),r},debounceMethod:function(e,t,n){var r=e.prototype[t],s=t+"Timeout";e.prototype[t]=function(){var e=this[s];e&&clearTimeout(e);var t=arguments,i=this;this[s]=setTimeout(function(){r.apply(i,t),delete i[s]},n||100)}},docReady:function(e){var t=document.readyState;"complete"==t||"interactive"==t?setTimeout(e):document.addEventListener("DOMContentLoaded",e)},toDashed:function(e){return e.replace(/(.)([A-Z])/g,function(e,t,i){return t+"-"+i}).toLowerCase()}},u=c.console;return d.htmlInit=function(o,l){d.docReady(function(){var e=d.toDashed(l),r="data-"+e,t=document.querySelectorAll("["+r+"]"),i=document.querySelectorAll(".js-"+e),n=d.makeArray(t).concat(d.makeArray(i)),s=r+"-options",a=c.jQuery;n.forEach(function(t){var e,i=t.getAttribute(r)||t.getAttribute(s);try{e=i&&JSON.parse(i)}catch(e){return void(u&&u.error("Error parsing "+r+" on "+t.className+": "+e))}var n=new o(t,e);a&&a.data(t,l,n)})})},d}),function(e,t){"function"==typeof define&&define.amd?define("outlayer/item",["ev-emitter/ev-emitter","get-size/get-size"],t):"object"==typeof module&&module.exports?module.exports=t(require("ev-emitter"),require("get-size")):(e.Outlayer={},e.Outlayer.Item=t(e.EvEmitter,e.getSize))}(window,function(e,t){"use strict";function i(e,t){e&&(this.element=e,this.layout=t,this.position={x:0,y:0},this._create())}var n=document.documentElement.style,r="string"==typeof n.transition?"transition":"WebkitTransition",s="string"==typeof n.transform?"transform":"WebkitTransform",a={WebkitTransition:"webkitTransitionEnd",transition:"transitionend"}[r],o={transform:s,transition:r,transitionDuration:r+"Duration",transitionProperty:r+"Property",transitionDelay:r+"Delay"},l=i.prototype=Object.create(e.prototype);l.constructor=i,l._create=function(){this._transn={ingProperties:{},clean:{},onEnd:{}},this.css({position:"absolute"})},l.handleEvent=function(e){var t="on"+e.type;this[t]&&this[t](e)},l.getSize=function(){this.size=t(this.element)},l.css=function(e){var t=this.element.style;for(var i in e){t[o[i]||i]=e[i]}},l.getPosition=function(){var e=getComputedStyle(this.element),t=this.layout._getOption("originLeft"),i=this.layout._getOption("originTop"),n=e[t?"left":"right"],r=e[i?"top":"bottom"],s=this.layout.size,a=-1!=n.indexOf("%")?parseFloat(n)/100*s.width:parseInt(n,10),o=-1!=r.indexOf("%")?parseFloat(r)/100*s.height:parseInt(r,10),a=isNaN(a)?0:a,o=isNaN(o)?0:o;a-=t?s.paddingLeft:s.paddingRight,o-=i?s.paddingTop:s.paddingBottom,this.position.x=a,this.position.y=o},l.layoutPosition=function(){var e=this.layout.size,t={},i=this.layout._getOption("originLeft"),n=this.layout._getOption("originTop"),r=i?"paddingLeft":"paddingRight",s=i?"left":"right",a=i?"right":"left",o=this.position.x+e[r];t[s]=this.getXValue(o),t[a]="";var l=n?"paddingTop":"paddingBottom",c=n?"top":"bottom",d=n?"bottom":"top",u=this.position.y+e[l];t[c]=this.getYValue(u),t[d]="",this.css(t),this.emitEvent("layout",[this])},l.getXValue=function(e){var t=this.layout._getOption("horizontal");return this.layout.options.percentPosition&&!t?e/this.layout.size.width*100+"%":e+"px"},l.getYValue=function(e){var t=this.layout._getOption("horizontal");return this.layout.options.percentPosition&&t?e/this.layout.size.height*100+"%":e+"px"},l._transitionTo=function(e,t){this.getPosition();var i,n,r,s=this.position.x,a=this.position.y,o=parseInt(e,10),l=parseInt(t,10),c=o===this.position.x&&l===this.position.y;this.setPosition(e,t),!c||this.isTransitioning?(i=e-s,n=t-a,(r={}).transform=this.getTranslate(i,n),this.transition({to:r,onTransitionEnd:{transform:this.layoutPosition},isCleaning:!0})):this.layoutPosition()},l.getTranslate=function(e,t){return"translate3d("+(e=this.layout._getOption("originLeft")?e:-e)+"px, "+(t=this.layout._getOption("originTop")?t:-t)+"px, 0)"},l.goTo=function(e,t){this.setPosition(e,t),this.layoutPosition()},l.moveTo=l._transitionTo,l.setPosition=function(e,t){this.position.x=parseInt(e,10),this.position.y=parseInt(t,10)},l._nonTransition=function(e){for(var t in this.css(e.to),e.isCleaning&&this._removeStyles(e.to),e.onTransitionEnd)e.onTransitionEnd[t].call(this)},l.transition=function(e){if(parseFloat(this.layout.options.transitionDuration)){var t=this._transn;for(var i in e.onTransitionEnd)t.onEnd[i]=e.onTransitionEnd[i];for(i in e.to)t.ingProperties[i]=!0,e.isCleaning&&(t.clean[i]=!0);e.from&&(this.css(e.from),this.element.offsetHeight,0),this.enableTransition(e.to),this.css(e.to),this.isTransitioning=!0}else this._nonTransition(e)};var c="opacity,"+s.replace(/([A-Z])/g,function(e){return"-"+e.toLowerCase()});l.enableTransition=function(){var e;this.isTransitioning||(e="number"==typeof(e=this.layout.options.transitionDuration)?e+"ms":e,this.css({transitionProperty:c,transitionDuration:e,transitionDelay:this.staggerDelay||0}),this.element.addEventListener(a,this,!1))},l.onwebkitTransitionEnd=function(e){this.ontransitionend(e)},l.onotransitionend=function(e){this.ontransitionend(e)};var d={"-webkit-transform":"transform"};l.ontransitionend=function(e){var t,i;e.target===this.element&&(t=this._transn,i=d[e.propertyName]||e.propertyName,delete t.ingProperties[i],function(e){for(var t in e)return;return 1}(t.ingProperties)&&this.disableTransition(),i in t.clean&&(this.element.style[e.propertyName]="",delete t.clean[i]),i in t.onEnd&&(t.onEnd[i].call(this),delete t.onEnd[i]),this.emitEvent("transitionEnd",[this]))},l.disableTransition=function(){this.removeTransitionStyles(),this.element.removeEventListener(a,this,!1),this.isTransitioning=!1},l._removeStyles=function(e){var t={};for(var i in e)t[i]="";this.css(t)};var u={transitionProperty:"",transitionDuration:"",transitionDelay:""};return l.removeTransitionStyles=function(){this.css(u)},l.stagger=function(e){e=isNaN(e)?0:e,this.staggerDelay=e+"ms"},l.removeElem=function(){this.element.parentNode.removeChild(this.element),this.css({display:""}),this.emitEvent("remove",[this])},l.remove=function(){return r&&parseFloat(this.layout.options.transitionDuration)?(this.once("transitionEnd",function(){this.removeElem()}),void this.hide()):void this.removeElem()},l.reveal=function(){delete this.isHidden,this.css({display:""});var e=this.layout.options,t={};t[this.getHideRevealTransitionEndProperty("visibleStyle")]=this.onRevealTransitionEnd,this.transition({from:e.hiddenStyle,to:e.visibleStyle,isCleaning:!0,onTransitionEnd:t})},l.onRevealTransitionEnd=function(){this.isHidden||this.emitEvent("reveal")},l.getHideRevealTransitionEndProperty=function(e){var t=this.layout.options[e];if(t.opacity)return"opacity";for(var i in t)return i},l.hide=function(){this.isHidden=!0,this.css({display:""});var e=this.layout.options,t={};t[this.getHideRevealTransitionEndProperty("hiddenStyle")]=this.onHideTransitionEnd,this.transition({from:e.visibleStyle,to:e.hiddenStyle,isCleaning:!0,onTransitionEnd:t})},l.onHideTransitionEnd=function(){this.isHidden&&(this.css({display:"none"}),this.emitEvent("hide"))},l.destroy=function(){this.css({position:"",left:"",right:"",top:"",bottom:"",transition:"",transform:""})},i}),function(r,s){"use strict";"function"==typeof define&&define.amd?define("outlayer/outlayer",["ev-emitter/ev-emitter","get-size/get-size","fizzy-ui-utils/utils","./item"],function(e,t,i,n){return s(r,e,t,i,n)}):"object"==typeof module&&module.exports?module.exports=s(r,require("ev-emitter"),require("get-size"),require("fizzy-ui-utils"),require("./item")):r.Outlayer=s(r,r.EvEmitter,r.getSize,r.fizzyUIUtils,r.Outlayer.Item)}(window,function(e,t,r,s,n){"use strict";function a(e,t){var i,n=s.getQueryElement(e);n?(this.element=n,c&&(this.$element=c(this.element)),this.options=s.extend({},this.constructor.defaults),this.option(t),i=++d,this.element.outlayerGUID=i,(u[i]=this)._create(),this._getOption("initLayout")&&this.layout()):l&&l.error("Bad element for "+this.constructor.namespace+": "+(n||e))}function o(e){function t(){e.apply(this,arguments)}return(t.prototype=Object.create(e.prototype)).constructor=t}function i(){}var l=e.console,c=e.jQuery,d=0,u={};a.namespace="outlayer",a.Item=n,a.defaults={containerStyle:{position:"relative"},initLayout:!0,originLeft:!0,originTop:!0,resize:!0,resizeContainer:!0,transitionDuration:"0.4s",hiddenStyle:{opacity:0,transform:"scale(0.001)"},visibleStyle:{opacity:1,transform:"scale(1)"}};var h=a.prototype;s.extend(h,t.prototype),h.option=function(e){s.extend(this.options,e)},h._getOption=function(e){var t=this.constructor.compatOptions[e];return t&&void 0!==this.options[t]?this.options[t]:this.options[e]},a.compatOptions={initLayout:"isInitLayout",horizontal:"isHorizontal",layoutInstant:"isLayoutInstant",originLeft:"isOriginLeft",originTop:"isOriginTop",resize:"isResizeBound",resizeContainer:"isResizingContainer"},h._create=function(){this.reloadItems(),this.stamps=[],this.stamp(this.options.stamp),s.extend(this.element.style,this.options.containerStyle),this._getOption("resize")&&this.bindResize()},h.reloadItems=function(){this.items=this._itemize(this.element.children)},h._itemize=function(e){for(var t=this._filterFindItemElements(e),i=this.constructor.Item,n=[],r=0;r<t.length;r++){var s=new i(t[r],this);n.push(s)}return n},h._filterFindItemElements=function(e){return s.filterFindElements(e,this.options.itemSelector)},h.getItemElements=function(){return this.items.map(function(e){return e.element})},h.layout=function(){this._resetLayout(),this._manageStamps();var e=this._getOption("layoutInstant"),t=void 0!==e?e:!this._isLayoutInited;this.layoutItems(this.items,t),this._isLayoutInited=!0},h._init=h.layout,h._resetLayout=function(){this.getSize()},h.getSize=function(){this.size=r(this.element)},h._getMeasurement=function(e,t){var i,n=this.options[e];n?("string"==typeof n?i=this.element.querySelector(n):n instanceof HTMLElement&&(i=n),this[e]=i?r(i)[t]:n):this[e]=0},h.layoutItems=function(e,t){e=this._getItemsForLayout(e),this._layoutItems(e,t),this._postLayout()},h._getItemsForLayout=function(e){return e.filter(function(e){return!e.isIgnored})},h._layoutItems=function(e,i){var n;this._emitCompleteOnItems("layout",e),e&&e.length&&(n=[],e.forEach(function(e){var t=this._getItemLayoutPosition(e);t.item=e,t.isInstant=i||e.isLayoutInstant,n.push(t)},this),this._processLayoutQueue(n))},h._getItemLayoutPosition=function(){return{x:0,y:0}},h._processLayoutQueue=function(e){this.updateStagger(),e.forEach(function(e,t){this._positionItem(e.item,e.x,e.y,e.isInstant,t)},this)},h.updateStagger=function(){var e=this.options.stagger;return null==e?void(this.stagger=0):(this.stagger=function(e){if("number"==typeof e)return e;var t=e.match(/(^\d*\.?\d*)(\w*)/),i=t&&t[1],n=t&&t[2];return i.length?(i=parseFloat(i))*(p[n]||1):0}(e),this.stagger)},h._positionItem=function(e,t,i,n,r){n?e.goTo(t,i):(e.stagger(r*this.stagger),e.moveTo(t,i))},h._postLayout=function(){this.resizeContainer()},h.resizeContainer=function(){var e;!this._getOption("resizeContainer")||(e=this._getContainerSize())&&(this._setContainerMeasure(e.width,!0),this._setContainerMeasure(e.height,!1))},h._getContainerSize=i,h._setContainerMeasure=function(e,t){var i;void 0!==e&&((i=this.size).isBorderBox&&(e+=t?i.paddingLeft+i.paddingRight+i.borderLeftWidth+i.borderRightWidth:i.paddingBottom+i.paddingTop+i.borderTopWidth+i.borderBottomWidth),e=Math.max(e,0),this.element.style[t?"width":"height"]=e+"px")},h._emitCompleteOnItems=function(t,e){function i(){s.dispatchEvent(t+"Complete",null,[e])}function n(){++r==a&&i()}var r,s=this,a=e.length;e&&a?(r=0,e.forEach(function(e){e.once(t,n)})):i()},h.dispatchEvent=function(e,t,i){var n,r=t?[t].concat(i):i;this.emitEvent(e,r),c&&(this.$element=this.$element||c(this.element),t?((n=c.Event(t)).type=e,this.$element.trigger(n,i)):this.$element.trigger(e,i))},h.ignore=function(e){var t=this.getItem(e);t&&(t.isIgnored=!0)},h.unignore=function(e){var t=this.getItem(e);t&&delete t.isIgnored},h.stamp=function(e){(e=this._find(e))&&(this.stamps=this.stamps.concat(e),e.forEach(this.ignore,this))},h.unstamp=function(e){(e=this._find(e))&&e.forEach(function(e){s.removeFrom(this.stamps,e),this.unignore(e)},this)},h._find=function(e){return e?("string"==typeof e&&(e=this.element.querySelectorAll(e)),e=s.makeArray(e)):void 0},h._manageStamps=function(){this.stamps&&this.stamps.length&&(this._getBoundingRect(),this.stamps.forEach(this._manageStamp,this))},h._getBoundingRect=function(){var e=this.element.getBoundingClientRect(),t=this.size;this._boundingRect={left:e.left+t.paddingLeft+t.borderLeftWidth,top:e.top+t.paddingTop+t.borderTopWidth,right:e.right-(t.paddingRight+t.borderRightWidth),bottom:e.bottom-(t.paddingBottom+t.borderBottomWidth)}},h._manageStamp=i,h._getElementOffset=function(e){var t=e.getBoundingClientRect(),i=this._boundingRect,n=r(e);return{left:t.left-i.left-n.marginLeft,top:t.top-i.top-n.marginTop,right:i.right-t.right-n.marginRight,bottom:i.bottom-t.bottom-n.marginBottom}},h.handleEvent=s.handleEvent,h.bindResize=function(){e.addEventListener("resize",this),this.isResizeBound=!0},h.unbindResize=function(){e.removeEventListener("resize",this),this.isResizeBound=!1},h.onresize=function(){this.resize()},s.debounceMethod(a,"onresize",100),h.resize=function(){this.isResizeBound&&this.needsResizeLayout()&&this.layout()},h.needsResizeLayout=function(){var e=r(this.element);return this.size&&e&&e.innerWidth!==this.size.innerWidth},h.addItems=function(e){var t=this._itemize(e);return t.length&&(this.items=this.items.concat(t)),t},h.appended=function(e){var t=this.addItems(e);t.length&&(this.layoutItems(t,!0),this.reveal(t))},h.prepended=function(e){var t,i=this._itemize(e);i.length&&(t=this.items.slice(0),this.items=i.concat(t),this._resetLayout(),this._manageStamps(),this.layoutItems(i,!0),this.reveal(i),this.layoutItems(t))},h.reveal=function(e){var i;this._emitCompleteOnItems("reveal",e),e&&e.length&&(i=this.updateStagger(),e.forEach(function(e,t){e.stagger(t*i),e.reveal()}))},h.hide=function(e){var i;this._emitCompleteOnItems("hide",e),e&&e.length&&(i=this.updateStagger(),e.forEach(function(e,t){e.stagger(t*i),e.hide()}))},h.revealItemElements=function(e){var t=this.getItems(e);this.reveal(t)},h.hideItemElements=function(e){var t=this.getItems(e);this.hide(t)},h.getItem=function(e){for(var t=0;t<this.items.length;t++){var i=this.items[t];if(i.element==e)return i}},h.getItems=function(e){e=s.makeArray(e);var i=[];return e.forEach(function(e){var t=this.getItem(e);t&&i.push(t)},this),i},h.remove=function(e){var t=this.getItems(e);this._emitCompleteOnItems("remove",t),t&&t.length&&t.forEach(function(e){e.remove(),s.removeFrom(this.items,e)},this)},h.destroy=function(){var e=this.element.style;e.height="",e.position="",e.width="",this.items.forEach(function(e){e.destroy()}),this.unbindResize();var t=this.element.outlayerGUID;delete u[t],delete this.element.outlayerGUID,c&&c.removeData(this.element,this.constructor.namespace)},a.data=function(e){var t=(e=s.getQueryElement(e))&&e.outlayerGUID;return t&&u[t]},a.create=function(e,t){var i=o(a);return i.defaults=s.extend({},a.defaults),s.extend(i.defaults,t),i.compatOptions=s.extend({},a.compatOptions),i.namespace=e,i.data=a.data,i.Item=o(n),s.htmlInit(i,e),c&&c.bridget&&c.bridget(e,i),i};var p={ms:1,s:1e3};return a.Item=n,a}),function(e,t){"function"==typeof define&&define.amd?define(["outlayer/outlayer","get-size/get-size"],t):"object"==typeof module&&module.exports?module.exports=t(require("outlayer"),require("get-size")):e.Masonry=t(e.Outlayer,e.getSize)}(window,function(e,c){var t=e.create("masonry");t.compatOptions.fitWidth="isFitWidth";var i=t.prototype;return i._resetLayout=function(){this.getSize(),this._getMeasurement("columnWidth","outerWidth"),this._getMeasurement("gutter","outerWidth"),this.measureColumns(),this.colYs=[];for(var e=0;e<this.cols;e++)this.colYs.push(0);this.maxY=0,this.horizontalColIndex=0},i.measureColumns=function(){var e,t;this.getContainerWidth(),this.columnWidth||(t=(e=this.items[0])&&e.element,this.columnWidth=t&&c(t).outerWidth||this.containerWidth);var i=this.columnWidth+=this.gutter,n=this.containerWidth+this.gutter,r=n/i,s=i-n%i,r=Math[s&&s<1?"round":"floor"](r);this.cols=Math.max(r,1)},i.getContainerWidth=function(){var e=this._getOption("fitWidth")?this.element.parentNode:this.element,t=c(e);this.containerWidth=t&&t.innerWidth},i._getItemLayoutPosition=function(e){e.getSize();for(var t=e.size.outerWidth%this.columnWidth,i=Math[t&&t<1?"round":"ceil"](e.size.outerWidth/this.columnWidth),i=Math.min(i,this.cols),n=this[this.options.horizontalOrder?"_getHorizontalColPosition":"_getTopColPosition"](i,e),r={x:this.columnWidth*n.col,y:n.y},s=n.y+e.size.outerHeight,a=i+n.col,o=n.col;o<a;o++)this.colYs[o]=s;return r},i._getTopColPosition=function(e){var t=this._getTopColGroup(e),i=Math.min.apply(Math,t);return{col:t.indexOf(i),y:i}},i._getTopColGroup=function(e){if(e<2)return this.colYs;for(var t=[],i=this.cols+1-e,n=0;n<i;n++)t[n]=this._getColGroupY(n,e);return t},i._getColGroupY=function(e,t){if(t<2)return this.colYs[e];var i=this.colYs.slice(e,e+t);return Math.max.apply(Math,i)},i._getHorizontalColPosition=function(e,t){var i=this.horizontalColIndex%this.cols,i=1<e&&i+e>this.cols?0:i,n=t.size.outerWidth&&t.size.outerHeight;return this.horizontalColIndex=n?i+e:this.horizontalColIndex,{col:i,y:this._getColGroupY(i,e)}},i._manageStamp=function(e){var t=c(e),i=this._getElementOffset(e),n=this._getOption("originLeft")?i.left:i.right,r=n+t.outerWidth,s=Math.floor(n/this.columnWidth),s=Math.max(0,s),a=Math.floor(r/this.columnWidth);a-=r%this.columnWidth?0:1,a=Math.min(this.cols-1,a);for(var o=(this._getOption("originTop")?i.top:i.bottom)+t.outerHeight,l=s;l<=a;l++)this.colYs[l]=Math.max(o,this.colYs[l])},i._getContainerSize=function(){this.maxY=Math.max.apply(Math,this.colYs);var e={height:this.maxY};return this._getOption("fitWidth")&&(e.width=this._getContainerFitWidth()),e},i._getContainerFitWidth=function(){for(var e=0,t=this.cols;--t&&0===this.colYs[t];)e++;return(this.cols-e)*this.columnWidth-this.gutter},i.needsResizeLayout=function(){var e=this.containerWidth;return this.getContainerWidth(),e!=this.containerWidth},t}),function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.Swiper=t()}(this,function(){"use strict";var m="undefined"==typeof document?{body:{},addEventListener:function(){},removeEventListener:function(){},activeElement:{blur:function(){},nodeName:""},querySelector:function(){return null},querySelectorAll:function(){return[]},getElementById:function(){return null},createEvent:function(){return{initEvent:function(){}}},createElement:function(){return{children:[],childNodes:[],style:{},setAttribute:function(){},getElementsByTagName:function(){return[]}}},location:{hash:""}}:document,J="undefined"==typeof window?{document:m,navigator:{userAgent:""},location:{},history:{},CustomEvent:function(){return this},addEventListener:function(){},removeEventListener:function(){},getComputedStyle:function(){return{getPropertyValue:function(){return""}}},Image:function(){},Date:function(){},screen:{},setTimeout:function(){},clearTimeout:function(){}}:window,l=function(e){for(var t=0;t<e.length;t+=1)this[t]=e[t];return this.length=e.length,this};function D(e,t){var i=[],n=0;if(e&&!t&&e instanceof l)return e;if(e)if("string"==typeof e){var r,s,a=e.trim();if(0<=a.indexOf("<")&&0<=a.indexOf(">")){var o="div";for(0===a.indexOf("<li")&&(o="ul"),0===a.indexOf("<tr")&&(o="tbody"),0!==a.indexOf("<td")&&0!==a.indexOf("<th")||(o="tr"),0===a.indexOf("<tbody")&&(o="table"),0===a.indexOf("<option")&&(o="select"),(s=m.createElement(o)).innerHTML=a,n=0;n<s.childNodes.length;n+=1)i.push(s.childNodes[n])}else for(r=t||"#"!==e[0]||e.match(/[ .<>:~]/)?(t||m).querySelectorAll(e.trim()):[m.getElementById(e.trim().split("#")[1])],n=0;n<r.length;n+=1)r[n]&&i.push(r[n])}else if(e.nodeType||e===J||e===m)i.push(e);else if(0<e.length&&e[0].nodeType)for(n=0;n<e.length;n+=1)i.push(e[n]);return new l(i)}function s(e){for(var t=[],i=0;i<e.length;i+=1)-1===t.indexOf(e[i])&&t.push(e[i]);return t}D.fn=l.prototype,D.Class=l,D.Dom7=l;var t={addClass:function(e){if(void 0===e)return this;for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var n=0;n<this.length;n+=1)void 0!==this[n]&&void 0!==this[n].classList&&this[n].classList.add(t[i]);return this},removeClass:function(e){for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var n=0;n<this.length;n+=1)void 0!==this[n]&&void 0!==this[n].classList&&this[n].classList.remove(t[i]);return this},hasClass:function(e){return!!this[0]&&this[0].classList.contains(e)},toggleClass:function(e){for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var n=0;n<this.length;n+=1)void 0!==this[n]&&void 0!==this[n].classList&&this[n].classList.toggle(t[i]);return this},attr:function(e,t){var i=arguments;if(1===arguments.length&&"string"==typeof e)return this[0]?this[0].getAttribute(e):void 0;for(var n=0;n<this.length;n+=1)if(2===i.length)this[n].setAttribute(e,t);else for(var r in e)this[n][r]=e[r],this[n].setAttribute(r,e[r]);return this},removeAttr:function(e){for(var t=0;t<this.length;t+=1)this[t].removeAttribute(e);return this},data:function(e,t){var i;if(void 0!==t){for(var n=0;n<this.length;n+=1)(i=this[n]).dom7ElementDataStorage||(i.dom7ElementDataStorage={}),i.dom7ElementDataStorage[e]=t;return this}if(i=this[0])return i.dom7ElementDataStorage&&e in i.dom7ElementDataStorage?i.dom7ElementDataStorage[e]:i.getAttribute("data-"+e)||void 0},transform:function(e){for(var t=0;t<this.length;t+=1){var i=this[t].style;i.webkitTransform=e,i.transform=e}return this},transition:function(e){"string"!=typeof e&&(e+="ms");for(var t=0;t<this.length;t+=1){var i=this[t].style;i.webkitTransitionDuration=e,i.transitionDuration=e}return this},on:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i=e[0],s=e[1],a=e[2],n=e[3];function r(e){var t=e.target;if(t){var i=e.target.dom7EventData||[];if(i.indexOf(e)<0&&i.unshift(e),D(t).is(s))a.apply(t,i);else for(var n=D(t).parents(),r=0;r<n.length;r+=1)D(n[r]).is(s)&&a.apply(n[r],i)}}function o(e){var t=e&&e.target&&e.target.dom7EventData||[];t.indexOf(e)<0&&t.unshift(e),a.apply(this,t)}"function"==typeof e[1]&&(i=e[0],a=e[1],n=e[2],s=void 0),n=n||!1;for(var l,c=i.split(" "),d=0;d<this.length;d+=1){var u=this[d];if(s)for(l=0;l<c.length;l+=1){var h=c[l];u.dom7LiveListeners||(u.dom7LiveListeners={}),u.dom7LiveListeners[h]||(u.dom7LiveListeners[h]=[]),u.dom7LiveListeners[h].push({listener:a,proxyListener:r}),u.addEventListener(h,r,n)}else for(l=0;l<c.length;l+=1){var p=c[l];u.dom7Listeners||(u.dom7Listeners={}),u.dom7Listeners[p]||(u.dom7Listeners[p]=[]),u.dom7Listeners[p].push({listener:a,proxyListener:o}),u.addEventListener(p,o,n)}}return this},off:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i=e[0],n=e[1],r=e[2],s=e[3];"function"==typeof e[1]&&(i=e[0],r=e[1],s=e[2],n=void 0),s=s||!1;for(var a=i.split(" "),o=0;o<a.length;o+=1)for(var l=a[o],c=0;c<this.length;c+=1){var d=this[c],u=void 0;if(!n&&d.dom7Listeners?u=d.dom7Listeners[l]:n&&d.dom7LiveListeners&&(u=d.dom7LiveListeners[l]),u&&u.length)for(var h=u.length-1;0<=h;--h){var p=u[h];(!r||p.listener!==r)&&r||(d.removeEventListener(l,p.proxyListener,s),u.splice(h,1))}}return this},trigger:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];for(var i=e[0].split(" "),n=e[1],r=0;r<i.length;r+=1)for(var s=i[r],a=0;a<this.length;a+=1){var o=this[a],l=void 0;try{l=new J.CustomEvent(s,{detail:n,bubbles:!0,cancelable:!0})}catch(e){(l=m.createEvent("Event")).initEvent(s,!0,!0),l.detail=n}o.dom7EventData=e.filter(function(e,t){return 0<t}),o.dispatchEvent(l),o.dom7EventData=[],delete o.dom7EventData}return this},transitionEnd:function(t){var i,n=["webkitTransitionEnd","transitionend"],r=this;function s(e){if(e.target===this)for(t.call(this,e),i=0;i<n.length;i+=1)r.off(n[i],s)}if(t)for(i=0;i<n.length;i+=1)r.on(n[i],s);return this},outerWidth:function(e){if(0<this.length){if(e){var t=this.styles();return this[0].offsetWidth+parseFloat(t.getPropertyValue("margin-right"))+parseFloat(t.getPropertyValue("margin-left"))}return this[0].offsetWidth}return null},outerHeight:function(e){if(0<this.length){if(e){var t=this.styles();return this[0].offsetHeight+parseFloat(t.getPropertyValue("margin-top"))+parseFloat(t.getPropertyValue("margin-bottom"))}return this[0].offsetHeight}return null},offset:function(){if(0<this.length){var e=this[0],t=e.getBoundingClientRect(),i=m.body,n=e.clientTop||i.clientTop||0,r=e.clientLeft||i.clientLeft||0,s=e===J?J.scrollY:e.scrollTop,a=e===J?J.scrollX:e.scrollLeft;return{top:t.top+s-n,left:t.left+a-r}}return null},css:function(e,t){var i;if(1===arguments.length){if("string"!=typeof e){for(i=0;i<this.length;i+=1)for(var n in e)this[i].style[n]=e[n];return this}if(this[0])return J.getComputedStyle(this[0],null).getPropertyValue(e)}if(2!==arguments.length||"string"!=typeof e)return this;for(i=0;i<this.length;i+=1)this[i].style[e]=t;return this},each:function(e){if(!e)return this;for(var t=0;t<this.length;t+=1)if(!1===e.call(this[t],t,this[t]))return this;return this},html:function(e){if(void 0===e)return this[0]?this[0].innerHTML:void 0;for(var t=0;t<this.length;t+=1)this[t].innerHTML=e;return this},text:function(e){if(void 0===e)return this[0]?this[0].textContent.trim():null;for(var t=0;t<this.length;t+=1)this[t].textContent=e;return this},is:function(e){var t,i,n=this[0];if(!n||void 0===e)return!1;if("string"==typeof e){if(n.matches)return n.matches(e);if(n.webkitMatchesSelector)return n.webkitMatchesSelector(e);if(n.msMatchesSelector)return n.msMatchesSelector(e);for(t=D(e),i=0;i<t.length;i+=1)if(t[i]===n)return!0;return!1}if(e===m)return n===m;if(e===J)return n===J;if(e.nodeType||e instanceof l){for(t=e.nodeType?[e]:e,i=0;i<t.length;i+=1)if(t[i]===n)return!0;return!1}return!1},index:function(){var e,t=this[0];if(t){for(e=0;null!==(t=t.previousSibling);)1===t.nodeType&&(e+=1);return e}},eq:function(e){if(void 0===e)return this;var t,i=this.length;return new l(i-1<e?[]:e<0?(t=i+e)<0?[]:[this[t]]:[this[e]])},append:function(){for(var e,t=[],i=arguments.length;i--;)t[i]=arguments[i];for(var n=0;n<t.length;n+=1){e=t[n];for(var r=0;r<this.length;r+=1)if("string"==typeof e){var s=m.createElement("div");for(s.innerHTML=e;s.firstChild;)this[r].appendChild(s.firstChild)}else if(e instanceof l)for(var a=0;a<e.length;a+=1)this[r].appendChild(e[a]);else this[r].appendChild(e)}return this},prepend:function(e){for(var t,i=0;i<this.length;i+=1)if("string"==typeof e){var n=m.createElement("div");for(n.innerHTML=e,t=n.childNodes.length-1;0<=t;--t)this[i].insertBefore(n.childNodes[t],this[i].childNodes[0])}else if(e instanceof l)for(t=0;t<e.length;t+=1)this[i].insertBefore(e[t],this[i].childNodes[0]);else this[i].insertBefore(e,this[i].childNodes[0]);return this},next:function(e){return 0<this.length?e?this[0].nextElementSibling&&D(this[0].nextElementSibling).is(e)?new l([this[0].nextElementSibling]):new l([]):this[0].nextElementSibling?new l([this[0].nextElementSibling]):new l([]):new l([])},nextAll:function(e){var t=[],i=this[0];if(!i)return new l([]);for(;i.nextElementSibling;){var n=i.nextElementSibling;e&&!D(n).is(e)||t.push(n),i=n}return new l(t)},prev:function(e){if(0<this.length){var t=this[0];return e?t.previousElementSibling&&D(t.previousElementSibling).is(e)?new l([t.previousElementSibling]):new l([]):t.previousElementSibling?new l([t.previousElementSibling]):new l([])}return new l([])},prevAll:function(e){var t=[],i=this[0];if(!i)return new l([]);for(;i.previousElementSibling;){var n=i.previousElementSibling;e&&!D(n).is(e)||t.push(n),i=n}return new l(t)},parent:function(e){for(var t=[],i=0;i<this.length;i+=1)null===this[i].parentNode||e&&!D(this[i].parentNode).is(e)||t.push(this[i].parentNode);return D(s(t))},parents:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var n=this[i].parentNode;n;)e&&!D(n).is(e)||t.push(n),n=n.parentNode;return D(s(t))},closest:function(e){var t=this;return void 0===e?new l([]):(t.is(e)||(t=t.parents(e).eq(0)),t)},find:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var n=this[i].querySelectorAll(e),r=0;r<n.length;r+=1)t.push(n[r]);return new l(t)},children:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var n=this[i].childNodes,r=0;r<n.length;r+=1)e?1===n[r].nodeType&&D(n[r]).is(e)&&t.push(n[r]):1===n[r].nodeType&&t.push(n[r]);return new l(s(t))},remove:function(){for(var e=0;e<this.length;e+=1)this[e].parentNode&&this[e].parentNode.removeChild(this[e]);return this},add:function(){for(var e,t=[],i=arguments.length;i--;)t[i]=arguments[i];for(e=0;e<t.length;e+=1)for(var n=D(t[e]),r=0;r<n.length;r+=1)this[this.length]=n[r],this.length+=1;return this},styles:function(){return this[0]?J.getComputedStyle(this[0],null):{}}};Object.keys(t).forEach(function(e){D.fn[e]=t[e]});function e(e){void 0===e&&(e={});var t=this;t.params=e,t.eventsListeners={},t.params&&t.params.on&&Object.keys(t.params.on).forEach(function(e){t.on(e,t.params.on[e])})}var i,n,r,ee={deleteProps:function(e){var t=e;Object.keys(t).forEach(function(e){try{t[e]=null}catch(e){}try{delete t[e]}catch(e){}})},nextTick:function(e,t){return void 0===t&&(t=0),setTimeout(e,t)},now:function(){return Date.now()},getTranslate:function(e,t){var i,n,r;void 0===t&&(t="x");var s=J.getComputedStyle(e,null);return J.WebKitCSSMatrix?(6<(n=s.transform||s.webkitTransform).split(",").length&&(n=n.split(", ").map(function(e){return e.replace(",",".")}).join(", ")),r=new J.WebKitCSSMatrix("none"===n?"":n)):i=(r=s.MozTransform||s.OTransform||s.MsTransform||s.msTransform||s.transform||s.getPropertyValue("transform").replace("translate(","matrix(1, 0, 0, 1,")).toString().split(","),"x"===t&&(n=J.WebKitCSSMatrix?r.m41:16===i.length?parseFloat(i[12]):parseFloat(i[4])),"y"===t&&(n=J.WebKitCSSMatrix?r.m42:16===i.length?parseFloat(i[13]):parseFloat(i[5])),n||0},parseUrlQuery:function(e){var t,i,n,r,s={},a=e||J.location.href;if("string"==typeof a&&a.length)for(r=(i=(a=-1<a.indexOf("?")?a.replace(/\S*\?/,""):"").split("&").filter(function(e){return""!==e})).length,t=0;t<r;t+=1)n=i[t].replace(/#\S+/g,"").split("="),s[decodeURIComponent(n[0])]=void 0===n[1]?void 0:decodeURIComponent(n[1])||"";return s},isObject:function(e){return"object"==typeof e&&null!==e&&e.constructor&&e.constructor===Object},extend:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];for(var i=Object(e[0]),n=1;n<e.length;n+=1){var r=e[n];if(null!=r)for(var s=Object.keys(Object(r)),a=0,o=s.length;a<o;a+=1){var l=s[a],c=Object.getOwnPropertyDescriptor(r,l);void 0!==c&&c.enumerable&&(ee.isObject(i[l])&&ee.isObject(r[l])?ee.extend(i[l],r[l]):!ee.isObject(i[l])&&ee.isObject(r[l])?(i[l]={},ee.extend(i[l],r[l])):i[l]=r[l])}}return i}},te=(r=m.createElement("div"),{touch:J.Modernizr&&!0===J.Modernizr.touch||!!(0<J.navigator.maxTouchPoints||"ontouchstart"in J||J.DocumentTouch&&m instanceof J.DocumentTouch),pointerEvents:!!(J.navigator.pointerEnabled||J.PointerEvent||"maxTouchPoints"in J.navigator),prefixedPointerEvents:!!J.navigator.msPointerEnabled,transition:"transition"in(n=r.style)||"webkitTransition"in n||"MozTransition"in n,transforms3d:J.Modernizr&&!0===J.Modernizr.csstransforms3d||("webkitPerspective"in(i=r.style)||"MozPerspective"in i||"OPerspective"in i||"MsPerspective"in i||"perspective"in i),flexbox:function(){for(var e=r.style,t="alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient".split(" "),i=0;i<t.length;i+=1)if(t[i]in e)return!0;return!1}(),observer:"MutationObserver"in J||"WebkitMutationObserver"in J,passiveListener:function(){var e=!1;try{var t=Object.defineProperty({},"passive",{get:function(){e=!0}});J.addEventListener("testPassiveListener",null,t)}catch(e){}return e}(),gestures:"ongesturestart"in J}),a={components:{configurable:!0}};e.prototype.on=function(e,t,i){var n=this;if("function"!=typeof t)return n;var r=i?"unshift":"push";return e.split(" ").forEach(function(e){n.eventsListeners[e]||(n.eventsListeners[e]=[]),n.eventsListeners[e][r](t)}),n},e.prototype.once=function(n,r,e){var s=this;return"function"!=typeof r?s:s.on(n,function e(){for(var t=[],i=arguments.length;i--;)t[i]=arguments[i];r.apply(s,t),s.off(n,e)},e)},e.prototype.off=function(e,n){var r=this;return r.eventsListeners&&e.split(" ").forEach(function(i){void 0===n?r.eventsListeners[i]=[]:r.eventsListeners[i]&&r.eventsListeners[i].length&&r.eventsListeners[i].forEach(function(e,t){e===n&&r.eventsListeners[i].splice(t,1)})}),r},e.prototype.emit=function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i,n,r,s=this;return s.eventsListeners&&(r="string"==typeof e[0]||Array.isArray(e[0])?(i=e[0],n=e.slice(1,e.length),s):(i=e[0].events,n=e[0].data,e[0].context||s),(Array.isArray(i)?i:i.split(" ")).forEach(function(e){var t;s.eventsListeners&&s.eventsListeners[e]&&(t=[],s.eventsListeners[e].forEach(function(e){t.push(e)}),t.forEach(function(e){e.apply(r,n)}))})),s},e.prototype.useModulesParams=function(i){var n=this;n.modules&&Object.keys(n.modules).forEach(function(e){var t=n.modules[e];t.params&&ee.extend(i,t.params)})},e.prototype.useModules=function(n){void 0===n&&(n={});var r=this;r.modules&&Object.keys(r.modules).forEach(function(e){var i=r.modules[e],t=n[e]||{};i.instance&&Object.keys(i.instance).forEach(function(e){var t=i.instance[e];r[e]="function"==typeof t?t.bind(r):t}),i.on&&r.on&&Object.keys(i.on).forEach(function(e){r.on(e,i.on[e])}),i.create&&i.create.bind(r)(t)})},a.components.set=function(e){this.use&&this.use(e)},e.installModule=function(t){for(var e=[],i=arguments.length-1;0<i--;)e[i]=arguments[i+1];var n=this;n.prototype.modules||(n.prototype.modules={});var r=t.name||Object.keys(n.prototype.modules).length+"_"+ee.now();return(n.prototype.modules[r]=t).proto&&Object.keys(t.proto).forEach(function(e){n.prototype[e]=t.proto[e]}),t.static&&Object.keys(t.static).forEach(function(e){n[e]=t.static[e]}),t.install&&t.install.apply(n,e),n},e.use=function(e){for(var t=[],i=arguments.length-1;0<i--;)t[i]=arguments[i+1];var n=this;return Array.isArray(e)?(e.forEach(function(e){return n.installModule(e)}),n):n.installModule.apply(n,[e].concat(t))},Object.defineProperties(e,a);var o,c,d,u,h,p,f,g,v,y={updateSize:function(){var e=this.$el,t=void 0!==this.params.width?this.params.width:e[0].clientWidth,i=void 0!==this.params.height?this.params.height:e[0].clientHeight;0===t&&this.isHorizontal()||0===i&&this.isVertical()||(t=t-parseInt(e.css("padding-left"),10)-parseInt(e.css("padding-right"),10),i=i-parseInt(e.css("padding-top"),10)-parseInt(e.css("padding-bottom"),10),ee.extend(this,{width:t,height:i,size:this.isHorizontal()?t:i}))},updateSlides:function(){var e=this,t=e.params,i=e.$wrapperEl,n=e.size,r=e.rtlTranslate,s=e.wrongRTL,a=e.virtual&&t.virtual.enabled,o=a?e.virtual.slides.length:e.slides.length,l=i.children("."+e.params.slideClass),c=a?e.virtual.slides.length:l.length,d=[],u=[],h=[],p=t.slidesOffsetBefore;"function"==typeof p&&(p=t.slidesOffsetBefore.call(e));var f=t.slidesOffsetAfter;"function"==typeof f&&(f=t.slidesOffsetAfter.call(e));var m,g=e.snapGrid.length,v=e.snapGrid.length,y=t.spaceBetween,b=-p,w=0,E=0;if(void 0!==n){"string"==typeof y&&0<=y.indexOf("%")&&(y=parseFloat(y.replace("%",""))/100*n),e.virtualSize=-y,r?l.css({marginLeft:"",marginTop:""}):l.css({marginRight:"",marginBottom:""}),1<t.slidesPerColumn&&(m=Math.floor(c/t.slidesPerColumn)===c/e.params.slidesPerColumn?c:Math.ceil(c/t.slidesPerColumn)*t.slidesPerColumn,"auto"!==t.slidesPerView&&"row"===t.slidesPerColumnFill&&(m=Math.max(m,t.slidesPerView*t.slidesPerColumn)));for(var x,_,T,C=t.slidesPerColumn,S=m/C,k=Math.floor(c/t.slidesPerColumn),N=0;N<c;N+=1){$=0;var L,I,D,A,M,O,P,z,j,B,H,R,$,W,F,q,V,Y,X,U=l.eq(N);1<t.slidesPerColumn&&(D=I=L=void 0,"column"===t.slidesPerColumnFill?(D=N-(I=Math.floor(N/C))*C,(k<I||I===k&&D===C-1)&&C<=(D+=1)&&(D=0,I+=1),L=I+D*m/C,U.css({"-webkit-box-ordinal-group":L,"-moz-box-ordinal-group":L,"-ms-flex-order":L,"-webkit-order":L,order:L})):I=N-(D=Math.floor(N/S))*S,U.css("margin-"+(e.isHorizontal()?"top":"left"),0!==D&&t.spaceBetween&&t.spaceBetween+"px").attr("data-swiper-column",I).attr("data-swiper-row",D)),"none"!==U.css("display")&&("auto"===t.slidesPerView?(A=J.getComputedStyle(U[0],null),M=U[0].style.transform,O=U[0].style.webkitTransform,M&&(U[0].style.transform="none"),O&&(U[0].style.webkitTransform="none"),$=t.roundLengths?e.isHorizontal()?U.outerWidth(!0):U.outerHeight(!0):e.isHorizontal()?(P=parseFloat(A.getPropertyValue("width")),z=parseFloat(A.getPropertyValue("padding-left")),j=parseFloat(A.getPropertyValue("padding-right")),B=parseFloat(A.getPropertyValue("margin-left")),H=parseFloat(A.getPropertyValue("margin-right")),(R=A.getPropertyValue("box-sizing"))&&"border-box"===R?P+B+H:P+z+j+B+H):(W=parseFloat(A.getPropertyValue("height")),F=parseFloat(A.getPropertyValue("padding-top")),q=parseFloat(A.getPropertyValue("padding-bottom")),V=parseFloat(A.getPropertyValue("margin-top")),Y=parseFloat(A.getPropertyValue("margin-bottom")),(X=A.getPropertyValue("box-sizing"))&&"border-box"===X?W+V+Y:W+F+q+V+Y),M&&(U[0].style.transform=M),O&&(U[0].style.webkitTransform=O),t.roundLengths&&($=Math.floor($))):($=(n-(t.slidesPerView-1)*y)/t.slidesPerView,t.roundLengths&&($=Math.floor($)),l[N]&&(e.isHorizontal()?l[N].style.width=$+"px":l[N].style.height=$+"px")),l[N]&&(l[N].swiperSlideSize=$),h.push($),t.centeredSlides?(b=b+$/2+w/2+y,0===w&&0!==N&&(b=b-n/2-y),0===N&&(b=b-n/2-y),Math.abs(b)<.001&&(b=0),t.roundLengths&&(b=Math.floor(b)),E%t.slidesPerGroup==0&&d.push(b),u.push(b)):(t.roundLengths&&(b=Math.floor(b)),E%t.slidesPerGroup==0&&d.push(b),u.push(b),b=b+$+y),e.virtualSize+=$+y,w=$,E+=1)}if(e.virtualSize=Math.max(e.virtualSize,n)+f,r&&s&&("slide"===t.effect||"coverflow"===t.effect)&&i.css({width:e.virtualSize+t.spaceBetween+"px"}),te.flexbox&&!t.setWrapperSize||(e.isHorizontal()?i.css({width:e.virtualSize+t.spaceBetween+"px"}):i.css({height:e.virtualSize+t.spaceBetween+"px"})),1<t.slidesPerColumn&&(e.virtualSize=($+t.spaceBetween)*m,e.virtualSize=Math.ceil(e.virtualSize/t.slidesPerColumn)-t.spaceBetween,e.isHorizontal()?i.css({width:e.virtualSize+t.spaceBetween+"px"}):i.css({height:e.virtualSize+t.spaceBetween+"px"}),t.centeredSlides)){x=[];for(var G=0;G<d.length;G+=1){var K=d[G];t.roundLengths&&(K=Math.floor(K)),d[G]<e.virtualSize+d[0]&&x.push(K)}d=x}if(!t.centeredSlides){x=[];for(var Q=0;Q<d.length;Q+=1){var Z=d[Q];t.roundLengths&&(Z=Math.floor(Z)),d[Q]<=e.virtualSize-n&&x.push(Z)}d=x,1<Math.floor(e.virtualSize-n)-Math.floor(d[d.length-1])&&d.push(e.virtualSize-n)}0===d.length&&(d=[0]),0!==t.spaceBetween&&(e.isHorizontal()?r?l.css({marginLeft:y+"px"}):l.css({marginRight:y+"px"}):l.css({marginBottom:y+"px"})),t.centerInsufficientSlides&&(_=0,h.forEach(function(e){_+=e+(t.spaceBetween?t.spaceBetween:0)}),(_-=t.spaceBetween)<n&&(T=(n-_)/2,d.forEach(function(e,t){d[t]=e-T}),u.forEach(function(e,t){u[t]=e+T}))),ee.extend(e,{slides:l,snapGrid:d,slidesGrid:u,slidesSizesGrid:h}),c!==o&&e.emit("slidesLengthChange"),d.length!==g&&(e.params.watchOverflow&&e.checkOverflow(),e.emit("snapGridLengthChange")),u.length!==v&&e.emit("slidesGridLengthChange"),(t.watchSlidesProgress||t.watchSlidesVisibility)&&e.updateSlidesOffset()}},updateAutoHeight:function(e){var t,i,n=this,r=[],s=0;if("number"==typeof e?n.setTransition(e):!0===e&&n.setTransition(n.params.speed),"auto"!==n.params.slidesPerView&&1<n.params.slidesPerView)for(t=0;t<Math.ceil(n.params.slidesPerView);t+=1){var a=n.activeIndex+t;if(a>n.slides.length)break;r.push(n.slides.eq(a)[0])}else r.push(n.slides.eq(n.activeIndex)[0]);for(t=0;t<r.length;t+=1){void 0!==r[t]&&(s=s<(i=r[t].offsetHeight)?i:s)}s&&n.$wrapperEl.css("height",s+"px")},updateSlidesOffset:function(){for(var e=this.slides,t=0;t<e.length;t+=1)e[t].swiperSlideOffset=this.isHorizontal()?e[t].offsetLeft:e[t].offsetTop},updateSlidesProgress:function(e){void 0===e&&(e=this&&this.translate||0);var t=this,i=t.params,n=t.slides,r=t.rtlTranslate;if(0!==n.length){void 0===n[0].swiperSlideOffset&&t.updateSlidesOffset();var s=r?e:-e;n.removeClass(i.slideVisibleClass),t.visibleSlidesIndexes=[],t.visibleSlides=[];for(var a=0;a<n.length;a+=1){var o,l,c=n[a],d=(s+(i.centeredSlides?t.minTranslate():0)-c.swiperSlideOffset)/(c.swiperSlideSize+i.spaceBetween);i.watchSlidesVisibility&&(l=(o=-(s-c.swiperSlideOffset))+t.slidesSizesGrid[a],(0<=o&&o<t.size||0<l&&l<=t.size||o<=0&&l>=t.size)&&(t.visibleSlides.push(c),t.visibleSlidesIndexes.push(a),n.eq(a).addClass(i.slideVisibleClass))),c.progress=r?-d:d}t.visibleSlides=D(t.visibleSlides)}},updateProgress:function(e){void 0===e&&(e=this&&this.translate||0);var t=this,i=t.params,n=t.maxTranslate()-t.minTranslate(),r=t.progress,s=t.isBeginning,a=s,o=l=t.isEnd,l=0==n?s=!(r=0):(s=(r=(e-t.minTranslate())/n)<=0,1<=r);ee.extend(t,{progress:r,isBeginning:s,isEnd:l}),(i.watchSlidesProgress||i.watchSlidesVisibility)&&t.updateSlidesProgress(e),s&&!a&&t.emit("reachBeginning toEdge"),l&&!o&&t.emit("reachEnd toEdge"),(a&&!s||o&&!l)&&t.emit("fromEdge"),t.emit("progress",r)},updateSlidesClasses:function(){var e,t=this.slides,i=this.params,n=this.$wrapperEl,r=this.activeIndex,s=this.realIndex,a=this.virtual&&i.virtual.enabled;t.removeClass(i.slideActiveClass+" "+i.slideNextClass+" "+i.slidePrevClass+" "+i.slideDuplicateActiveClass+" "+i.slideDuplicateNextClass+" "+i.slideDuplicatePrevClass),(e=a?this.$wrapperEl.find("."+i.slideClass+'[data-swiper-slide-index="'+r+'"]'):t.eq(r)).addClass(i.slideActiveClass),i.loop&&(e.hasClass(i.slideDuplicateClass)?n.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+s+'"]').addClass(i.slideDuplicateActiveClass):n.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+s+'"]').addClass(i.slideDuplicateActiveClass));var o=e.nextAll("."+i.slideClass).eq(0).addClass(i.slideNextClass);i.loop&&0===o.length&&(o=t.eq(0)).addClass(i.slideNextClass);var l=e.prevAll("."+i.slideClass).eq(0).addClass(i.slidePrevClass);i.loop&&0===l.length&&(l=t.eq(-1)).addClass(i.slidePrevClass),i.loop&&(o.hasClass(i.slideDuplicateClass)?n.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+o.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicateNextClass):n.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+o.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicateNextClass),l.hasClass(i.slideDuplicateClass)?n.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+l.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicatePrevClass):n.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+l.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicatePrevClass))},updateActiveIndex:function(e){var t,i,n=this,r=n.rtlTranslate?n.translate:-n.translate,s=n.slidesGrid,a=n.snapGrid,o=n.params,l=n.activeIndex,c=n.realIndex,d=n.snapIndex,u=e;if(void 0===u){for(var h=0;h<s.length;h+=1)void 0!==s[h+1]?r>=s[h]&&r<s[h+1]-(s[h+1]-s[h])/2?u=h:r>=s[h]&&r<s[h+1]&&(u=h+1):r>=s[h]&&(u=h);o.normalizeSlideIndex&&(u<0||void 0===u)&&(u=0)}(t=0<=a.indexOf(r)?a.indexOf(r):Math.floor(u/o.slidesPerGroup))>=a.length&&(t=a.length-1),u!==l?(i=parseInt(n.slides.eq(u).attr("data-swiper-slide-index")||u,10),ee.extend(n,{snapIndex:t,realIndex:i,previousIndex:l,activeIndex:u}),n.emit("activeIndexChange"),n.emit("snapIndexChange"),c!==i&&n.emit("realIndexChange"),n.emit("slideChange")):t!==d&&(n.snapIndex=t,n.emit("snapIndexChange"))},updateClickedSlide:function(e){var t=this,i=t.params,n=D(e.target).closest("."+i.slideClass)[0],r=!1;if(n)for(var s=0;s<t.slides.length;s+=1)t.slides[s]===n&&(r=!0);if(!n||!r)return t.clickedSlide=void 0,void(t.clickedIndex=void 0);t.clickedSlide=n,t.virtual&&t.params.virtual.enabled?t.clickedIndex=parseInt(D(n).attr("data-swiper-slide-index"),10):t.clickedIndex=D(n).index(),i.slideToClickedSlide&&void 0!==t.clickedIndex&&t.clickedIndex!==t.activeIndex&&t.slideToClickedSlide()}},b={getTranslate:function(e){void 0===e&&(e=this.isHorizontal()?"x":"y");var t=this.params,i=this.rtlTranslate,n=this.translate,r=this.$wrapperEl;if(t.virtualTranslate)return i?-n:n;var s=ee.getTranslate(r[0],e);return i&&(s=-s),s||0},setTranslate:function(e,t){var i=this,n=i.rtlTranslate,r=i.params,s=i.$wrapperEl,a=i.progress,o=0,l=0;i.isHorizontal()?o=n?-e:e:l=e,r.roundLengths&&(o=Math.floor(o),l=Math.floor(l)),r.virtualTranslate||s.transform("translate("+o+"px, "+l+"px)"),i.previousTranslate=i.translate,i.translate=i.isHorizontal()?o:l;var c=i.maxTranslate()-i.minTranslate();(0==c?0:(e-i.minTranslate())/c)!==a&&i.updateProgress(e),i.emit("setTranslate",i.translate,t)},minTranslate:function(){return-this.snapGrid[0]},maxTranslate:function(){return-this.snapGrid[this.snapGrid.length-1]}},w={slideTo:function(e,t,i,n){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0);var r=this,s=e;s<0&&(s=0);var a=r.params,o=r.snapGrid,l=r.slidesGrid,c=r.previousIndex,d=r.activeIndex,u=r.rtlTranslate;if(r.animating&&a.preventInteractionOnTransition)return!1;var h=Math.floor(s/a.slidesPerGroup);h>=o.length&&(h=o.length-1),(d||a.initialSlide||0)===(c||0)&&i&&r.emit("beforeSlideChangeStart");var p,f=-o[h];if(r.updateProgress(f),a.normalizeSlideIndex)for(var m=0;m<l.length;m+=1)-Math.floor(100*f)>=Math.floor(100*l[m])&&(s=m);if(r.initialized&&s!==d){if(!r.allowSlideNext&&f<r.translate&&f<r.minTranslate())return!1;if(!r.allowSlidePrev&&f>r.translate&&f>r.maxTranslate()&&(d||0)!==s)return!1}return p=d<s?"next":s<d?"prev":"reset",u&&-f===r.translate||!u&&f===r.translate?(r.updateActiveIndex(s),a.autoHeight&&r.updateAutoHeight(),r.updateSlidesClasses(),"slide"!==a.effect&&r.setTranslate(f),"reset"!=p&&(r.transitionStart(i,p),r.transitionEnd(i,p)),!1):(0!==t&&te.transition?(r.setTransition(t),r.setTranslate(f),r.updateActiveIndex(s),r.updateSlidesClasses(),r.emit("beforeTransitionStart",t,n),r.transitionStart(i,p),r.animating||(r.animating=!0,r.onSlideToWrapperTransitionEnd||(r.onSlideToWrapperTransitionEnd=function(e){r&&!r.destroyed&&e.target===this&&(r.$wrapperEl[0].removeEventListener("transitionend",r.onSlideToWrapperTransitionEnd),r.$wrapperEl[0].removeEventListener("webkitTransitionEnd",r.onSlideToWrapperTransitionEnd),r.onSlideToWrapperTransitionEnd=null,delete r.onSlideToWrapperTransitionEnd,r.transitionEnd(i,p))}),r.$wrapperEl[0].addEventListener("transitionend",r.onSlideToWrapperTransitionEnd),r.$wrapperEl[0].addEventListener("webkitTransitionEnd",r.onSlideToWrapperTransitionEnd))):(r.setTransition(0),r.setTranslate(f),r.updateActiveIndex(s),r.updateSlidesClasses(),r.emit("beforeTransitionStart",t,n),r.transitionStart(i,p),r.transitionEnd(i,p)),!0)},slideToLoop:function(e,t,i,n){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0);var r=e;return this.params.loop&&(r+=this.loopedSlides),this.slideTo(r,t,i,n)},slideNext:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var n=this.params,r=this.animating;return n.loop?!r&&(this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft,this.slideTo(this.activeIndex+n.slidesPerGroup,e,t,i)):this.slideTo(this.activeIndex+n.slidesPerGroup,e,t,i)},slidePrev:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var n=this,r=n.params,s=n.animating,a=n.snapGrid,o=n.slidesGrid,l=n.rtlTranslate;if(r.loop){if(s)return!1;n.loopFix(),n._clientLeft=n.$wrapperEl[0].clientLeft}function c(e){return e<0?-Math.floor(Math.abs(e)):Math.floor(e)}var d,u=c(l?n.translate:-n.translate),h=a.map(c),p=(o.map(c),a[h.indexOf(u)],a[h.indexOf(u)-1]);return void 0!==p&&(d=o.indexOf(p))<0&&(d=n.activeIndex-1),n.slideTo(d,e,t,i)},slideReset:function(e,t,i){return void 0===e&&(e=this.params.speed),void 0===t&&(t=!0),this.slideTo(this.activeIndex,e,t,i)},slideToClosest:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var n,r,s=this,a=s.activeIndex,o=Math.floor(a/s.params.slidesPerGroup);return o<s.snapGrid.length-1&&(n=s.rtlTranslate?s.translate:-s.translate,r=s.snapGrid[o],(s.snapGrid[o+1]-r)/2<n-r&&(a=s.params.slidesPerGroup)),s.slideTo(a,e,t,i)},slideToClickedSlide:function(){var e,t=this,i=t.params,n=t.$wrapperEl,r="auto"===i.slidesPerView?t.slidesPerViewDynamic():i.slidesPerView,s=t.clickedIndex;if(i.loop){if(t.animating)return;e=parseInt(D(t.clickedSlide).attr("data-swiper-slide-index"),10),i.centeredSlides?s<t.loopedSlides-r/2||s>t.slides.length-t.loopedSlides+r/2?(t.loopFix(),s=n.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+i.slideDuplicateClass+")").eq(0).index(),ee.nextTick(function(){t.slideTo(s)})):t.slideTo(s):s>t.slides.length-r?(t.loopFix(),s=n.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+i.slideDuplicateClass+")").eq(0).index(),ee.nextTick(function(){t.slideTo(s)})):t.slideTo(s)}else t.slideTo(s)}},E={loopCreate:function(){var n=this,e=n.params,t=n.$wrapperEl;t.children("."+e.slideClass+"."+e.slideDuplicateClass).remove();var r=t.children("."+e.slideClass);if(e.loopFillGroupWithBlank){var i=e.slidesPerGroup-r.length%e.slidesPerGroup;if(i!==e.slidesPerGroup){for(var s=0;s<i;s+=1){var a=D(m.createElement("div")).addClass(e.slideClass+" "+e.slideBlankClass);t.append(a)}r=t.children("."+e.slideClass)}}"auto"!==e.slidesPerView||e.loopedSlides||(e.loopedSlides=r.length),n.loopedSlides=parseInt(e.loopedSlides||e.slidesPerView,10),n.loopedSlides+=e.loopAdditionalSlides,n.loopedSlides>r.length&&(n.loopedSlides=r.length);var o=[],l=[];r.each(function(e,t){var i=D(t);e<n.loopedSlides&&l.push(t),e<r.length&&e>=r.length-n.loopedSlides&&o.push(t),i.attr("data-swiper-slide-index",e)});for(var c=0;c<l.length;c+=1)t.append(D(l[c].cloneNode(!0)).addClass(e.slideDuplicateClass));for(var d=o.length-1;0<=d;--d)t.prepend(D(o[d].cloneNode(!0)).addClass(e.slideDuplicateClass))},loopFix:function(){var e,t=this,i=t.params,n=t.activeIndex,r=t.slides,s=t.loopedSlides,a=t.allowSlidePrev,o=t.allowSlideNext,l=t.snapGrid,c=t.rtlTranslate;t.allowSlidePrev=!0,t.allowSlideNext=!0;var d=-l[n]-t.getTranslate();n<s?(e=r.length-3*s+n,e+=s,t.slideTo(e,0,!1,!0)&&0!=d&&t.setTranslate((c?-t.translate:t.translate)-d)):("auto"===i.slidesPerView&&2*s<=n||n>=r.length-s)&&(e=-r.length+n+s,e+=s,t.slideTo(e,0,!1,!0)&&0!=d&&t.setTranslate((c?-t.translate:t.translate)-d)),t.allowSlidePrev=a,t.allowSlideNext=o},loopDestroy:function(){var e=this.$wrapperEl,t=this.params,i=this.slides;e.children("."+t.slideClass+"."+t.slideDuplicateClass+",."+t.slideClass+"."+t.slideBlankClass).remove(),i.removeAttr("data-swiper-slide-index")}},x={setGrabCursor:function(e){var t;te.touch||!this.params.simulateTouch||this.params.watchOverflow&&this.isLocked||((t=this.el).style.cursor="move",t.style.cursor=e?"-webkit-grabbing":"-webkit-grab",t.style.cursor=e?"-moz-grabbin":"-moz-grab",t.style.cursor=e?"grabbing":"grab")},unsetGrabCursor:function(){te.touch||this.params.watchOverflow&&this.isLocked||(this.el.style.cursor="")}},_={appendSlide:function(e){var t=this.$wrapperEl,i=this.params;if(i.loop&&this.loopDestroy(),"object"==typeof e&&"length"in e)for(var n=0;n<e.length;n+=1)e[n]&&t.append(e[n]);else t.append(e);i.loop&&this.loopCreate(),i.observer&&te.observer||this.update()},prependSlide:function(e){var t=this.params,i=this.$wrapperEl,n=this.activeIndex;t.loop&&this.loopDestroy();var r=n+1;if("object"==typeof e&&"length"in e){for(var s=0;s<e.length;s+=1)e[s]&&i.prepend(e[s]);r=n+e.length}else i.prepend(e);t.loop&&this.loopCreate(),t.observer&&te.observer||this.update(),this.slideTo(r,0,!1)},addSlide:function(e,t){var i=this,n=i.$wrapperEl,r=i.params,s=i.activeIndex;r.loop&&(s-=i.loopedSlides,i.loopDestroy(),i.slides=n.children("."+r.slideClass));var a=i.slides.length;if(e<=0)i.prependSlide(t);else if(a<=e)i.appendSlide(t);else{for(var o=e<s?s+1:s,l=[],c=a-1;e<=c;--c){var d=i.slides.eq(c);d.remove(),l.unshift(d)}if("object"==typeof t&&"length"in t){for(var u=0;u<t.length;u+=1)t[u]&&n.append(t[u]);o=e<s?s+t.length:s}else n.append(t);for(var h=0;h<l.length;h+=1)n.append(l[h]);r.loop&&i.loopCreate(),r.observer&&te.observer||i.update(),r.loop?i.slideTo(o+i.loopedSlides,0,!1):i.slideTo(o,0,!1)}},removeSlide:function(e){var t=this,i=t.params,n=t.$wrapperEl,r=t.activeIndex;i.loop&&(r-=t.loopedSlides,t.loopDestroy(),t.slides=n.children("."+i.slideClass));var s,a=r;if("object"==typeof e&&"length"in e){for(var o=0;o<e.length;o+=1)s=e[o],t.slides[s]&&t.slides.eq(s).remove(),s<a&&--a;a=Math.max(a,0)}else s=e,t.slides[s]&&t.slides.eq(s).remove(),s<a&&--a,a=Math.max(a,0);i.loop&&t.loopCreate(),i.observer&&te.observer||t.update(),i.loop?t.slideTo(a+t.loopedSlides,0,!1):t.slideTo(a,0,!1)},removeAllSlides:function(){for(var e=[],t=0;t<this.slides.length;t+=1)e.push(t);this.removeSlide(e)}},T=(d=J.navigator.userAgent,u={ios:!1,android:!1,androidChrome:!1,desktop:!1,windows:!1,iphone:!1,ipod:!1,ipad:!1,cordova:J.cordova||J.phonegap,phonegap:J.cordova||J.phonegap},h=d.match(/(Windows Phone);?[\s\/]+([\d.]+)?/),p=d.match(/(Android);?[\s\/]+([\d.]+)?/),f=d.match(/(iPad).*OS\s([\d_]+)/),g=d.match(/(iPod)(.*OS\s([\d_]+))?/),v=!f&&d.match(/(iPhone\sOS|iOS)\s([\d_]+)/),h&&(u.os="windows",u.osVersion=h[2],u.windows=!0),p&&!h&&(u.os="android",u.osVersion=p[2],u.android=!0,u.androidChrome=0<=d.toLowerCase().indexOf("chrome")),(f||v||g)&&(u.os="ios",u.ios=!0),v&&!g&&(u.osVersion=v[2].replace(/_/g,"."),u.iphone=!0),f&&(u.osVersion=f[2].replace(/_/g,"."),u.ipad=!0),g&&(u.osVersion=g[3]?g[3].replace(/_/g,"."):null,u.iphone=!0),u.ios&&u.osVersion&&0<=d.indexOf("Version/")&&"10"===u.osVersion.split(".")[0]&&(u.osVersion=d.toLowerCase().split("version/")[1].split(" ")[0]),u.desktop=!(u.os||u.android||u.webView),u.webView=(v||f||g)&&d.match(/.*AppleWebKit(?!.*Safari)/i),u.os&&"ios"===u.os&&(o=u.osVersion.split("."),c=m.querySelector('meta[name="viewport"]'),u.minimalUi=!u.webView&&(g||v)&&(7==+o[0]?1<=+o[1]:7<+o[0])&&c&&0<=c.getAttribute("content").indexOf("minimal-ui")),u.pixelRatio=J.devicePixelRatio||1,u);function C(){var e,t,i,n,r=this,s=r.params,a=r.el;a&&0===a.offsetWidth||(s.breakpoints&&r.setBreakpoint(),e=r.allowSlideNext,t=r.allowSlidePrev,i=r.snapGrid,r.allowSlideNext=!0,r.allowSlidePrev=!0,r.updateSize(),r.updateSlides(),s.freeMode?(n=Math.min(Math.max(r.translate,r.maxTranslate()),r.minTranslate()),r.setTranslate(n),r.updateActiveIndex(),r.updateSlidesClasses(),s.autoHeight&&r.updateAutoHeight()):(r.updateSlidesClasses(),("auto"===s.slidesPerView||1<s.slidesPerView)&&r.isEnd&&!r.params.centeredSlides?r.slideTo(r.slides.length-1,0,!1,!0):r.slideTo(r.activeIndex,0,!1,!0)),r.allowSlidePrev=t,r.allowSlideNext=e,r.params.watchOverflow&&i!==r.snapGrid&&r.checkOverflow())}var S,k,N,L,I={attachEvents:function(){var e=this,t=e.params,i=e.touchEvents,n=e.el,r=e.wrapperEl;e.onTouchStart=function(e){var t,i,n,r,s,a,o,l=this,c=l.touchEventsData,d=l.params,u=l.touches;l.animating&&d.preventInteractionOnTransition||((t=e).originalEvent&&(t=t.originalEvent),c.isTouchEvent="touchstart"===t.type,!c.isTouchEvent&&"which"in t&&3===t.which||!c.isTouchEvent&&"button"in t&&0<t.button||c.isTouched&&c.isMoved||(d.noSwiping&&D(t.target).closest(d.noSwipingSelector?d.noSwipingSelector:"."+d.noSwipingClass)[0]?l.allowClick=!0:d.swipeHandler&&!D(t).closest(d.swipeHandler)[0]||(u.currentX="touchstart"===t.type?t.targetTouches[0].pageX:t.pageX,u.currentY="touchstart"===t.type?t.targetTouches[0].pageY:t.pageY,i=u.currentX,n=u.currentY,r=d.edgeSwipeDetection||d.iOSEdgeSwipeDetection,s=d.edgeSwipeThreshold||d.iOSEdgeSwipeThreshold,r&&(i<=s||i>=J.screen.width-s)||(ee.extend(c,{isTouched:!0,isMoved:!1,allowTouchCallbacks:!0,isScrolling:void 0,startMoving:void 0}),u.startX=i,u.startY=n,c.touchStartTime=ee.now(),l.allowClick=!0,l.updateSize(),l.swipeDirection=void 0,0<d.threshold&&(c.allowThresholdMove=!1),"touchstart"!==t.type&&(a=!0,D(t.target).is(c.formElements)&&(a=!1),m.activeElement&&D(m.activeElement).is(c.formElements)&&m.activeElement!==t.target&&m.activeElement.blur(),o=a&&l.allowTouchMove&&d.touchStartPreventDefault,(d.touchStartForcePreventDefault||o)&&t.preventDefault()),l.emit("touchStart",t)))))}.bind(e),e.onTouchMove=function(e){var t=this,i=t.touchEventsData,n=t.params,r=t.touches,s=t.rtlTranslate,a=e;if(a.originalEvent&&(a=a.originalEvent),i.isTouched){if(!i.isTouchEvent||"mousemove"!==a.type){var o="touchmove"===a.type?a.targetTouches[0].pageX:a.pageX,l="touchmove"===a.type?a.targetTouches[0].pageY:a.pageY;if(a.preventedByNestedSwiper)return r.startX=o,void(r.startY=l);if(!t.allowTouchMove)return t.allowClick=!1,void(i.isTouched&&(ee.extend(r,{startX:o,startY:l,currentX:o,currentY:l}),i.touchStartTime=ee.now()));if(i.isTouchEvent&&n.touchReleaseOnEdges&&!n.loop)if(t.isVertical()){if(l<r.startY&&t.translate<=t.maxTranslate()||l>r.startY&&t.translate>=t.minTranslate())return i.isTouched=!1,void(i.isMoved=!1)}else if(o<r.startX&&t.translate<=t.maxTranslate()||o>r.startX&&t.translate>=t.minTranslate())return;if(i.isTouchEvent&&m.activeElement&&a.target===m.activeElement&&D(a.target).is(i.formElements))return i.isMoved=!0,void(t.allowClick=!1);if(i.allowTouchCallbacks&&t.emit("touchMove",a),!(a.targetTouches&&1<a.targetTouches.length)){r.currentX=o,r.currentY=l;var c,d=r.currentX-r.startX,u=r.currentY-r.startY;if(!(t.params.threshold&&Math.sqrt(Math.pow(d,2)+Math.pow(u,2))<t.params.threshold))if(void 0===i.isScrolling&&(t.isHorizontal()&&r.currentY===r.startY||t.isVertical()&&r.currentX===r.startX?i.isScrolling=!1:25<=d*d+u*u&&(c=180*Math.atan2(Math.abs(u),Math.abs(d))/Math.PI,i.isScrolling=t.isHorizontal()?c>n.touchAngle:90-c>n.touchAngle)),i.isScrolling&&t.emit("touchMoveOpposite",a),void 0===i.startMoving&&(r.currentX===r.startX&&r.currentY===r.startY||(i.startMoving=!0)),i.isScrolling)i.isTouched=!1;else if(i.startMoving){t.allowClick=!1,a.preventDefault(),n.touchMoveStopPropagation&&!n.nested&&a.stopPropagation(),i.isMoved||(n.loop&&t.loopFix(),i.startTranslate=t.getTranslate(),t.setTransition(0),t.animating&&t.$wrapperEl.trigger("webkitTransitionEnd transitionend"),i.allowMomentumBounce=!1,!n.grabCursor||!0!==t.allowSlideNext&&!0!==t.allowSlidePrev||t.setGrabCursor(!0),t.emit("sliderFirstMove",a)),t.emit("sliderMove",a),i.isMoved=!0;var h=t.isHorizontal()?d:u;r.diff=h,h*=n.touchRatio,s&&(h=-h),t.swipeDirection=0<h?"prev":"next",i.currentTranslate=h+i.startTranslate;var p=!0,f=n.resistanceRatio;if(n.touchReleaseOnEdges&&(f=0),0<h&&i.currentTranslate>t.minTranslate()?(p=!1,n.resistance&&(i.currentTranslate=t.minTranslate()-1+Math.pow(-t.minTranslate()+i.startTranslate+h,f))):h<0&&i.currentTranslate<t.maxTranslate()&&(p=!1,n.resistance&&(i.currentTranslate=t.maxTranslate()+1-Math.pow(t.maxTranslate()-i.startTranslate-h,f))),p&&(a.preventedByNestedSwiper=!0),!t.allowSlideNext&&"next"===t.swipeDirection&&i.currentTranslate<i.startTranslate&&(i.currentTranslate=i.startTranslate),!t.allowSlidePrev&&"prev"===t.swipeDirection&&i.currentTranslate>i.startTranslate&&(i.currentTranslate=i.startTranslate),0<n.threshold){if(!(Math.abs(h)>n.threshold||i.allowThresholdMove))return void(i.currentTranslate=i.startTranslate);if(!i.allowThresholdMove)return i.allowThresholdMove=!0,r.startX=r.currentX,r.startY=r.currentY,i.currentTranslate=i.startTranslate,void(r.diff=t.isHorizontal()?r.currentX-r.startX:r.currentY-r.startY)}n.followFinger&&((n.freeMode||n.watchSlidesProgress||n.watchSlidesVisibility)&&(t.updateActiveIndex(),t.updateSlidesClasses()),n.freeMode&&(0===i.velocities.length&&i.velocities.push({position:r[t.isHorizontal()?"startX":"startY"],time:i.touchStartTime}),i.velocities.push({position:r[t.isHorizontal()?"currentX":"currentY"],time:ee.now()})),t.updateProgress(i.currentTranslate),t.setTranslate(i.currentTranslate))}}}}else i.startMoving&&i.isScrolling&&t.emit("touchMoveOpposite",a)}.bind(e),e.onTouchEnd=function(e){var t=this,i=t.touchEventsData,n=t.params,r=t.touches,s=t.rtlTranslate,a=t.$wrapperEl,o=t.slidesGrid,l=t.snapGrid,c=e;if(c.originalEvent&&(c=c.originalEvent),i.allowTouchCallbacks&&t.emit("touchEnd",c),i.allowTouchCallbacks=!1,!i.isTouched)return i.isMoved&&n.grabCursor&&t.setGrabCursor(!1),i.isMoved=!1,void(i.startMoving=!1);n.grabCursor&&i.isMoved&&i.isTouched&&(!0===t.allowSlideNext||!0===t.allowSlidePrev)&&t.setGrabCursor(!1);var d,u,h,p,f,m=ee.now(),g=m-i.touchStartTime;if(t.allowClick&&(t.updateClickedSlide(c),t.emit("tap",c),g<300&&300<m-i.lastClickTime&&(i.clickTimeout&&clearTimeout(i.clickTimeout),i.clickTimeout=ee.nextTick(function(){t&&!t.destroyed&&t.emit("click",c)},300)),g<300&&m-i.lastClickTime<300&&(i.clickTimeout&&clearTimeout(i.clickTimeout),t.emit("doubleTap",c))),i.lastClickTime=ee.now(),ee.nextTick(function(){t.destroyed||(t.allowClick=!0)}),!i.isTouched||!i.isMoved||!t.swipeDirection||0===r.diff||i.currentTranslate===i.startTranslate)return i.isTouched=!1,i.isMoved=!1,void(i.startMoving=!1);if(i.isTouched=!1,i.isMoved=!1,i.startMoving=!1,d=n.followFinger?s?t.translate:-t.translate:-i.currentTranslate,n.freeMode){if(d<-t.minTranslate())return void t.slideTo(t.activeIndex);if(d>-t.maxTranslate())return void(t.slides.length<l.length?t.slideTo(l.length-1):t.slideTo(t.slides.length-1));if(n.freeModeMomentum){1<i.velocities.length?(u=i.velocities.pop(),h=i.velocities.pop(),p=u.position-h.position,f=u.time-h.time,t.velocity=p/f,t.velocity/=2,Math.abs(t.velocity)<n.freeModeMinimumVelocity&&(t.velocity=0),(150<f||300<ee.now()-u.time)&&(t.velocity=0)):t.velocity=0,t.velocity*=n.freeModeMomentumVelocityRatio,i.velocities.length=0;var v=1e3*n.freeModeMomentumRatio,y=t.velocity*v,b=t.translate+y;s&&(b=-b);var w,E,x=!1,_=20*Math.abs(t.velocity)*n.freeModeMomentumBounceRatio;if(b<t.maxTranslate())n.freeModeMomentumBounce?(b+t.maxTranslate()<-_&&(b=t.maxTranslate()-_),w=t.maxTranslate(),x=!0,i.allowMomentumBounce=!0):b=t.maxTranslate(),n.loop&&n.centeredSlides&&(E=!0);else if(b>t.minTranslate())n.freeModeMomentumBounce?(b-t.minTranslate()>_&&(b=t.minTranslate()+_),w=t.minTranslate(),x=!0,i.allowMomentumBounce=!0):b=t.minTranslate(),n.loop&&n.centeredSlides&&(E=!0);else if(n.freeModeSticky){for(var T,C=0;C<l.length;C+=1)if(l[C]>-b){T=C;break}b=-(Math.abs(l[T]-b)<Math.abs(l[T-1]-b)||"next"===t.swipeDirection?l[T]:l[T-1])}if(E&&t.once("transitionEnd",function(){t.loopFix()}),0!==t.velocity)v=s?Math.abs((-b-t.translate)/t.velocity):Math.abs((b-t.translate)/t.velocity);else if(n.freeModeSticky)return void t.slideToClosest();n.freeModeMomentumBounce&&x?(t.updateProgress(w),t.setTransition(v),t.setTranslate(b),t.transitionStart(!0,t.swipeDirection),t.animating=!0,a.transitionEnd(function(){t&&!t.destroyed&&i.allowMomentumBounce&&(t.emit("momentumBounce"),t.setTransition(n.speed),t.setTranslate(w),a.transitionEnd(function(){t&&!t.destroyed&&t.transitionEnd()}))})):t.velocity?(t.updateProgress(b),t.setTransition(v),t.setTranslate(b),t.transitionStart(!0,t.swipeDirection),t.animating||(t.animating=!0,a.transitionEnd(function(){t&&!t.destroyed&&t.transitionEnd()}))):t.updateProgress(b),t.updateActiveIndex(),t.updateSlidesClasses()}else if(n.freeModeSticky)return void t.slideToClosest();(!n.freeModeMomentum||g>=n.longSwipesMs)&&(t.updateProgress(),t.updateActiveIndex(),t.updateSlidesClasses())}else{for(var S=0,k=t.slidesSizesGrid[0],N=0;N<o.length;N+=n.slidesPerGroup)void 0!==o[N+n.slidesPerGroup]?d>=o[N]&&d<o[N+n.slidesPerGroup]&&(k=o[(S=N)+n.slidesPerGroup]-o[N]):d>=o[N]&&(S=N,k=o[o.length-1]-o[o.length-2]);var L=(d-o[S])/k;if(g>n.longSwipesMs){if(!n.longSwipes)return void t.slideTo(t.activeIndex);"next"===t.swipeDirection&&(L>=n.longSwipesRatio?t.slideTo(S+n.slidesPerGroup):t.slideTo(S)),"prev"===t.swipeDirection&&(L>1-n.longSwipesRatio?t.slideTo(S+n.slidesPerGroup):t.slideTo(S))}else{if(!n.shortSwipes)return void t.slideTo(t.activeIndex);"next"===t.swipeDirection&&t.slideTo(S+n.slidesPerGroup),"prev"===t.swipeDirection&&t.slideTo(S)}}}.bind(e),e.onClick=function(e){this.allowClick||(this.params.preventClicks&&e.preventDefault(),this.params.preventClicksPropagation&&this.animating&&(e.stopPropagation(),e.stopImmediatePropagation()))}.bind(e);var s,a="container"===t.touchEventsTarget?n:r,o=!!t.nested;te.touch||!te.pointerEvents&&!te.prefixedPointerEvents?(te.touch&&(s=!("touchstart"!==i.start||!te.passiveListener||!t.passiveListeners)&&{passive:!0,capture:!1},a.addEventListener(i.start,e.onTouchStart,s),a.addEventListener(i.move,e.onTouchMove,te.passiveListener?{passive:!1,capture:o}:o),a.addEventListener(i.end,e.onTouchEnd,s)),(t.simulateTouch&&!T.ios&&!T.android||t.simulateTouch&&!te.touch&&T.ios)&&(a.addEventListener("mousedown",e.onTouchStart,!1),m.addEventListener("mousemove",e.onTouchMove,o),m.addEventListener("mouseup",e.onTouchEnd,!1))):(a.addEventListener(i.start,e.onTouchStart,!1),m.addEventListener(i.move,e.onTouchMove,o),m.addEventListener(i.end,e.onTouchEnd,!1)),(t.preventClicks||t.preventClicksPropagation)&&a.addEventListener("click",e.onClick,!0),e.on(T.ios||T.android?"resize orientationchange observerUpdate":"resize observerUpdate",C,!0)},detachEvents:function(){var e,t=this,i=t.params,n=t.touchEvents,r=t.el,s=t.wrapperEl,a="container"===i.touchEventsTarget?r:s,o=!!i.nested;te.touch||!te.pointerEvents&&!te.prefixedPointerEvents?(te.touch&&(e=!("onTouchStart"!==n.start||!te.passiveListener||!i.passiveListeners)&&{passive:!0,capture:!1},a.removeEventListener(n.start,t.onTouchStart,e),a.removeEventListener(n.move,t.onTouchMove,o),a.removeEventListener(n.end,t.onTouchEnd,e)),(i.simulateTouch&&!T.ios&&!T.android||i.simulateTouch&&!te.touch&&T.ios)&&(a.removeEventListener("mousedown",t.onTouchStart,!1),m.removeEventListener("mousemove",t.onTouchMove,o),m.removeEventListener("mouseup",t.onTouchEnd,!1))):(a.removeEventListener(n.start,t.onTouchStart,!1),m.removeEventListener(n.move,t.onTouchMove,o),m.removeEventListener(n.end,t.onTouchEnd,!1)),(i.preventClicks||i.preventClicksPropagation)&&a.removeEventListener("click",t.onClick,!0),t.off(T.ios||T.android?"resize orientationchange observerUpdate":"resize observerUpdate",C)}},A={setBreakpoint:function(){var e=this,t=e.activeIndex,i=e.initialized,n=e.loopedSlides;void 0===n&&(n=0);var r,s,a,o,l=e.params,c=l.breakpoints;!c||c&&0===Object.keys(c).length||(r=e.getBreakpoint(c))&&e.currentBreakpoint!==r&&((s=r in c?c[r]:void 0)&&["slidesPerView","spaceBetween","slidesPerGroup"].forEach(function(e){var t=s[e];void 0!==t&&(s[e]="slidesPerView"!==e||"AUTO"!==t&&"auto"!==t?"slidesPerView"===e?parseFloat(t):parseInt(t,10):"auto")}),a=s||e.originalParams,o=l.loop&&a.slidesPerView!==l.slidesPerView,ee.extend(e.params,a),ee.extend(e,{allowTouchMove:e.params.allowTouchMove,allowSlideNext:e.params.allowSlideNext,allowSlidePrev:e.params.allowSlidePrev}),e.currentBreakpoint=r,o&&i&&(e.loopDestroy(),e.loopCreate(),e.updateSlides(),e.slideTo(t-n+e.loopedSlides,0,!1)),e.emit("breakpoint",a))},getBreakpoint:function(e){if(e){var t=!1,i=[];Object.keys(e).forEach(function(e){i.push(e)}),i.sort(function(e,t){return parseInt(e,10)-parseInt(t,10)});for(var n=0;n<i.length;n+=1){var r=i[n];this.params.breakpointsInverse?r<=J.innerWidth&&(t=r):r>=J.innerWidth&&!t&&(t=r)}return t||"max"}}},M={isIE:!!J.navigator.userAgent.match(/Trident/g)||!!J.navigator.userAgent.match(/MSIE/g),isEdge:!!J.navigator.userAgent.match(/Edge/g),isSafari:0<=(S=J.navigator.userAgent.toLowerCase()).indexOf("safari")&&S.indexOf("chrome")<0&&S.indexOf("android")<0,isUiWebView:/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(J.navigator.userAgent)},O={init:!0,direction:"horizontal",touchEventsTarget:"container",initialSlide:0,speed:300,preventInteractionOnTransition:!1,edgeSwipeDetection:!1,edgeSwipeThreshold:20,freeMode:!1,freeModeMomentum:!0,freeModeMomentumRatio:1,freeModeMomentumBounce:!0,freeModeMomentumBounceRatio:1,freeModeMomentumVelocityRatio:1,freeModeSticky:!1,freeModeMinimumVelocity:.02,autoHeight:!1,setWrapperSize:!1,virtualTranslate:!1,effect:"slide",breakpoints:void 0,breakpointsInverse:!1,spaceBetween:0,slidesPerView:1,slidesPerColumn:1,slidesPerColumnFill:"column",slidesPerGroup:1,centeredSlides:!1,slidesOffsetBefore:0,slidesOffsetAfter:0,normalizeSlideIndex:!0,centerInsufficientSlides:!1,watchOverflow:!1,roundLengths:!1,touchRatio:1,touchAngle:45,simulateTouch:!0,shortSwipes:!0,longSwipes:!0,longSwipesRatio:.5,longSwipesMs:300,followFinger:!0,allowTouchMove:!0,threshold:0,touchMoveStopPropagation:!0,touchStartPreventDefault:!0,touchStartForcePreventDefault:!1,touchReleaseOnEdges:!1,uniqueNavElements:!0,resistance:!0,resistanceRatio:.85,watchSlidesProgress:!1,watchSlidesVisibility:!1,grabCursor:!1,preventClicks:!0,preventClicksPropagation:!0,slideToClickedSlide:!1,preloadImages:!0,updateOnImagesReady:!0,loop:!1,loopAdditionalSlides:0,loopedSlides:null,loopFillGroupWithBlank:!1,allowSlidePrev:!0,allowSlideNext:!0,swipeHandler:null,noSwiping:!0,noSwipingClass:"swiper-no-swiping",noSwipingSelector:null,passiveListeners:!0,containerModifierClass:"swiper-container-",slideClass:"swiper-slide",slideBlankClass:"swiper-slide-invisible-blank",slideActiveClass:"swiper-slide-active",slideDuplicateActiveClass:"swiper-slide-duplicate-active",slideVisibleClass:"swiper-slide-visible",slideDuplicateClass:"swiper-slide-duplicate",slideNextClass:"swiper-slide-next",slideDuplicateNextClass:"swiper-slide-duplicate-next",slidePrevClass:"swiper-slide-prev",slideDuplicatePrevClass:"swiper-slide-duplicate-prev",wrapperClass:"swiper-wrapper",runCallbacksOnInit:!0},P={update:y,translate:b,transition:{setTransition:function(e,t){this.$wrapperEl.transition(e),this.emit("setTransition",e,t)},transitionStart:function(e,t){void 0===e&&(e=!0);var i=this.activeIndex,n=this.params,r=this.previousIndex;n.autoHeight&&this.updateAutoHeight();var s=(s=t)||(r<i?"next":i<r?"prev":"reset");if(this.emit("transitionStart"),e&&i!==r){if("reset"===s)return void this.emit("slideResetTransitionStart");this.emit("slideChangeTransitionStart"),"next"===s?this.emit("slideNextTransitionStart"):this.emit("slidePrevTransitionStart")}},transitionEnd:function(e,t){void 0===e&&(e=!0);var i=this.activeIndex,n=this.previousIndex;this.animating=!1,this.setTransition(0);var r=(r=t)||(n<i?"next":i<n?"prev":"reset");if(this.emit("transitionEnd"),e&&i!==n){if("reset"===r)return void this.emit("slideResetTransitionEnd");this.emit("slideChangeTransitionEnd"),"next"===r?this.emit("slideNextTransitionEnd"):this.emit("slidePrevTransitionEnd")}}},slide:w,loop:E,grabCursor:x,manipulation:_,events:I,breakpoints:A,checkOverflow:{checkOverflow:function(){var e=this,t=e.isLocked;e.isLocked=1===e.snapGrid.length,e.allowSlideNext=!e.isLocked,e.allowSlidePrev=!e.isLocked,t!==e.isLocked&&e.emit(e.isLocked?"lock":"unlock"),t&&t!==e.isLocked&&(e.isEnd=!1,e.navigation.update())}},classes:{addClasses:function(){var t=this.classNames,i=this.params,e=this.rtl,n=this.$el,r=[];r.push(i.direction),i.freeMode&&r.push("free-mode"),te.flexbox||r.push("no-flexbox"),i.autoHeight&&r.push("autoheight"),e&&r.push("rtl"),1<i.slidesPerColumn&&r.push("multirow"),T.android&&r.push("android"),T.ios&&r.push("ios"),(M.isIE||M.isEdge)&&(te.pointerEvents||te.prefixedPointerEvents)&&r.push("wp8-"+i.direction),r.forEach(function(e){t.push(i.containerModifierClass+e)}),n.addClass(t.join(" "))},removeClasses:function(){var e=this.$el,t=this.classNames;e.removeClass(t.join(" "))}},images:{loadImage:function(e,t,i,n,r,s){var a;function o(){s&&s()}(!e.complete||!r)&&t?((a=new J.Image).onload=o,a.onerror=o,n&&(a.sizes=n),i&&(a.srcset=i),t&&(a.src=t)):o()},preloadImages:function(){var e=this;function t(){null!=e&&e&&!e.destroyed&&(void 0!==e.imagesLoaded&&(e.imagesLoaded+=1),e.imagesLoaded===e.imagesToLoad.length&&(e.params.updateOnImagesReady&&e.update(),e.emit("imagesReady")))}e.imagesToLoad=e.$el.find("img");for(var i=0;i<e.imagesToLoad.length;i+=1){var n=e.imagesToLoad[i];e.loadImage(n,n.currentSrc||n.getAttribute("src"),n.srcset||n.getAttribute("srcset"),n.sizes||n.getAttribute("sizes"),!0,t)}}}},z={},j=function(u){function h(){for(var e,r,t=[],i=arguments.length;i--;)t[i]=arguments[i];r=(r=1===t.length&&t[0].constructor&&t[0].constructor===Object?t[0]:(e=t[0],t[1]))||{},r=ee.extend({},r),e&&!r.el&&(r.el=e),u.call(this,r),Object.keys(P).forEach(function(t){Object.keys(P[t]).forEach(function(e){h.prototype[e]||(h.prototype[e]=P[t][e])})});var s=this;void 0===s.modules&&(s.modules={}),Object.keys(s.modules).forEach(function(e){var t=s.modules[e];if(t.params){var i=Object.keys(t.params)[0],n=t.params[i];if("object"!=typeof n||null===n)return;if(!(i in r&&"enabled"in n))return;!0===r[i]&&(r[i]={enabled:!0}),"object"!=typeof r[i]||"enabled"in r[i]||(r[i].enabled=!0),r[i]||(r[i]={enabled:!1})}});var n=ee.extend({},O);s.useModulesParams(n),s.params=ee.extend({},n,z,r),s.originalParams=ee.extend({},s.params),s.passedParams=ee.extend({},r);var a=(s.$=D)(s.params.el);if(e=a[0]){if(1<a.length){var o=[];return a.each(function(e,t){var i=ee.extend({},r,{el:t});o.push(new h(i))}),o}e.swiper=s,a.data("swiper",s);var l,c,d=a.children("."+s.params.wrapperClass);return ee.extend(s,{$el:a,el:e,$wrapperEl:d,wrapperEl:d[0],classNames:[],slides:D(),slidesGrid:[],snapGrid:[],slidesSizesGrid:[],isHorizontal:function(){return"horizontal"===s.params.direction},isVertical:function(){return"vertical"===s.params.direction},rtl:"rtl"===e.dir.toLowerCase()||"rtl"===a.css("direction"),rtlTranslate:"horizontal"===s.params.direction&&("rtl"===e.dir.toLowerCase()||"rtl"===a.css("direction")),wrongRTL:"-webkit-box"===d.css("display"),activeIndex:0,realIndex:0,isBeginning:!0,isEnd:!1,translate:0,previousTranslate:0,progress:0,velocity:0,animating:!1,allowSlideNext:s.params.allowSlideNext,allowSlidePrev:s.params.allowSlidePrev,touchEvents:(l=["touchstart","touchmove","touchend"],c=["mousedown","mousemove","mouseup"],te.pointerEvents?c=["pointerdown","pointermove","pointerup"]:te.prefixedPointerEvents&&(c=["MSPointerDown","MSPointerMove","MSPointerUp"]),s.touchEventsTouch={start:l[0],move:l[1],end:l[2]},s.touchEventsDesktop={start:c[0],move:c[1],end:c[2]},te.touch||!s.params.simulateTouch?s.touchEventsTouch:s.touchEventsDesktop),touchEventsData:{isTouched:void 0,isMoved:void 0,allowTouchCallbacks:void 0,touchStartTime:void 0,isScrolling:void 0,currentTranslate:void 0,startTranslate:void 0,allowThresholdMove:void 0,formElements:"input, select, option, textarea, button, video",lastClickTime:ee.now(),clickTimeout:void 0,velocities:[],allowMomentumBounce:void 0,isTouchEvent:void 0,startMoving:void 0},allowClick:!0,allowTouchMove:s.params.allowTouchMove,touches:{startX:0,startY:0,currentX:0,currentY:0,diff:0},imagesToLoad:[],imagesLoaded:0}),s.useModules(),s.params.init&&s.init(),s}}u&&(h.__proto__=u);var e={extendedDefaults:{configurable:!0},defaults:{configurable:!0},Class:{configurable:!0},$:{configurable:!0}};return((h.prototype=Object.create(u&&u.prototype)).constructor=h).prototype.slidesPerViewDynamic=function(){var e=this.params,t=this.slides,i=this.slidesGrid,n=this.size,r=this.activeIndex,s=1;if(e.centeredSlides){for(var a,o=t[r].swiperSlideSize,l=r+1;l<t.length;l+=1)t[l]&&!a&&(s+=1,n<(o+=t[l].swiperSlideSize)&&(a=!0));for(var c=r-1;0<=c;--c)t[c]&&!a&&(s+=1,n<(o+=t[c].swiperSlideSize)&&(a=!0))}else for(var d=r+1;d<t.length;d+=1)i[d]-i[r]<n&&(s+=1);return s},h.prototype.update=function(){var e,t,i=this;function n(){var e=i.rtlTranslate?-1*i.translate:i.translate,t=Math.min(Math.max(e,i.maxTranslate()),i.minTranslate());i.setTranslate(t),i.updateActiveIndex(),i.updateSlidesClasses()}i&&!i.destroyed&&(e=i.snapGrid,(t=i.params).breakpoints&&i.setBreakpoint(),i.updateSize(),i.updateSlides(),i.updateProgress(),i.updateSlidesClasses(),i.params.freeMode?(n(),i.params.autoHeight&&i.updateAutoHeight()):(("auto"===i.params.slidesPerView||1<i.params.slidesPerView)&&i.isEnd&&!i.params.centeredSlides?i.slideTo(i.slides.length-1,0,!1,!0):i.slideTo(i.activeIndex,0,!1,!0))||n(),t.watchOverflow&&e!==i.snapGrid&&i.checkOverflow(),i.emit("update"))},h.prototype.init=function(){var e=this;e.initialized||(e.emit("beforeInit"),e.params.breakpoints&&e.setBreakpoint(),e.addClasses(),e.params.loop&&e.loopCreate(),e.updateSize(),e.updateSlides(),e.params.watchOverflow&&e.checkOverflow(),e.params.grabCursor&&e.setGrabCursor(),e.params.preloadImages&&e.preloadImages(),e.params.loop?e.slideTo(e.params.initialSlide+e.loopedSlides,0,e.params.runCallbacksOnInit):e.slideTo(e.params.initialSlide,0,e.params.runCallbacksOnInit),e.attachEvents(),e.initialized=!0,e.emit("init"))},h.prototype.destroy=function(e,t){void 0===e&&(e=!0),void 0===t&&(t=!0);var i=this,n=i.params,r=i.$el,s=i.$wrapperEl,a=i.slides;return void 0===i.params||i.destroyed||(i.emit("beforeDestroy"),i.initialized=!1,i.detachEvents(),n.loop&&i.loopDestroy(),t&&(i.removeClasses(),r.removeAttr("style"),s.removeAttr("style"),a&&a.length&&a.removeClass([n.slideVisibleClass,n.slideActiveClass,n.slideNextClass,n.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index").removeAttr("data-swiper-column").removeAttr("data-swiper-row")),i.emit("destroy"),Object.keys(i.eventsListeners).forEach(function(e){i.off(e)}),!1!==e&&(i.$el[0].swiper=null,i.$el.data("swiper",null),ee.deleteProps(i)),i.destroyed=!0),null},h.extendDefaults=function(e){ee.extend(z,e)},e.extendedDefaults.get=function(){return z},e.defaults.get=function(){return O},e.Class.get=function(){return u},e.$.get=function(){return D},Object.defineProperties(h,e),h}(e),B={name:"device",proto:{device:T},static:{device:T}},H={name:"support",proto:{support:te},static:{support:te}},R={name:"browser",proto:{browser:M},static:{browser:M}},$={name:"resize",create:function(){var e=this;ee.extend(e,{resize:{resizeHandler:function(){e&&!e.destroyed&&e.initialized&&(e.emit("beforeResize"),e.emit("resize"))},orientationChangeHandler:function(){e&&!e.destroyed&&e.initialized&&e.emit("orientationchange")}}})},on:{init:function(){J.addEventListener("resize",this.resize.resizeHandler),J.addEventListener("orientationchange",this.resize.orientationChangeHandler)},destroy:function(){J.removeEventListener("resize",this.resize.resizeHandler),J.removeEventListener("orientationchange",this.resize.orientationChangeHandler)}}},W={func:J.MutationObserver||J.WebkitMutationObserver,attach:function(e,t){void 0===t&&(t={});var i=this,n=new W.func(function(e){var t;1!==e.length?(t=function(){i.emit("observerUpdate",e[0])},J.requestAnimationFrame?J.requestAnimationFrame(t):J.setTimeout(t,0)):i.emit("observerUpdate",e[0])});n.observe(e,{attributes:void 0===t.attributes||t.attributes,childList:void 0===t.childList||t.childList,characterData:void 0===t.characterData||t.characterData}),i.observer.observers.push(n)},init:function(){if(te.observer&&this.params.observer){if(this.params.observeParents)for(var e=this.$el.parents(),t=0;t<e.length;t+=1)this.observer.attach(e[t]);this.observer.attach(this.$el[0],{childList:this.params.observeSlideChildren}),this.observer.attach(this.$wrapperEl[0],{attributes:!1})}},destroy:function(){this.observer.observers.forEach(function(e){e.disconnect()}),this.observer.observers=[]}},F={name:"observer",params:{observer:!1,observeParents:!1,observeSlideChildren:!1},create:function(){ee.extend(this,{observer:{init:W.init.bind(this),attach:W.attach.bind(this),destroy:W.destroy.bind(this),observers:[]}})},on:{init:function(){this.observer.init()},destroy:function(){this.observer.destroy()}}},q={update:function(e){var t=this,i=t.params,n=i.slidesPerView,r=i.slidesPerGroup,s=i.centeredSlides,a=t.params.virtual,o=a.addSlidesBefore,l=a.addSlidesAfter,c=t.virtual,d=c.from,u=c.to,h=c.slides,p=c.slidesGrid,f=c.renderSlide,m=c.offset;t.updateActiveIndex();var g,v=t.activeIndex||0,y=t.rtlTranslate?"right":t.isHorizontal()?"left":"top",b=s?(g=Math.floor(n/2)+r+o,Math.floor(n/2)+r+l):(g=n+(r-1)+o,r+l),w=Math.max((v||0)-b,0),E=Math.min((v||0)+g,h.length-1),x=(t.slidesGrid[w]||0)-(t.slidesGrid[0]||0);function _(){t.updateSlides(),t.updateProgress(),t.updateSlidesClasses(),t.lazy&&t.params.lazy.enabled&&t.lazy.load()}if(ee.extend(t.virtual,{from:w,to:E,offset:x,slidesGrid:t.slidesGrid}),d===w&&u===E&&!e)return t.slidesGrid!==p&&x!==m&&t.slides.css(y,x+"px"),void t.updateProgress();if(t.params.virtual.renderExternal)return t.params.virtual.renderExternal.call(t,{offset:x,from:w,to:E,slides:function(){for(var e=[],t=w;t<=E;t+=1)e.push(h[t]);return e}()}),void _();var T=[],C=[];if(e)t.$wrapperEl.find("."+t.params.slideClass).remove();else for(var S=d;S<=u;S+=1)(S<w||E<S)&&t.$wrapperEl.find("."+t.params.slideClass+'[data-swiper-slide-index="'+S+'"]').remove();for(var k=0;k<h.length;k+=1)w<=k&&k<=E&&(void 0===u||e?C.push(k):(u<k&&C.push(k),k<d&&T.push(k)));C.forEach(function(e){t.$wrapperEl.append(f(h[e],e))}),T.sort(function(e,t){return t-e}).forEach(function(e){t.$wrapperEl.prepend(f(h[e],e))}),t.$wrapperEl.children(".swiper-slide").css(y,x+"px"),_()},renderSlide:function(e,t){var i=this.params.virtual;if(i.cache&&this.virtual.cache[t])return this.virtual.cache[t];var n=i.renderSlide?D(i.renderSlide.call(this,e,t)):D('<div class="'+this.params.slideClass+'" data-swiper-slide-index="'+t+'">'+e+"</div>");return n.attr("data-swiper-slide-index")||n.attr("data-swiper-slide-index",t),i.cache&&(this.virtual.cache[t]=n),n},appendSlide:function(e){this.virtual.slides.push(e),this.virtual.update(!0)},prependSlide:function(e){var t,i;this.virtual.slides.unshift(e),this.params.virtual.cache&&(t=this.virtual.cache,i={},Object.keys(t).forEach(function(e){i[e+1]=t[e]}),this.virtual.cache=i),this.virtual.update(!0),this.slideNext(0)}},V={name:"virtual",params:{virtual:{enabled:!1,slides:[],cache:!0,renderSlide:null,renderExternal:null,addSlidesBefore:0,addSlidesAfter:0}},create:function(){ee.extend(this,{virtual:{update:q.update.bind(this),appendSlide:q.appendSlide.bind(this),prependSlide:q.prependSlide.bind(this),renderSlide:q.renderSlide.bind(this),slides:this.params.virtual.slides,cache:{}}})},on:{beforeInit:function(){var e;this.params.virtual.enabled&&(this.classNames.push(this.params.containerModifierClass+"virtual"),e={watchSlidesProgress:!0},ee.extend(this.params,e),ee.extend(this.originalParams,e),this.params.initialSlide||this.virtual.update())},setTranslate:function(){this.params.virtual.enabled&&this.virtual.update()}}},Y={handle:function(e){var t=this,i=t.rtlTranslate,n=e;n.originalEvent&&(n=n.originalEvent);var r=n.keyCode||n.charCode;if(!t.allowSlideNext&&(t.isHorizontal()&&39===r||t.isVertical()&&40===r))return!1;if(!t.allowSlidePrev&&(t.isHorizontal()&&37===r||t.isVertical()&&38===r))return!1;if(!(n.shiftKey||n.altKey||n.ctrlKey||n.metaKey||m.activeElement&&m.activeElement.nodeName&&("input"===m.activeElement.nodeName.toLowerCase()||"textarea"===m.activeElement.nodeName.toLowerCase()))){if(t.params.keyboard.onlyInViewport&&(37===r||39===r||38===r||40===r)){var s=!1;if(0<t.$el.parents("."+t.params.slideClass).length&&0===t.$el.parents("."+t.params.slideActiveClass).length)return;var a=J.innerWidth,o=J.innerHeight,l=t.$el.offset();i&&(l.left-=t.$el[0].scrollLeft);for(var c=[[l.left,l.top],[l.left+t.width,l.top],[l.left,l.top+t.height],[l.left+t.width,l.top+t.height]],d=0;d<c.length;d+=1){var u=c[d];0<=u[0]&&u[0]<=a&&0<=u[1]&&u[1]<=o&&(s=!0)}if(!s)return}t.isHorizontal()?(37!==r&&39!==r||(n.preventDefault?n.preventDefault():n.returnValue=!1),(39===r&&!i||37===r&&i)&&t.slideNext(),(37===r&&!i||39===r&&i)&&t.slidePrev()):(38!==r&&40!==r||(n.preventDefault?n.preventDefault():n.returnValue=!1),40===r&&t.slideNext(),38===r&&t.slidePrev()),t.emit("keyPress",r)}},enable:function(){this.keyboard.enabled||(D(m).on("keydown",this.keyboard.handle),this.keyboard.enabled=!0)},disable:function(){this.keyboard.enabled&&(D(m).off("keydown",this.keyboard.handle),this.keyboard.enabled=!1)}},X={name:"keyboard",params:{keyboard:{enabled:!1,onlyInViewport:!0}},create:function(){ee.extend(this,{keyboard:{enabled:!1,enable:Y.enable.bind(this),disable:Y.disable.bind(this),handle:Y.handle.bind(this)}})},on:{init:function(){this.params.keyboard.enabled&&this.keyboard.enable()},destroy:function(){this.keyboard.enabled&&this.keyboard.disable()}}},U={lastScrollTime:ee.now(),event:-1<J.navigator.userAgent.indexOf("firefox")?"DOMMouseScroll":((L=(N="onwheel")in m)||((k=m.createElement("div")).setAttribute(N,"return;"),L="function"==typeof k[N]),!L&&m.implementation&&m.implementation.hasFeature&&!0!==m.implementation.hasFeature("","")&&(L=m.implementation.hasFeature("Events.wheel","3.0")),L?"wheel":"mousewheel"),normalize:function(e){var t=0,i=0,n=0,r=0;return"detail"in e&&(i=e.detail),"wheelDelta"in e&&(i=-e.wheelDelta/120),"wheelDeltaY"in e&&(i=-e.wheelDeltaY/120),"wheelDeltaX"in e&&(t=-e.wheelDeltaX/120),"axis"in e&&e.axis===e.HORIZONTAL_AXIS&&(t=i,i=0),n=10*t,r=10*i,"deltaY"in e&&(r=e.deltaY),"deltaX"in e&&(n=e.deltaX),(n||r)&&e.deltaMode&&(1===e.deltaMode?(n*=40,r*=40):(n*=800,r*=800)),n&&!t&&(t=n<1?-1:1),r&&!i&&(i=r<1?-1:1),{spinX:t,spinY:i,pixelX:n,pixelY:r}},handleMouseEnter:function(){this.mouseEntered=!0},handleMouseLeave:function(){this.mouseEntered=!1},handle:function(e){var t=e,i=this,n=i.params.mousewheel;if(!i.mouseEntered&&!n.releaseOnEdges)return!0;t.originalEvent&&(t=t.originalEvent);var r=0,s=i.rtlTranslate?-1:1,a=U.normalize(t);if(n.forceToAxis)if(i.isHorizontal()){if(!(Math.abs(a.pixelX)>Math.abs(a.pixelY)))return!0;r=a.pixelX*s}else{if(!(Math.abs(a.pixelY)>Math.abs(a.pixelX)))return!0;r=a.pixelY}else r=Math.abs(a.pixelX)>Math.abs(a.pixelY)?-a.pixelX*s:-a.pixelY;if(0===r)return!0;if(n.invert&&(r=-r),i.params.freeMode){i.params.loop&&i.loopFix();var o=i.getTranslate()+r*n.sensitivity,l=i.isBeginning,c=i.isEnd;if(o>=i.minTranslate()&&(o=i.minTranslate()),o<=i.maxTranslate()&&(o=i.maxTranslate()),i.setTransition(0),i.setTranslate(o),i.updateProgress(),i.updateActiveIndex(),i.updateSlidesClasses(),(!l&&i.isBeginning||!c&&i.isEnd)&&i.updateSlidesClasses(),i.params.freeModeSticky&&(clearTimeout(i.mousewheel.timeout),i.mousewheel.timeout=ee.nextTick(function(){i.slideToClosest()},300)),i.emit("scroll",t),i.params.autoplay&&i.params.autoplayDisableOnInteraction&&i.autoplay.stop(),o===i.minTranslate()||o===i.maxTranslate())return!0}else{if(60<ee.now()-i.mousewheel.lastScrollTime)if(r<0)if(i.isEnd&&!i.params.loop||i.animating){if(n.releaseOnEdges)return!0}else i.slideNext(),i.emit("scroll",t);else if(i.isBeginning&&!i.params.loop||i.animating){if(n.releaseOnEdges)return!0}else i.slidePrev(),i.emit("scroll",t);i.mousewheel.lastScrollTime=(new J.Date).getTime()}return t.preventDefault?t.preventDefault():t.returnValue=!1,!1},enable:function(){if(!U.event)return!1;if(this.mousewheel.enabled)return!1;var e=this.$el;return"container"!==this.params.mousewheel.eventsTarged&&(e=D(this.params.mousewheel.eventsTarged)),e.on("mouseenter",this.mousewheel.handleMouseEnter),e.on("mouseleave",this.mousewheel.handleMouseLeave),e.on(U.event,this.mousewheel.handle),this.mousewheel.enabled=!0},disable:function(){if(!U.event)return!1;if(!this.mousewheel.enabled)return!1;var e=this.$el;return"container"!==this.params.mousewheel.eventsTarged&&(e=D(this.params.mousewheel.eventsTarged)),e.off(U.event,this.mousewheel.handle),!(this.mousewheel.enabled=!1)}},G={update:function(){var e,t,i,n=this.params.navigation;this.params.loop||(t=(e=this.navigation).$nextEl,(i=e.$prevEl)&&0<i.length&&(this.isBeginning?i.addClass(n.disabledClass):i.removeClass(n.disabledClass),i[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](n.lockClass)),t&&0<t.length&&(this.isEnd?t.addClass(n.disabledClass):t.removeClass(n.disabledClass),t[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](n.lockClass)))},onPrevClick:function(e){e.preventDefault(),this.isBeginning&&!this.params.loop||this.slidePrev()},onNextClick:function(e){e.preventDefault(),this.isEnd&&!this.params.loop||this.slideNext()},init:function(){var e,t,i=this,n=i.params.navigation;(n.nextEl||n.prevEl)&&(n.nextEl&&(e=D(n.nextEl),i.params.uniqueNavElements&&"string"==typeof n.nextEl&&1<e.length&&1===i.$el.find(n.nextEl).length&&(e=i.$el.find(n.nextEl))),n.prevEl&&(t=D(n.prevEl),i.params.uniqueNavElements&&"string"==typeof n.prevEl&&1<t.length&&1===i.$el.find(n.prevEl).length&&(t=i.$el.find(n.prevEl))),e&&0<e.length&&e.on("click",i.navigation.onNextClick),t&&0<t.length&&t.on("click",i.navigation.onPrevClick),ee.extend(i.navigation,{$nextEl:e,nextEl:e&&e[0],$prevEl:t,prevEl:t&&t[0]}))},destroy:function(){var e=this.navigation,t=e.$nextEl,i=e.$prevEl;t&&t.length&&(t.off("click",this.navigation.onNextClick),t.removeClass(this.params.navigation.disabledClass)),i&&i.length&&(i.off("click",this.navigation.onPrevClick),i.removeClass(this.params.navigation.disabledClass))}},K={update:function(){var e=this,t=e.rtl,r=e.params.pagination;if(r.el&&e.pagination.el&&e.pagination.$el&&0!==e.pagination.$el.length){var s,i,n,a,o,l=e.virtual&&e.params.virtual.enabled?e.virtual.slides.length:e.slides.length,c=e.pagination.$el,d=e.params.loop?Math.ceil((l-2*e.loopedSlides)/e.params.slidesPerGroup):e.snapGrid.length;if(e.params.loop?((s=Math.ceil((e.activeIndex-e.loopedSlides)/e.params.slidesPerGroup))>l-1-2*e.loopedSlides&&(s-=l-2*e.loopedSlides),d-1<s&&(s-=d),s<0&&"bullets"!==e.params.paginationType&&(s=d+s)):s=void 0!==e.snapIndex?e.snapIndex:e.activeIndex||0,"bullets"===r.type&&e.pagination.bullets&&0<e.pagination.bullets.length){var u,h,p,f,m,g,v=e.pagination.bullets;if(r.dynamicBullets&&(e.pagination.bulletSize=v.eq(0)[e.isHorizontal()?"outerWidth":"outerHeight"](!0),c.css(e.isHorizontal()?"width":"height",e.pagination.bulletSize*(r.dynamicMainBullets+4)+"px"),1<r.dynamicMainBullets&&void 0!==e.previousIndex&&(e.pagination.dynamicBulletIndex+=s-e.previousIndex,e.pagination.dynamicBulletIndex>r.dynamicMainBullets-1?e.pagination.dynamicBulletIndex=r.dynamicMainBullets-1:e.pagination.dynamicBulletIndex<0&&(e.pagination.dynamicBulletIndex=0)),u=s-e.pagination.dynamicBulletIndex,p=((h=u+(Math.min(v.length,r.dynamicMainBullets)-1))+u)/2),v.removeClass(r.bulletActiveClass+" "+r.bulletActiveClass+"-next "+r.bulletActiveClass+"-next-next "+r.bulletActiveClass+"-prev "+r.bulletActiveClass+"-prev-prev "+r.bulletActiveClass+"-main"),1<c.length)v.each(function(e,t){var i=D(t),n=i.index();n===s&&i.addClass(r.bulletActiveClass),r.dynamicBullets&&(u<=n&&n<=h&&i.addClass(r.bulletActiveClass+"-main"),n===u&&i.prev().addClass(r.bulletActiveClass+"-prev").prev().addClass(r.bulletActiveClass+"-prev-prev"),n===h&&i.next().addClass(r.bulletActiveClass+"-next").next().addClass(r.bulletActiveClass+"-next-next"))});else if(v.eq(s).addClass(r.bulletActiveClass),r.dynamicBullets){for(var y=v.eq(u),b=v.eq(h),w=u;w<=h;w+=1)v.eq(w).addClass(r.bulletActiveClass+"-main");y.prev().addClass(r.bulletActiveClass+"-prev").prev().addClass(r.bulletActiveClass+"-prev-prev"),b.next().addClass(r.bulletActiveClass+"-next").next().addClass(r.bulletActiveClass+"-next-next")}r.dynamicBullets&&(f=Math.min(v.length,r.dynamicMainBullets+4),m=(e.pagination.bulletSize*f-e.pagination.bulletSize)/2-p*e.pagination.bulletSize,g=t?"right":"left",v.css(e.isHorizontal()?g:"top",m+"px"))}"fraction"===r.type&&(c.find("."+r.currentClass).text(r.formatFractionCurrent(s+1)),c.find("."+r.totalClass).text(r.formatFractionTotal(d))),"progressbar"===r.type&&(i=r.progressbarOpposite?e.isHorizontal()?"vertical":"horizontal":e.isHorizontal()?"horizontal":"vertical",n=(s+1)/d,o=a=1,"horizontal"==i?a=n:o=n,c.find("."+r.progressbarFillClass).transform("translate3d(0,0,0) scaleX("+a+") scaleY("+o+")").transition(e.params.speed)),"custom"===r.type&&r.renderCustom?(c.html(r.renderCustom(e,s+1,d)),e.emit("paginationRender",e,c[0])):e.emit("paginationUpdate",e,c[0]),c[e.params.watchOverflow&&e.isLocked?"addClass":"removeClass"](r.lockClass)}},render:function(){var e=this,t=e.params.pagination;if(t.el&&e.pagination.el&&e.pagination.$el&&0!==e.pagination.$el.length){var i=e.virtual&&e.params.virtual.enabled?e.virtual.slides.length:e.slides.length,n=e.pagination.$el,r="";if("bullets"===t.type){for(var s=e.params.loop?Math.ceil((i-2*e.loopedSlides)/e.params.slidesPerGroup):e.snapGrid.length,a=0;a<s;a+=1)t.renderBullet?r+=t.renderBullet.call(e,a,t.bulletClass):r+="<"+t.bulletElement+' class="'+t.bulletClass+'"></'+t.bulletElement+">";n.html(r),e.pagination.bullets=n.find("."+t.bulletClass)}"fraction"===t.type&&(r=t.renderFraction?t.renderFraction.call(e,t.currentClass,t.totalClass):'<span class="'+t.currentClass+'"></span> / <span class="'+t.totalClass+'"></span>',n.html(r)),"progressbar"===t.type&&(r=t.renderProgressbar?t.renderProgressbar.call(e,t.progressbarFillClass):'<span class="'+t.progressbarFillClass+'"></span>',n.html(r)),"custom"!==t.type&&e.emit("paginationRender",e.pagination.$el[0])}},init:function(){var e,i=this,t=i.params.pagination;!t.el||0!==(e=D(t.el)).length&&(i.params.uniqueNavElements&&"string"==typeof t.el&&1<e.length&&1===i.$el.find(t.el).length&&(e=i.$el.find(t.el)),"bullets"===t.type&&t.clickable&&e.addClass(t.clickableClass),e.addClass(t.modifierClass+t.type),"bullets"===t.type&&t.dynamicBullets&&(e.addClass(""+t.modifierClass+t.type+"-dynamic"),i.pagination.dynamicBulletIndex=0,t.dynamicMainBullets<1&&(t.dynamicMainBullets=1)),"progressbar"===t.type&&t.progressbarOpposite&&e.addClass(t.progressbarOppositeClass),t.clickable&&e.on("click","."+t.bulletClass,function(e){e.preventDefault();var t=D(this).index()*i.params.slidesPerGroup;i.params.loop&&(t+=i.loopedSlides),i.slideTo(t)}),ee.extend(i.pagination,{$el:e,el:e[0]}))},destroy:function(){var e,t=this.params.pagination;t.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length&&((e=this.pagination.$el).removeClass(t.hiddenClass),e.removeClass(t.modifierClass+t.type),this.pagination.bullets&&this.pagination.bullets.removeClass(t.bulletActiveClass),t.clickable&&e.off("click","."+t.bulletClass))}},Q={setTranslate:function(){var e,t,i,n,r,s,a,o,l,c;this.params.scrollbar.el&&this.scrollbar.el&&(e=this.scrollbar,t=this.rtlTranslate,i=this.progress,n=e.dragSize,r=e.trackSize,s=e.$dragEl,a=e.$el,o=this.params.scrollbar,c=(r-(l=n))*i,t?0<(c=-c)?(l=n-c,c=0):r<-c+n&&(l=r+c):c<0?(l=n+c,c=0):r<c+n&&(l=r-c),this.isHorizontal()?(te.transforms3d?s.transform("translate3d("+c+"px, 0, 0)"):s.transform("translateX("+c+"px)"),s[0].style.width=l+"px"):(te.transforms3d?s.transform("translate3d(0px, "+c+"px, 0)"):s.transform("translateY("+c+"px)"),s[0].style.height=l+"px"),o.hide&&(clearTimeout(this.scrollbar.timeout),a[0].style.opacity=1,this.scrollbar.timeout=setTimeout(function(){a[0].style.opacity=0,a.transition(400)},1e3)))},setTransition:function(e){this.params.scrollbar.el&&this.scrollbar.el&&this.scrollbar.$dragEl.transition(e)},updateSize:function(){var e,t,i,n,r,s,a,o=this;o.params.scrollbar.el&&o.scrollbar.el&&(t=(e=o.scrollbar).$dragEl,i=e.$el,t[0].style.width="",t[0].style.height="",n=o.isHorizontal()?i[0].offsetWidth:i[0].offsetHeight,s=(r=o.size/o.virtualSize)*(n/o.size),a="auto"===o.params.scrollbar.dragSize?n*r:parseInt(o.params.scrollbar.dragSize,10),o.isHorizontal()?t[0].style.width=a+"px":t[0].style.height=a+"px",i[0].style.display=1<=r?"none":"",o.params.scrollbarHide&&(i[0].style.opacity=0),ee.extend(e,{trackSize:n,divider:r,moveDivider:s,dragSize:a}),e.$el[o.params.watchOverflow&&o.isLocked?"addClass":"removeClass"](o.params.scrollbar.lockClass))},setDragPosition:function(e){var t=this,i=t.scrollbar,n=t.rtlTranslate,r=i.$el,s=i.dragSize,a=i.trackSize,o=((t.isHorizontal()?"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].pageX:e.pageX||e.clientX:"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].pageY:e.pageY||e.clientY)-r.offset()[t.isHorizontal()?"left":"top"]-s/2)/(a-s);o=Math.max(Math.min(o,1),0),n&&(o=1-o);var l=t.minTranslate()+(t.maxTranslate()-t.minTranslate())*o;t.updateProgress(l),t.setTranslate(l),t.updateActiveIndex(),t.updateSlidesClasses()},onDragStart:function(e){var t=this.params.scrollbar,i=this.scrollbar,n=this.$wrapperEl,r=i.$el,s=i.$dragEl;this.scrollbar.isTouched=!0,e.preventDefault(),e.stopPropagation(),n.transition(100),s.transition(100),i.setDragPosition(e),clearTimeout(this.scrollbar.dragTimeout),r.transition(0),t.hide&&r.css("opacity",1),this.emit("scrollbarDragStart",e)},onDragMove:function(e){var t=this.scrollbar,i=this.$wrapperEl,n=t.$el,r=t.$dragEl;this.scrollbar.isTouched&&(e.preventDefault?e.preventDefault():e.returnValue=!1,t.setDragPosition(e),i.transition(0),n.transition(0),r.transition(0),this.emit("scrollbarDragMove",e))},onDragEnd:function(e){var t=this.params.scrollbar,i=this.scrollbar.$el;this.scrollbar.isTouched&&(this.scrollbar.isTouched=!1,t.hide&&(clearTimeout(this.scrollbar.dragTimeout),this.scrollbar.dragTimeout=ee.nextTick(function(){i.css("opacity",0),i.transition(400)},1e3)),this.emit("scrollbarDragEnd",e),t.snapOnRelease&&this.slideToClosest())},enableDraggable:function(){var e,t,i,n,r,s,a,o=this;o.params.scrollbar.el&&(e=o.scrollbar,t=o.touchEventsTouch,i=o.touchEventsDesktop,n=o.params,r=e.$el[0],s=!(!te.passiveListener||!n.passiveListeners)&&{passive:!1,capture:!1},a=!(!te.passiveListener||!n.passiveListeners)&&{passive:!0,capture:!1},te.touch?(r.addEventListener(t.start,o.scrollbar.onDragStart,s),r.addEventListener(t.move,o.scrollbar.onDragMove,s),r.addEventListener(t.end,o.scrollbar.onDragEnd,a)):(r.addEventListener(i.start,o.scrollbar.onDragStart,s),m.addEventListener(i.move,o.scrollbar.onDragMove,s),m.addEventListener(i.end,o.scrollbar.onDragEnd,a)))},disableDraggable:function(){var e,t,i,n,r,s,a,o=this;o.params.scrollbar.el&&(e=o.scrollbar,t=o.touchEventsTouch,i=o.touchEventsDesktop,n=o.params,r=e.$el[0],s=!(!te.passiveListener||!n.passiveListeners)&&{passive:!1,capture:!1},a=!(!te.passiveListener||!n.passiveListeners)&&{passive:!0,capture:!1},te.touch?(r.removeEventListener(t.start,o.scrollbar.onDragStart,s),r.removeEventListener(t.move,o.scrollbar.onDragMove,s),r.removeEventListener(t.end,o.scrollbar.onDragEnd,a)):(r.removeEventListener(i.start,o.scrollbar.onDragStart,s),m.removeEventListener(i.move,o.scrollbar.onDragMove,s),m.removeEventListener(i.end,o.scrollbar.onDragEnd,a)))},init:function(){var e,t,i,n,r;this.params.scrollbar.el&&(e=this.scrollbar,t=this.$el,n=D((i=this.params.scrollbar).el),this.params.uniqueNavElements&&"string"==typeof i.el&&1<n.length&&1===t.find(i.el).length&&(n=t.find(i.el)),0===(r=n.find("."+this.params.scrollbar.dragClass)).length&&(r=D('<div class="'+this.params.scrollbar.dragClass+'"></div>'),n.append(r)),ee.extend(e,{$el:n,el:n[0],$dragEl:r,dragEl:r[0]}),i.draggable&&e.enableDraggable())},destroy:function(){this.scrollbar.disableDraggable()}},Z={setTransform:function(e,t){var i,n,r=this.rtl,s=D(e),a=r?-1:1,o=s.attr("data-swiper-parallax")||"0",l=s.attr("data-swiper-parallax-x"),c=s.attr("data-swiper-parallax-y"),d=s.attr("data-swiper-parallax-scale"),u=s.attr("data-swiper-parallax-opacity");l||c?(l=l||"0",c=c||"0"):this.isHorizontal()?(l=o,c="0"):(c=o,l="0"),l=0<=l.indexOf("%")?parseInt(l,10)*t*a+"%":l*t*a+"px",c=0<=c.indexOf("%")?parseInt(c,10)*t+"%":c*t+"px",null!=u&&(i=u-(u-1)*(1-Math.abs(t)),s[0].style.opacity=i),null==d?s.transform("translate3d("+l+", "+c+", 0px)"):(n=d-(d-1)*(1-Math.abs(t)),s.transform("translate3d("+l+", "+c+", 0px) scale("+n+")"))},setTranslate:function(){var n=this,e=n.$el,t=n.slides,r=n.progress,s=n.snapGrid;e.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(e,t){n.parallax.setTransform(t,r)}),t.each(function(e,t){var i=t.progress;1<n.params.slidesPerGroup&&"auto"!==n.params.slidesPerView&&(i+=Math.ceil(e/2)-r*(s.length-1)),i=Math.min(Math.max(i,-1),1),D(t).find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(e,t){n.parallax.setTransform(t,i)})})},setTransition:function(r){void 0===r&&(r=this.params.speed),this.$el.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(e,t){var i=D(t),n=parseInt(i.attr("data-swiper-parallax-duration"),10)||r;0===r&&(n=0),i.transition(n)})}},ie={getDistanceBetweenTouches:function(e){if(e.targetTouches.length<2)return 1;var t=e.targetTouches[0].pageX,i=e.targetTouches[0].pageY,n=e.targetTouches[1].pageX,r=e.targetTouches[1].pageY;return Math.sqrt(Math.pow(n-t,2)+Math.pow(r-i,2))},onGestureStart:function(e){var t=this.params.zoom,i=this.zoom,n=i.gesture;if(i.fakeGestureTouched=!1,i.fakeGestureMoved=!1,!te.gestures){if("touchstart"!==e.type||"touchstart"===e.type&&e.targetTouches.length<2)return;i.fakeGestureTouched=!0,n.scaleStart=ie.getDistanceBetweenTouches(e)}n.$slideEl&&n.$slideEl.length||(n.$slideEl=D(e.target).closest(".swiper-slide"),0===n.$slideEl.length&&(n.$slideEl=this.slides.eq(this.activeIndex)),n.$imageEl=n.$slideEl.find("img, svg, canvas"),n.$imageWrapEl=n.$imageEl.parent("."+t.containerClass),n.maxRatio=n.$imageWrapEl.attr("data-swiper-zoom")||t.maxRatio,0!==n.$imageWrapEl.length)?(n.$imageEl.transition(0),this.zoom.isScaling=!0):n.$imageEl=void 0},onGestureChange:function(e){var t=this.params.zoom,i=this.zoom,n=i.gesture;if(!te.gestures){if("touchmove"!==e.type||"touchmove"===e.type&&e.targetTouches.length<2)return;i.fakeGestureMoved=!0,n.scaleMove=ie.getDistanceBetweenTouches(e)}n.$imageEl&&0!==n.$imageEl.length&&(i.scale=te.gestures?e.scale*i.currentScale:n.scaleMove/n.scaleStart*i.currentScale,i.scale>n.maxRatio&&(i.scale=n.maxRatio-1+Math.pow(i.scale-n.maxRatio+1,.5)),i.scale<t.minRatio&&(i.scale=t.minRatio+1-Math.pow(t.minRatio-i.scale+1,.5)),n.$imageEl.transform("translate3d(0,0,0) scale("+i.scale+")"))},onGestureEnd:function(e){var t=this.params.zoom,i=this.zoom,n=i.gesture;if(!te.gestures){if(!i.fakeGestureTouched||!i.fakeGestureMoved)return;if("touchend"!==e.type||"touchend"===e.type&&e.changedTouches.length<2&&!T.android)return;i.fakeGestureTouched=!1,i.fakeGestureMoved=!1}n.$imageEl&&0!==n.$imageEl.length&&(i.scale=Math.max(Math.min(i.scale,n.maxRatio),t.minRatio),n.$imageEl.transition(this.params.speed).transform("translate3d(0,0,0) scale("+i.scale+")"),i.currentScale=i.scale,i.isScaling=!1,1===i.scale&&(n.$slideEl=void 0))},onTouchStart:function(e){var t=this.zoom,i=t.gesture,n=t.image;i.$imageEl&&0!==i.$imageEl.length&&(n.isTouched||(T.android&&e.preventDefault(),n.isTouched=!0,n.touchesStart.x="touchstart"===e.type?e.targetTouches[0].pageX:e.pageX,n.touchesStart.y="touchstart"===e.type?e.targetTouches[0].pageY:e.pageY))},onTouchMove:function(e){var t=this.zoom,i=t.gesture,n=t.image,r=t.velocity;if(i.$imageEl&&0!==i.$imageEl.length&&(this.allowClick=!1,n.isTouched&&i.$slideEl)){n.isMoved||(n.width=i.$imageEl[0].offsetWidth,n.height=i.$imageEl[0].offsetHeight,n.startX=ee.getTranslate(i.$imageWrapEl[0],"x")||0,n.startY=ee.getTranslate(i.$imageWrapEl[0],"y")||0,i.slideWidth=i.$slideEl[0].offsetWidth,i.slideHeight=i.$slideEl[0].offsetHeight,i.$imageWrapEl.transition(0),this.rtl&&(n.startX=-n.startX,n.startY=-n.startY));var s=n.width*t.scale,a=n.height*t.scale;if(!(s<i.slideWidth&&a<i.slideHeight)){if(n.minX=Math.min(i.slideWidth/2-s/2,0),n.maxX=-n.minX,n.minY=Math.min(i.slideHeight/2-a/2,0),n.maxY=-n.minY,n.touchesCurrent.x="touchmove"===e.type?e.targetTouches[0].pageX:e.pageX,n.touchesCurrent.y="touchmove"===e.type?e.targetTouches[0].pageY:e.pageY,!n.isMoved&&!t.isScaling){if(this.isHorizontal()&&(Math.floor(n.minX)===Math.floor(n.startX)&&n.touchesCurrent.x<n.touchesStart.x||Math.floor(n.maxX)===Math.floor(n.startX)&&n.touchesCurrent.x>n.touchesStart.x))return void(n.isTouched=!1);if(!this.isHorizontal()&&(Math.floor(n.minY)===Math.floor(n.startY)&&n.touchesCurrent.y<n.touchesStart.y||Math.floor(n.maxY)===Math.floor(n.startY)&&n.touchesCurrent.y>n.touchesStart.y))return void(n.isTouched=!1)}e.preventDefault(),e.stopPropagation(),n.isMoved=!0,n.currentX=n.touchesCurrent.x-n.touchesStart.x+n.startX,n.currentY=n.touchesCurrent.y-n.touchesStart.y+n.startY,n.currentX<n.minX&&(n.currentX=n.minX+1-Math.pow(n.minX-n.currentX+1,.8)),n.currentX>n.maxX&&(n.currentX=n.maxX-1+Math.pow(n.currentX-n.maxX+1,.8)),n.currentY<n.minY&&(n.currentY=n.minY+1-Math.pow(n.minY-n.currentY+1,.8)),n.currentY>n.maxY&&(n.currentY=n.maxY-1+Math.pow(n.currentY-n.maxY+1,.8)),r.prevPositionX||(r.prevPositionX=n.touchesCurrent.x),r.prevPositionY||(r.prevPositionY=n.touchesCurrent.y),r.prevTime||(r.prevTime=Date.now()),r.x=(n.touchesCurrent.x-r.prevPositionX)/(Date.now()-r.prevTime)/2,r.y=(n.touchesCurrent.y-r.prevPositionY)/(Date.now()-r.prevTime)/2,Math.abs(n.touchesCurrent.x-r.prevPositionX)<2&&(r.x=0),Math.abs(n.touchesCurrent.y-r.prevPositionY)<2&&(r.y=0),r.prevPositionX=n.touchesCurrent.x,r.prevPositionY=n.touchesCurrent.y,r.prevTime=Date.now(),i.$imageWrapEl.transform("translate3d("+n.currentX+"px, "+n.currentY+"px,0)")}}},onTouchEnd:function(){var e=this.zoom,t=e.gesture,i=e.image,n=e.velocity;if(t.$imageEl&&0!==t.$imageEl.length){if(!i.isTouched||!i.isMoved)return i.isTouched=!1,void(i.isMoved=!1);i.isTouched=!1,i.isMoved=!1;var r=300,s=300,a=n.x*r,o=i.currentX+a,l=n.y*s,c=i.currentY+l;0!==n.x&&(r=Math.abs((o-i.currentX)/n.x)),0!==n.y&&(s=Math.abs((c-i.currentY)/n.y));var d=Math.max(r,s);i.currentX=o,i.currentY=c;var u=i.width*e.scale,h=i.height*e.scale;i.minX=Math.min(t.slideWidth/2-u/2,0),i.maxX=-i.minX,i.minY=Math.min(t.slideHeight/2-h/2,0),i.maxY=-i.minY,i.currentX=Math.max(Math.min(i.currentX,i.maxX),i.minX),i.currentY=Math.max(Math.min(i.currentY,i.maxY),i.minY),t.$imageWrapEl.transition(d).transform("translate3d("+i.currentX+"px, "+i.currentY+"px,0)")}},onTransitionEnd:function(){var e=this.zoom,t=e.gesture;t.$slideEl&&this.previousIndex!==this.activeIndex&&(t.$imageEl.transform("translate3d(0,0,0) scale(1)"),t.$imageWrapEl.transform("translate3d(0,0,0)"),e.scale=1,e.currentScale=1,t.$slideEl=void 0,t.$imageEl=void 0,t.$imageWrapEl=void 0)},toggle:function(e){var t=this.zoom;t.scale&&1!==t.scale?t.out():t.in(e)},in:function(e){var t,i,n,r,s,a,o,l,c,d,u,h,p,f,m,g,v=this.zoom,y=this.params.zoom,b=v.gesture,w=v.image;b.$slideEl||(b.$slideEl=this.clickedSlide?D(this.clickedSlide):this.slides.eq(this.activeIndex),b.$imageEl=b.$slideEl.find("img, svg, canvas"),b.$imageWrapEl=b.$imageEl.parent("."+y.containerClass)),b.$imageEl&&0!==b.$imageEl.length&&(b.$slideEl.addClass(""+y.zoomedSlideClass),i=void 0===w.touchesStart.x&&e?(t="touchend"===e.type?e.changedTouches[0].pageX:e.pageX,"touchend"===e.type?e.changedTouches[0].pageY:e.pageY):(t=w.touchesStart.x,w.touchesStart.y),v.scale=b.$imageWrapEl.attr("data-swiper-zoom")||y.maxRatio,v.currentScale=b.$imageWrapEl.attr("data-swiper-zoom")||y.maxRatio,e?(m=b.$slideEl[0].offsetWidth,g=b.$slideEl[0].offsetHeight,n=b.$slideEl.offset().left+m/2-t,r=b.$slideEl.offset().top+g/2-i,o=b.$imageEl[0].offsetWidth,l=b.$imageEl[0].offsetHeight,c=o*v.scale,d=l*v.scale,p=-(u=Math.min(m/2-c/2,0)),f=-(h=Math.min(g/2-d/2,0)),(s=n*v.scale)<u&&(s=u),p<s&&(s=p),(a=r*v.scale)<h&&(a=h),f<a&&(a=f)):a=s=0,b.$imageWrapEl.transition(300).transform("translate3d("+s+"px, "+a+"px,0)"),b.$imageEl.transition(300).transform("translate3d(0,0,0) scale("+v.scale+")"))},out:function(){var e=this.zoom,t=this.params.zoom,i=e.gesture;i.$slideEl||(i.$slideEl=this.clickedSlide?D(this.clickedSlide):this.slides.eq(this.activeIndex),i.$imageEl=i.$slideEl.find("img, svg, canvas"),i.$imageWrapEl=i.$imageEl.parent("."+t.containerClass)),i.$imageEl&&0!==i.$imageEl.length&&(e.scale=1,e.currentScale=1,i.$imageWrapEl.transition(300).transform("translate3d(0,0,0)"),i.$imageEl.transition(300).transform("translate3d(0,0,0) scale(1)"),i.$slideEl.removeClass(""+t.zoomedSlideClass),i.$slideEl=void 0)},enable:function(){var e,t=this,i=t.zoom;i.enabled||(i.enabled=!0,e=!("touchstart"!==t.touchEvents.start||!te.passiveListener||!t.params.passiveListeners)&&{passive:!0,capture:!1},te.gestures?(t.$wrapperEl.on("gesturestart",".swiper-slide",i.onGestureStart,e),t.$wrapperEl.on("gesturechange",".swiper-slide",i.onGestureChange,e),t.$wrapperEl.on("gestureend",".swiper-slide",i.onGestureEnd,e)):"touchstart"===t.touchEvents.start&&(t.$wrapperEl.on(t.touchEvents.start,".swiper-slide",i.onGestureStart,e),t.$wrapperEl.on(t.touchEvents.move,".swiper-slide",i.onGestureChange,e),t.$wrapperEl.on(t.touchEvents.end,".swiper-slide",i.onGestureEnd,e)),t.$wrapperEl.on(t.touchEvents.move,"."+t.params.zoom.containerClass,i.onTouchMove))},disable:function(){var e,t=this,i=t.zoom;i.enabled&&(t.zoom.enabled=!1,e=!("touchstart"!==t.touchEvents.start||!te.passiveListener||!t.params.passiveListeners)&&{passive:!0,capture:!1},te.gestures?(t.$wrapperEl.off("gesturestart",".swiper-slide",i.onGestureStart,e),t.$wrapperEl.off("gesturechange",".swiper-slide",i.onGestureChange,e),t.$wrapperEl.off("gestureend",".swiper-slide",i.onGestureEnd,e)):"touchstart"===t.touchEvents.start&&(t.$wrapperEl.off(t.touchEvents.start,".swiper-slide",i.onGestureStart,e),t.$wrapperEl.off(t.touchEvents.move,".swiper-slide",i.onGestureChange,e),t.$wrapperEl.off(t.touchEvents.end,".swiper-slide",i.onGestureEnd,e)),t.$wrapperEl.off(t.touchEvents.move,"."+t.params.zoom.containerClass,i.onTouchMove))}},ne={loadInSlide:function(e,l){void 0===l&&(l=!0);var c,t,d=this,u=d.params.lazy;void 0!==e&&0!==d.slides.length&&(t=(c=d.virtual&&d.params.virtual.enabled?d.$wrapperEl.children("."+d.params.slideClass+'[data-swiper-slide-index="'+e+'"]'):d.slides.eq(e)).find("."+u.elementClass+":not(."+u.loadedClass+"):not(."+u.loadingClass+")"),!c.hasClass(u.elementClass)||c.hasClass(u.loadedClass)||c.hasClass(u.loadingClass)||(t=t.add(c[0])),0!==t.length&&t.each(function(e,t){var n=D(t);n.addClass(u.loadingClass);var r=n.attr("data-background"),s=n.attr("data-src"),a=n.attr("data-srcset"),o=n.attr("data-sizes");d.loadImage(n[0],s||r,a,o,!1,function(){var e,t,i;null==d||!d||d&&!d.params||d.destroyed||(r?(n.css("background-image",'url("'+r+'")'),n.removeAttr("data-background")):(a&&(n.attr("srcset",a),n.removeAttr("data-srcset")),o&&(n.attr("sizes",o),n.removeAttr("data-sizes")),s&&(n.attr("src",s),n.removeAttr("data-src"))),n.addClass(u.loadedClass).removeClass(u.loadingClass),c.find("."+u.preloaderClass).remove(),d.params.loop&&l&&(e=c.attr("data-swiper-slide-index"),c.hasClass(d.params.slideDuplicateClass)?(t=d.$wrapperEl.children('[data-swiper-slide-index="'+e+'"]:not(.'+d.params.slideDuplicateClass+")"),d.lazy.loadInSlide(t.index(),!1)):(i=d.$wrapperEl.children("."+d.params.slideDuplicateClass+'[data-swiper-slide-index="'+e+'"]'),d.lazy.loadInSlide(i.index(),!1))),d.emit("lazyImageReady",c[0],n[0]))}),d.emit("lazyImageLoad",c[0],n[0])}))},load:function(){var n=this,t=n.$wrapperEl,i=n.params,r=n.slides,e=n.activeIndex,s=n.virtual&&i.virtual.enabled,a=i.lazy,o=i.slidesPerView;function l(e){if(s){if(t.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]').length)return 1}else if(r[e])return 1}function c(e){return s?D(e).attr("data-swiper-slide-index"):D(e).index()}if("auto"===o&&(o=0),n.lazy.initialImageLoaded||(n.lazy.initialImageLoaded=!0),n.params.watchSlidesVisibility)t.children("."+i.slideVisibleClass).each(function(e,t){var i=s?D(t).attr("data-swiper-slide-index"):D(t).index();n.lazy.loadInSlide(i)});else if(1<o)for(var d=e;d<e+o;d+=1)l(d)&&n.lazy.loadInSlide(d);else n.lazy.loadInSlide(e);if(a.loadPrevNext)if(1<o||a.loadPrevNextAmount&&1<a.loadPrevNextAmount){for(var u=a.loadPrevNextAmount,h=o,p=Math.min(e+h+Math.max(u,h),r.length),f=Math.max(e-Math.max(h,u),0),m=e+o;m<p;m+=1)l(m)&&n.lazy.loadInSlide(m);for(var g=f;g<e;g+=1)l(g)&&n.lazy.loadInSlide(g)}else{var v=t.children("."+i.slideNextClass);0<v.length&&n.lazy.loadInSlide(c(v));var y=t.children("."+i.slidePrevClass);0<y.length&&n.lazy.loadInSlide(c(y))}}},re={LinearSpline:function(e,t){var i,n,r,s,a;return this.x=e,this.y=t,this.lastIndex=e.length-1,this.interpolate=function(e){return e?(a=function(e,t){for(n=-1,i=e.length;1<i-n;)e[r=i+n>>1]<=t?n=r:i=r;return i}(this.x,e),s=a-1,(e-this.x[s])*(this.y[a]-this.y[s])/(this.x[a]-this.x[s])+this.y[s]):0},this},getInterpolateFunction:function(e){this.controller.spline||(this.controller.spline=this.params.loop?new re.LinearSpline(this.slidesGrid,e.slidesGrid):new re.LinearSpline(this.snapGrid,e.snapGrid))},setTranslate:function(e,t){var i,n,r=this,s=r.controller.control;function a(e){var t=r.rtlTranslate?-r.translate:r.translate;"slide"===r.params.controller.by&&(r.controller.getInterpolateFunction(e),n=-r.controller.spline.interpolate(-t)),n&&"container"!==r.params.controller.by||(i=(e.maxTranslate()-e.minTranslate())/(r.maxTranslate()-r.minTranslate()),n=(t-r.minTranslate())*i+e.minTranslate()),r.params.controller.inverse&&(n=e.maxTranslate()-n),e.updateProgress(n),e.setTranslate(n,r),e.updateActiveIndex(),e.updateSlidesClasses()}if(Array.isArray(s))for(var o=0;o<s.length;o+=1)s[o]!==t&&s[o]instanceof j&&a(s[o]);else s instanceof j&&t!==s&&a(s)},setTransition:function(t,e){var i,n=this,r=n.controller.control;function s(e){e.setTransition(t,n),0!==t&&(e.transitionStart(),e.params.autoHeight&&ee.nextTick(function(){e.updateAutoHeight()}),e.$wrapperEl.transitionEnd(function(){r&&(e.params.loop&&"slide"===n.params.controller.by&&e.loopFix(),e.transitionEnd())}))}if(Array.isArray(r))for(i=0;i<r.length;i+=1)r[i]!==e&&r[i]instanceof j&&s(r[i]);else r instanceof j&&e!==r&&s(r)}},se={makeElFocusable:function(e){return e.attr("tabIndex","0"),e},addElRole:function(e,t){return e.attr("role",t),e},addElLabel:function(e,t){return e.attr("aria-label",t),e},disableEl:function(e){return e.attr("aria-disabled",!0),e},enableEl:function(e){return e.attr("aria-disabled",!1),e},onEnterKey:function(e){var t,i=this,n=i.params.a11y;13===e.keyCode&&(t=D(e.target),i.navigation&&i.navigation.$nextEl&&t.is(i.navigation.$nextEl)&&(i.isEnd&&!i.params.loop||i.slideNext(),i.isEnd?i.a11y.notify(n.lastSlideMessage):i.a11y.notify(n.nextSlideMessage)),i.navigation&&i.navigation.$prevEl&&t.is(i.navigation.$prevEl)&&(i.isBeginning&&!i.params.loop||i.slidePrev(),i.isBeginning?i.a11y.notify(n.firstSlideMessage):i.a11y.notify(n.prevSlideMessage)),i.pagination&&t.is("."+i.params.pagination.bulletClass)&&t[0].click())},notify:function(e){var t=this.a11y.liveRegion;0!==t.length&&(t.html(""),t.html(e))},updateNavigation:function(){var e,t,i;this.params.loop||(t=(e=this.navigation).$nextEl,(i=e.$prevEl)&&0<i.length&&(this.isBeginning?this.a11y.disableEl(i):this.a11y.enableEl(i)),t&&0<t.length&&(this.isEnd?this.a11y.disableEl(t):this.a11y.enableEl(t)))},updatePagination:function(){var n=this,r=n.params.a11y;n.pagination&&n.params.pagination.clickable&&n.pagination.bullets&&n.pagination.bullets.length&&n.pagination.bullets.each(function(e,t){var i=D(t);n.a11y.makeElFocusable(i),n.a11y.addElRole(i,"button"),n.a11y.addElLabel(i,r.paginationBulletMessage.replace(/{{index}}/,i.index()+1))})},init:function(){var e=this;e.$el.append(e.a11y.liveRegion);var t,i,n=e.params.a11y;e.navigation&&e.navigation.$nextEl&&(t=e.navigation.$nextEl),e.navigation&&e.navigation.$prevEl&&(i=e.navigation.$prevEl),t&&(e.a11y.makeElFocusable(t),e.a11y.addElRole(t,"button"),e.a11y.addElLabel(t,n.nextSlideMessage),t.on("keydown",e.a11y.onEnterKey)),i&&(e.a11y.makeElFocusable(i),e.a11y.addElRole(i,"button"),e.a11y.addElLabel(i,n.prevSlideMessage),i.on("keydown",e.a11y.onEnterKey)),e.pagination&&e.params.pagination.clickable&&e.pagination.bullets&&e.pagination.bullets.length&&e.pagination.$el.on("keydown","."+e.params.pagination.bulletClass,e.a11y.onEnterKey)},destroy:function(){var e,t,i=this;i.a11y.liveRegion&&0<i.a11y.liveRegion.length&&i.a11y.liveRegion.remove(),i.navigation&&i.navigation.$nextEl&&(e=i.navigation.$nextEl),i.navigation&&i.navigation.$prevEl&&(t=i.navigation.$prevEl),e&&e.off("keydown",i.a11y.onEnterKey),t&&t.off("keydown",i.a11y.onEnterKey),i.pagination&&i.params.pagination.clickable&&i.pagination.bullets&&i.pagination.bullets.length&&i.pagination.$el.off("keydown","."+i.params.pagination.bulletClass,i.a11y.onEnterKey)}},ae={init:function(){if(this.params.history){if(!J.history||!J.history.pushState)return this.params.history.enabled=!1,void(this.params.hashNavigation.enabled=!0);var e=this.history;e.initialized=!0,e.paths=ae.getPathValues(),(e.paths.key||e.paths.value)&&(e.scrollToSlide(0,e.paths.value,this.params.runCallbacksOnInit),this.params.history.replaceState||J.addEventListener("popstate",this.history.setHistoryPopState))}},destroy:function(){this.params.history.replaceState||J.removeEventListener("popstate",this.history.setHistoryPopState)},setHistoryPopState:function(){this.history.paths=ae.getPathValues(),this.history.scrollToSlide(this.params.speed,this.history.paths.value,!1)},getPathValues:function(){var e=J.location.pathname.slice(1).split("/").filter(function(e){return""!==e}),t=e.length;return{key:e[t-2],value:e[t-1]}},setHistory:function(e,t){var i,n,r;this.history.initialized&&this.params.history.enabled&&(i=this.slides.eq(t),n=ae.slugify(i.attr("data-history")),J.location.pathname.includes(e)||(n=e+"/"+n),(r=J.history.state)&&r.value===n||(this.params.history.replaceState?J.history.replaceState({value:n},null,n):J.history.pushState({value:n},null,n)))},slugify:function(e){return e.toString().toLowerCase().replace(/\s+/g,"-").replace(/[^\w-]+/g,"").replace(/--+/g,"-").replace(/^-+/,"").replace(/-+$/,"")},scrollToSlide:function(e,t,i){if(t)for(var n=0,r=this.slides.length;n<r;n+=1){var s,a=this.slides.eq(n);ae.slugify(a.attr("data-history"))!==t||a.hasClass(this.params.slideDuplicateClass)||(s=a.index(),this.slideTo(s,e,i))}else this.slideTo(0,e,i)}},oe={onHashCange:function(){var e=m.location.hash.replace("#","");if(e!==this.slides.eq(this.activeIndex).attr("data-hash")){var t=this.$wrapperEl.children("."+this.params.slideClass+'[data-hash="'+e+'"]').index();if(void 0===t)return;this.slideTo(t)}},setHash:function(){var e,t;this.hashNavigation.initialized&&this.params.hashNavigation.enabled&&(this.params.hashNavigation.replaceState&&J.history&&J.history.replaceState?J.history.replaceState(null,null,"#"+this.slides.eq(this.activeIndex).attr("data-hash")||""):(t=(e=this.slides.eq(this.activeIndex)).attr("data-hash")||e.attr("data-history"),m.location.hash=t||""))},init:function(){var e=this;if(!(!e.params.hashNavigation.enabled||e.params.history&&e.params.history.enabled)){e.hashNavigation.initialized=!0;var t=m.location.hash.replace("#","");if(t)for(var i=0,n=e.slides.length;i<n;i+=1){var r,s=e.slides.eq(i);(s.attr("data-hash")||s.attr("data-history"))!==t||s.hasClass(e.params.slideDuplicateClass)||(r=s.index(),e.slideTo(r,0,e.params.runCallbacksOnInit,!0))}e.params.hashNavigation.watchState&&D(J).on("hashchange",e.hashNavigation.onHashCange)}},destroy:function(){this.params.hashNavigation.watchState&&D(J).off("hashchange",this.hashNavigation.onHashCange)}},le={run:function(){var e=this,t=e.slides.eq(e.activeIndex),i=e.params.autoplay.delay;t.attr("data-swiper-autoplay")&&(i=t.attr("data-swiper-autoplay")||e.params.autoplay.delay),e.autoplay.timeout=ee.nextTick(function(){e.params.autoplay.reverseDirection?e.params.loop?(e.loopFix(),e.slidePrev(e.params.speed,!0,!0),e.emit("autoplay")):e.isBeginning?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(e.slides.length-1,e.params.speed,!0,!0),e.emit("autoplay")):(e.slidePrev(e.params.speed,!0,!0),e.emit("autoplay")):e.params.loop?(e.loopFix(),e.slideNext(e.params.speed,!0,!0),e.emit("autoplay")):e.isEnd?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(0,e.params.speed,!0,!0),e.emit("autoplay")):(e.slideNext(e.params.speed,!0,!0),e.emit("autoplay"))},i)},start:function(){return void 0===this.autoplay.timeout&&!this.autoplay.running&&(this.autoplay.running=!0,this.emit("autoplayStart"),this.autoplay.run(),!0)},stop:function(){return!!this.autoplay.running&&void 0!==this.autoplay.timeout&&(this.autoplay.timeout&&(clearTimeout(this.autoplay.timeout),this.autoplay.timeout=void 0),this.autoplay.running=!1,this.emit("autoplayStop"),!0)},pause:function(e){var t=this;t.autoplay.running&&(t.autoplay.paused||(t.autoplay.timeout&&clearTimeout(t.autoplay.timeout),t.autoplay.paused=!0,0!==e&&t.params.autoplay.waitForTransition?(t.$wrapperEl[0].addEventListener("transitionend",t.autoplay.onTransitionEnd),t.$wrapperEl[0].addEventListener("webkitTransitionEnd",t.autoplay.onTransitionEnd)):(t.autoplay.paused=!1,t.autoplay.run())))}},ce={setTranslate:function(){for(var e=this.slides,t=0;t<e.length;t+=1){var i=this.slides.eq(t),n=-i[0].swiperSlideOffset;this.params.virtualTranslate||(n-=this.translate);var r=0;this.isHorizontal()||(r=n,n=0);var s=this.params.fadeEffect.crossFade?Math.max(1-Math.abs(i[0].progress),0):1+Math.min(Math.max(i[0].progress,-1),0);i.css({opacity:s}).transform("translate3d("+n+"px, "+r+"px, 0px)")}},setTransition:function(e){var i,n=this,t=n.slides,r=n.$wrapperEl;t.transition(e),n.params.virtualTranslate&&0!==e&&(i=!1,t.transitionEnd(function(){if(!i&&n&&!n.destroyed){i=!0,n.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],t=0;t<e.length;t+=1)r.trigger(e[t])}}))}},de={setTranslate:function(){var e,t=this,i=t.$el,n=t.$wrapperEl,r=t.slides,s=t.width,a=t.height,o=t.rtlTranslate,l=t.size,c=t.params.cubeEffect,d=t.isHorizontal(),u=t.virtual&&t.params.virtual.enabled,h=0;c.shadow&&(d?(0===(e=n.find(".swiper-cube-shadow")).length&&(e=D('<div class="swiper-cube-shadow"></div>'),n.append(e)),e.css({height:s+"px"})):0===(e=i.find(".swiper-cube-shadow")).length&&(e=D('<div class="swiper-cube-shadow"></div>'),i.append(e)));for(var p,f,m,g,v,y=0;y<r.length;y+=1){var b=r.eq(y),w=y;u&&(w=parseInt(b.attr("data-swiper-slide-index"),10));var E=90*w,x=Math.floor(E/360);o&&(E=-E,x=Math.floor(-E/360));var _=Math.max(Math.min(b[0].progress,1),-1),T=0,C=0,S=0;w%4==0?(T=4*-x*l,S=0):(w-1)%4==0?(T=0,S=4*-x*l):(w-2)%4==0?(T=l+4*x*l,S=l):(w-3)%4==0&&(T=-l,S=3*l+4*l*x),o&&(T=-T),d||(C=T,T=0);var k,N,L="rotateX("+(d?0:-E)+"deg) rotateY("+(d?E:0)+"deg) translate3d("+T+"px, "+C+"px, "+S+"px)";_<=1&&-1<_&&(h=o?90*-w-90*_:90*w+90*_),b.transform(L),c.slideShadows&&(k=d?b.find(".swiper-slide-shadow-left"):b.find(".swiper-slide-shadow-top"),N=d?b.find(".swiper-slide-shadow-right"):b.find(".swiper-slide-shadow-bottom"),0===k.length&&(k=D('<div class="swiper-slide-shadow-'+(d?"left":"top")+'"></div>'),b.append(k)),0===N.length&&(N=D('<div class="swiper-slide-shadow-'+(d?"right":"bottom")+'"></div>'),b.append(N)),k.length&&(k[0].style.opacity=Math.max(-_,0)),N.length&&(N[0].style.opacity=Math.max(_,0)))}n.css({"-webkit-transform-origin":"50% 50% -"+l/2+"px","-moz-transform-origin":"50% 50% -"+l/2+"px","-ms-transform-origin":"50% 50% -"+l/2+"px","transform-origin":"50% 50% -"+l/2+"px"}),c.shadow&&(d?e.transform("translate3d(0px, "+(s/2+c.shadowOffset)+"px, "+-s/2+"px) rotateX(90deg) rotateZ(0deg) scale("+c.shadowScale+")"):(p=Math.abs(h)-90*Math.floor(Math.abs(h)/90),f=1.5-(Math.sin(2*p*Math.PI/360)/2+Math.cos(2*p*Math.PI/360)/2),m=c.shadowScale,g=c.shadowScale/f,v=c.shadowOffset,e.transform("scale3d("+m+", 1, "+g+") translate3d(0px, "+(a/2+v)+"px, "+-a/2/g+"px) rotateX(-90deg)")));var I=M.isSafari||M.isUiWebView?-l/2:0;n.transform("translate3d(0px,0,"+I+"px) rotateX("+(t.isHorizontal()?0:h)+"deg) rotateY("+(t.isHorizontal()?-h:0)+"deg)")},setTransition:function(e){var t=this.$el;this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),this.params.cubeEffect.shadow&&!this.isHorizontal()&&t.find(".swiper-cube-shadow").transition(e)}},ue={setTranslate:function(){for(var e=this.slides,t=this.rtlTranslate,i=0;i<e.length;i+=1){var n=e.eq(i),r=n[0].progress;this.params.flipEffect.limitRotation&&(r=Math.max(Math.min(n[0].progress,1),-1));var s,a,o=-180*r,l=0,c=-n[0].swiperSlideOffset,d=0;this.isHorizontal()?t&&(o=-o):(d=c,l=-o,o=c=0),n[0].style.zIndex=-Math.abs(Math.round(r))+e.length,this.params.flipEffect.slideShadows&&(s=this.isHorizontal()?n.find(".swiper-slide-shadow-left"):n.find(".swiper-slide-shadow-top"),a=this.isHorizontal()?n.find(".swiper-slide-shadow-right"):n.find(".swiper-slide-shadow-bottom"),0===s.length&&(s=D('<div class="swiper-slide-shadow-'+(this.isHorizontal()?"left":"top")+'"></div>'),n.append(s)),0===a.length&&(a=D('<div class="swiper-slide-shadow-'+(this.isHorizontal()?"right":"bottom")+'"></div>'),n.append(a)),s.length&&(s[0].style.opacity=Math.max(-r,0)),a.length&&(a[0].style.opacity=Math.max(r,0))),n.transform("translate3d("+c+"px, "+d+"px, 0px) rotateX("+l+"deg) rotateY("+o+"deg)")}},setTransition:function(e){var i,n=this,t=n.slides,r=n.activeIndex,s=n.$wrapperEl;t.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),n.params.virtualTranslate&&0!==e&&(i=!1,t.eq(r).transitionEnd(function(){if(!i&&n&&!n.destroyed){i=!0,n.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],t=0;t<e.length;t+=1)s.trigger(e[t])}}))}},he={setTranslate:function(){for(var e=this.width,t=this.height,i=this.slides,n=this.$wrapperEl,r=this.slidesSizesGrid,s=this.params.coverflowEffect,a=this.isHorizontal(),o=this.translate,l=a?e/2-o:t/2-o,c=a?s.rotate:-s.rotate,d=s.depth,u=0,h=i.length;u<h;u+=1){var p=i.eq(u),f=r[u],m=(l-p[0].swiperSlideOffset-f/2)/f*s.modifier,g=a?c*m:0,v=a?0:c*m,y=-d*Math.abs(m),b=a?0:s.stretch*m,w=a?s.stretch*m:0;Math.abs(w)<.001&&(w=0),Math.abs(b)<.001&&(b=0),Math.abs(y)<.001&&(y=0),Math.abs(g)<.001&&(g=0),Math.abs(v)<.001&&(v=0);var E,x,_="translate3d("+w+"px,"+b+"px,"+y+"px)  rotateX("+v+"deg) rotateY("+g+"deg)";p.transform(_),p[0].style.zIndex=1-Math.abs(Math.round(m)),s.slideShadows&&(E=a?p.find(".swiper-slide-shadow-left"):p.find(".swiper-slide-shadow-top"),x=a?p.find(".swiper-slide-shadow-right"):p.find(".swiper-slide-shadow-bottom"),0===E.length&&(E=D('<div class="swiper-slide-shadow-'+(a?"left":"top")+'"></div>'),p.append(E)),0===x.length&&(x=D('<div class="swiper-slide-shadow-'+(a?"right":"bottom")+'"></div>'),p.append(x)),E.length&&(E[0].style.opacity=0<m?m:0),x.length&&(x[0].style.opacity=0<-m?-m:0))}(te.pointerEvents||te.prefixedPointerEvents)&&(n[0].style.perspectiveOrigin=l+"px 50%")},setTransition:function(e){this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e)}},pe={init:function(){var e=this,t=e.params.thumbs,i=e.constructor;t.swiper instanceof i?(e.thumbs.swiper=t.swiper,ee.extend(e.thumbs.swiper.originalParams,{watchSlidesProgress:!0,slideToClickedSlide:!1}),ee.extend(e.thumbs.swiper.params,{watchSlidesProgress:!0,slideToClickedSlide:!1})):ee.isObject(t.swiper)&&(e.thumbs.swiper=new i(ee.extend({},t.swiper,{watchSlidesVisibility:!0,watchSlidesProgress:!0,slideToClickedSlide:!1})),e.thumbs.swiperCreated=!0),e.thumbs.swiper.$el.addClass(e.params.thumbs.thumbsContainerClass),e.thumbs.swiper.on("tap",e.thumbs.onThumbClick)},onThumbClick:function(){var e,t,i,n,r,s,a=this,o=a.thumbs.swiper;o&&(e=o.clickedIndex,(t=o.clickedSlide)&&D(t).hasClass(a.params.thumbs.slideThumbActiveClass)||null==e||(s=o.params.loop?parseInt(D(o.clickedSlide).attr("data-swiper-slide-index"),10):e,a.params.loop&&(i=a.activeIndex,a.slides.eq(i).hasClass(a.params.slideDuplicateClass)&&(a.loopFix(),a._clientLeft=a.$wrapperEl[0].clientLeft,i=a.activeIndex),n=a.slides.eq(i).prevAll('[data-swiper-slide-index="'+s+'"]').eq(0).index(),r=a.slides.eq(i).nextAll('[data-swiper-slide-index="'+s+'"]').eq(0).index(),s=void 0===n||void 0!==r&&r-i<i-n?r:n),a.slideTo(s)))},update:function(e){var t=this,i=t.thumbs.swiper;if(i){var n,r,s,a,o="auto"===i.params.slidesPerView?i.slidesPerViewDynamic():i.params.slidesPerView;t.realIndex!==i.realIndex&&(n=i.activeIndex,a=i.params.loop?(i.slides.eq(n).hasClass(i.params.slideDuplicateClass)&&(i.loopFix(),i._clientLeft=i.$wrapperEl[0].clientLeft,n=i.activeIndex),r=i.slides.eq(n).prevAll('[data-swiper-slide-index="'+t.realIndex+'"]').eq(0).index(),s=i.slides.eq(n).nextAll('[data-swiper-slide-index="'+t.realIndex+'"]').eq(0).index(),void 0===r?s:void 0===s?r:s-n==n-r?n:s-n<n-r?s:r):t.realIndex,i.visibleSlidesIndexes.indexOf(a)<0&&(i.params.centeredSlides?a=n<a?a-Math.floor(o/2)+1:a+Math.floor(o/2)-1:n<a&&(a=a-o+1),i.slideTo(a,e?0:void 0)));var l=1,c=t.params.thumbs.slideThumbActiveClass;if(1<t.params.slidesPerView&&!t.params.centeredSlides&&(l=t.params.slidesPerView),i.slides.removeClass(c),i.params.loop)for(var d=0;d<l;d+=1)i.$wrapperEl.children('[data-swiper-slide-index="'+(t.realIndex+d)+'"]').addClass(c);else for(var u=0;u<l;u+=1)i.slides.eq(t.realIndex+u).addClass(c)}}},fe=[B,H,R,$,F,V,X,{name:"mousewheel",params:{mousewheel:{enabled:!1,releaseOnEdges:!1,invert:!1,forceToAxis:!1,sensitivity:1,eventsTarged:"container"}},create:function(){ee.extend(this,{mousewheel:{enabled:!1,enable:U.enable.bind(this),disable:U.disable.bind(this),handle:U.handle.bind(this),handleMouseEnter:U.handleMouseEnter.bind(this),handleMouseLeave:U.handleMouseLeave.bind(this),lastScrollTime:ee.now()}})},on:{init:function(){this.params.mousewheel.enabled&&this.mousewheel.enable()},destroy:function(){this.mousewheel.enabled&&this.mousewheel.disable()}}},{name:"navigation",params:{navigation:{nextEl:null,prevEl:null,hideOnClick:!1,disabledClass:"swiper-button-disabled",hiddenClass:"swiper-button-hidden",lockClass:"swiper-button-lock"}},create:function(){ee.extend(this,{navigation:{init:G.init.bind(this),update:G.update.bind(this),destroy:G.destroy.bind(this),onNextClick:G.onNextClick.bind(this),onPrevClick:G.onPrevClick.bind(this)}})},on:{init:function(){this.navigation.init(),this.navigation.update()},toEdge:function(){this.navigation.update()},fromEdge:function(){this.navigation.update()},destroy:function(){this.navigation.destroy()},click:function(e){var t=this.navigation,i=t.$nextEl,n=t.$prevEl;!this.params.navigation.hideOnClick||D(e.target).is(n)||D(e.target).is(i)||(i&&i.toggleClass(this.params.navigation.hiddenClass),n&&n.toggleClass(this.params.navigation.hiddenClass))}}},{name:"pagination",params:{pagination:{el:null,bulletElement:"span",clickable:!1,hideOnClick:!1,renderBullet:null,renderProgressbar:null,renderFraction:null,renderCustom:null,progressbarOpposite:!1,type:"bullets",dynamicBullets:!1,dynamicMainBullets:1,formatFractionCurrent:function(e){return e},formatFractionTotal:function(e){return e},bulletClass:"swiper-pagination-bullet",bulletActiveClass:"swiper-pagination-bullet-active",modifierClass:"swiper-pagination-",currentClass:"swiper-pagination-current",totalClass:"swiper-pagination-total",hiddenClass:"swiper-pagination-hidden",progressbarFillClass:"swiper-pagination-progressbar-fill",progressbarOppositeClass:"swiper-pagination-progressbar-opposite",clickableClass:"swiper-pagination-clickable",lockClass:"swiper-pagination-lock"}},create:function(){ee.extend(this,{pagination:{init:K.init.bind(this),render:K.render.bind(this),update:K.update.bind(this),destroy:K.destroy.bind(this),dynamicBulletIndex:0}})},on:{init:function(){this.pagination.init(),this.pagination.render(),this.pagination.update()},activeIndexChange:function(){!this.params.loop&&void 0!==this.snapIndex||this.pagination.update()},snapIndexChange:function(){this.params.loop||this.pagination.update()},slidesLengthChange:function(){this.params.loop&&(this.pagination.render(),this.pagination.update())},snapGridLengthChange:function(){this.params.loop||(this.pagination.render(),this.pagination.update())},destroy:function(){this.pagination.destroy()},click:function(e){this.params.pagination.el&&this.params.pagination.hideOnClick&&0<this.pagination.$el.length&&!D(e.target).hasClass(this.params.pagination.bulletClass)&&this.pagination.$el.toggleClass(this.params.pagination.hiddenClass)}}},{name:"scrollbar",params:{scrollbar:{el:null,dragSize:"auto",hide:!1,draggable:!1,snapOnRelease:!0,lockClass:"swiper-scrollbar-lock",dragClass:"swiper-scrollbar-drag"}},create:function(){var e=this;ee.extend(e,{scrollbar:{init:Q.init.bind(e),destroy:Q.destroy.bind(e),updateSize:Q.updateSize.bind(e),setTranslate:Q.setTranslate.bind(e),setTransition:Q.setTransition.bind(e),enableDraggable:Q.enableDraggable.bind(e),disableDraggable:Q.disableDraggable.bind(e),setDragPosition:Q.setDragPosition.bind(e),onDragStart:Q.onDragStart.bind(e),onDragMove:Q.onDragMove.bind(e),onDragEnd:Q.onDragEnd.bind(e),isTouched:!1,timeout:null,dragTimeout:null}})},on:{init:function(){this.scrollbar.init(),this.scrollbar.updateSize(),this.scrollbar.setTranslate()},update:function(){this.scrollbar.updateSize()},resize:function(){this.scrollbar.updateSize()},observerUpdate:function(){this.scrollbar.updateSize()},setTranslate:function(){this.scrollbar.setTranslate()},setTransition:function(e){this.scrollbar.setTransition(e)},destroy:function(){this.scrollbar.destroy()}}},{name:"parallax",params:{parallax:{enabled:!1}},create:function(){ee.extend(this,{parallax:{setTransform:Z.setTransform.bind(this),setTranslate:Z.setTranslate.bind(this),setTransition:Z.setTransition.bind(this)}})},on:{beforeInit:function(){this.params.parallax.enabled&&(this.params.watchSlidesProgress=!0,this.originalParams.watchSlidesProgress=!0)},init:function(){this.params.parallax&&this.parallax.setTranslate()},setTranslate:function(){this.params.parallax&&this.parallax.setTranslate()},setTransition:function(e){this.params.parallax&&this.parallax.setTransition(e)}}},{name:"zoom",params:{zoom:{enabled:!1,maxRatio:3,minRatio:1,toggle:!0,containerClass:"swiper-zoom-container",zoomedSlideClass:"swiper-slide-zoomed"}},create:function(){var n=this,t={enabled:!1,scale:1,currentScale:1,isScaling:!1,gesture:{$slideEl:void 0,slideWidth:void 0,slideHeight:void 0,$imageEl:void 0,$imageWrapEl:void 0,maxRatio:3},image:{isTouched:void 0,isMoved:void 0,currentX:void 0,currentY:void 0,minX:void 0,minY:void 0,maxX:void 0,maxY:void 0,width:void 0,height:void 0,startX:void 0,startY:void 0,touchesStart:{},touchesCurrent:{}},velocity:{x:void 0,y:void 0,prevPositionX:void 0,prevPositionY:void 0,prevTime:void 0}};"onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out".split(" ").forEach(function(e){t[e]=ie[e].bind(n)}),ee.extend(n,{zoom:t});var r=1;Object.defineProperty(n.zoom,"scale",{get:function(){return r},set:function(e){var t,i;r!==e&&(t=n.zoom.gesture.$imageEl?n.zoom.gesture.$imageEl[0]:void 0,i=n.zoom.gesture.$slideEl?n.zoom.gesture.$slideEl[0]:void 0,n.emit("zoomChange",e,t,i)),r=e}})},on:{init:function(){this.params.zoom.enabled&&this.zoom.enable()},destroy:function(){this.zoom.disable()},touchStart:function(e){this.zoom.enabled&&this.zoom.onTouchStart(e)},touchEnd:function(e){this.zoom.enabled&&this.zoom.onTouchEnd(e)},doubleTap:function(e){this.params.zoom.enabled&&this.zoom.enabled&&this.params.zoom.toggle&&this.zoom.toggle(e)},transitionEnd:function(){this.zoom.enabled&&this.params.zoom.enabled&&this.zoom.onTransitionEnd()}}},{name:"lazy",params:{lazy:{enabled:!1,loadPrevNext:!1,loadPrevNextAmount:1,loadOnTransitionStart:!1,elementClass:"swiper-lazy",loadingClass:"swiper-lazy-loading",loadedClass:"swiper-lazy-loaded",preloaderClass:"swiper-lazy-preloader"}},create:function(){ee.extend(this,{lazy:{initialImageLoaded:!1,load:ne.load.bind(this),loadInSlide:ne.loadInSlide.bind(this)}})},on:{beforeInit:function(){this.params.lazy.enabled&&this.params.preloadImages&&(this.params.preloadImages=!1)},init:function(){this.params.lazy.enabled&&!this.params.loop&&0===this.params.initialSlide&&this.lazy.load()},scroll:function(){this.params.freeMode&&!this.params.freeModeSticky&&this.lazy.load()},resize:function(){this.params.lazy.enabled&&this.lazy.load()},scrollbarDragMove:function(){this.params.lazy.enabled&&this.lazy.load()},transitionStart:function(){this.params.lazy.enabled&&(this.params.lazy.loadOnTransitionStart||!this.params.lazy.loadOnTransitionStart&&!this.lazy.initialImageLoaded)&&this.lazy.load()},transitionEnd:function(){this.params.lazy.enabled&&!this.params.lazy.loadOnTransitionStart&&this.lazy.load()}}},{name:"controller",params:{controller:{control:void 0,inverse:!1,by:"slide"}},create:function(){ee.extend(this,{controller:{control:this.params.controller.control,getInterpolateFunction:re.getInterpolateFunction.bind(this),setTranslate:re.setTranslate.bind(this),setTransition:re.setTransition.bind(this)}})},on:{update:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},resize:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},observerUpdate:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},setTranslate:function(e,t){this.controller.control&&this.controller.setTranslate(e,t)},setTransition:function(e,t){this.controller.control&&this.controller.setTransition(e,t)}}},{name:"a11y",params:{a11y:{enabled:!0,notificationClass:"swiper-notification",prevSlideMessage:"Previous slide",nextSlideMessage:"Next slide",firstSlideMessage:"This is the first slide",lastSlideMessage:"This is the last slide",paginationBulletMessage:"Go to slide {{index}}"}},create:function(){var t=this;ee.extend(t,{a11y:{liveRegion:D('<span class="'+t.params.a11y.notificationClass+'" aria-live="assertive" aria-atomic="true"></span>')}}),Object.keys(se).forEach(function(e){t.a11y[e]=se[e].bind(t)})},on:{init:function(){this.params.a11y.enabled&&(this.a11y.init(),this.a11y.updateNavigation())},toEdge:function(){this.params.a11y.enabled&&this.a11y.updateNavigation()},fromEdge:function(){this.params.a11y.enabled&&this.a11y.updateNavigation()},paginationUpdate:function(){this.params.a11y.enabled&&this.a11y.updatePagination()},destroy:function(){this.params.a11y.enabled&&this.a11y.destroy()}}},{name:"history",params:{history:{enabled:!1,replaceState:!1,key:"slides"}},create:function(){ee.extend(this,{history:{init:ae.init.bind(this),setHistory:ae.setHistory.bind(this),setHistoryPopState:ae.setHistoryPopState.bind(this),scrollToSlide:ae.scrollToSlide.bind(this),destroy:ae.destroy.bind(this)}})},on:{init:function(){this.params.history.enabled&&this.history.init()},destroy:function(){this.params.history.enabled&&this.history.destroy()},transitionEnd:function(){this.history.initialized&&this.history.setHistory(this.params.history.key,this.activeIndex)}}},{name:"hash-navigation",params:{hashNavigation:{enabled:!1,replaceState:!1,watchState:!1}},create:function(){ee.extend(this,{hashNavigation:{initialized:!1,init:oe.init.bind(this),destroy:oe.destroy.bind(this),setHash:oe.setHash.bind(this),onHashCange:oe.onHashCange.bind(this)}})},on:{init:function(){this.params.hashNavigation.enabled&&this.hashNavigation.init()},destroy:function(){this.params.hashNavigation.enabled&&this.hashNavigation.destroy()},transitionEnd:function(){this.hashNavigation.initialized&&this.hashNavigation.setHash()}}},{name:"autoplay",params:{autoplay:{enabled:!1,delay:3e3,waitForTransition:!0,disableOnInteraction:!0,stopOnLastSlide:!1,reverseDirection:!1}},create:function(){var t=this;ee.extend(t,{autoplay:{running:!1,paused:!1,run:le.run.bind(t),start:le.start.bind(t),stop:le.stop.bind(t),pause:le.pause.bind(t),onTransitionEnd:function(e){t&&!t.destroyed&&t.$wrapperEl&&e.target===this&&(t.$wrapperEl[0].removeEventListener("transitionend",t.autoplay.onTransitionEnd),t.$wrapperEl[0].removeEventListener("webkitTransitionEnd",t.autoplay.onTransitionEnd),t.autoplay.paused=!1,t.autoplay.running?t.autoplay.run():t.autoplay.stop())}}})},on:{init:function(){this.params.autoplay.enabled&&this.autoplay.start()},beforeTransitionStart:function(e,t){this.autoplay.running&&(t||!this.params.autoplay.disableOnInteraction?this.autoplay.pause(e):this.autoplay.stop())},sliderFirstMove:function(){this.autoplay.running&&(this.params.autoplay.disableOnInteraction?this.autoplay.stop():this.autoplay.pause())},destroy:function(){this.autoplay.running&&this.autoplay.stop()}}},{name:"effect-fade",params:{fadeEffect:{crossFade:!1}},create:function(){ee.extend(this,{fadeEffect:{setTranslate:ce.setTranslate.bind(this),setTransition:ce.setTransition.bind(this)}})},on:{beforeInit:function(){var e;"fade"===this.params.effect&&(this.classNames.push(this.params.containerModifierClass+"fade"),e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0},ee.extend(this.params,e),ee.extend(this.originalParams,e))},setTranslate:function(){"fade"===this.params.effect&&this.fadeEffect.setTranslate()},setTransition:function(e){"fade"===this.params.effect&&this.fadeEffect.setTransition(e)}}},{name:"effect-cube",params:{cubeEffect:{slideShadows:!0,shadow:!0,shadowOffset:20,shadowScale:.94}},create:function(){ee.extend(this,{cubeEffect:{setTranslate:de.setTranslate.bind(this),setTransition:de.setTransition.bind(this)}})},on:{beforeInit:function(){var e;"cube"===this.params.effect&&(this.classNames.push(this.params.containerModifierClass+"cube"),this.classNames.push(this.params.containerModifierClass+"3d"),e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,resistanceRatio:0,spaceBetween:0,centeredSlides:!1,virtualTranslate:!0},ee.extend(this.params,e),ee.extend(this.originalParams,e))},setTranslate:function(){"cube"===this.params.effect&&this.cubeEffect.setTranslate()},setTransition:function(e){"cube"===this.params.effect&&this.cubeEffect.setTransition(e)}}},{name:"effect-flip",params:{flipEffect:{slideShadows:!0,limitRotation:!0}},create:function(){ee.extend(this,{flipEffect:{setTranslate:ue.setTranslate.bind(this),setTransition:ue.setTransition.bind(this)}})},on:{beforeInit:function(){var e;"flip"===this.params.effect&&(this.classNames.push(this.params.containerModifierClass+"flip"),this.classNames.push(this.params.containerModifierClass+"3d"),e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0},ee.extend(this.params,e),ee.extend(this.originalParams,e))},setTranslate:function(){"flip"===this.params.effect&&this.flipEffect.setTranslate()},setTransition:function(e){"flip"===this.params.effect&&this.flipEffect.setTransition(e)}}},{name:"effect-coverflow",params:{coverflowEffect:{rotate:50,stretch:0,depth:100,modifier:1,slideShadows:!0}},create:function(){ee.extend(this,{coverflowEffect:{setTranslate:he.setTranslate.bind(this),setTransition:he.setTransition.bind(this)}})},on:{beforeInit:function(){"coverflow"===this.params.effect&&(this.classNames.push(this.params.containerModifierClass+"coverflow"),this.classNames.push(this.params.containerModifierClass+"3d"),this.params.watchSlidesProgress=!0,this.originalParams.watchSlidesProgress=!0)},setTranslate:function(){"coverflow"===this.params.effect&&this.coverflowEffect.setTranslate()},setTransition:function(e){"coverflow"===this.params.effect&&this.coverflowEffect.setTransition(e)}}},{name:"thumbs",params:{thumbs:{swiper:null,slideThumbActiveClass:"swiper-slide-thumb-active",thumbsContainerClass:"swiper-container-thumbs"}},create:function(){ee.extend(this,{thumbs:{swiper:null,init:pe.init.bind(this),update:pe.update.bind(this),onThumbClick:pe.onThumbClick.bind(this)}})},on:{beforeInit:function(){var e=this.params.thumbs;e&&e.swiper&&(this.thumbs.init(),this.thumbs.update(!0))},slideChange:function(){this.thumbs.swiper&&this.thumbs.update()},update:function(){this.thumbs.swiper&&this.thumbs.update()},resize:function(){this.thumbs.swiper&&this.thumbs.update()},observerUpdate:function(){this.thumbs.swiper&&this.thumbs.update()},setTransition:function(e){var t=this.thumbs.swiper;t&&t.setTransition(e)},beforeDestroy:function(){var e=this.thumbs.swiper;e&&this.thumbs.swiperCreated&&e&&e.destroy()}}}];return void 0===j.use&&(j.use=j.Class.use,j.installModule=j.Class.installModule),j.use(fe),j}),function(){function e(){var e=window.navigator.userAgent,t=e.indexOf("MSIE ");if(0<t)return parseInt(e.substring(t+5,e.indexOf(".",t)),10);if(0<e.indexOf("Trident/")){var i=e.indexOf("rv:");return parseInt(e.substring(i+3,e.indexOf(".",i)),10)}var n=e.indexOf("Edge/");return 0<n&&parseInt(e.substring(n+5,e.indexOf(".",n)),10)}var t=document.getElementsByClassName("js-convert-to-entities");function i(e){""!==e.value?e.classList.add("has-value"):e.classList.remove("has-value")}[].forEach.call(t,function(e){var t=function(e){for(var t=[],i=e.length-1;0<=i;i--)t.unshift(["&#",e[i].charCodeAt(),";"].join(""));return t.join("")}(e.innerHTML);e.innerHTML=t,hljs.highlightBlock(e),e.style.opacity="1"});for(var n=document.getElementsByTagName("input"),r=document.getElementsByTagName("textarea"),s=document.getElementsByTagName("select"),a=[],o=0;o<n.length;o++)"submit"!==n[o].type&&a.push(n[o]);for(o=0;o<r.length;o++)a.push(r[o]);for(o=0;o<s.length;o++)a.push(s[o]);[].forEach.call(a,function(e){i(e),e.onblur=function(){i(e)}});function l(e){for(var t=[],i=e.getElementsByTagName("input"),n=e.getElementsByTagName("textarea"),r=0;r<i.length;r++)"submit"!==i[r].type&&t.push(i[r]);for(var s=0;s<n.length;s++)t.push(n[s]);return t}function c(e){var t=!0,i=e.getElementsByClassName("js-contact-form-response")[0],n=l(e);return[].forEach.call(n,function(e){e.hasAttribute("required")&&""===e.value?t=!1:"email"===e.type&&(new RegExp('^(([^<>()[\\]\\.,;:\\s@"]+(\\.[^<>()\\[\\]\\.,;:\\s@"]+)*)|(".+"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$').test(String(e.value))?e.classList.remove("contact__input--error"):(t=!1,e.classList.add("contact__input--error")))}),t?(i.innerHTML="",i.classList.remove("contact__response--success"),i.classList.remove("contact__response--error")):(i.innerHTML="Please make sure all the fields are valid.",i.classList.remove("contact__response--success"),i.classList.add("contact__response--error")),t}function d(r){var e=r.getElementsByClassName("js-contact-form-response")[0],t=r.getElementsByClassName("js-contact-form-submit")[0],i=t.value;e.classList.remove("contact__response--success"),e.classList.remove("contact__response--error");var n,s=c(r);r.classList.add("was-validated"),s?(n=l(r),[].forEach.call(n,function(e){e.disabled=!0}),r.classList.add("contact-form-is-submitting"),t.value="Sending â¦",e.innerHTML="Sending â¦",setTimeout(function(){r.classList.remove("contact-form-is-submitting"),r.classList.add("contact-form-is-valid"),e.innerHTML="Your message was sent successfully.",e.classList.add("contact__response--success"),setTimeout(function(){var e,t,i,n;t=l(e=r),i=e.getElementsByClassName("js-contact-form-response")[0],n=e.getElementsByClassName("js-contact-form-submit")[0],e.reset(),[].forEach.call(t,function(e){e.classList.remove("has-value"),e.disabled=!1}),e.classList.remove("contact-form-is-valid"),e.classList.remove("was-validated"),n.blur(),i.innerHTML="",i.classList.remove("contact__response--success")},4e3),t.value=i},3e3)):(e.innerHTML="Please make sure all the fields are valid.",e.classList.add("contact__response--error"))}window.Element&&!Element.prototype.closest&&(Element.prototype.closest=function(e){var t,i=(this.document||this.ownerDocument).querySelectorAll(e),n=this;do{for(t=i.length;0<=--t&&i.item(t)!==n;);}while(t<0&&(n=n.parentElement));return n});var u,h=document.getElementsByClassName("js-contact-form")[0];!h||(u=h.getElementsByClassName("js-contact-form-submit")[0])&&(u.onclick=function(e){e.preventDefault(),d(h)});var p,f,m,g,v,y,b,w,E,x=document.getElementsByClassName("js-contact-input");function _(e,a,o,t){function i(){var t="",i="",i=o?(t="data-article-page-mobile","is-article-visible-mobile"):(t="data-article-page-desktop","is-article-visible-desktop");if([].forEach.call(a,function(e){e.ondragstart=function(){return!1},e.hasAttribute(t)&&(Number(e.getAttribute(t))===d?e.classList.add(i):e.classList.remove(i))}),l.getElementsByClassName("is-current")[0].parentNode.classList.remove("active"),l.getElementsByClassName("is-current")[0].classList.remove("is-current"),l.getElementsByClassName("js-page-"+d)[0].parentNode.classList.add("active"),l.getElementsByClassName("js-page-"+d)[0].classList.add("is-current"),1===d?p.parentNode.classList.add("disabled"):1<d&&p.parentNode.classList.remove("disabled"),d===u?f.parentNode.classList.add("disabled"):d<u&&f.parentNode.classList.remove("disabled"),c.length>h){for(var e=l.getElementsByClassName("js-page-filler"),n=2;n<u;n++){l.getElementsByClassName("js-page-"+n)[0].classList.add("is-hidden")}[].forEach.call(e,function(e){e.classList.add("is-hidden")});var r=h-3+(h<=5?1:0),s=u-(h-4)-(h<=6?1:0);if(d<=r){for(n=2;n<=r;n++){l.getElementsByClassName("js-page-"+n)[0].classList.remove("is-hidden")}5<h&&l.getElementsByClassName("js-page-"+(1+r))[0].classList.remove("is-hidden"),e[1].classList.remove("is-hidden")}else if(s<=d){for(n=s;n<u;n++){l.getElementsByClassName("js-page-"+n)[0].classList.remove("is-hidden")}6<h&&l.getElementsByClassName("js-page-"+(s-1))[0].classList.remove("is-hidden"),e[0].classList.remove("is-hidden")}else{l.getElementsByClassName("js-page-"+d)[0].classList.remove("is-hidden");for(n=0;n<Math.ceil((h-5)/2);n++){l.getElementsByClassName("js-page-"+(d+(n+1)))[0].classList.remove("is-hidden")}for(n=0;n<Math.ceil((h-6)/2);n++){l.getElementsByClassName("js-page-"+(d-(n+1)))[0].classList.remove("is-hidden")}[].forEach.call(e,function(e){e.classList.remove("is-hidden")})}}}var l=e.getElementsByClassName("js-pagination")[0],c=l.getElementsByClassName("js-page"),d=1,u=c.length,h=l.getAttribute("data-pagination-labels-max"),p=l.getElementsByClassName("js-page-previous")[0],f=l.getElementsByClassName("js-page-next")[0];[].forEach.call(c,function(e){e.onclick=function(){d=Number(this.innerHTML),i()}}),p.onclick=function(){1<d&&(d--,i())},f.onclick=function(){d<u&&(d++,i())};var n=0,r=0,s="is-swiping";t.addEventListener("touchstart",function(e){n=e.changedTouches[0].screenX,t.classList.add(s)},!1),t.addEventListener("mousedown",function(e){n=e.screenX,t.classList.add(s)},!1),t.addEventListener("touchend",function(e){r=e.changedTouches[0].screenX,t.classList.remove(s),m()},!1),t.addEventListener("mouseup",function(e){r=e.screenX,t.classList.remove(s),m()},!1),t.addEventListener("dragend",function(e){r=e.screenX,t.classList.remove(s),m()},!1);var m=function(){10<=Math.abs(r-n)&&(n<r&&1<d&&(d--,i()),r<n&&d<u&&(d++,i()))};i()}0<x.length&&[].forEach.call(x,function(e){e.oninput=function(){h&&h.classList.contains("was-validated")&&c(h)}}),function(){for(var e=document.querySelectorAll("textarea"),t=0;t<e.length;t++)e[t].addEventListener("paste",n),e[t].addEventListener("input",n),e[t].addEventListener("keyup",n);function n(e,t){var i=t||e.target;i.style.height="inherit",i.style.height=i.scrollHeight+"px"}function i(e){for(var t=document.querySelectorAll("textarea"),i=0;i<t.length;i++)n(e,t[i])}window.addEventListener("load",i),window.addEventListener("resize",i)}(),0<document.getElementsByClassName("js-hero-video-overlap").length&&(p=document.getElementsByClassName("js-hero-video-open")[0],f=document.getElementsByClassName("js-hero-video-close")[0],m=document.getElementsByClassName("js-hero-video-overlap-container")[0],g=document.getElementsByClassName("js-hero-video-overlap-player")[0],v=document.getElementsByClassName("js-hero-video-image")[0],null!==p&&(p.onclick=function(){m.classList.add("video-is-playing"),m.style.zIndex="1031",document.body.classList.add("u-no-scroll"),g.controls=!0,setTimeout(function(){g.play()},500)}),null!==f&&(f.onclick=function(){null!=v&&(v.style.display="none"),g.controls=!1,g.pause(),m.classList.remove("video-is-playing"),document.body.classList.remove("u-no-scroll"),setTimeout(function(){m.style.zIndex="0"},500)})),0<document.getElementsByClassName("js-hero-slideshow").length&&(y=document.getElementsByClassName("js-hero-slideshow-button-next")[0],b=document.getElementsByClassName("js-hero-slideshow-button-previous")[0],w=document.getElementsByClassName("js-hero-slideshow-progress-bar")[0],(E=new Swiper(".js-hero-slideshow",{mode:"horizontal",loop:!1,effect:"fade",touchRatio:.8,grabCursor:!0,fadeEffect:{crossFade:!0},keyboard:{enabled:!0,onlyInViewport:!0},mousewheel:{forceToAxis:!0}})).on("slideChangeTransitionStart",function(){0===E.activeIndex?b.classList.remove("is-hero-arrow-enabled"):b.classList.add("is-hero-arrow-enabled"),E.activeIndex===E.slides.length-1?y.classList.remove("is-hero-arrow-enabled"):y.classList.add("is-hero-arrow-enabled"),document.getElementsByClassName("js-hero-slideshow-number-current")[0].innerHTML=E.activeIndex+1,w.style.width=100*(E.activeIndex+1)/E.slides.length+"%"}),y.onclick=function(){E.activeIndex+1<E.slides.length&&E.slideNext()},b.onclick=function(){1<E.activeIndex+1&&E.slidePrev()}),0<document.getElementsByClassName("js-hero-carousel").length&&new Swiper(".js-hero-carousel",{slidesPerView:"auto",centeredSlides:!0,speed:500,spaceBetween:30,touchRatio:.8,loop:!0,grabCursor:!0,keyboard:{enabled:!0,onlyInViewport:!0},breakpoints:{992:{spaceBetween:15}},slideActiveClass:"is-hero-slide-active",slideDuplicateActiveClass:"is-hero-slide-active",mousewheel:{forceToAxis:!0},slideToClickedSlide:!0,pagination:{el:".swiper-pagination",type:"bullets",clickable:!0},on:{init:function(){document.getElementsByClassName("js-hero-carousel")[0].classList.remove("is-transparent")}}});var T=null,C=document.getElementsByClassName("js-has-pagination");[].forEach.call(C,function(o){function e(){var e,t,i,n,r,s=Math.max(document.documentElement.clientWidth,window.innerWidth||0),a=s<768;null!==T&&a==T<768||(a?(e=parseInt(l.getAttribute("data-pages-mobile")),t=parseInt(l.getAttribute("data-pagination-labels-max")),l.innerHTML=function(e,t){for(var i=Boolean(t<e),n='<li class="page-item disabled"><a class="page-link page-link--arrow page-link--arrow-previous js-page-previous"></a></li><li class="page-item"><a class="page-link js-page js-page-1 is-current">1</a></li><li class="page-item page-item--filler"><a class="page-link js-page-filler is-hidden">â¦</a></li>',r=2;r<=e;r++)n+='<li class="page-item"><a class="page-link js-page js-page-'+r+" o-pagination__page",i&&t-1<=r&&(n+=" is-hidden"),n+='">',n+=r,n+="</a></li>";return n+='<li class="page-item page-item--filler"><a class="page-link js-page-filler',i||(n+=" is-hidden"),n+='">â¦</a></li><li class="page-item"><a class="page-link js-page js-page-'+(e+1)+' o-pagination__page">'+(e+1)+"</a></li>",n+='<li class="page-item"><a class="page-link page-link--arrow page-link--arrow-next js-page-next"></a></li>'}(e,t)):l.innerHTML=c,i=o.getElementsByClassName("js-pagination-container")[0],n=o.getElementsByClassName("js-pagination-control-area")[0],r=o.getElementsByClassName("js-pagination-target"),i&&n&&r&&r.length&&_(i,r,a,n)),T=s}var t,l=o.getElementsByClassName("js-pagination")[0],c=l.innerHTML;e(),window.onresize=function(){clearTimeout(t),t=setTimeout(function(){e()},500)}});var S,k,N,L,I,D=document.getElementsByClassName("js-open-video-modal");function A(){var e=document.getElementsByClassName("js-instagram-image-container");[].forEach.call(e,function(e){e.classList.contains("u-height-square")&&e.classList.remove("u-height-square")});var t=document.getElementsByClassName("js-instagram-image");[].forEach.call(t,function(e){e.classList.contains("u-height-square__content")&&e.classList.remove("u-height-square__content")})}function M(e){new Masonry(".js-instagram-images",{itemSelector:".js-instagram-image-container",columnWidth:0,horizontalOrder:!0,resize:!0});e&&e()}0<D.length&&[].forEach.call(D,function(e){e.onclick=function(e){var t,i,n,r,s,a,o;e.preventDefault(),t=this,i=document.getElementsByClassName("js-video-modal")[0],n=document.getElementsByClassName("js-video-modal-body")[0],r=t.getAttribute("data-modal-youtube-id"),s=t.getAttribute("data-modal-video-url"),a=t.getAttribute("data-modal-video-aspect-ratio"),o="",a&&""!==a?"4:3"===a?i.classList.add("video-modal--4-3"):"16:10"===a?i.classList.add("video-modal--16-10"):i.classList.add("video-modal--16-9"):i.classList.add("video-modal--16-9"),null!==r&&r.length?o='<div class="video-modal__video-wrapper"><iframe width="100%" height="100%" src="https://www.youtube.com/embed/'+r+'" frameborder="0" allowfullscreen></iframe></div>':null!==s&&s.length&&(o='<div class="video-modal__video-wrapper"><video width="auto" height="100%" controls autoplay> <source src="'+s+'" type="video/mp4"></video></div>'),n.innerHTML=o}}),(!e()||11<=e())&&(S=new MutationObserver(function(e){e.forEach(function(e){!e.target.classList.contains("show")&&document.body.classList.contains("modal-open")&&(document.getElementsByClassName("js-video-modal-body")[0].innerHTML="")})}),(k=document.getElementsByClassName("js-video-modal")[0])&&S.observe(k,{attributes:!0,attributeOldValue:!0,attributeFilter:["class"]})),0<document.getElementsByClassName("js-instagram-images").length&&(!e()||11<e())&&(L=(N=document.getElementsByClassName("js-instagram-images")[0]).hasAttribute("data-instagram-user-name")?N.getAttribute("data-instagram-user-name"):null,I=N.hasAttribute("data-instagram-limit")?N.getAttribute("data-instagram-limit"):0,L&&N&&(new InstagramFeed({username:L,container:N,get_data:!0,callback:function(e){e&&function(e,t){var i=e.edge_owner_to_timeline_media.edges,n="",r=t<i.length?t:i.length;if(i)for(o=0;o<r;o++)n+='<li class="js-instagram-image-container instagram__image-container u-height-square">',n+='<a class="instagram__image-link" href="https://www.instagram.com/p/'+i[o].node.shortcode+'" target="_blank"><img class="js-instagram-image instagram__image u-height-square__content" src="'+i[o].node.thumbnail_src+'"></a>',n+="</li>";N.className+=" is-instagram-loaded",N.innerHTML=n,M(A)}(e,I)}}),M())),document.getElementsByClassName("js-menu-toggle")[0].onclick=function(){document.body.classList.contains("is-menu-open")?(document.body.classList.remove("u-no-scroll"),document.body.classList.remove("is-menu-open"),setTimeout(function(){document.getElementsByClassName("js-mobile-menu")[0].classList.remove("delay-transition")},500)):(document.body.classList.add("u-no-scroll"),document.body.classList.add("is-menu-open"),setTimeout(function(){document.getElementsByClassName("js-mobile-menu")[0].classList.add("delay-transition")},500))};var O,P=document.getElementsByClassName("js-navbar");[].forEach.call(P,function(t){var i=t.getElementsByClassName("js-search-open")[0];i.onclick=function(){t.classList.contains("is-search-open")||t.classList.add("is-search-open")},document.addEventListener("click",function(e){!i.contains(e.target)&&t.classList.contains("is-search-open")&&t.classList.remove("is-search-open")})}),0<(O=document.querySelectorAll("img.js-inline-svg")).length&&[].forEach.call(O,function(i){var n=new XMLHttpRequest;n.open("GET",i.src,!1),n.onreadystatechange=function(){var e,t;4===n.readyState&&(200!==n.status&&0!==n.status||(e=n.responseText,t=(new DOMParser).parseFromString(e,"image/svg+xml").querySelector("svg"),i.id&&(t.id=i.id),i.className&&(t.classList=i.classList),i.parentNode.replaceChild(t,i)))},n.send(null)});var z=document.getElementsByClassName("js-collapsable-block");0<z.length&&[].forEach.call(z,function(e){250<e.clientHeight&&function(e){e.classList.add("collapsable","is-collapsed");var t=document.createElement("div");t.classList.add("expand-trigger","js-expand-block"),e.appendChild(t)}(e)});var j,B=document.getElementsByClassName("js-expand-block");0<B.length&&[].forEach.call(B,function(n){n.onclick=function(){var e,t,i=n.parentNode;i.classList.contains("is-collapsed")?((t=i).classList.remove("is-collapsed"),t.classList.add("is-expanded")):((e=i).classList.remove("is-expanded"),e.classList.add("is-collapsed"))}}),e()<18&&(j=document.getElementsByClassName("js-cover-image"),[].forEach.call(j,function(e){for(var t=e.src,i=e.parentElement,n=document.createElement("DIV"),r=0;r<e.classList.length;r++)"js-cover-image"!==e.classList[r]&&n.classList.add(e.classList[r]);i.insertBefore(n,e),n.style.backgroundSize="cover",n.style.backgroundRepeat="no-repeat",n.style.backgroundPosition="center",n.style.backgroundImage="url("+t+")",e.style.display="none"}))}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9JbnN0YWdyYW1GZWVkLm1pbi5qcyIsImxpYi9qcXVlcnktMy40LjEuc2xpbS5qcyIsImxpYi9ib290c3RyYXAuYnVuZGxlLmpzIiwibGliL2hpZ2hsaWdodC5wYWNrLmpzIiwibGliL21haWxjaGltcC5qcyIsImxpYi9tYXNvbnJ5LnBrZ2QubWluLmpzIiwibGliL3N3aXBlci5taW4uanMiXSwibmFtZXMiOlsiX3R5cGVvZiIsImEiLCJTeW1ib2wiLCJpdGVyYXRvciIsImNvbnN0cnVjdG9yIiwicHJvdG90eXBlIiwiZ2xvYmFsIiwiZmFjdG9yeSIsIm1vZHVsZSIsImV4cG9ydHMiLCJkb2N1bWVudCIsInciLCJFcnJvciIsIndpbmRvdyIsInRoaXMiLCJub0dsb2JhbCIsImlzV2luZG93Iiwib2JqIiwiYXJyIiwiZ2V0UHJvdG8iLCJPYmplY3QiLCJnZXRQcm90b3R5cGVPZiIsInNsaWNlIiwiY29uY2F0IiwicHVzaCIsImluZGV4T2YiLCJjbGFzczJ0eXBlIiwidG9TdHJpbmciLCJoYXNPd24iLCJoYXNPd25Qcm9wZXJ0eSIsImZuVG9TdHJpbmciLCJPYmplY3RGdW5jdGlvblN0cmluZyIsImNhbGwiLCJzdXBwb3J0IiwiaXNGdW5jdGlvbiIsIm5vZGVUeXBlIiwicHJlc2VydmVkU2NyaXB0QXR0cmlidXRlcyIsInR5cGUiLCJzcmMiLCJub25jZSIsIm5vTW9kdWxlIiwiRE9NRXZhbCIsImNvZGUiLCJub2RlIiwiZG9jIiwiaSIsInZhbCIsInNjcmlwdCIsImNyZWF0ZUVsZW1lbnQiLCJ0ZXh0IiwiZ2V0QXR0cmlidXRlIiwic2V0QXR0cmlidXRlIiwiaGVhZCIsImFwcGVuZENoaWxkIiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwidG9UeXBlIiwidmVyc2lvbiIsImpRdWVyeSIsInNlbGVjdG9yIiwiY29udGV4dCIsImZuIiwiaW5pdCIsInJ0cmltIiwiaXNBcnJheUxpa2UiLCJsZW5ndGgiLCJqcXVlcnkiLCJ0b0FycmF5IiwiZ2V0IiwibnVtIiwicHVzaFN0YWNrIiwiZWxlbXMiLCJyZXQiLCJtZXJnZSIsInByZXZPYmplY3QiLCJlYWNoIiwiY2FsbGJhY2siLCJtYXAiLCJlbGVtIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJmaXJzdCIsImVxIiwibGFzdCIsImxlbiIsImoiLCJlbmQiLCJzb3J0Iiwic3BsaWNlIiwiZXh0ZW5kIiwib3B0aW9ucyIsIm5hbWUiLCJjb3B5IiwiY29weUlzQXJyYXkiLCJjbG9uZSIsInRhcmdldCIsImRlZXAiLCJpc1BsYWluT2JqZWN0IiwiQXJyYXkiLCJpc0FycmF5IiwidW5kZWZpbmVkIiwiZXhwYW5kbyIsIk1hdGgiLCJyYW5kb20iLCJyZXBsYWNlIiwiaXNSZWFkeSIsImVycm9yIiwibXNnIiwibm9vcCIsInByb3RvIiwiQ3RvciIsImlzRW1wdHlPYmplY3QiLCJnbG9iYWxFdmFsIiwidHJpbSIsIm1ha2VBcnJheSIsInJlc3VsdHMiLCJpbkFycmF5Iiwic2Vjb25kIiwiZ3JlcCIsImludmVydCIsIm1hdGNoZXMiLCJjYWxsYmFja0V4cGVjdCIsImFyZyIsInZhbHVlIiwiZ3VpZCIsInNwbGl0IiwidG9Mb3dlckNhc2UiLCJTaXp6bGUiLCJmdW5lc2NhcGUiLCJfIiwiZXNjYXBlZCIsImVzY2FwZWRXaGl0ZXNwYWNlIiwiaGlnaCIsIlN0cmluZyIsImZyb21DaGFyQ29kZSIsInVubG9hZEhhbmRsZXIiLCJzZXREb2N1bWVudCIsIkV4cHIiLCJnZXRUZXh0IiwiaXNYTUwiLCJ0b2tlbml6ZSIsImNvbXBpbGUiLCJzZWxlY3QiLCJvdXRlcm1vc3RDb250ZXh0Iiwic29ydElucHV0IiwiaGFzRHVwbGljYXRlIiwiZG9jRWxlbSIsImRvY3VtZW50SXNIVE1MIiwicmJ1Z2d5UVNBIiwicmJ1Z2d5TWF0Y2hlcyIsImNvbnRhaW5zIiwiRGF0ZSIsInByZWZlcnJlZERvYyIsImRpcnJ1bnMiLCJkb25lIiwiY2xhc3NDYWNoZSIsImNyZWF0ZUNhY2hlIiwidG9rZW5DYWNoZSIsImNvbXBpbGVyQ2FjaGUiLCJub25uYXRpdmVTZWxlY3RvckNhY2hlIiwic29ydE9yZGVyIiwiYiIsInBvcCIsInB1c2hfbmF0aXZlIiwibGlzdCIsImJvb2xlYW5zIiwid2hpdGVzcGFjZSIsImlkZW50aWZpZXIiLCJhdHRyaWJ1dGVzIiwicHNldWRvcyIsInJ3aGl0ZXNwYWNlIiwiUmVnRXhwIiwicmNvbW1hIiwicmNvbWJpbmF0b3JzIiwicmRlc2NlbmQiLCJycHNldWRvIiwicmlkZW50aWZpZXIiLCJtYXRjaEV4cHIiLCJJRCIsIkNMQVNTIiwiVEFHIiwiQVRUUiIsIlBTRVVETyIsIkNISUxEIiwiYm9vbCIsIm5lZWRzQ29udGV4dCIsInJodG1sIiwicmlucHV0cyIsInJoZWFkZXIiLCJybmF0aXZlIiwicnF1aWNrRXhwciIsInJzaWJsaW5nIiwicnVuZXNjYXBlIiwicmNzc2VzY2FwZSIsImZjc3Nlc2NhcGUiLCJjaCIsImFzQ29kZVBvaW50IiwiY2hhckNvZGVBdCIsImluRGlzYWJsZWRGaWVsZHNldCIsImFkZENvbWJpbmF0b3IiLCJkaXNhYmxlZCIsIm5vZGVOYW1lIiwiZGlyIiwibmV4dCIsImNoaWxkTm9kZXMiLCJlIiwiZWxzIiwic2VlZCIsIm0iLCJuaWQiLCJtYXRjaCIsImdyb3VwcyIsIm5ld1NlbGVjdG9yIiwibmV3Q29udGV4dCIsIm93bmVyRG9jdW1lbnQiLCJleGVjIiwiZ2V0RWxlbWVudEJ5SWQiLCJpZCIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsInFzYSIsInRlc3QiLCJ0b1NlbGVjdG9yIiwiam9pbiIsInRlc3RDb250ZXh0IiwicXVlcnlTZWxlY3RvckFsbCIsInFzYUVycm9yIiwicmVtb3ZlQXR0cmlidXRlIiwia2V5cyIsImNhY2hlIiwia2V5IiwiY2FjaGVMZW5ndGgiLCJzaGlmdCIsIm1hcmtGdW5jdGlvbiIsImFzc2VydCIsImVsIiwiYWRkSGFuZGxlIiwiYXR0cnMiLCJoYW5kbGVyIiwiYXR0ckhhbmRsZSIsInNpYmxpbmdDaGVjayIsImN1ciIsImRpZmYiLCJzb3VyY2VJbmRleCIsIm5leHRTaWJsaW5nIiwiY3JlYXRlSW5wdXRQc2V1ZG8iLCJjcmVhdGVCdXR0b25Qc2V1ZG8iLCJjcmVhdGVEaXNhYmxlZFBzZXVkbyIsImlzRGlzYWJsZWQiLCJjcmVhdGVQb3NpdGlvbmFsUHNldWRvIiwiYXJndW1lbnQiLCJtYXRjaEluZGV4ZXMiLCJuYW1lc3BhY2UiLCJuYW1lc3BhY2VVUkkiLCJkb2N1bWVudEVsZW1lbnQiLCJoYXNDb21wYXJlIiwic3ViV2luZG93IiwiZGVmYXVsdFZpZXciLCJ0b3AiLCJhZGRFdmVudExpc3RlbmVyIiwiYXR0YWNoRXZlbnQiLCJjbGFzc05hbWUiLCJjcmVhdGVDb21tZW50IiwiZ2V0QnlJZCIsImdldEVsZW1lbnRzQnlOYW1lIiwiZmlsdGVyIiwiYXR0cklkIiwiZmluZCIsImdldEF0dHJpYnV0ZU5vZGUiLCJ0YWciLCJ0bXAiLCJpbm5lckhUTUwiLCJpbnB1dCIsIm1hdGNoZXNTZWxlY3RvciIsIndlYmtpdE1hdGNoZXNTZWxlY3RvciIsIm1vek1hdGNoZXNTZWxlY3RvciIsIm9NYXRjaGVzU2VsZWN0b3IiLCJtc01hdGNoZXNTZWxlY3RvciIsImRpc2Nvbm5lY3RlZE1hdGNoIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJhZG93biIsImJ1cCIsImNvbXBhcmUiLCJzb3J0RGV0YWNoZWQiLCJhdXAiLCJhcCIsImJwIiwidW5zaGlmdCIsImV4cHIiLCJlbGVtZW50cyIsImF0dHIiLCJzcGVjaWZpZWQiLCJlc2NhcGUiLCJzZWwiLCJ1bmlxdWVTb3J0IiwiZHVwbGljYXRlcyIsImRldGVjdER1cGxpY2F0ZXMiLCJzb3J0U3RhYmxlIiwidGV4dENvbnRlbnQiLCJmaXJzdENoaWxkIiwibm9kZVZhbHVlIiwic2VsZWN0b3JzIiwiY3JlYXRlUHNldWRvIiwicmVsYXRpdmUiLCI+IiwiICIsIisiLCJ+IiwicHJlRmlsdGVyIiwiZXhjZXNzIiwidW5xdW90ZWQiLCJub2RlTmFtZVNlbGVjdG9yIiwicGF0dGVybiIsIm9wZXJhdG9yIiwiY2hlY2siLCJyZXN1bHQiLCJ3aGF0Iiwic2ltcGxlIiwiZm9yd2FyZCIsIm9mVHlwZSIsInhtbCIsInVuaXF1ZUNhY2hlIiwib3V0ZXJDYWNoZSIsIm5vZGVJbmRleCIsInN0YXJ0IiwicGFyZW50IiwidXNlQ2FjaGUiLCJsYXN0Q2hpbGQiLCJ1bmlxdWVJRCIsInBzZXVkbyIsImFyZ3MiLCJzZXRGaWx0ZXJzIiwiaWR4IiwibWF0Y2hlZCIsIm5vdCIsIm1hdGNoZXIiLCJ1bm1hdGNoZWQiLCJoYXMiLCJsYW5nIiwiZWxlbUxhbmciLCJoYXNoIiwibG9jYXRpb24iLCJyb290IiwiZm9jdXMiLCJhY3RpdmVFbGVtZW50IiwiaGFzRm9jdXMiLCJocmVmIiwidGFiSW5kZXgiLCJlbmFibGVkIiwiY2hlY2tlZCIsInNlbGVjdGVkIiwic2VsZWN0ZWRJbmRleCIsImVtcHR5IiwiaGVhZGVyIiwiYnV0dG9uIiwiZXZlbiIsIm9kZCIsImx0IiwiZ3QiLCJyYWRpbyIsImNoZWNrYm94IiwiZmlsZSIsInBhc3N3b3JkIiwiaW1hZ2UiLCJzdWJtaXQiLCJyZXNldCIsInRva2VucyIsImNvbWJpbmF0b3IiLCJiYXNlIiwic2tpcCIsImNoZWNrTm9uRWxlbWVudHMiLCJkb25lTmFtZSIsIm9sZENhY2hlIiwibmV3Q2FjaGUiLCJlbGVtZW50TWF0Y2hlciIsIm1hdGNoZXJzIiwiY29uZGVuc2UiLCJuZXdVbm1hdGNoZWQiLCJtYXBwZWQiLCJzZXRNYXRjaGVyIiwicG9zdEZpbHRlciIsInBvc3RGaW5kZXIiLCJwb3N0U2VsZWN0b3IiLCJ0ZW1wIiwicHJlTWFwIiwicG9zdE1hcCIsInByZWV4aXN0aW5nIiwiY29udGV4dHMiLCJtdWx0aXBsZUNvbnRleHRzIiwibWF0Y2hlckluIiwibWF0Y2hlck91dCIsIm1hdGNoZXJGcm9tVG9rZW5zIiwiY2hlY2tDb250ZXh0IiwibGVhZGluZ1JlbGF0aXZlIiwiaW1wbGljaXRSZWxhdGl2ZSIsIm1hdGNoQ29udGV4dCIsIm1hdGNoQW55Q29udGV4dCIsIm1hdGNoZXJGcm9tR3JvdXBNYXRjaGVycyIsImVsZW1lbnRNYXRjaGVycyIsInNldE1hdGNoZXJzIiwic3VwZXJNYXRjaGVyIiwib3V0ZXJtb3N0IiwibWF0Y2hlZENvdW50Iiwic2V0TWF0Y2hlZCIsImNvbnRleHRCYWNrdXAiLCJieUVsZW1lbnQiLCJkaXJydW5zVW5pcXVlIiwiYnlTZXQiLCJmaWx0ZXJzIiwicGFyc2VPbmx5Iiwic29GYXIiLCJwcmVGaWx0ZXJzIiwiY2FjaGVkIiwidG9rZW4iLCJjb21waWxlZCIsImRlZmF1bHRWYWx1ZSIsInVuaXF1ZSIsImlzWE1MRG9jIiwiZXNjYXBlU2VsZWN0b3IiLCJ1bnRpbCIsInRydW5jYXRlIiwiaXMiLCJzaWJsaW5ncyIsIm4iLCJybmVlZHNDb250ZXh0IiwicnNpbmdsZVRhZyIsIndpbm5vdyIsInF1YWxpZmllciIsInNlbGYiLCJyb290alF1ZXJ5IiwicmVhZHkiLCJwYXJzZUhUTUwiLCJycGFyZW50c3ByZXYiLCJndWFyYW50ZWVkVW5pcXVlIiwiY2hpbGRyZW4iLCJjb250ZW50cyIsInByZXYiLCJzaWJsaW5nIiwidGFyZ2V0cyIsImwiLCJjbG9zZXN0IiwiaW5kZXgiLCJwcmV2QWxsIiwiYWRkIiwiYWRkQmFjayIsInBhcmVudHMiLCJwYXJlbnRzVW50aWwiLCJuZXh0QWxsIiwibmV4dFVudGlsIiwicHJldlVudGlsIiwiY29udGVudERvY3VtZW50IiwiY29udGVudCIsInJldmVyc2UiLCJybm90aHRtbHdoaXRlIiwiSWRlbnRpdHkiLCJ2IiwiVGhyb3dlciIsImV4IiwiYWRvcHRWYWx1ZSIsInJlc29sdmUiLCJyZWplY3QiLCJub1ZhbHVlIiwibWV0aG9kIiwicHJvbWlzZSIsImZhaWwiLCJ0aGVuIiwiQ2FsbGJhY2tzIiwib2JqZWN0IiwiZmxhZyIsImZpcmUiLCJsb2NrZWQiLCJvbmNlIiwiZmlyZWQiLCJmaXJpbmciLCJxdWV1ZSIsImZpcmluZ0luZGV4IiwibWVtb3J5Iiwic3RvcE9uRmFsc2UiLCJyZW1vdmUiLCJkaXNhYmxlIiwibG9jayIsImZpcmVXaXRoIiwiRGVmZXJyZWQiLCJmdW5jIiwidHVwbGVzIiwic3RhdGUiLCJhbHdheXMiLCJkZWZlcnJlZCIsImNhdGNoIiwicGlwZSIsImZucyIsIm5ld0RlZmVyIiwidHVwbGUiLCJyZXR1cm5lZCIsInByb2dyZXNzIiwibm90aWZ5Iiwib25GdWxmaWxsZWQiLCJvblJlamVjdGVkIiwib25Qcm9ncmVzcyIsIm1heERlcHRoIiwiZGVwdGgiLCJzcGVjaWFsIiwibWlnaHRUaHJvdyIsInRoYXQiLCJUeXBlRXJyb3IiLCJub3RpZnlXaXRoIiwicmVzb2x2ZVdpdGgiLCJwcm9jZXNzIiwiZXhjZXB0aW9uSG9vayIsInN0YWNrVHJhY2UiLCJyZWplY3RXaXRoIiwiZ2V0U3RhY2tIb29rIiwic2V0VGltZW91dCIsInN0YXRlU3RyaW5nIiwid2hlbiIsInNpbmdsZVZhbHVlIiwidXBkYXRlRnVuYyIsInJlc29sdmVDb250ZXh0cyIsInJlc29sdmVWYWx1ZXMiLCJyZW1haW5pbmciLCJtYXN0ZXIiLCJyZXJyb3JOYW1lcyIsInN0YWNrIiwiY29uc29sZSIsIndhcm4iLCJtZXNzYWdlIiwicmVhZHlFeGNlcHRpb24iLCJyZWFkeUxpc3QiLCJjb21wbGV0ZWQiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwicmVhZHlXYWl0Iiwid2FpdCIsInJlYWR5U3RhdGUiLCJkb1Njcm9sbCIsImFjY2VzcyIsImNoYWluYWJsZSIsImVtcHR5R2V0IiwicmF3IiwiYnVsayIsInJtc1ByZWZpeCIsInJkYXNoQWxwaGEiLCJmY2FtZWxDYXNlIiwiYWxsIiwibGV0dGVyIiwidG9VcHBlckNhc2UiLCJjYW1lbENhc2UiLCJzdHJpbmciLCJhY2NlcHREYXRhIiwib3duZXIiLCJEYXRhIiwidWlkIiwiZGVmaW5lUHJvcGVydHkiLCJjb25maWd1cmFibGUiLCJzZXQiLCJkYXRhIiwicHJvcCIsImhhc0RhdGEiLCJkYXRhUHJpdiIsImRhdGFVc2VyIiwicmJyYWNlIiwicm11bHRpRGFzaCIsImRhdGFBdHRyIiwiSlNPTiIsInBhcnNlIiwicmVtb3ZlRGF0YSIsIl9kYXRhIiwiX3JlbW92ZURhdGEiLCJkZXF1ZXVlIiwic3RhcnRMZW5ndGgiLCJob29rcyIsIl9xdWV1ZUhvb2tzIiwic3RvcCIsInNldHRlciIsImNsZWFyUXVldWUiLCJjb3VudCIsImRlZmVyIiwicG51bSIsInNvdXJjZSIsInJjc3NOdW0iLCJjc3NFeHBhbmQiLCJpc0F0dGFjaGVkIiwiY29tcG9zZWQiLCJnZXRSb290Tm9kZSIsImlzSGlkZGVuV2l0aGluVHJlZSIsInN0eWxlIiwiZGlzcGxheSIsImNzcyIsInN3YXAiLCJvbGQiLCJkZWZhdWx0RGlzcGxheU1hcCIsInNob3dIaWRlIiwic2hvdyIsInZhbHVlcyIsImJvZHkiLCJoaWRlIiwidG9nZ2xlIiwicmNoZWNrYWJsZVR5cGUiLCJydGFnTmFtZSIsInJzY3JpcHRUeXBlIiwid3JhcE1hcCIsIm9wdGlvbiIsInRoZWFkIiwiY29sIiwidHIiLCJ0ZCIsIl9kZWZhdWx0IiwiZ2V0QWxsIiwic2V0R2xvYmFsRXZhbCIsInJlZkVsZW1lbnRzIiwib3B0Z3JvdXAiLCJ0Ym9keSIsInRmb290IiwiY29sZ3JvdXAiLCJjYXB0aW9uIiwidGgiLCJkaXYiLCJidWlsZEZyYWdtZW50Iiwic2NyaXB0cyIsInNlbGVjdGlvbiIsImlnbm9yZWQiLCJ3cmFwIiwiYXR0YWNoZWQiLCJmcmFnbWVudCIsImNyZWF0ZURvY3VtZW50RnJhZ21lbnQiLCJub2RlcyIsImh0bWxQcmVmaWx0ZXIiLCJjcmVhdGVUZXh0Tm9kZSIsImNoZWNrQ2xvbmUiLCJjbG9uZU5vZGUiLCJub0Nsb25lQ2hlY2tlZCIsInJrZXlFdmVudCIsInJtb3VzZUV2ZW50IiwicnR5cGVuYW1lc3BhY2UiLCJyZXR1cm5UcnVlIiwicmV0dXJuRmFsc2UiLCJleHBlY3RTeW5jIiwiZXJyIiwic2FmZUFjdGl2ZUVsZW1lbnQiLCJvbiIsInR5cGVzIiwib25lIiwib3JpZ0ZuIiwiZXZlbnQiLCJvZmYiLCJsZXZlcmFnZU5hdGl2ZSIsIm5vdEFzeW5jIiwic2F2ZWQiLCJpc1RyaWdnZXIiLCJkZWxlZ2F0ZVR5cGUiLCJzdG9wUHJvcGFnYXRpb24iLCJzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24iLCJwcmV2ZW50RGVmYXVsdCIsInRyaWdnZXIiLCJFdmVudCIsImhhbmRsZU9iakluIiwiZXZlbnRIYW5kbGUiLCJldmVudHMiLCJ0IiwiaGFuZGxlT2JqIiwiaGFuZGxlcnMiLCJuYW1lc3BhY2VzIiwib3JpZ1R5cGUiLCJlbGVtRGF0YSIsImhhbmRsZSIsInRyaWdnZXJlZCIsImRpc3BhdGNoIiwiYmluZFR5cGUiLCJkZWxlZ2F0ZUNvdW50Iiwic2V0dXAiLCJtYXBwZWRUeXBlcyIsIm9yaWdDb3VudCIsInRlYXJkb3duIiwicmVtb3ZlRXZlbnQiLCJuYXRpdmVFdmVudCIsImhhbmRsZXJRdWV1ZSIsImZpeCIsImRlbGVnYXRlVGFyZ2V0IiwicHJlRGlzcGF0Y2giLCJpc1Byb3BhZ2F0aW9uU3RvcHBlZCIsImN1cnJlbnRUYXJnZXQiLCJpc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCIsInJuYW1lc3BhY2UiLCJwb3N0RGlzcGF0Y2giLCJtYXRjaGVkSGFuZGxlcnMiLCJtYXRjaGVkU2VsZWN0b3JzIiwiYWRkUHJvcCIsImhvb2siLCJlbnVtZXJhYmxlIiwib3JpZ2luYWxFdmVudCIsIndyaXRhYmxlIiwibG9hZCIsIm5vQnViYmxlIiwiY2xpY2siLCJiZWZvcmV1bmxvYWQiLCJyZXR1cm5WYWx1ZSIsInByb3BzIiwiaXNEZWZhdWx0UHJldmVudGVkIiwiZGVmYXVsdFByZXZlbnRlZCIsInJlbGF0ZWRUYXJnZXQiLCJ0aW1lU3RhbXAiLCJub3ciLCJpc1NpbXVsYXRlZCIsImFsdEtleSIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwiY2hhbmdlZFRvdWNoZXMiLCJjdHJsS2V5IiwiZGV0YWlsIiwiZXZlbnRQaGFzZSIsIm1ldGFLZXkiLCJwYWdlWCIsInBhZ2VZIiwic2hpZnRLZXkiLCJ2aWV3IiwiY2hhciIsImNoYXJDb2RlIiwia2V5Q29kZSIsImJ1dHRvbnMiLCJjbGllbnRYIiwiY2xpZW50WSIsIm9mZnNldFgiLCJvZmZzZXRZIiwicG9pbnRlcklkIiwicG9pbnRlclR5cGUiLCJzY3JlZW5YIiwic2NyZWVuWSIsInRhcmdldFRvdWNoZXMiLCJ0b0VsZW1lbnQiLCJ0b3VjaGVzIiwid2hpY2giLCJibHVyIiwibW91c2VlbnRlciIsIm1vdXNlbGVhdmUiLCJwb2ludGVyZW50ZXIiLCJwb2ludGVybGVhdmUiLCJvcmlnIiwicmVsYXRlZCIsInJ4aHRtbFRhZyIsInJub0lubmVyaHRtbCIsInJjaGVja2VkIiwicmNsZWFuU2NyaXB0IiwibWFuaXB1bGF0aW9uVGFyZ2V0IiwiZGlzYWJsZVNjcmlwdCIsInJlc3RvcmVTY3JpcHQiLCJjbG9uZUNvcHlFdmVudCIsImRlc3QiLCJwZGF0YU9sZCIsInBkYXRhQ3VyIiwidWRhdGFPbGQiLCJ1ZGF0YUN1ciIsImRvbU1hbmlwIiwiY29sbGVjdGlvbiIsImhhc1NjcmlwdHMiLCJpTm9DbG9uZSIsInZhbHVlSXNGdW5jdGlvbiIsImh0bWwiLCJfZXZhbFVybCIsImtlZXBEYXRhIiwiY2xlYW5EYXRhIiwiZGF0YUFuZEV2ZW50cyIsImRlZXBEYXRhQW5kRXZlbnRzIiwic3JjRWxlbWVudHMiLCJkZXN0RWxlbWVudHMiLCJpblBhZ2UiLCJkZXRhY2giLCJhcHBlbmQiLCJwcmVwZW5kIiwiaW5zZXJ0QmVmb3JlIiwiYmVmb3JlIiwiYWZ0ZXIiLCJyZXBsYWNlV2l0aCIsInJlcGxhY2VDaGlsZCIsImFwcGVuZFRvIiwicHJlcGVuZFRvIiwiaW5zZXJ0QWZ0ZXIiLCJyZXBsYWNlQWxsIiwib3JpZ2luYWwiLCJpbnNlcnQiLCJwaXhlbFBvc2l0aW9uVmFsIiwiYm94U2l6aW5nUmVsaWFibGVWYWwiLCJzY3JvbGxib3hTaXplVmFsIiwicGl4ZWxCb3hTdHlsZXNWYWwiLCJyZWxpYWJsZU1hcmdpbkxlZnRWYWwiLCJjb250YWluZXIiLCJybnVtbm9ucHgiLCJnZXRTdHlsZXMiLCJvcGVuZXIiLCJnZXRDb21wdXRlZFN0eWxlIiwicmJveFN0eWxlIiwiY29tcHV0ZVN0eWxlVGVzdHMiLCJkaXZTdHlsZSIsImNzc1RleHQiLCJyb3VuZFBpeGVsTWVhc3VyZXMiLCJtYXJnaW5MZWZ0IiwicmlnaHQiLCJ3aWR0aCIsInBvc2l0aW9uIiwib2Zmc2V0V2lkdGgiLCJtZWFzdXJlIiwicm91bmQiLCJwYXJzZUZsb2F0IiwiY3VyQ1NTIiwiY29tcHV0ZWQiLCJtaW5XaWR0aCIsIm1heFdpZHRoIiwiZ2V0UHJvcGVydHlWYWx1ZSIsInBpeGVsQm94U3R5bGVzIiwiYWRkR2V0SG9va0lmIiwiY29uZGl0aW9uRm4iLCJob29rRm4iLCJiYWNrZ3JvdW5kQ2xpcCIsImNsZWFyQ2xvbmVTdHlsZSIsImJveFNpemluZ1JlbGlhYmxlIiwicGl4ZWxQb3NpdGlvbiIsInJlbGlhYmxlTWFyZ2luTGVmdCIsInNjcm9sbGJveFNpemUiLCJjc3NQcmVmaXhlcyIsImVtcHR5U3R5bGUiLCJ2ZW5kb3JQcm9wcyIsImZpbmFsUHJvcE5hbWUiLCJmaW5hbCIsImNzc1Byb3BzIiwiY2FwTmFtZSIsInZlbmRvclByb3BOYW1lIiwib3B0IiwicmRpc3BsYXlzd2FwIiwicmN1c3RvbVByb3AiLCJjc3NTaG93IiwidmlzaWJpbGl0eSIsImNzc05vcm1hbFRyYW5zZm9ybSIsImxldHRlclNwYWNpbmciLCJmb250V2VpZ2h0Iiwic2V0UG9zaXRpdmVOdW1iZXIiLCJzdWJ0cmFjdCIsIm1heCIsImJveE1vZGVsQWRqdXN0bWVudCIsImRpbWVuc2lvbiIsImJveCIsImlzQm9yZGVyQm94Iiwic3R5bGVzIiwiY29tcHV0ZWRWYWwiLCJleHRyYSIsImRlbHRhIiwiY2VpbCIsImdldFdpZHRoT3JIZWlnaHQiLCJ2YWx1ZUlzQm9yZGVyQm94Iiwib2Zmc2V0UHJvcCIsImdldENsaWVudFJlY3RzIiwiY3NzSG9va3MiLCJvcGFjaXR5IiwiY3NzTnVtYmVyIiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJjb2x1bW5Db3VudCIsImZpbGxPcGFjaXR5IiwiZmxleEdyb3ciLCJmbGV4U2hyaW5rIiwiZ3JpZEFyZWEiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TdGFydCIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1N0YXJ0IiwibGluZUhlaWdodCIsIm9yZGVyIiwib3JwaGFucyIsIndpZG93cyIsInpJbmRleCIsInpvb20iLCJvcmlnTmFtZSIsImlzQ3VzdG9tUHJvcCIsInZhbHVlUGFydHMiLCJ0d2VlbiIsImFkanVzdGVkIiwic2NhbGUiLCJtYXhJdGVyYXRpb25zIiwiY3VycmVudFZhbHVlIiwiaW5pdGlhbCIsInVuaXQiLCJpbml0aWFsSW5Vbml0IiwiYWRqdXN0Q1NTIiwic2V0UHJvcGVydHkiLCJpc0Zpbml0ZSIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInNjcm9sbGJveFNpemVCdWdneSIsImxlZnQiLCJtYXJnaW4iLCJwYWRkaW5nIiwiYm9yZGVyIiwicHJlZml4Iiwic3VmZml4IiwiZXhwYW5kIiwiZXhwYW5kZWQiLCJwYXJ0cyIsImRlbGF5IiwidGltZSIsImZ4Iiwic3BlZWRzIiwidGltZW91dCIsImNsZWFyVGltZW91dCIsImNoZWNrT24iLCJvcHRTZWxlY3RlZCIsInJhZGlvVmFsdWUiLCJib29sSG9vayIsInJlbW92ZUF0dHIiLCJuVHlwZSIsImF0dHJIb29rcyIsImF0dHJOYW1lcyIsImdldHRlciIsImxvd2VyY2FzZU5hbWUiLCJyZm9jdXNhYmxlIiwicmNsaWNrYWJsZSIsInN0cmlwQW5kQ29sbGFwc2UiLCJnZXRDbGFzcyIsImNsYXNzZXNUb0FycmF5IiwicmVtb3ZlUHJvcCIsInByb3BGaXgiLCJwcm9wSG9va3MiLCJ0YWJpbmRleCIsInBhcnNlSW50IiwiZm9yIiwiY2xhc3MiLCJhZGRDbGFzcyIsImNsYXNzZXMiLCJjdXJWYWx1ZSIsImNsYXp6IiwiZmluYWxWYWx1ZSIsInJlbW92ZUNsYXNzIiwidG9nZ2xlQ2xhc3MiLCJzdGF0ZVZhbCIsImlzVmFsaWRWYWx1ZSIsImNsYXNzTmFtZXMiLCJoYXNDbGFzcyIsInJyZXR1cm4iLCJ2YWxIb29rcyIsIm9wdGlvblNldCIsImZvY3VzaW4iLCJzdG9wUHJvcGFnYXRpb25DYWxsYmFjayIsInJmb2N1c01vcnBoIiwib25seUhhbmRsZXJzIiwiYnViYmxlVHlwZSIsIm9udHlwZSIsImxhc3RFbGVtZW50IiwiZXZlbnRQYXRoIiwicGFyZW50V2luZG93Iiwic2ltdWxhdGUiLCJ0cmlnZ2VySGFuZGxlciIsImF0dGFjaGVzIiwicmJyYWNrZXQiLCJyQ1JMRiIsInJzdWJtaXR0ZXJUeXBlcyIsInJzdWJtaXR0YWJsZSIsImJ1aWxkUGFyYW1zIiwidHJhZGl0aW9uYWwiLCJwYXJhbSIsInZhbHVlT3JGdW5jdGlvbiIsInMiLCJlbmNvZGVVUklDb21wb25lbnQiLCJzZXJpYWxpemUiLCJzZXJpYWxpemVBcnJheSIsIndyYXBBbGwiLCJmaXJzdEVsZW1lbnRDaGlsZCIsIndyYXBJbm5lciIsImh0bWxJc0Z1bmN0aW9uIiwidW53cmFwIiwiaGlkZGVuIiwidmlzaWJsZSIsIm9mZnNldEhlaWdodCIsImNyZWF0ZUhUTUxEb2N1bWVudCIsImltcGxlbWVudGF0aW9uIiwia2VlcFNjcmlwdHMiLCJwYXJzZWQiLCJvZmZzZXQiLCJzZXRPZmZzZXQiLCJjdXJQb3NpdGlvbiIsImN1ckxlZnQiLCJjdXJDU1NUb3AiLCJjdXJUb3AiLCJjdXJPZmZzZXQiLCJjdXJDU1NMZWZ0IiwiY3VyRWxlbSIsInVzaW5nIiwicmVjdCIsIndpbiIsInBhZ2VZT2Zmc2V0IiwicGFnZVhPZmZzZXQiLCJvZmZzZXRQYXJlbnQiLCJwYXJlbnRPZmZzZXQiLCJzY3JvbGxMZWZ0Iiwic2Nyb2xsVG9wIiwic2Nyb2xsVG8iLCJIZWlnaHQiLCJXaWR0aCIsIiIsImRlZmF1bHRFeHRyYSIsImZ1bmNOYW1lIiwiaG92ZXIiLCJmbk92ZXIiLCJmbk91dCIsImJpbmQiLCJ1bmJpbmQiLCJkZWxlZ2F0ZSIsInVuZGVsZWdhdGUiLCJwcm94eSIsImhvbGRSZWFkeSIsImhvbGQiLCJwYXJzZUpTT04iLCJpc051bWVyaWMiLCJpc05hTiIsImRlZmluZSIsImFtZCIsIl9qUXVlcnkiLCJfJCIsIiQiLCJub0NvbmZsaWN0IiwicmVxdWlyZSIsImJvb3RzdHJhcCIsIl9kZWZpbmVQcm9wZXJ0aWVzIiwiZGVzY3JpcHRvciIsIl9jcmVhdGVDbGFzcyIsIkNvbnN0cnVjdG9yIiwicHJvdG9Qcm9wcyIsInN0YXRpY1Byb3BzIiwib3duS2V5cyIsImVudW1lcmFibGVPbmx5Iiwic3ltYm9scyIsImdldE93blByb3BlcnR5U3ltYm9scyIsInN5bSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIl9vYmplY3RTcHJlYWQyIiwiZm9yRWFjaCIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiVFJBTlNJVElPTl9FTkQiLCJ0cmFuc2l0aW9uRW5kRW11bGF0b3IiLCJkdXJhdGlvbiIsIl90aGlzIiwiY2FsbGVkIiwiVXRpbCIsInRyaWdnZXJUcmFuc2l0aW9uRW5kIiwiZ2V0VUlEIiwiZ2V0U2VsZWN0b3JGcm9tRWxlbWVudCIsImVsZW1lbnQiLCJocmVmQXR0ciIsInF1ZXJ5U2VsZWN0b3IiLCJnZXRUcmFuc2l0aW9uRHVyYXRpb25Gcm9tRWxlbWVudCIsInRyYW5zaXRpb25EdXJhdGlvbiIsInRyYW5zaXRpb25EZWxheSIsImZsb2F0VHJhbnNpdGlvbkR1cmF0aW9uIiwiZmxvYXRUcmFuc2l0aW9uRGVsYXkiLCJyZWZsb3ciLCJzdXBwb3J0c1RyYW5zaXRpb25FbmQiLCJCb29sZWFuIiwiaXNFbGVtZW50IiwidHlwZUNoZWNrQ29uZmlnIiwiY29tcG9uZW50TmFtZSIsImNvbmZpZyIsImNvbmZpZ1R5cGVzIiwicHJvcGVydHkiLCJleHBlY3RlZFR5cGVzIiwidmFsdWVUeXBlIiwiZmluZFNoYWRvd1Jvb3QiLCJhdHRhY2hTaGFkb3ciLCJTaGFkb3dSb290IiwialF1ZXJ5RGV0ZWN0aW9uIiwiZW11bGF0ZVRyYW5zaXRpb25FbmQiLCJOQU1FIiwiREFUQV9LRVkiLCJFVkVOVF9LRVkiLCJKUVVFUllfTk9fQ09ORkxJQ1QiLCJDTE9TRSIsIkNMT1NFRCIsIkNMSUNLX0RBVEFfQVBJIiwiQ2xhc3NOYW1lIiwiQWxlcnQiLCJfZWxlbWVudCIsIl9wcm90byIsImNsb3NlIiwicm9vdEVsZW1lbnQiLCJfZ2V0Um9vdEVsZW1lbnQiLCJfdHJpZ2dlckNsb3NlRXZlbnQiLCJfcmVtb3ZlRWxlbWVudCIsImRpc3Bvc2UiLCJjbG9zZUV2ZW50IiwiX2Rlc3Ryb3lFbGVtZW50IiwiX2pRdWVyeUludGVyZmFjZSIsIiRlbGVtZW50IiwiX2hhbmRsZURpc21pc3MiLCJhbGVydEluc3RhbmNlIiwiTkFNRSQxIiwiREFUQV9LRVkkMSIsIkVWRU5UX0tFWSQxIiwiREFUQV9BUElfS0VZJDEiLCJKUVVFUllfTk9fQ09ORkxJQ1QkMSIsIkNsYXNzTmFtZSQxIiwiU2VsZWN0b3IkMSIsIkV2ZW50JDEiLCJGT0NVU19CTFVSX0RBVEFfQVBJIiwiTE9BRF9EQVRBX0FQSSIsIkJ1dHRvbiIsInRyaWdnZXJDaGFuZ2VFdmVudCIsImFkZEFyaWFQcmVzc2VkIiwiY2xhc3NMaXN0IiwidGFnTmFtZSIsImhhc0F0dHJpYnV0ZSIsImlucHV0QnRuIiwiX2kiLCJfbGVuIiwiX2J1dHRvbiIsIk5BTUUkMiIsIkRBVEFfS0VZJDIiLCJFVkVOVF9LRVkkMiIsIkRBVEFfQVBJX0tFWSQyIiwiSlFVRVJZX05PX0NPTkZMSUNUJDIiLCJEZWZhdWx0IiwiaW50ZXJ2YWwiLCJrZXlib2FyZCIsInNsaWRlIiwicGF1c2UiLCJ0b3VjaCIsIkRlZmF1bHRUeXBlIiwiRGlyZWN0aW9uIiwiRXZlbnQkMiIsIlNMSURFIiwiU0xJRCIsIktFWURPV04iLCJNT1VTRUVOVEVSIiwiTU9VU0VMRUFWRSIsIlRPVUNIU1RBUlQiLCJUT1VDSE1PVkUiLCJUT1VDSEVORCIsIlBPSU5URVJET1dOIiwiUE9JTlRFUlVQIiwiRFJBR19TVEFSVCIsIkNsYXNzTmFtZSQyIiwiU2VsZWN0b3IkMiIsIlBvaW50ZXJUeXBlIiwiVE9VQ0giLCJQRU4iLCJDYXJvdXNlbCIsIl9pdGVtcyIsIl9pbnRlcnZhbCIsIl9hY3RpdmVFbGVtZW50IiwiX2lzUGF1c2VkIiwiX2lzU2xpZGluZyIsInRvdWNoVGltZW91dCIsInRvdWNoU3RhcnRYIiwidG91Y2hEZWx0YVgiLCJfY29uZmlnIiwiX2dldENvbmZpZyIsIl9pbmRpY2F0b3JzRWxlbWVudCIsIl90b3VjaFN1cHBvcnRlZCIsIm5hdmlnYXRvciIsIm1heFRvdWNoUG9pbnRzIiwiX3BvaW50ZXJFdmVudCIsIlBvaW50ZXJFdmVudCIsIk1TUG9pbnRlckV2ZW50IiwiX2FkZEV2ZW50TGlzdGVuZXJzIiwiX3NsaWRlIiwibmV4dFdoZW5WaXNpYmxlIiwiY3ljbGUiLCJjbGVhckludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJ2aXNpYmlsaXR5U3RhdGUiLCJ0byIsImFjdGl2ZUluZGV4IiwiX2dldEl0ZW1JbmRleCIsImRpcmVjdGlvbiIsIl9oYW5kbGVTd2lwZSIsImFic0RlbHRheCIsImFicyIsIl90aGlzMiIsIl9rZXlkb3duIiwiX2FkZFRvdWNoRXZlbnRMaXN0ZW5lcnMiLCJfdGhpczMiLCJfZ2V0SXRlbUJ5RGlyZWN0aW9uIiwiaXNOZXh0RGlyZWN0aW9uIiwiaXNQcmV2RGlyZWN0aW9uIiwibGFzdEl0ZW1JbmRleCIsIml0ZW1JbmRleCIsIl90cmlnZ2VyU2xpZGVFdmVudCIsImV2ZW50RGlyZWN0aW9uTmFtZSIsInRhcmdldEluZGV4IiwiZnJvbUluZGV4Iiwic2xpZGVFdmVudCIsImZyb20iLCJfc2V0QWN0aXZlSW5kaWNhdG9yRWxlbWVudCIsImluZGljYXRvcnMiLCJuZXh0SW5kaWNhdG9yIiwiZGlyZWN0aW9uYWxDbGFzc05hbWUiLCJvcmRlckNsYXNzTmFtZSIsInNsaWRFdmVudCIsIm5leHRFbGVtZW50SW50ZXJ2YWwiLCJfdGhpczQiLCJhY3RpdmVFbGVtZW50SW5kZXgiLCJuZXh0RWxlbWVudCIsIm5leHRFbGVtZW50SW5kZXgiLCJpc0N5Y2xpbmciLCJkZWZhdWx0SW50ZXJ2YWwiLCJhY3Rpb24iLCJyaWRlIiwiX2RhdGFBcGlDbGlja0hhbmRsZXIiLCJzbGlkZUluZGV4IiwiY2Fyb3VzZWxzIiwiJGNhcm91c2VsIiwiTkFNRSQzIiwiREFUQV9LRVkkMyIsIkVWRU5UX0tFWSQzIiwiSlFVRVJZX05PX0NPTkZMSUNUJDMiLCJEZWZhdWx0JDEiLCJEZWZhdWx0VHlwZSQxIiwiRXZlbnQkMyIsIlNIT1ciLCJTSE9XTiIsIkhJREUiLCJISURERU4iLCJDbGFzc05hbWUkMyIsIkRpbWVuc2lvbiIsIlNlbGVjdG9yJDMiLCJDb2xsYXBzZSIsIl9pc1RyYW5zaXRpb25pbmciLCJfdHJpZ2dlckFycmF5IiwidG9nZ2xlTGlzdCIsImZpbHRlckVsZW1lbnQiLCJmb3VuZEVsZW0iLCJfc2VsZWN0b3IiLCJfcGFyZW50IiwiX2dldFBhcmVudCIsIl9hZGRBcmlhQW5kQ29sbGFwc2VkQ2xhc3MiLCJhY3RpdmVzIiwiYWN0aXZlc0RhdGEiLCJzdGFydEV2ZW50Iiwic2Nyb2xsU2l6ZSIsIl9nZXREaW1lbnNpb24iLCJzZXRUcmFuc2l0aW9uaW5nIiwidHJpZ2dlckFycmF5TGVuZ3RoIiwiaXNUcmFuc2l0aW9uaW5nIiwiX2dldFRhcmdldEZyb21FbGVtZW50IiwidHJpZ2dlckFycmF5IiwiaXNPcGVuIiwiJHRoaXMiLCIkdHJpZ2dlciIsIiR0YXJnZXQiLCJpc0Jyb3dzZXIiLCJ0aW1lb3V0RHVyYXRpb24iLCJsb25nZXJUaW1lb3V0QnJvd3NlcnMiLCJ1c2VyQWdlbnQiLCJkZWJvdW5jZSIsIlByb21pc2UiLCJzY2hlZHVsZWQiLCJmdW5jdGlvblRvQ2hlY2siLCJnZXRTdHlsZUNvbXB1dGVkUHJvcGVydHkiLCJnZXRQYXJlbnROb2RlIiwiaG9zdCIsImdldFNjcm9sbFBhcmVudCIsIl9nZXRTdHlsZUNvbXB1dGVkUHJvcCIsIm92ZXJmbG93Iiwib3ZlcmZsb3dYIiwib3ZlcmZsb3dZIiwiZ2V0UmVmZXJlbmNlTm9kZSIsInJlZmVyZW5jZSIsInJlZmVyZW5jZU5vZGUiLCJpc0lFMTEiLCJNU0lucHV0TWV0aG9kQ29udGV4dCIsImRvY3VtZW50TW9kZSIsImlzSUUxMCIsImlzSUUiLCJnZXRPZmZzZXRQYXJlbnQiLCJub09mZnNldFBhcmVudCIsIm5leHRFbGVtZW50U2libGluZyIsImdldFJvb3QiLCJmaW5kQ29tbW9uT2Zmc2V0UGFyZW50IiwiZWxlbWVudDEiLCJlbGVtZW50MiIsIk5vZGUiLCJET0NVTUVOVF9QT1NJVElPTl9GT0xMT1dJTkciLCJyYW5nZSIsImNyZWF0ZVJhbmdlIiwic2V0U3RhcnQiLCJzZXRFbmQiLCJjb21tb25BbmNlc3RvckNvbnRhaW5lciIsImVsZW1lbnQxcm9vdCIsImdldFNjcm9sbCIsInVwcGVyU2lkZSIsInNjcm9sbGluZ0VsZW1lbnQiLCJnZXRCb3JkZXJzU2l6ZSIsImF4aXMiLCJzaWRlQSIsInNpZGVCIiwiZ2V0U2l6ZSIsImNvbXB1dGVkU3R5bGUiLCJnZXRXaW5kb3dTaXplcyIsImhlaWdodCIsImNyZWF0ZUNsYXNzIiwiX2V4dGVuZHMiLCJhc3NpZ24iLCJnZXRDbGllbnRSZWN0Iiwib2Zmc2V0cyIsImJvdHRvbSIsInNpemVzIiwiY2xpZW50V2lkdGgiLCJjbGllbnRIZWlnaHQiLCJob3JpelNjcm9sbGJhciIsInZlcnRTY3JvbGxiYXIiLCJnZXRPZmZzZXRSZWN0UmVsYXRpdmVUb0FyYml0cmFyeU5vZGUiLCJmaXhlZFBvc2l0aW9uIiwiaXNIVE1MIiwiY2hpbGRyZW5SZWN0IiwicGFyZW50UmVjdCIsInNjcm9sbFBhcmVudCIsImJvcmRlclRvcFdpZHRoIiwiYm9yZGVyTGVmdFdpZHRoIiwibWFyZ2luVG9wIiwibW9kaWZpZXIiLCJpbmNsdWRlU2Nyb2xsIiwiZ2V0Rml4ZWRQb3NpdGlvbk9mZnNldFBhcmVudCIsInBhcmVudEVsZW1lbnQiLCJnZXRCb3VuZGFyaWVzIiwicG9wcGVyIiwiYm91bmRhcmllc0VsZW1lbnQiLCJib3VuZGFyaWVzTm9kZSIsIl9nZXRXaW5kb3dTaXplcyIsImJvdW5kYXJpZXMiLCJleGNsdWRlU2Nyb2xsIiwicmVsYXRpdmVPZmZzZXQiLCJpbm5lcldpZHRoIiwiaW5uZXJIZWlnaHQiLCJnZXRWaWV3cG9ydE9mZnNldFJlY3RSZWxhdGl2ZVRvQXJ0Yml0cmFyeU5vZGUiLCJpc0ZpeGVkIiwiaXNQYWRkaW5nTnVtYmVyIiwiY29tcHV0ZUF1dG9QbGFjZW1lbnQiLCJwbGFjZW1lbnQiLCJyZWZSZWN0IiwicmVjdHMiLCJzb3J0ZWRBcmVhcyIsImFyZWEiLCJfcmVmIiwiZmlsdGVyZWRBcmVhcyIsIl9yZWYyIiwiY29tcHV0ZWRQbGFjZW1lbnQiLCJ2YXJpYXRpb24iLCJnZXRSZWZlcmVuY2VPZmZzZXRzIiwiZ2V0T3V0ZXJTaXplcyIsIngiLCJtYXJnaW5Cb3R0b20iLCJ5IiwibWFyZ2luUmlnaHQiLCJnZXRPcHBvc2l0ZVBsYWNlbWVudCIsImdldFBvcHBlck9mZnNldHMiLCJyZWZlcmVuY2VPZmZzZXRzIiwicG9wcGVyUmVjdCIsInBvcHBlck9mZnNldHMiLCJpc0hvcml6IiwibWFpblNpZGUiLCJzZWNvbmRhcnlTaWRlIiwibWVhc3VyZW1lbnQiLCJzZWNvbmRhcnlNZWFzdXJlbWVudCIsInJ1bk1vZGlmaWVycyIsIm1vZGlmaWVycyIsImVuZHMiLCJmaW5kSW5kZXgiLCJpc01vZGlmaWVyRW5hYmxlZCIsIm1vZGlmaWVyTmFtZSIsInNvbWUiLCJnZXRTdXBwb3J0ZWRQcm9wZXJ0eU5hbWUiLCJwcmVmaXhlcyIsInVwcGVyUHJvcCIsImNoYXJBdCIsInRvQ2hlY2siLCJnZXRXaW5kb3ciLCJzZXR1cEV2ZW50TGlzdGVuZXJzIiwidXBkYXRlQm91bmQiLCJwYXNzaXZlIiwic2Nyb2xsRWxlbWVudCIsImF0dGFjaFRvU2Nyb2xsUGFyZW50cyIsInNjcm9sbFBhcmVudHMiLCJpc0JvZHkiLCJldmVudHNFbmFibGVkIiwiZGlzYWJsZUV2ZW50TGlzdGVuZXJzIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJzY2hlZHVsZVVwZGF0ZSIsInNldFN0eWxlcyIsImdldFJvdW5kZWRPZmZzZXRzIiwic2hvdWxkUm91bmQiLCJub1JvdW5kIiwiX2RhdGEkb2Zmc2V0cyIsImZsb29yIiwicmVmZXJlbmNlV2lkdGgiLCJwb3BwZXJXaWR0aCIsImlzVmVydGljYWwiLCJpc1ZhcmlhdGlvbiIsImhvcml6b250YWxUb0ludGVnZXIiLCJ2ZXJ0aWNhbFRvSW50ZWdlciIsImlzRmlyZWZveCIsImlzTW9kaWZpZXJSZXF1aXJlZCIsInJlcXVlc3RpbmdOYW1lIiwicmVxdWVzdGVkTmFtZSIsIl9yZXF1ZXN0aW5nIiwicmVxdWVzdGVkIiwicmVxdWVzdGluZyIsImlzUmVxdWlyZWQiLCJwbGFjZW1lbnRzIiwidmFsaWRQbGFjZW1lbnRzIiwiY2xvY2t3aXNlIiwiY291bnRlciIsIkJFSEFWSU9SUyIsInBhcnNlT2Zmc2V0IiwiYmFzZVBsYWNlbWVudCIsInVzZUhlaWdodCIsImZyYWdtZW50cyIsImZyYWciLCJkaXZpZGVyIiwic2VhcmNoIiwic3BsaXRSZWdleCIsIm9wIiwibWVyZ2VXaXRoUHJldmlvdXMiLCJyZWR1Y2UiLCJzdHIiLCJ0b1ZhbHVlIiwiaW5kZXgyIiwiRGVmYXVsdHMiLCJwb3NpdGlvbkZpeGVkIiwicmVtb3ZlT25EZXN0cm95Iiwib25DcmVhdGUiLCJvblVwZGF0ZSIsInNpZGUiLCJzaGlmdE9mZnNldHMiLCJzaGlmdHZhcmlhdGlvbiIsInByZXZlbnRPdmVyZmxvdyIsImluc3RhbmNlIiwidHJhbnNmb3JtUHJvcCIsInBvcHBlclN0eWxlcyIsInRyYW5zZm9ybSIsInByaW9yaXR5IiwicHJpbWFyeSIsImVzY2FwZVdpdGhSZWZlcmVuY2UiLCJzZWNvbmRhcnkiLCJtaW4iLCJrZWVwVG9nZXRoZXIiLCJvcFNpZGUiLCJhcnJvdyIsIl9kYXRhJG9mZnNldHMkYXJyb3ciLCJhcnJvd0VsZW1lbnQiLCJzaWRlQ2FwaXRhbGl6ZWQiLCJhbHRTaWRlIiwiYXJyb3dFbGVtZW50U2l6ZSIsImNlbnRlciIsInBvcHBlck1hcmdpblNpZGUiLCJwb3BwZXJCb3JkZXJTaWRlIiwic2lkZVZhbHVlIiwiZmxpcCIsImZsaXBwZWQiLCJvcmlnaW5hbFBsYWNlbWVudCIsInBsYWNlbWVudE9wcG9zaXRlIiwiZmxpcE9yZGVyIiwiYmVoYXZpb3IiLCJzdGVwIiwicmVmT2Zmc2V0cyIsIm92ZXJsYXBzUmVmIiwib3ZlcmZsb3dzTGVmdCIsIm92ZXJmbG93c1JpZ2h0Iiwib3ZlcmZsb3dzVG9wIiwib3ZlcmZsb3dzQm90dG9tIiwib3ZlcmZsb3dzQm91bmRhcmllcyIsImZsaXBwZWRWYXJpYXRpb25CeVJlZiIsImZsaXBWYXJpYXRpb25zIiwiZmxpcHBlZFZhcmlhdGlvbkJ5Q29udGVudCIsImZsaXBWYXJpYXRpb25zQnlDb250ZW50IiwiZmxpcHBlZFZhcmlhdGlvbiIsImlubmVyIiwic3VidHJhY3RMZW5ndGgiLCJib3VuZCIsImNvbXB1dGVTdHlsZSIsImxlZ2FjeUdwdUFjY2VsZXJhdGlvbk9wdGlvbiIsImdwdUFjY2VsZXJhdGlvbiIsImludmVydFRvcCIsImludmVydExlZnQiLCJvZmZzZXRQYXJlbnRSZWN0IiwiZGV2aWNlUGl4ZWxSYXRpbyIsInByZWZpeGVkUHJvcGVydHkiLCJ3aWxsQ2hhbmdlIiwieC1wbGFjZW1lbnQiLCJhcnJvd1N0eWxlcyIsImFwcGx5U3R5bGUiLCJvbkxvYWQiLCJtb2RpZmllck9wdGlvbnMiLCJQb3BwZXIiLCJpc0Rlc3Ryb3llZCIsImlzQ3JlYXRlZCIsImNsYXNzQ2FsbENoZWNrIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwidXBkYXRlIiwiZW5hYmxlRXZlbnRMaXN0ZW5lcnMiLCJVdGlscyIsIlBvcHBlclV0aWxzIiwiTkFNRSQ0IiwiREFUQV9LRVkkNCIsIkVWRU5UX0tFWSQ0IiwiREFUQV9BUElfS0VZJDQiLCJKUVVFUllfTk9fQ09ORkxJQ1QkNCIsIlJFR0VYUF9LRVlET1dOIiwiQVJST1dfVVBfS0VZQ09ERSIsIkV2ZW50JDQiLCJDTElDSyIsIktFWURPV05fREFUQV9BUEkiLCJLRVlVUF9EQVRBX0FQSSIsIkNsYXNzTmFtZSQ0IiwiU2VsZWN0b3IkNCIsIkF0dGFjaG1lbnRNYXAiLCJEZWZhdWx0JDIiLCJib3VuZGFyeSIsInBvcHBlckNvbmZpZyIsIkRlZmF1bHRUeXBlJDIiLCJEcm9wZG93biIsIl9wb3BwZXIiLCJfbWVudSIsIl9nZXRNZW51RWxlbWVudCIsIl9pbk5hdmJhciIsIl9kZXRlY3ROYXZiYXIiLCJpc0FjdGl2ZSIsIl9jbGVhck1lbnVzIiwidXNlUG9wcGVyIiwic2hvd0V2ZW50IiwiX2dldFBhcmVudEZyb21FbGVtZW50IiwicmVmZXJlbmNlRWxlbWVudCIsIl9nZXRQb3BwZXJDb25maWciLCJoaWRlRXZlbnQiLCJkZXN0cm95IiwiX2dldFBsYWNlbWVudCIsIiRwYXJlbnREcm9wZG93biIsIl9nZXRPZmZzZXQiLCJ0b2dnbGVzIiwiZHJvcGRvd25NZW51IiwiY2xpY2tFdmVudCIsIl9kYXRhQXBpS2V5ZG93bkhhbmRsZXIiLCJpdGVtcyIsIml0ZW0iLCJOQU1FJDUiLCJEQVRBX0tFWSQ1IiwiRVZFTlRfS0VZJDUiLCJKUVVFUllfTk9fQ09ORkxJQ1QkNSIsIkRlZmF1bHQkMyIsImJhY2tkcm9wIiwiRGVmYXVsdFR5cGUkMyIsIkV2ZW50JDUiLCJISURFX1BSRVZFTlRFRCIsIkZPQ1VTSU4iLCJSRVNJWkUiLCJDTElDS19ESVNNSVNTIiwiS0VZRE9XTl9ESVNNSVNTIiwiTU9VU0VVUF9ESVNNSVNTIiwiTU9VU0VET1dOX0RJU01JU1MiLCJDbGFzc05hbWUkNSIsIlNlbGVjdG9yJDUiLCJNb2RhbCIsIl9kaWFsb2ciLCJfYmFja2Ryb3AiLCJfaXNTaG93biIsIl9pc0JvZHlPdmVyZmxvd2luZyIsIl9pZ25vcmVCYWNrZHJvcENsaWNrIiwiX3Njcm9sbGJhcldpZHRoIiwiX2NoZWNrU2Nyb2xsYmFyIiwiX3NldFNjcm9sbGJhciIsIl9hZGp1c3REaWFsb2ciLCJfc2V0RXNjYXBlRXZlbnQiLCJfc2V0UmVzaXplRXZlbnQiLCJfc2hvd0JhY2tkcm9wIiwiX3Nob3dFbGVtZW50IiwidHJhbnNpdGlvbiIsIl9oaWRlTW9kYWwiLCJodG1sRWxlbWVudCIsImhhbmRsZVVwZGF0ZSIsIl90cmlnZ2VyQmFja2Ryb3BUcmFuc2l0aW9uIiwiaGlkZUV2ZW50UHJldmVudGVkIiwibW9kYWxUcmFuc2l0aW9uRHVyYXRpb24iLCJtb2RhbEJvZHkiLCJFTEVNRU5UX05PREUiLCJfZW5mb3JjZUZvY3VzIiwidHJhbnNpdGlvbkNvbXBsZXRlIiwic2hvd25FdmVudCIsIl90aGlzNSIsIl90aGlzNiIsIl90aGlzNyIsIl90aGlzOCIsIl9yZXNldEFkanVzdG1lbnRzIiwiX3Jlc2V0U2Nyb2xsYmFyIiwiX3JlbW92ZUJhY2tkcm9wIiwiY2FsbGJhY2tSZW1vdmUiLCJfYmFja2Ryb3BUcmFuc2l0aW9uRHVyYXRpb24iLCJfdGhpczkiLCJhbmltYXRlIiwiYmFja2Ryb3BUcmFuc2l0aW9uRHVyYXRpb24iLCJpc01vZGFsT3ZlcmZsb3dpbmciLCJzY3JvbGxIZWlnaHQiLCJwYWRkaW5nTGVmdCIsInBhZGRpbmdSaWdodCIsIl9nZXRTY3JvbGxiYXJXaWR0aCIsImZpeGVkQ29udGVudCIsInN0aWNreUNvbnRlbnQiLCJhY3R1YWxQYWRkaW5nIiwiY2FsY3VsYXRlZFBhZGRpbmciLCJfdGhpczEwIiwiYWN0dWFsTWFyZ2luIiwiY2FsY3VsYXRlZE1hcmdpbiIsInNjcm9sbERpdiIsInNjcm9sbGJhcldpZHRoIiwiX3RoaXMxMSIsInVyaUF0dHJzIiwiRGVmYXVsdFdoaXRlbGlzdCIsIioiLCJiciIsImVtIiwiaHIiLCJoMSIsImgyIiwiaDMiLCJoNCIsImg1IiwiaDYiLCJpbWciLCJsaSIsIm9sIiwicCIsInByZSIsInNtYWxsIiwic3BhbiIsInN1YiIsInN1cCIsInN0cm9uZyIsInUiLCJ1bCIsIlNBRkVfVVJMX1BBVFRFUk4iLCJEQVRBX1VSTF9QQVRURVJOIiwic2FuaXRpemVIdG1sIiwidW5zYWZlSHRtbCIsIndoaXRlTGlzdCIsInNhbml0aXplRm4iLCJjcmVhdGVkRG9jdW1lbnQiLCJET01QYXJzZXIiLCJwYXJzZUZyb21TdHJpbmciLCJ3aGl0ZWxpc3RLZXlzIiwiX2xvb3AiLCJlbE5hbWUiLCJhdHRyaWJ1dGVMaXN0Iiwid2hpdGVsaXN0ZWRBdHRyaWJ1dGVzIiwiYWxsb3dlZEF0dHJpYnV0ZUxpc3QiLCJhdHRyTmFtZSIsInJlZ0V4cCIsImF0dHJSZWdleCIsImFsbG93ZWRBdHRyaWJ1dGUiLCJOQU1FJDYiLCJEQVRBX0tFWSQ2IiwiRVZFTlRfS0VZJDYiLCJKUVVFUllfTk9fQ09ORkxJQ1QkNiIsIkNMQVNTX1BSRUZJWCIsIkJTQ0xTX1BSRUZJWF9SRUdFWCIsIkRJU0FMTE9XRURfQVRUUklCVVRFUyIsIkRlZmF1bHRUeXBlJDQiLCJhbmltYXRpb24iLCJ0ZW1wbGF0ZSIsInRpdGxlIiwiZmFsbGJhY2tQbGFjZW1lbnQiLCJzYW5pdGl6ZSIsIkF0dGFjaG1lbnRNYXAkMSIsIkFVVE8iLCJUT1AiLCJSSUdIVCIsIkJPVFRPTSIsIkxFRlQiLCJEZWZhdWx0JDQiLCJIb3ZlclN0YXRlIiwiRXZlbnQkNiIsIklOU0VSVEVEIiwiRk9DVVNPVVQiLCJDbGFzc05hbWUkNiIsIlNlbGVjdG9yJDYiLCJUcmlnZ2VyIiwiVG9vbHRpcCIsIl9pc0VuYWJsZWQiLCJfdGltZW91dCIsIl9ob3ZlclN0YXRlIiwiX2FjdGl2ZVRyaWdnZXIiLCJ0aXAiLCJfc2V0TGlzdGVuZXJzIiwiZW5hYmxlIiwidG9nZ2xlRW5hYmxlZCIsImRhdGFLZXkiLCJfZ2V0RGVsZWdhdGVDb25maWciLCJfaXNXaXRoQWN0aXZlVHJpZ2dlciIsIl9lbnRlciIsIl9sZWF2ZSIsImdldFRpcEVsZW1lbnQiLCJfaGlkZU1vZGFsSGFuZGxlciIsImlzV2l0aENvbnRlbnQiLCJzaGFkb3dSb290IiwiaXNJblRoZURvbSIsInRpcElkIiwic2V0Q29udGVudCIsImF0dGFjaG1lbnQiLCJfZ2V0QXR0YWNobWVudCIsImFkZEF0dGFjaG1lbnRDbGFzcyIsIl9nZXRDb250YWluZXIiLCJjb21wbGV0ZSIsIl9maXhUcmFuc2l0aW9uIiwicHJldkhvdmVyU3RhdGUiLCJfY2xlYW5UaXBDbGFzcyIsImdldFRpdGxlIiwic2V0RWxlbWVudENvbnRlbnQiLCJfaGFuZGxlUG9wcGVyUGxhY2VtZW50Q2hhbmdlIiwiZXZlbnRJbiIsImV2ZW50T3V0IiwiX2ZpeFRpdGxlIiwidGl0bGVUeXBlIiwiZGF0YUF0dHJpYnV0ZXMiLCIkdGlwIiwidGFiQ2xhc3MiLCJwb3BwZXJEYXRhIiwicG9wcGVySW5zdGFuY2UiLCJpbml0Q29uZmlnQW5pbWF0aW9uIiwiTkFNRSQ3IiwiREFUQV9LRVkkNyIsIkVWRU5UX0tFWSQ3IiwiSlFVRVJZX05PX0NPTkZMSUNUJDciLCJDTEFTU19QUkVGSVgkMSIsIkJTQ0xTX1BSRUZJWF9SRUdFWCQxIiwiRGVmYXVsdCQ1IiwiRGVmYXVsdFR5cGUkNSIsIkNsYXNzTmFtZSQ3IiwiU2VsZWN0b3IkNyIsIkV2ZW50JDciLCJQb3BvdmVyIiwiX1Rvb2x0aXAiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJjcmVhdGUiLCJfX3Byb3RvX18iLCJfZ2V0Q29udGVudCIsIk5BTUUkOCIsIkRBVEFfS0VZJDgiLCJFVkVOVF9LRVkkOCIsIkpRVUVSWV9OT19DT05GTElDVCQ4IiwiRGVmYXVsdCQ2IiwiRGVmYXVsdFR5cGUkNiIsIkV2ZW50JDgiLCJBQ1RJVkFURSIsIlNDUk9MTCIsIkNsYXNzTmFtZSQ4IiwiU2VsZWN0b3IkOCIsIk9mZnNldE1ldGhvZCIsIlNjcm9sbFNweSIsIl9zY3JvbGxFbGVtZW50IiwiX29mZnNldHMiLCJfdGFyZ2V0cyIsIl9hY3RpdmVUYXJnZXQiLCJfc2Nyb2xsSGVpZ2h0IiwiX3Byb2Nlc3MiLCJyZWZyZXNoIiwiYXV0b01ldGhvZCIsIm9mZnNldE1ldGhvZCIsIm9mZnNldEJhc2UiLCJfZ2V0U2Nyb2xsVG9wIiwiX2dldFNjcm9sbEhlaWdodCIsInRhcmdldFNlbGVjdG9yIiwidGFyZ2V0QkNSIiwiX2dldE9mZnNldEhlaWdodCIsIm1heFNjcm9sbCIsIl9hY3RpdmF0ZSIsIl9jbGVhciIsInF1ZXJpZXMiLCIkbGluayIsInNjcm9sbFNweXMiLCIkc3B5IiwiREFUQV9LRVkkOSIsIkVWRU5UX0tFWSQ5IiwiSlFVRVJZX05PX0NPTkZMSUNUJDkiLCJFdmVudCQ5IiwiQ2xhc3NOYW1lJDkiLCJTZWxlY3RvciQ5IiwiVGFiIiwibGlzdEVsZW1lbnQiLCJpdGVtU2VsZWN0b3IiLCJwcmV2aW91cyIsImhpZGRlbkV2ZW50IiwiX3RyYW5zaXRpb25Db21wbGV0ZSIsImFjdGl2ZSIsImRyb3Bkb3duQ2hpbGQiLCJkcm9wZG93bkVsZW1lbnQiLCJkcm9wZG93blRvZ2dsZUxpc3QiLCJOQU1FJGEiLCJEQVRBX0tFWSRhIiwiRVZFTlRfS0VZJGEiLCJKUVVFUllfTk9fQ09ORkxJQ1QkYSIsIkV2ZW50JGEiLCJDbGFzc05hbWUkYSIsIkRlZmF1bHRUeXBlJDciLCJhdXRvaGlkZSIsIkRlZmF1bHQkNyIsIlNlbGVjdG9yJGEiLCJUb2FzdCIsIl9jbG9zZSIsIlNjcm9sbHNweSIsImhsanMiLCJyIiwiayIsIm8iLCJjIiwiRSIsImYiLCJnIiwic3Vic3RyaW5nIiwic3Vic3RyIiwiY0kiLCJiSyIsIk51bWJlciIsIkIiLCJsUiIsImJSIiwiZW5kU2FtZUFzQmVnaW4iLCJlVyIsImVSIiwidEUiLCJpUiIsImNhY2hlZF92YXJpYW50cyIsInN0YXJ0cyIsImQiLCJjbGFzc1ByZWZpeCIsIkkiLCJzTCIsIkwiLCJNIiwibGFuZ3VhZ2UiLCJsYXN0SW5kZXgiLCJSIiwiY04iLCJOIiwiZUIiLCJyQiIsImVuZHNQYXJlbnQiLCJyRSIsImVFIiwiQyIsIkEiLCJTIiwiTyIsImxhbmd1YWdlcyIsInNlY29uZF9iZXN0IiwidGFiUmVwbGFjZSIsInVzZUJSIiwiaCIsImNyZWF0ZUVsZW1lbnROUyIsInJlIiwiZGlzYWJsZUF1dG9kZXRlY3QiLCJoaWdobGlnaHQiLCJoaWdobGlnaHRBdXRvIiwiZml4TWFya3VwIiwiaGlnaGxpZ2h0QmxvY2siLCJjb25maWd1cmUiLCJpbml0SGlnaGxpZ2h0aW5nIiwiaW5pdEhpZ2hsaWdodGluZ09uTG9hZCIsInJlZ2lzdGVyTGFuZ3VhZ2UiLCJhbGlhc2VzIiwibGlzdExhbmd1YWdlcyIsImdldExhbmd1YWdlIiwiYXV0b0RldGVjdGlvbiIsImluaGVyaXQiLCJJUiIsIlVJUiIsIk5SIiwiQ05SIiwiQk5SIiwiUlNSIiwiQkUiLCJBU00iLCJRU00iLCJQV00iLCJDTENNIiwiQ0JDTSIsIkhDTSIsIk5NIiwiQ05NIiwiQk5NIiwiQ1NTTk0iLCJSTSIsIlRNIiwiVVRNIiwiTUVUSE9EX0dVQVJEIiwia2V5d29yZCIsImxpdGVyYWwiLCJidWlsdF9pbiIsIkluc3RhZ3JhbUZlZWQiLCJ1c2VybmFtZSIsImRpc3BsYXlfcHJvZmlsZSIsImRpc3BsYXlfYmlvZ3JhcGh5IiwiZGlzcGxheV9nYWxsZXJ5IiwiZGlzcGxheV9pZ3R2IiwiZ2V0X2RhdGEiLCJzdHlsaW5nIiwiaXRlbXNfcGVyX3JvdyIsImltYWdlX3NpemUiLCIxNTAiLCIyNDAiLCIzMjAiLCI0ODAiLCI2NDAiLCImIiwiPCIsIlwiIiwiJyIsIi8iLCJgIiwiPSIsImlzX3RhZyIsInZhbGlkIiwiWE1MSHR0cFJlcXVlc3QiLCJvbmxvYWQiLCJzdGF0dXMiLCJyZXNwb25zZVRleHQiLCJlbnRyeV9kYXRhIiwiUHJvZmlsZVBhZ2UiLCJUYWdQYWdlIiwiZ3JhcGhxbCIsInVzZXIiLCJoYXNodGFnIiwic3RhdHVzVGV4dCIsIm9wZW4iLCJzZW5kIiwicGFyc2VfY2FwdGlvbiIsImVkZ2VfbWVkaWFfdG9fY2FwdGlvbiIsImVkZ2VzIiwiYWNjZXNzaWJpbGl0eV9jYXB0aW9uIiwicHJvZmlsZV9jb250YWluZXIiLCJwcm9maWxlX2ltYWdlIiwicHJvZmlsZV9uYW1lIiwicHJvZmlsZV9iaW9ncmFwaHkiLCJnYWxsZXJ5X2ltYWdlIiwicHJvZmlsZV9waWNfdXJsIiwiZnVsbF9uYW1lIiwiYmlvZ3JhcGh5IiwiaXNfcHJpdmF0ZSIsImVkZ2Vfb3duZXJfdG9fdGltZWxpbmVfbWVkaWEiLCJlZGdlX2hhc2h0YWdfdG9fbWVkaWEiLCJzaG9ydGNvZGUiLCJfX3R5cGVuYW1lIiwidGh1bWJuYWlsX3Jlc291cmNlcyIsInRodW1ibmFpbF9zcmMiLCJlZGdlX2ZlbGl4X3ZpZGVvX3RpbWVsaW5lIiwicnVuIiwibWFpbGNoaW1wRm9ybXMiLCJmb3JtIiwicmVzcG9uc2UiLCJ1cmwiLCJpbnB1dHMiLCJtY3Jlc3BvbnNlIiwialF1ZXJ5QnJpZGdldCIsIl9pbml0IiwiYnJpZGdldCIsIkV2RW1pdHRlciIsIl9ldmVudHMiLCJfb25jZUV2ZW50cyIsImVtaXRFdmVudCIsImFsbE9mZiIsImJvcmRlclN0eWxlIiwiYm9yZGVyV2lkdGgiLCJib3hTaXppbmciLCJpc0JveFNpemVPdXRlciIsIm91dGVyV2lkdGgiLCJvdXRlckhlaWdodCIsInBhZGRpbmdUb3AiLCJwYWRkaW5nQm90dG9tIiwiYm9yZGVyUmlnaHRXaWR0aCIsInoiLCJib3JkZXJCb3R0b21XaWR0aCIsIkVsZW1lbnQiLCJmaXp6eVVJVXRpbHMiLCJtb2R1bG8iLCJyZW1vdmVGcm9tIiwiZ2V0UGFyZW50IiwiZ2V0UXVlcnlFbGVtZW50IiwiaGFuZGxlRXZlbnQiLCJmaWx0ZXJGaW5kRWxlbWVudHMiLCJIVE1MRWxlbWVudCIsImRlYm91bmNlTWV0aG9kIiwiZG9jUmVhZHkiLCJ0b0Rhc2hlZCIsImh0bWxJbml0IiwiT3V0bGF5ZXIiLCJJdGVtIiwibGF5b3V0IiwiX2NyZWF0ZSIsIldlYmtpdFRyYW5zaXRpb24iLCJ0cmFuc2l0aW9uUHJvcGVydHkiLCJfdHJhbnNuIiwiaW5nUHJvcGVydGllcyIsImNsZWFuIiwib25FbmQiLCJzaXplIiwiZ2V0UG9zaXRpb24iLCJfZ2V0T3B0aW9uIiwibGF5b3V0UG9zaXRpb24iLCJnZXRYVmFsdWUiLCJnZXRZVmFsdWUiLCJwZXJjZW50UG9zaXRpb24iLCJfdHJhbnNpdGlvblRvIiwic2V0UG9zaXRpb24iLCJnZXRUcmFuc2xhdGUiLCJvblRyYW5zaXRpb25FbmQiLCJpc0NsZWFuaW5nIiwiZ29UbyIsIm1vdmVUbyIsIl9ub25UcmFuc2l0aW9uIiwiX3JlbW92ZVN0eWxlcyIsImVuYWJsZVRyYW5zaXRpb24iLCJzdGFnZ2VyRGVsYXkiLCJvbndlYmtpdFRyYW5zaXRpb25FbmQiLCJvbnRyYW5zaXRpb25lbmQiLCJvbm90cmFuc2l0aW9uZW5kIiwiLXdlYmtpdC10cmFuc2Zvcm0iLCJwcm9wZXJ0eU5hbWUiLCJkaXNhYmxlVHJhbnNpdGlvbiIsInJlbW92ZVRyYW5zaXRpb25TdHlsZXMiLCJzdGFnZ2VyIiwicmVtb3ZlRWxlbSIsInJldmVhbCIsImlzSGlkZGVuIiwiZ2V0SGlkZVJldmVhbFRyYW5zaXRpb25FbmRQcm9wZXJ0eSIsIm9uUmV2ZWFsVHJhbnNpdGlvbkVuZCIsImhpZGRlblN0eWxlIiwidmlzaWJsZVN0eWxlIiwib25IaWRlVHJhbnNpdGlvbkVuZCIsImRlZmF1bHRzIiwib3V0bGF5ZXJHVUlEIiwiY29udGFpbmVyU3R5bGUiLCJpbml0TGF5b3V0Iiwib3JpZ2luTGVmdCIsIm9yaWdpblRvcCIsInJlc2l6ZSIsInJlc2l6ZUNvbnRhaW5lciIsImNvbXBhdE9wdGlvbnMiLCJob3Jpem9udGFsIiwibGF5b3V0SW5zdGFudCIsInJlbG9hZEl0ZW1zIiwic3RhbXBzIiwic3RhbXAiLCJiaW5kUmVzaXplIiwiX2l0ZW1pemUiLCJfZmlsdGVyRmluZEl0ZW1FbGVtZW50cyIsImdldEl0ZW1FbGVtZW50cyIsIl9yZXNldExheW91dCIsIl9tYW5hZ2VTdGFtcHMiLCJfaXNMYXlvdXRJbml0ZWQiLCJsYXlvdXRJdGVtcyIsIl9nZXRNZWFzdXJlbWVudCIsIl9nZXRJdGVtc0ZvckxheW91dCIsIl9sYXlvdXRJdGVtcyIsIl9wb3N0TGF5b3V0IiwiaXNJZ25vcmVkIiwiX2VtaXRDb21wbGV0ZU9uSXRlbXMiLCJfZ2V0SXRlbUxheW91dFBvc2l0aW9uIiwiaXNJbnN0YW50IiwiaXNMYXlvdXRJbnN0YW50IiwiX3Byb2Nlc3NMYXlvdXRRdWV1ZSIsInVwZGF0ZVN0YWdnZXIiLCJfcG9zaXRpb25JdGVtIiwiX2dldENvbnRhaW5lclNpemUiLCJfc2V0Q29udGFpbmVyTWVhc3VyZSIsImRpc3BhdGNoRXZlbnQiLCJpZ25vcmUiLCJnZXRJdGVtIiwidW5pZ25vcmUiLCJfZmluZCIsInVuc3RhbXAiLCJfZ2V0Qm91bmRpbmdSZWN0IiwiX21hbmFnZVN0YW1wIiwiX2JvdW5kaW5nUmVjdCIsIl9nZXRFbGVtZW50T2Zmc2V0IiwiaXNSZXNpemVCb3VuZCIsInVuYmluZFJlc2l6ZSIsIm9ucmVzaXplIiwibmVlZHNSZXNpemVMYXlvdXQiLCJhZGRJdGVtcyIsImFwcGVuZGVkIiwicHJlcGVuZGVkIiwicmV2ZWFsSXRlbUVsZW1lbnRzIiwiZ2V0SXRlbXMiLCJoaWRlSXRlbUVsZW1lbnRzIiwibXMiLCJNYXNvbnJ5IiwiZml0V2lkdGgiLCJtZWFzdXJlQ29sdW1ucyIsImNvbFlzIiwiY29scyIsIm1heFkiLCJob3Jpem9udGFsQ29sSW5kZXgiLCJnZXRDb250YWluZXJXaWR0aCIsImNvbHVtbldpZHRoIiwiY29udGFpbmVyV2lkdGgiLCJndXR0ZXIiLCJob3Jpem9udGFsT3JkZXIiLCJfZ2V0VG9wQ29sUG9zaXRpb24iLCJfZ2V0VG9wQ29sR3JvdXAiLCJfZ2V0Q29sR3JvdXBZIiwiX2dldEhvcml6b250YWxDb2xQb3NpdGlvbiIsIl9nZXRDb250YWluZXJGaXRXaWR0aCIsIlN3aXBlciIsImNyZWF0ZUV2ZW50IiwiaW5pdEV2ZW50IiwiaGlzdG9yeSIsIkN1c3RvbUV2ZW50IiwiSW1hZ2UiLCJzY3JlZW4iLCJDbGFzcyIsIkRvbTciLCJkb203RWxlbWVudERhdGFTdG9yYWdlIiwid2Via2l0VHJhbnNmb3JtIiwid2Via2l0VHJhbnNpdGlvbkR1cmF0aW9uIiwiZG9tN0V2ZW50RGF0YSIsImRvbTdMaXZlTGlzdGVuZXJzIiwibGlzdGVuZXIiLCJwcm94eUxpc3RlbmVyIiwiZG9tN0xpc3RlbmVycyIsInRyYW5zaXRpb25FbmQiLCJjbGllbnRUb3AiLCJjbGllbnRMZWZ0Iiwic2Nyb2xsWSIsInNjcm9sbFgiLCJwcmV2aW91c1NpYmxpbmciLCJwcmV2aW91c0VsZW1lbnRTaWJsaW5nIiwicGFyYW1zIiwiZXZlbnRzTGlzdGVuZXJzIiwiZGVsZXRlUHJvcHMiLCJuZXh0VGljayIsIldlYktpdENTU01hdHJpeCIsIk1velRyYW5zZm9ybSIsIk9UcmFuc2Zvcm0iLCJNc1RyYW5zZm9ybSIsIm1zVHJhbnNmb3JtIiwibTQxIiwibTQyIiwicGFyc2VVcmxRdWVyeSIsImRlY29kZVVSSUNvbXBvbmVudCIsImlzT2JqZWN0IiwiTW9kZXJuaXpyIiwiRG9jdW1lbnRUb3VjaCIsInBvaW50ZXJFdmVudHMiLCJwb2ludGVyRW5hYmxlZCIsInByZWZpeGVkUG9pbnRlckV2ZW50cyIsIm1zUG9pbnRlckVuYWJsZWQiLCJ0cmFuc2Zvcm1zM2QiLCJjc3N0cmFuc2Zvcm1zM2QiLCJmbGV4Ym94Iiwib2JzZXJ2ZXIiLCJwYXNzaXZlTGlzdGVuZXIiLCJnZXN0dXJlcyIsImNvbXBvbmVudHMiLCJlbWl0IiwidXNlTW9kdWxlc1BhcmFtcyIsIm1vZHVsZXMiLCJ1c2VNb2R1bGVzIiwidXNlIiwiaW5zdGFsbE1vZHVsZSIsInN0YXRpYyIsImluc3RhbGwiLCJ1cGRhdGVTaXplIiwiJGVsIiwiaXNIb3Jpem9udGFsIiwidXBkYXRlU2xpZGVzIiwiJHdyYXBwZXJFbCIsInJ0bFRyYW5zbGF0ZSIsIndyb25nUlRMIiwidmlydHVhbCIsInNsaWRlcyIsInNsaWRlQ2xhc3MiLCJzbGlkZXNPZmZzZXRCZWZvcmUiLCJzbGlkZXNPZmZzZXRBZnRlciIsInNuYXBHcmlkIiwic3BhY2VCZXR3ZWVuIiwiVCIsInZpcnR1YWxTaXplIiwic2xpZGVzUGVyQ29sdW1uIiwic2xpZGVzUGVyVmlldyIsInNsaWRlc1BlckNvbHVtbkZpbGwiLCJlZSIsInRlIiwiUCIsIkQiLCJIIiwiRyIsIlgiLCJZIiwiViIsIkYiLCJxIiwiVyIsIlUiLCJLIiwiLXdlYmtpdC1ib3gtb3JkaW5hbC1ncm91cCIsIi1tb3otYm94LW9yZGluYWwtZ3JvdXAiLCItbXMtZmxleC1vcmRlciIsIi13ZWJraXQtb3JkZXIiLCJyb3VuZExlbmd0aHMiLCJzd2lwZXJTbGlkZVNpemUiLCJjZW50ZXJlZFNsaWRlcyIsInNsaWRlc1Blckdyb3VwIiwiZWZmZWN0Iiwic2V0V3JhcHBlclNpemUiLCJaIiwiUSIsIkoiLCJjZW50ZXJJbnN1ZmZpY2llbnRTbGlkZXMiLCJzbGlkZXNHcmlkIiwic2xpZGVzU2l6ZXNHcmlkIiwid2F0Y2hPdmVyZmxvdyIsImNoZWNrT3ZlcmZsb3ciLCJ3YXRjaFNsaWRlc1Byb2dyZXNzIiwid2F0Y2hTbGlkZXNWaXNpYmlsaXR5IiwidXBkYXRlU2xpZGVzT2Zmc2V0IiwidXBkYXRlQXV0b0hlaWdodCIsInNldFRyYW5zaXRpb24iLCJzcGVlZCIsInN3aXBlclNsaWRlT2Zmc2V0Iiwib2Zmc2V0TGVmdCIsIm9mZnNldFRvcCIsInVwZGF0ZVNsaWRlc1Byb2dyZXNzIiwidHJhbnNsYXRlIiwic2xpZGVWaXNpYmxlQ2xhc3MiLCJ2aXNpYmxlU2xpZGVzSW5kZXhlcyIsInZpc2libGVTbGlkZXMiLCJtaW5UcmFuc2xhdGUiLCJ1cGRhdGVQcm9ncmVzcyIsIm1heFRyYW5zbGF0ZSIsImlzQmVnaW5uaW5nIiwiaXNFbmQiLCJ1cGRhdGVTbGlkZXNDbGFzc2VzIiwicmVhbEluZGV4Iiwic2xpZGVBY3RpdmVDbGFzcyIsInNsaWRlTmV4dENsYXNzIiwic2xpZGVQcmV2Q2xhc3MiLCJzbGlkZUR1cGxpY2F0ZUFjdGl2ZUNsYXNzIiwic2xpZGVEdXBsaWNhdGVOZXh0Q2xhc3MiLCJzbGlkZUR1cGxpY2F0ZVByZXZDbGFzcyIsImxvb3AiLCJzbGlkZUR1cGxpY2F0ZUNsYXNzIiwidXBkYXRlQWN0aXZlSW5kZXgiLCJzbmFwSW5kZXgiLCJub3JtYWxpemVTbGlkZUluZGV4IiwicHJldmlvdXNJbmRleCIsInVwZGF0ZUNsaWNrZWRTbGlkZSIsImNsaWNrZWRTbGlkZSIsImNsaWNrZWRJbmRleCIsInNsaWRlVG9DbGlja2VkU2xpZGUiLCJ2aXJ0dWFsVHJhbnNsYXRlIiwic2V0VHJhbnNsYXRlIiwicHJldmlvdXNUcmFuc2xhdGUiLCJzbGlkZVRvIiwiYW5pbWF0aW5nIiwicHJldmVudEludGVyYWN0aW9uT25UcmFuc2l0aW9uIiwiaW5pdGlhbFNsaWRlIiwiaW5pdGlhbGl6ZWQiLCJhbGxvd1NsaWRlTmV4dCIsImFsbG93U2xpZGVQcmV2IiwiYXV0b0hlaWdodCIsInRyYW5zaXRpb25TdGFydCIsIm9uU2xpZGVUb1dyYXBwZXJUcmFuc2l0aW9uRW5kIiwiZGVzdHJveWVkIiwic2xpZGVUb0xvb3AiLCJsb29wZWRTbGlkZXMiLCJzbGlkZU5leHQiLCJsb29wRml4IiwiX2NsaWVudExlZnQiLCJzbGlkZVByZXYiLCJzbGlkZVJlc2V0Iiwic2xpZGVUb0Nsb3Nlc3QiLCJzbGlkZXNQZXJWaWV3RHluYW1pYyIsImxvb3BDcmVhdGUiLCJsb29wRmlsbEdyb3VwV2l0aEJsYW5rIiwic2xpZGVCbGFua0NsYXNzIiwibG9vcEFkZGl0aW9uYWxTbGlkZXMiLCJsb29wRGVzdHJveSIsInNldEdyYWJDdXJzb3IiLCJzaW11bGF0ZVRvdWNoIiwiaXNMb2NrZWQiLCJjdXJzb3IiLCJ1bnNldEdyYWJDdXJzb3IiLCJhcHBlbmRTbGlkZSIsInByZXBlbmRTbGlkZSIsImFkZFNsaWRlIiwicmVtb3ZlU2xpZGUiLCJyZW1vdmVBbGxTbGlkZXMiLCJpb3MiLCJhbmRyb2lkIiwiYW5kcm9pZENocm9tZSIsImRlc2t0b3AiLCJ3aW5kb3dzIiwiaXBob25lIiwiaXBvZCIsImlwYWQiLCJjb3Jkb3ZhIiwicGhvbmVnYXAiLCJvcyIsIm9zVmVyc2lvbiIsIndlYlZpZXciLCJtaW5pbWFsVWkiLCJwaXhlbFJhdGlvIiwiYnJlYWtwb2ludHMiLCJzZXRCcmVha3BvaW50IiwiZnJlZU1vZGUiLCJhdHRhY2hFdmVudHMiLCJ0b3VjaEV2ZW50cyIsIndyYXBwZXJFbCIsIm9uVG91Y2hTdGFydCIsInRvdWNoRXZlbnRzRGF0YSIsImlzVG91Y2hFdmVudCIsImlzVG91Y2hlZCIsImlzTW92ZWQiLCJub1N3aXBpbmciLCJub1N3aXBpbmdTZWxlY3RvciIsIm5vU3dpcGluZ0NsYXNzIiwiYWxsb3dDbGljayIsInN3aXBlSGFuZGxlciIsImN1cnJlbnRYIiwiY3VycmVudFkiLCJlZGdlU3dpcGVEZXRlY3Rpb24iLCJpT1NFZGdlU3dpcGVEZXRlY3Rpb24iLCJlZGdlU3dpcGVUaHJlc2hvbGQiLCJpT1NFZGdlU3dpcGVUaHJlc2hvbGQiLCJhbGxvd1RvdWNoQ2FsbGJhY2tzIiwiaXNTY3JvbGxpbmciLCJzdGFydE1vdmluZyIsInN0YXJ0WCIsInN0YXJ0WSIsInRvdWNoU3RhcnRUaW1lIiwic3dpcGVEaXJlY3Rpb24iLCJ0aHJlc2hvbGQiLCJhbGxvd1RocmVzaG9sZE1vdmUiLCJmb3JtRWxlbWVudHMiLCJhbGxvd1RvdWNoTW92ZSIsInRvdWNoU3RhcnRQcmV2ZW50RGVmYXVsdCIsInRvdWNoU3RhcnRGb3JjZVByZXZlbnREZWZhdWx0Iiwib25Ub3VjaE1vdmUiLCJwcmV2ZW50ZWRCeU5lc3RlZFN3aXBlciIsInRvdWNoUmVsZWFzZU9uRWRnZXMiLCJzcXJ0IiwicG93IiwiYXRhbjIiLCJQSSIsInRvdWNoQW5nbGUiLCJ0b3VjaE1vdmVTdG9wUHJvcGFnYXRpb24iLCJuZXN0ZWQiLCJzdGFydFRyYW5zbGF0ZSIsImFsbG93TW9tZW50dW1Cb3VuY2UiLCJncmFiQ3Vyc29yIiwidG91Y2hSYXRpbyIsImN1cnJlbnRUcmFuc2xhdGUiLCJyZXNpc3RhbmNlUmF0aW8iLCJyZXNpc3RhbmNlIiwiZm9sbG93RmluZ2VyIiwidmVsb2NpdGllcyIsIm9uVG91Y2hFbmQiLCJsYXN0Q2xpY2tUaW1lIiwiY2xpY2tUaW1lb3V0IiwiZnJlZU1vZGVNb21lbnR1bSIsInZlbG9jaXR5IiwiZnJlZU1vZGVNaW5pbXVtVmVsb2NpdHkiLCJmcmVlTW9kZU1vbWVudHVtVmVsb2NpdHlSYXRpbyIsImZyZWVNb2RlTW9tZW50dW1SYXRpbyIsImZyZWVNb2RlTW9tZW50dW1Cb3VuY2VSYXRpbyIsImZyZWVNb2RlTW9tZW50dW1Cb3VuY2UiLCJmcmVlTW9kZVN0aWNreSIsImxvbmdTd2lwZXNNcyIsImxvbmdTd2lwZXMiLCJsb25nU3dpcGVzUmF0aW8iLCJzaG9ydFN3aXBlcyIsIm9uQ2xpY2siLCJwcmV2ZW50Q2xpY2tzIiwicHJldmVudENsaWNrc1Byb3BhZ2F0aW9uIiwidG91Y2hFdmVudHNUYXJnZXQiLCJwYXNzaXZlTGlzdGVuZXJzIiwiY2FwdHVyZSIsIm1vdmUiLCJkZXRhY2hFdmVudHMiLCJnZXRCcmVha3BvaW50IiwiY3VycmVudEJyZWFrcG9pbnQiLCJvcmlnaW5hbFBhcmFtcyIsImJyZWFrcG9pbnRzSW52ZXJzZSIsImlzRWRnZSIsImlzU2FmYXJpIiwiaXNVaVdlYlZpZXciLCJ1bmlxdWVOYXZFbGVtZW50cyIsInByZWxvYWRJbWFnZXMiLCJ1cGRhdGVPbkltYWdlc1JlYWR5IiwiY29udGFpbmVyTW9kaWZpZXJDbGFzcyIsIndyYXBwZXJDbGFzcyIsInJ1bkNhbGxiYWNrc09uSW5pdCIsIm1hbmlwdWxhdGlvbiIsIm5hdmlnYXRpb24iLCJhZGRDbGFzc2VzIiwicnRsIiwicmVtb3ZlQ2xhc3NlcyIsImltYWdlcyIsImxvYWRJbWFnZSIsIm9uZXJyb3IiLCJzcmNzZXQiLCJpbWFnZXNMb2FkZWQiLCJpbWFnZXNUb0xvYWQiLCJjdXJyZW50U3JjIiwicGFzc2VkUGFyYW1zIiwic3dpcGVyIiwidG91Y2hFdmVudHNUb3VjaCIsInRvdWNoRXZlbnRzRGVza3RvcCIsImV4dGVuZGVkRGVmYXVsdHMiLCJleHRlbmREZWZhdWx0cyIsImRldmljZSIsImJyb3dzZXIiLCJyZXNpemVIYW5kbGVyIiwib3JpZW50YXRpb25DaGFuZ2VIYW5kbGVyIiwiTXV0YXRpb25PYnNlcnZlciIsIldlYmtpdE11dGF0aW9uT2JzZXJ2ZXIiLCJhdHRhY2giLCJvYnNlcnZlIiwiY2hpbGRMaXN0IiwiY2hhcmFjdGVyRGF0YSIsIm9ic2VydmVycyIsIm9ic2VydmVQYXJlbnRzIiwib2JzZXJ2ZVNsaWRlQ2hpbGRyZW4iLCJkaXNjb25uZWN0IiwiYWRkU2xpZGVzQmVmb3JlIiwiYWRkU2xpZGVzQWZ0ZXIiLCJyZW5kZXJTbGlkZSIsImxhenkiLCJyZW5kZXJFeHRlcm5hbCIsImJlZm9yZUluaXQiLCJvbmx5SW5WaWV3cG9ydCIsImxhc3RTY3JvbGxUaW1lIiwiaGFzRmVhdHVyZSIsIm5vcm1hbGl6ZSIsIndoZWVsRGVsdGEiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGFYIiwiSE9SSVpPTlRBTF9BWElTIiwiZGVsdGFZIiwiZGVsdGFYIiwiZGVsdGFNb2RlIiwic3BpblgiLCJzcGluWSIsInBpeGVsWCIsInBpeGVsWSIsImhhbmRsZU1vdXNlRW50ZXIiLCJtb3VzZUVudGVyZWQiLCJoYW5kbGVNb3VzZUxlYXZlIiwibW91c2V3aGVlbCIsInJlbGVhc2VPbkVkZ2VzIiwiZm9yY2VUb0F4aXMiLCJzZW5zaXRpdml0eSIsImF1dG9wbGF5IiwiYXV0b3BsYXlEaXNhYmxlT25JbnRlcmFjdGlvbiIsImdldFRpbWUiLCJldmVudHNUYXJnZWQiLCIkbmV4dEVsIiwiJHByZXZFbCIsImRpc2FibGVkQ2xhc3MiLCJsb2NrQ2xhc3MiLCJvblByZXZDbGljayIsIm9uTmV4dENsaWNrIiwibmV4dEVsIiwicHJldkVsIiwicGFnaW5hdGlvbiIsInBhZ2luYXRpb25UeXBlIiwiYnVsbGV0cyIsImR5bmFtaWNCdWxsZXRzIiwiYnVsbGV0U2l6ZSIsImR5bmFtaWNNYWluQnVsbGV0cyIsImR5bmFtaWNCdWxsZXRJbmRleCIsImJ1bGxldEFjdGl2ZUNsYXNzIiwiY3VycmVudENsYXNzIiwiZm9ybWF0RnJhY3Rpb25DdXJyZW50IiwidG90YWxDbGFzcyIsImZvcm1hdEZyYWN0aW9uVG90YWwiLCJwcm9ncmVzc2Jhck9wcG9zaXRlIiwicHJvZ3Jlc3NiYXJGaWxsQ2xhc3MiLCJyZW5kZXJDdXN0b20iLCJyZW5kZXIiLCJyZW5kZXJCdWxsZXQiLCJidWxsZXRDbGFzcyIsImJ1bGxldEVsZW1lbnQiLCJyZW5kZXJGcmFjdGlvbiIsInJlbmRlclByb2dyZXNzYmFyIiwiY2xpY2thYmxlIiwiY2xpY2thYmxlQ2xhc3MiLCJtb2RpZmllckNsYXNzIiwicHJvZ3Jlc3NiYXJPcHBvc2l0ZUNsYXNzIiwiaGlkZGVuQ2xhc3MiLCJzY3JvbGxiYXIiLCJkcmFnU2l6ZSIsInRyYWNrU2l6ZSIsIiRkcmFnRWwiLCJzY3JvbGxiYXJIaWRlIiwibW92ZURpdmlkZXIiLCJzZXREcmFnUG9zaXRpb24iLCJvbkRyYWdTdGFydCIsImRyYWdUaW1lb3V0Iiwib25EcmFnTW92ZSIsIm9uRHJhZ0VuZCIsInNuYXBPblJlbGVhc2UiLCJlbmFibGVEcmFnZ2FibGUiLCJkaXNhYmxlRHJhZ2dhYmxlIiwiZHJhZ0NsYXNzIiwiZHJhZ0VsIiwiZHJhZ2dhYmxlIiwic2V0VHJhbnNmb3JtIiwicGFyYWxsYXgiLCJnZXREaXN0YW5jZUJldHdlZW5Ub3VjaGVzIiwib25HZXN0dXJlU3RhcnQiLCJnZXN0dXJlIiwiZmFrZUdlc3R1cmVUb3VjaGVkIiwiZmFrZUdlc3R1cmVNb3ZlZCIsInNjYWxlU3RhcnQiLCIkc2xpZGVFbCIsIiRpbWFnZUVsIiwiJGltYWdlV3JhcEVsIiwiY29udGFpbmVyQ2xhc3MiLCJtYXhSYXRpbyIsImlzU2NhbGluZyIsIm9uR2VzdHVyZUNoYW5nZSIsInNjYWxlTW92ZSIsImN1cnJlbnRTY2FsZSIsIm1pblJhdGlvIiwib25HZXN0dXJlRW5kIiwidG91Y2hlc1N0YXJ0Iiwic2xpZGVXaWR0aCIsInNsaWRlSGVpZ2h0IiwibWluWCIsIm1heFgiLCJtaW5ZIiwidG91Y2hlc0N1cnJlbnQiLCJwcmV2UG9zaXRpb25YIiwicHJldlBvc2l0aW9uWSIsInByZXZUaW1lIiwib3V0IiwiaW4iLCJ6b29tZWRTbGlkZUNsYXNzIiwibG9hZEluU2xpZGUiLCJlbGVtZW50Q2xhc3MiLCJsb2FkZWRDbGFzcyIsImxvYWRpbmdDbGFzcyIsInByZWxvYWRlckNsYXNzIiwiaW5pdGlhbEltYWdlTG9hZGVkIiwibG9hZFByZXZOZXh0IiwibG9hZFByZXZOZXh0QW1vdW50IiwiTGluZWFyU3BsaW5lIiwiaW50ZXJwb2xhdGUiLCJnZXRJbnRlcnBvbGF0ZUZ1bmN0aW9uIiwiY29udHJvbGxlciIsInNwbGluZSIsImNvbnRyb2wiLCJieSIsImludmVyc2UiLCJtYWtlRWxGb2N1c2FibGUiLCJhZGRFbFJvbGUiLCJhZGRFbExhYmVsIiwiZGlzYWJsZUVsIiwiZW5hYmxlRWwiLCJvbkVudGVyS2V5IiwiYTExeSIsImxhc3RTbGlkZU1lc3NhZ2UiLCJuZXh0U2xpZGVNZXNzYWdlIiwiZmlyc3RTbGlkZU1lc3NhZ2UiLCJwcmV2U2xpZGVNZXNzYWdlIiwibGl2ZVJlZ2lvbiIsInVwZGF0ZU5hdmlnYXRpb24iLCJ1cGRhdGVQYWdpbmF0aW9uIiwicGFnaW5hdGlvbkJ1bGxldE1lc3NhZ2UiLCJwdXNoU3RhdGUiLCJoYXNoTmF2aWdhdGlvbiIsInBhdGhzIiwiZ2V0UGF0aFZhbHVlcyIsInNjcm9sbFRvU2xpZGUiLCJyZXBsYWNlU3RhdGUiLCJzZXRIaXN0b3J5UG9wU3RhdGUiLCJwYXRobmFtZSIsInNldEhpc3RvcnkiLCJzbHVnaWZ5IiwiaW5jbHVkZXMiLCJvbkhhc2hDYW5nZSIsInNldEhhc2giLCJ3YXRjaFN0YXRlIiwicmV2ZXJzZURpcmVjdGlvbiIsInN0b3BPbkxhc3RTbGlkZSIsInJ1bm5pbmciLCJwYXVzZWQiLCJ3YWl0Rm9yVHJhbnNpdGlvbiIsImZhZGVFZmZlY3QiLCJjcm9zc0ZhZGUiLCJjdWJlRWZmZWN0Iiwic2hhZG93Iiwic2xpZGVTaGFkb3dzIiwiLXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luIiwiLW1vei10cmFuc2Zvcm0tb3JpZ2luIiwiLW1zLXRyYW5zZm9ybS1vcmlnaW4iLCJ0cmFuc2Zvcm0tb3JpZ2luIiwic2hhZG93T2Zmc2V0Iiwic2hhZG93U2NhbGUiLCJzaW4iLCJjb3MiLCJmbGlwRWZmZWN0IiwibGltaXRSb3RhdGlvbiIsImNvdmVyZmxvd0VmZmVjdCIsInJvdGF0ZSIsInN0cmV0Y2giLCJwZXJzcGVjdGl2ZU9yaWdpbiIsInRodW1icyIsInN3aXBlckNyZWF0ZWQiLCJ0aHVtYnNDb250YWluZXJDbGFzcyIsIm9uVGh1bWJDbGljayIsInNsaWRlVGh1bWJBY3RpdmVDbGFzcyIsImFlIiwiaGlkZU9uQ2xpY2siLCJ0b0VkZ2UiLCJmcm9tRWRnZSIsImFjdGl2ZUluZGV4Q2hhbmdlIiwic25hcEluZGV4Q2hhbmdlIiwic2xpZGVzTGVuZ3RoQ2hhbmdlIiwic25hcEdyaWRMZW5ndGhDaGFuZ2UiLCJvYnNlcnZlclVwZGF0ZSIsInRvdWNoU3RhcnQiLCJ0b3VjaEVuZCIsImRvdWJsZVRhcCIsImxvYWRPblRyYW5zaXRpb25TdGFydCIsInNjcm9sbCIsInNjcm9sbGJhckRyYWdNb3ZlIiwibm90aWZpY2F0aW9uQ2xhc3MiLCJwYWdpbmF0aW9uVXBkYXRlIiwiZGlzYWJsZU9uSW50ZXJhY3Rpb24iLCJiZWZvcmVUcmFuc2l0aW9uU3RhcnQiLCJzbGlkZXJGaXJzdE1vdmUiLCJzbGlkZUNoYW5nZSIsImJlZm9yZURlc3Ryb3kiLCJpc0Jyb3dzZXJJRUVkZ2UiLCJ1YSIsIm1zaWUiLCJydiIsImVkZ2UiLCJjb2RlRWxlbWVudHMiLCJpc0lucHV0RmlsbGVkIiwiYnVmIiwiZW5jb2RlSHRtbEVudGl0eSIsInRleHRhcmVhcyIsInNlbGVjdHMiLCJmaWxsYWJsZUlucHV0cyIsIm9uYmx1ciIsImdldEZvcm1JbnB1dHMiLCJmb3JtSW5wdXRzQXJyYXkiLCJmb3JtSW5wdXRzIiwiZm9ybVRleHRhcmVhcyIsInZhbGlkYXRlRm9ybSIsInNlbmRDb250YWN0Rm9ybSIsInNlbmRGb3JtQnV0dG9uIiwic2VuZEZvcm1CdXR0b25EZWZhdWx0VmFsdWUiLCJmb3JtSXNWYWxpZCIsInNlbmRGb3JtIiwiY29udGFjdEZvcm0iLCJvbmNsaWNrIiwib3BlblZpZGVvVHJpZ2dlciIsImNsb3NlVmlkZW9UcmlnZ2VyIiwiaGVyb1ZpZGVvQ29udGFpbmVyIiwiaGVyb1ZpZGVvUGxheWVyIiwiaGVyb1ZpZGVvSW1hZ2UiLCJoZXJvU2xpZGVzaG93TmV4dCIsImhlcm9TbGlkZXNob3dQcmV2aW91cyIsImhlcm9TbGlkZXNob3dQcm9ncmVzc0JhciIsImhlcm9TbGlkZXNob3ciLCJjb250YWN0SW5wdXRzIiwiaGFuZGxlUGFnaW5hdGlvbiIsInRhcmdldExpc3QiLCJtb2JpbGUiLCJzd2lwZUVsZW1lbnQiLCJwYWdlQXR0cmlidXRlIiwidmlzaWJsZUNsYXNzIiwiYXJ0aWNsZSIsIm9uZHJhZ3N0YXJ0IiwiY3VycmVudFBhZ2VOdW1iZXIiLCJwYWdlUHJldmlvdXMiLCJ0b3RhbFBhZ2VOdW1iZXIiLCJwYWdlTmV4dCIsInBhZ2VzIiwibGFiZWxzTWF4IiwiZmlsbGVycyIsImJyZWFrMSIsImJyZWFrMiIsInBhZ2UiLCJzd2lwZVN0YXJ0WCIsInN3aXBlRW5kWCIsInN3aXBpbmdDbGFzcyIsImhhbmRsZUdlc3R1cmUiLCJjb250YWN0SW5wdXQiLCJvbmlucHV0IiwiYXV0b0V4cGFuZCIsImV4cGFuZEFsbCIsImV4cGFuZFRhZyIsInRleHRBcmVhSGVpZ2h0IiwiY29udHJvbHMiLCJwbGF5IiwibW9kZSIsIjk5MiIsInByZXZpb3VzV2lkdGgiLCJwYWdpbmF0aW9uU2VjdGlvbnMiLCJwYWdpbmF0aW9uU2VjdGlvbiIsInNldFBhZ2luYXRpb24iLCJuT2ZQYWdlc01vYmlsZSIsIm1heExhYmVscyIsImNvbnRyb2xBcmVhIiwiY3VycmVudFdpZHRoIiwid2lkdGhJc01vYmlsZSIsInBhZ2luYXRpb25FbGVtZW50Iiwibk9mUGFnZXMiLCJsaW1pdGVkIiwicGFnZXNDbGljayIsInBhZ2luYXRpb25Nb2JpbGUiLCJwYWdpbmF0aW9uRGVmYXVsdCIsInJlc2l6ZVRpbWVyIiwidmlkZW9Nb2RhbEV2ZW50T2JzZXJ2ZXIiLCJ2aWRlb01vZGFsIiwiaW5zdGFFbCIsImluc3RhVXNlcm5hbWUiLCJpbnN0YUxpbWl0IiwiaGFuZGxlVmlkZW9Nb2RhbE9wZW5UcmlnZ2VycyIsInJlbW92ZUluc3RhZ3JhbVNxdWFyZVJhdGlvIiwiY29udGFpbmVyQXJyYXkiLCJjb250YWluZXJFbCIsIml0ZW1BcnJheSIsIml0ZW1FbCIsIm1hc29ucnlJbnN0YWdyYW0iLCJ2aWRlb01vZGFsT3BlblRyaWdnZXIiLCJ2aWRlb01vZGFsQ29udGVudCIsInlvdXR1YmVJZCIsInZpZGVvVXJsIiwiYXNwZWN0UmF0aW8iLCJpZnJhbWUiLCJtdXRhdGlvbnMiLCJtdXRhdGlvbiIsImF0dHJpYnV0ZU9sZFZhbHVlIiwiYXR0cmlidXRlRmlsdGVyIiwiaW5zdGFncmFtRGF0YSIsImxpbWl0IiwiaGFuZGxlSW5zdGFncmFtRGF0YSIsIm5hdmJhcnMiLCJuYXZiYXIiLCJzZWFyY2hPcGVuIiwiU1ZHRmlsZVJlcXVlc3QiLCJvbnJlYWR5c3RhdGVjaGFuZ2UiLCJzdmciLCJjb2RlQmxvY2tzIiwiY29kZUJsb2NrIiwiZXhwYW5kVHJpZ2dlckRpdiIsImNyZWF0ZUNvbGxhcHNhYmxlQmxvY2siLCJpbWdBcnJheSIsImV4cGFuZEJsb2NrVHJpZ2dlcnMiLCJleHBhbmRCbG9ja1RyaWdnZXIiLCJiYWNrZ3JvdW5kU2l6ZSIsImJhY2tncm91bmRSZXBlYXQiLCJiYWNrZ3JvdW5kUG9zaXRpb24iLCJiYWNrZ3JvdW5kSW1hZ2UiXSwibWFwcGluZ3MiOiJBQUFBLFNBQUFBLFFBQUFDLEdBQUEsT0FBQUQsUUFBQSxtQkFBQUUsUUFBQSxpQkFBQUEsT0FBQUMsU0FBQSxTQUFBRixHQUFBLGNBQUFBLEdBQUEsU0FBQUEsR0FBQSxPQUFBQSxHQUFBLG1CQUFBQyxRQUFBRCxFQUFBRyxjQUFBRixRQUFBRCxJQUFBQyxPQUFBRyxVQUFBLGdCQUFBSixJQUFBQSxJQ2FBLFNBQUFLLEVBQUFDLGdCQUlBLGlCQUFBQyxRQUFBLGlCQUFBQSxPQUFBQyxRQVNBRCxPQUFBQyxRQUFBSCxFQUFBSSxTQUNBSCxFQUFBRCxHQUFBLEdBQ0EsU0FBQUssR0FDQSxJQUFBQSxFQUFBRCxTQUNBLE1BQUEsSUFBQUUsTUFBQSw0Q0FFQSxPQUFBTCxFQUFBSSxJQUdBSixFQUFBRCxHQXRCQSxDQTBCQSxvQkFBQU8sT0FBQUEsT0FBQUMsS0FBQSxTQUFBRCxFQUFBRSxnQkE0Q0EsU0FBQUMsRUFBQUMsR0FDQSxPQUFBLE1BQUFBLEdBQUFBLElBQUFBLEVBQUFKLE9BckNBLElBQUFLLEVBQUEsR0FFQVIsRUFBQUcsRUFBQUgsU0FFQVMsRUFBQUMsT0FBQUMsZUFFQUMsRUFBQUosRUFBQUksTUFFQUMsRUFBQUwsRUFBQUssT0FFQUMsRUFBQU4sRUFBQU0sS0FFQUMsRUFBQVAs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cThCLFFBQUF0K0IsS0FBQW1xRixFQUFBLFNBQUFDLEdBQ0FBLEVBQUFoRyxRQUFBLFdBQ0EsSUFnQkEyRixFQUxBQSxFQVhBQSxFQUFBSyxFQUFBOW9GLFdBRUF5b0YsRUFBQWpuRCxVQUFBeDdCLFNBQUEsa0JBU0F5aUYsRUFSQUEsR0FTQWpuRCxVQUFBaG5CLE9BQUEsZ0JBQ0FpdUUsRUFBQWpuRCxVQUFBbnBCLElBQUEsa0JBR0Fvd0UsRUFYQUEsR0FZQWpuRCxVQUFBaG5CLE9BQUEsZUFDQWl1RSxFQUFBam5ELFVBQUFucEIsSUFBQSxvQkFJQWlwRSxJQUFBLEtBQ0FzSCxFQUFBeHJGLFNBQUFpTix1QkFBQSxrQkFFQSxHQUFBMnlCLFFBQUF0K0IsS0FBQWtxRixFQUFBLFNBQUEvbUMsR0FLQSxJQUpBLElBQUFsaEMsRUFBQWtoQyxFQUFBN2lELElBQ0ErUixFQUFBOHdDLEVBQUEvUyxjQUNBN3JCLEVBQUE3bEIsU0FBQXNDLGNBQUEsT0FFQXFDLEVBQUEsRUFBQUEsRUFBQTgvQyxFQUFBcmdCLFVBQUE3Z0MsT0FBQW9CLElBQ0EsbUJBQUE4L0MsRUFBQXJnQixVQUFBei9CLElBQ0FraEIsRUFBQXVlLFVBQUFucEIsSUFBQXdwQyxFQUFBcmdCLFVBQUF6L0IsSUFLQWdQLEVBQUEwYixhQUFBeEosRUFBQTQrQixHQUNBNStCLEVBQUEvQixNQUFBNm5FLGVBQUEsUUFDQTlsRSxFQUFBL0IsTUFBQThuRSxpQkFBQSxZQUNBL2xFLEVBQUEvQixNQUFBK25FLG1CQUFBLFNBQ0FobUUsRUFBQS9CLE1BQUFnb0UsZ0JBQUEsT0FBQXZvRSxFQUFBLElBR0FraEMsRUFBQTNnQyxNQUFBQyxRQUFBLFVBcGhDQSIsImZpbGUiOiJzY3JpcHRzLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF90eXBlb2YoYSl7XCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiO3JldHVybiBfdHlwZW9mPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihhKXtyZXR1cm4gdHlwZW9mIGF9OmZ1bmN0aW9uKGEpe3JldHVybiBhJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmEuY29uc3RydWN0b3I9PT1TeW1ib2wmJmEhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGF9LF90eXBlb2YoYSl9KGZ1bmN0aW9uKGEsYil7XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShbXSxiKTpcIm9iamVjdFwiPT09KFwidW5kZWZpbmVkXCI9PXR5cGVvZiBleHBvcnRzP1widW5kZWZpbmVkXCI6X3R5cGVvZihleHBvcnRzKSk/bW9kdWxlLmV4cG9ydHM9YigpOmEuSW5zdGFncmFtRmVlZD1iKCl9KSh0aGlzLGZ1bmN0aW9uKCl7ZnVuY3Rpb24gYShhKXtyZXR1cm4gYS5yZXBsYWNlKC9bJjw+XCInYD1cXC9dL2csZnVuY3Rpb24oYSl7cmV0dXJuIGRbYV19KX12YXIgYj17aG9zdDpcImh0dHBzOi8vd3d3Lmluc3RhZ3JhbS5jb20vXCIsdXNlcm5hbWU6XCJcIix0YWc6XCJcIixjb250YWluZXI6XCJcIixkaXNwbGF5X3Byb2ZpbGU6ITAsZGlzcGxheV9iaW9ncmFwaHk6ITAsZGlzcGxheV9nYWxsZXJ5OiEwLGRpc3BsYXlfaWd0djohMSxnZXRfZGF0YTohMSxjYWxsYmFjazpudWxsLHN0eWxpbmc6ITAsaXRlbXM6OCxpdGVtc19wZXJfcm93OjQsbWFyZ2luOi41LGltYWdlX3NpemU6NjQwfSxjPXsxNTA6MCwyNDA6MSwzMjA6Miw0ODA6Myw2NDA6NH0sZD17XCImXCI6XCImYW1wO1wiLFwiPFwiOlwiJmx0O1wiLFwiPlwiOlwiJmd0O1wiLCdcIic6XCImcXVvdDtcIixcIidcIjpcIiYjMzk7XCIsXCIvXCI6XCImI3gyRjtcIixcImBcIjpcIiYjeDYwO1wiLFwiPVwiOlwiJiN4M0Q7XCJ9O3JldHVybiBmdW5jdGlvbihkKXt0aGlzLm9wdGlvbnM9T2JqZWN0LmFzc2lnbih7fSxiKSx0aGlzLm9wdGlvbnM9T2JqZWN0LmFzc2lnbih0aGlzLm9wdGlvbnMsZCksdGhpcy5pc190YWc9XCJcIj09dGhpcy5vcHRpb25zLnVzZXJuYW1lLHRoaXMudmFsaWQ9ITAsXCJcIj09dGhpcy5vcHRpb25zLnVzZXJuYW1lJiZcIlwiPT10aGlzLm9wdGlvbnMudGFnPyhjb25zb2xlLmVycm9yKFwiSW5zdGFncmFtRmVlZDogRXJyb3IsIG5vIHVzZXJuYW1lIG9yIHRhZyBkZWZpbmVkLlwiKSx0aGlzLnZhbGlkPSExKTp0aGlzLm9wdGlvbnMuZ2V0X2RhdGF8fFwiXCIhPXRoaXMub3B0aW9ucy5jb250YWluZXI/dGhpcy5vcHRpb25zLmdldF9kYXRhJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiB0aGlzLm9wdGlvbnMuY2FsbGJhY2smJihjb25zb2xlLmVycm9yKFwiSW5zdGFncmFtRmVlZDogRXJyb3IsIGludmFsaWQgb3IgdW5kZWZpbmVkIGNhbGxiYWNrIGZvciBnZXRfZGF0YVwiKSx0aGlzLnZhbGlkPSExKTooY29uc29sZS5lcnJvcihcIkluc3RhZ3JhbUZlZWQ6IEVycm9yLCBubyBjb250YWluZXIgZm91bmQuXCIpLHRoaXMudmFsaWQ9ITEpLHRoaXMuZ2V0PWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuaXNfdGFnP3RoaXMub3B0aW9ucy5ob3N0K1wiZXhwbG9yZS90YWdzL1wiK3RoaXMub3B0aW9ucy50YWcrXCIvXCI6dGhpcy5vcHRpb25zLmhvc3QrdGhpcy5vcHRpb25zLnVzZXJuYW1lK1wiL1wiLGM9bmV3IFhNTEh0dHBSZXF1ZXN0LGQ9dGhpcztjLm9ubG9hZD1mdW5jdGlvbigpe2lmKDQ9PT1jLnJlYWR5U3RhdGUpaWYoMjAwPT09Yy5zdGF0dXMpe3ZhciBiPWMucmVzcG9uc2VUZXh0LnNwbGl0KFwid2luZG93Ll9zaGFyZWREYXRhID0gXCIpWzFdLnNwbGl0KFwiPC9zY3JpcHQ+XCIpWzBdO2lmKGI9SlNPTi5wYXJzZShiLnN1YnN0cigwLGIubGVuZ3RoLTEpKSxiPWIuZW50cnlfZGF0YS5Qcm9maWxlUGFnZXx8Yi5lbnRyeV9kYXRhLlRhZ1BhZ2UsXCJ1bmRlZmluZWRcIj09dHlwZW9mIGIpcmV0dXJuIHZvaWQgY29uc29sZS5lcnJvcihcIkluc3RhZ3JhbSBGZWVkOiBJdCBsb29rcyBsaWtlIFlPVVIgbmV0d29yayBoYXMgYmVlbiB0ZW1wb3JhcnkgYmFubmVkIGJlY2F1c2Ugb2YgdG9vIG1hbnkgcmVxdWVzdHMuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vanNhbmFodWphL2pxdWVyeS5pbnN0YWdyYW1GZWVkL2lzc3Vlcy8yNVwiKTtiPWJbMF0uZ3JhcGhxbC51c2VyfHxiWzBdLmdyYXBocWwuaGFzaHRhZyxhKGIsZCl9ZWxzZSBjb25zb2xlLmVycm9yKFwiSW5zdGFncmFtRmVlZDogUmVxdWVzdCBlcnJvci4gUmVzcG9uc2U6IFwiK2Muc3RhdHVzVGV4dCl9LGMub3BlbihcIkdFVFwiLGIsITApLGMuc2VuZCgpfSx0aGlzLnBhcnNlX2NhcHRpb249ZnVuY3Rpb24oYSxiKXtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2YgYS5ub2RlLmVkZ2VfbWVkaWFfdG9fY2FwdGlvbi5lZGdlc1swXSYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIGEubm9kZS5lZGdlX21lZGlhX3RvX2NhcHRpb24uZWRnZXNbMF0ubm9kZSYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIGEubm9kZS5lZGdlX21lZGlhX3RvX2NhcHRpb24uZWRnZXNbMF0ubm9kZS50ZXh0JiZudWxsIT09YS5ub2RlLmVkZ2VfbWVkaWFfdG9fY2FwdGlvbi5lZGdlc1swXS5ub2RlLnRleHQ/YS5ub2RlLmVkZ2VfbWVkaWFfdG9fY2FwdGlvbi5lZGdlc1swXS5ub2RlLnRleHQ6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGEubm9kZS50aXRsZSYmbnVsbCE9PWEubm9kZS50aXRsZSYmMCE9YS5ub2RlLnRpdGxlLmxlbmd0aD9hLm5vZGUudGl0bGU6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGEubm9kZS5hY2Nlc3NpYmlsaXR5X2NhcHRpb24mJm51bGwhPT1hLm5vZGUuYWNjZXNzaWJpbGl0eV9jYXB0aW9uJiYwIT1hLm5vZGUuYWNjZXNzaWJpbGl0eV9jYXB0aW9uLmxlbmd0aD9hLm5vZGUuYWNjZXNzaWJpbGl0eV9jYXB0aW9uOih0aGlzLmlzX3RhZz9iLm5hbWU6Yi51c2VybmFtZSkrXCIgaW1hZ2UgXCJ9LHRoaXMuZGlzcGxheT1mdW5jdGlvbihiKXtpZih0aGlzLm9wdGlvbnMuc3R5bGluZyl2YXIgZD0oMTAwLTIqdGhpcy5vcHRpb25zLm1hcmdpbip0aGlzLm9wdGlvbnMuaXRlbXNfcGVyX3JvdykvdGhpcy5vcHRpb25zLml0ZW1zX3Blcl9yb3csZT17cHJvZmlsZV9jb250YWluZXI6XCIgc3R5bGU9J3RleHQtYWxpZ246Y2VudGVyOydcIixwcm9maWxlX2ltYWdlOlwiIHN0eWxlPSdib3JkZXItcmFkaXVzOjEwZW07d2lkdGg6MTUlO21heC13aWR0aDoxMjVweDttaW4td2lkdGg6NTBweDsnXCIscHJvZmlsZV9uYW1lOlwiIHN0eWxlPSdmb250LXNpemU6MS4yZW07J1wiLHByb2ZpbGVfYmlvZ3JhcGh5OlwiIHN0eWxlPSdmb250LXNpemU6MWVtOydcIixnYWxsZXJ5X2ltYWdlOlwiIHN0eWxlPSdtYXJnaW46XCIrdGhpcy5vcHRpb25zLm1hcmdpbitcIiUgXCIrdGhpcy5vcHRpb25zLm1hcmdpbitcIiU7d2lkdGg6XCIrZCtcIiU7ZmxvYXQ6bGVmdDsnXCJ9O2Vsc2UgdmFyIGU9e3Byb2ZpbGVfY29udGFpbmVyOlwiXCIscHJvZmlsZV9pbWFnZTpcIlwiLHByb2ZpbGVfbmFtZTpcIlwiLHByb2ZpbGVfYmlvZ3JhcGh5OlwiXCIsZ2FsbGVyeV9pbWFnZTpcIlwifTt2YXIgZj1cIlwiO2lmKHRoaXMub3B0aW9ucy5kaXNwbGF5X3Byb2ZpbGUmJihmKz1cIjxkaXYgY2xhc3M9J2luc3RhZ3JhbV9wcm9maWxlJ1wiK2UucHJvZmlsZV9jb250YWluZXIrXCI+XCIsZis9XCI8aW1nIGNsYXNzPSdpbnN0YWdyYW1fcHJvZmlsZV9pbWFnZScgc3JjPSdcIitiLnByb2ZpbGVfcGljX3VybCtcIicgYWx0PSdcIisodGhpcy5pc190YWc/Yi5uYW1lK1wiIHRhZyBwaWNcIjpiLnVzZXJuYW1lK1wiIHByb2ZpbGUgcGljXCIpK1wiIHByb2ZpbGUgcGljJ1wiK2UucHJvZmlsZV9pbWFnZStcIiAvPlwiLGYrPXRoaXMuaXNfdGFnP1wiPHAgY2xhc3M9J2luc3RhZ3JhbV90YWcnXCIrZS5wcm9maWxlX25hbWUrXCI+PGEgaHJlZj0naHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9leHBsb3JlL3RhZ3MvXCIrdGhpcy5vcHRpb25zLnRhZytcIicgcmVsPSdub29wZW5lcicgdGFyZ2V0PSdfYmxhbmsnPiNcIit0aGlzLm9wdGlvbnMudGFnK1wiPC9hPjwvcD5cIjpcIjxwIGNsYXNzPSdpbnN0YWdyYW1fdXNlcm5hbWUnXCIrZS5wcm9maWxlX25hbWUrXCI+QFwiK2IuZnVsbF9uYW1lK1wiICg8YSBocmVmPSdodHRwczovL3d3dy5pbnN0YWdyYW0uY29tL1wiK3RoaXMub3B0aW9ucy51c2VybmFtZStcIicgcmVsPSdub29wZW5lcicgdGFyZ2V0PSdfYmxhbmsnPkBcIit0aGlzLm9wdGlvbnMudXNlcm5hbWUrXCI8L2E+KTwvcD5cIiwhdGhpcy5pc190YWcmJnRoaXMub3B0aW9ucy5kaXNwbGF5X2Jpb2dyYXBoeSYmKGYrPVwiPHAgY2xhc3M9J2luc3RhZ3JhbV9iaW9ncmFwaHknXCIrZS5wcm9maWxlX2Jpb2dyYXBoeStcIj5cIitiLmJpb2dyYXBoeStcIjwvcD5cIiksZis9XCI8L2Rpdj5cIiksdGhpcy5vcHRpb25zLmRpc3BsYXlfZ2FsbGVyeSl7dmFyIGc9XCJ1bmRlZmluZWRcIj09dHlwZW9mIGNbdGhpcy5vcHRpb25zLmltYWdlX3NpemVdP2NbNjQwXTpjW3RoaXMub3B0aW9ucy5pbWFnZV9zaXplXTtpZihcInVuZGVmaW5lZFwiIT10eXBlb2YgYi5pc19wcml2YXRlJiYhMD09PWIuaXNfcHJpdmF0ZSlmKz1cIjxwIGNsYXNzPSdpbnN0YWdyYW1fcHJpdmF0ZSc+PHN0cm9uZz5UaGlzIHByb2ZpbGUgaXMgcHJpdmF0ZTwvc3Ryb25nPjwvcD5cIjtlbHNle3ZhciBoPShiLmVkZ2Vfb3duZXJfdG9fdGltZWxpbmVfbWVkaWF8fGIuZWRnZV9oYXNodGFnX3RvX21lZGlhKS5lZGdlcztwPWgubGVuZ3RoPnRoaXMub3B0aW9ucy5pdGVtcz90aGlzLm9wdGlvbnMuaXRlbXM6aC5sZW5ndGgsZis9XCI8ZGl2IGNsYXNzPSdpbnN0YWdyYW1fZ2FsbGVyeSc+XCI7Zm9yKHZhciBqPTA7ajxwO2orKyl7dmFyIGssbCxtPVwiaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9wL1wiK2hbal0ubm9kZS5zaG9ydGNvZGUsbj1hKHRoaXMucGFyc2VfY2FwdGlvbihoW2pdLGIpKTtzd2l0Y2goaFtqXS5ub2RlLl9fdHlwZW5hbWUpe2Nhc2VcIkdyYXBoU2lkZWNhclwiOmw9XCJzaWRlY2FyXCIsaz1oW2pdLm5vZGUudGh1bWJuYWlsX3Jlc291cmNlc1tnXS5zcmM7YnJlYWs7Y2FzZVwiR3JhcGhWaWRlb1wiOmw9XCJ2aWRlb1wiLGs9aFtqXS5ub2RlLnRodW1ibmFpbF9zcmM7YnJlYWs7ZGVmYXVsdDpsPVwiaW1hZ2VcIixrPWhbal0ubm9kZS50aHVtYm5haWxfcmVzb3VyY2VzW2ddLnNyYzt9dGhpcy5pc190YWcmJihiLnVzZXJuYW1lPVwiXCIpLGYrPVwiPGEgaHJlZj0nXCIrbStcIicgY2xhc3M9J2luc3RhZ3JhbS1cIitsK1wiJyB0aXRsZT0nXCIrbitcIicgcmVsPSdub29wZW5lcicgdGFyZ2V0PSdfYmxhbmsnPlwiLGYrPVwiPGltZyBzcmM9J1wiK2srXCInIGFsdD0nXCIrbitcIidcIitlLmdhbGxlcnlfaW1hZ2UrXCIgLz5cIixmKz1cIjwvYT5cIn1mKz1cIjwvZGl2PlwifX1pZih0aGlzLm9wdGlvbnMuZGlzcGxheV9pZ3R2JiZcInVuZGVmaW5lZFwiIT10eXBlb2YgYi5lZGdlX2ZlbGl4X3ZpZGVvX3RpbWVsaW5lKXt2YXIgbz1iLmVkZ2VfZmVsaXhfdmlkZW9fdGltZWxpbmUuZWRnZXMscD1vLmxlbmd0aD50aGlzLm9wdGlvbnMuaXRlbXM/dGhpcy5vcHRpb25zLml0ZW1zOm8ubGVuZ3RoO2lmKDA8by5sZW5ndGgpe2YrPVwiPGRpdiBjbGFzcz0naW5zdGFncmFtX2lndHYnPlwiO2Zvcih2YXIgaj0wO2o8cDtqKyspe3ZhciBtPVwiaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9wL1wiK29bal0ubm9kZS5zaG9ydGNvZGUsbj10aGlzLnBhcnNlX2NhcHRpb24ob1tqXSxiKTtmKz1cIjxhIGhyZWY9J1wiK20rXCInIHJlbD0nbm9vcGVuZXInIHRpdGxlPSdcIituK1wiJyB0YXJnZXQ9J19ibGFuayc+XCIsZis9XCI8aW1nIHNyYz0nXCIrb1tqXS5ub2RlLnRodW1ibmFpbF9zcmMrXCInIGFsdD0nXCIrbitcIidcIitlLmdhbGxlcnlfaW1hZ2UrXCIgLz5cIixmKz1cIjwvYT5cIn1mKz1cIjwvZGl2PlwifX10aGlzLm9wdGlvbnMuY29udGFpbmVyLmlubmVySFRNTD1mfSx0aGlzLnJ1bj1mdW5jdGlvbigpe3RoaXMuZ2V0KGZ1bmN0aW9uKGEsYil7Yi5vcHRpb25zLmdldF9kYXRhP2Iub3B0aW9ucy5jYWxsYmFjayhhKTpiLmRpc3BsYXkoYSl9KX0sdGhpcy52YWxpZCYmdGhpcy5ydW4oKX19KTtcbiIsIi8qIVxuICogalF1ZXJ5IEphdmFTY3JpcHQgTGlicmFyeSB2My40LjEgLWFqYXgsLWFqYXgvanNvbnAsLWFqYXgvbG9hZCwtYWpheC9wYXJzZVhNTCwtYWpheC9zY3JpcHQsLWFqYXgvdmFyL2xvY2F0aW9uLC1hamF4L3Zhci9ub25jZSwtYWpheC92YXIvcnF1ZXJ5LC1hamF4L3hociwtbWFuaXB1bGF0aW9uL19ldmFsVXJsLC1ldmVudC9hamF4LC1lZmZlY3RzLC1lZmZlY3RzL1R3ZWVuLC1lZmZlY3RzL2FuaW1hdGVkU2VsZWN0b3JcbiAqIGh0dHBzOi8vanF1ZXJ5LmNvbS9cbiAqXG4gKiBJbmNsdWRlcyBTaXp6bGUuanNcbiAqIGh0dHBzOi8vc2l6emxlanMuY29tL1xuICpcbiAqIENvcHlyaWdodCBKUyBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnNcbiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZVxuICogaHR0cHM6Ly9qcXVlcnkub3JnL2xpY2Vuc2VcbiAqXG4gKiBEYXRlOiAyMDE5LTA1LTAxVDIxOjA0WlxuICovXG4oIGZ1bmN0aW9uKCBnbG9iYWwsIGZhY3RvcnkgKSB7XG5cblx0XCJ1c2Ugc3RyaWN0XCI7XG5cblx0aWYgKCB0eXBlb2YgbW9kdWxlID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBtb2R1bGUuZXhwb3J0cyA9PT0gXCJvYmplY3RcIiApIHtcblxuXHRcdC8vIEZvciBDb21tb25KUyBhbmQgQ29tbW9uSlMtbGlrZSBlbnZpcm9ubWVudHMgd2hlcmUgYSBwcm9wZXIgYHdpbmRvd2Bcblx0XHQvLyBpcyBwcmVzZW50LCBleGVjdXRlIHRoZSBmYWN0b3J5IGFuZCBnZXQgalF1ZXJ5LlxuXHRcdC8vIEZvciBlbnZpcm9ubWVudHMgdGhhdCBkbyBub3QgaGF2ZSBhIGB3aW5kb3dgIHdpdGggYSBgZG9jdW1lbnRgXG5cdFx0Ly8gKHN1Y2ggYXMgTm9kZS5qcyksIGV4cG9zZSBhIGZhY3RvcnkgYXMgbW9kdWxlLmV4cG9ydHMuXG5cdFx0Ly8gVGhpcyBhY2NlbnR1YXRlcyB0aGUgbmVlZCBmb3IgdGhlIGNyZWF0aW9uIG9mIGEgcmVhbCBgd2luZG93YC5cblx0XHQvLyBlLmcuIHZhciBqUXVlcnkgPSByZXF1aXJlKFwianF1ZXJ5XCIpKHdpbmRvdyk7XG5cdFx0Ly8gU2VlIHRpY2tldCAjMTQ1NDkgZm9yIG1vcmUgaW5mby5cblx0XHRtb2R1bGUuZXhwb3J0cyA9IGdsb2JhbC5kb2N1bWVudCA/XG5cdFx0XHRmYWN0b3J5KCBnbG9iYWwsIHRydWUgKSA6XG5cdFx0XHRmdW5jdGlvbiggdyApIHtcblx0XHRcdFx0aWYgKCAhdy5kb2N1bWVudCApIHtcblx0XHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoIFwialF1ZXJ5IHJlcXVpcmVzIGEgd2luZG93IHdpdGggYSBkb2N1bWVudFwiICk7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIGZhY3RvcnkoIHcgKTtcblx0XHRcdH07XG5cdH0gZWxzZSB7XG5cdFx0ZmFjdG9yeSggZ2xvYmFsICk7XG5cdH1cblxuLy8gUGFzcyB0aGlzIGlmIHdpbmRvdyBpcyBub3QgZGVmaW5lZCB5ZXRcbn0gKSggdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHRoaXMsIGZ1bmN0aW9uKCB3aW5kb3csIG5vR2xvYmFsICkge1xuXG4vLyBFZGdlIDw9IDEyIC0gMTMrLCBGaXJlZm94IDw9MTggLSA0NSssIElFIDEwIC0gMTEsIFNhZmFyaSA1LjEgLSA5KywgaU9TIDYgLSA5LjFcbi8vIHRocm93IGV4Y2VwdGlvbnMgd2hlbiBub24tc3RyaWN0IGNvZGUgKGUuZy4sIEFTUC5ORVQgNC41KSBhY2Nlc3NlcyBzdHJpY3QgbW9kZVxuLy8gYXJndW1lbnRzLmNhbGxlZS5jYWxsZXIgKHRyYWMtMTMzMzUpLiBCdXQgYXMgb2YgalF1ZXJ5IDMuMCAoMjAxNiksIHN0cmljdCBtb2RlIHNob3VsZCBiZSBjb21tb25cbi8vIGVub3VnaCB0aGF0IGFsbCBzdWNoIGF0dGVtcHRzIGFyZSBndWFyZGVkIGluIGEgdHJ5IGJsb2NrLlxuXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBhcnIgPSBbXTtcblxudmFyIGRvY3VtZW50ID0gd2luZG93LmRvY3VtZW50O1xuXG52YXIgZ2V0UHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG5cbnZhciBzbGljZSA9IGFyci5zbGljZTtcblxudmFyIGNvbmNhdCA9IGFyci5jb25jYXQ7XG5cbnZhciBwdXNoID0gYXJyLnB1c2g7XG5cbnZhciBpbmRleE9mID0gYXJyLmluZGV4T2Y7XG5cbnZhciBjbGFzczJ0eXBlID0ge307XG5cbnZhciB0b1N0cmluZyA9IGNsYXNzMnR5cGUudG9TdHJpbmc7XG5cbnZhciBoYXNPd24gPSBjbGFzczJ0eXBlLmhhc093blByb3BlcnR5O1xuXG52YXIgZm5Ub1N0cmluZyA9IGhhc093bi50b1N0cmluZztcblxudmFyIE9iamVjdEZ1bmN0aW9uU3RyaW5nID0gZm5Ub1N0cmluZy5jYWxsKCBPYmplY3QgKTtcblxudmFyIHN1cHBvcnQgPSB7fTtcblxudmFyIGlzRnVuY3Rpb24gPSBmdW5jdGlvbiBpc0Z1bmN0aW9uKCBvYmogKSB7XG5cbiAgICAgIC8vIFN1cHBvcnQ6IENocm9tZSA8PTU3LCBGaXJlZm94IDw9NTJcbiAgICAgIC8vIEluIHNvbWUgYnJvd3NlcnMsIHR5cGVvZiByZXR1cm5zIFwiZnVuY3Rpb25cIiBmb3IgSFRNTCA8b2JqZWN0PiBlbGVtZW50c1xuICAgICAgLy8gKGkuZS4sIGB0eXBlb2YgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJvYmplY3RcIiApID09PSBcImZ1bmN0aW9uXCJgKS5cbiAgICAgIC8vIFdlIGRvbid0IHdhbnQgdG8gY2xhc3NpZnkgKmFueSogRE9NIG5vZGUgYXMgYSBmdW5jdGlvbi5cbiAgICAgIHJldHVybiB0eXBlb2Ygb2JqID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIG9iai5ub2RlVHlwZSAhPT0gXCJudW1iZXJcIjtcbiAgfTtcblxuXG52YXIgaXNXaW5kb3cgPSBmdW5jdGlvbiBpc1dpbmRvdyggb2JqICkge1xuXHRcdHJldHVybiBvYmogIT0gbnVsbCAmJiBvYmogPT09IG9iai53aW5kb3c7XG5cdH07XG5cblxuXG5cblx0dmFyIHByZXNlcnZlZFNjcmlwdEF0dHJpYnV0ZXMgPSB7XG5cdFx0dHlwZTogdHJ1ZSxcblx0XHRzcmM6IHRydWUsXG5cdFx0bm9uY2U6IHRydWUsXG5cdFx0bm9Nb2R1bGU6IHRydWVcblx0fTtcblxuXHRmdW5jdGlvbiBET01FdmFsKCBjb2RlLCBub2RlLCBkb2MgKSB7XG5cdFx0ZG9jID0gZG9jIHx8IGRvY3VtZW50O1xuXG5cdFx0dmFyIGksIHZhbCxcblx0XHRcdHNjcmlwdCA9IGRvYy5jcmVhdGVFbGVtZW50KCBcInNjcmlwdFwiICk7XG5cblx0XHRzY3JpcHQudGV4dCA9IGNvZGU7XG5cdFx0aWYgKCBub2RlICkge1xuXHRcdFx0Zm9yICggaSBpbiBwcmVzZXJ2ZWRTY3JpcHRBdHRyaWJ1dGVzICkge1xuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3ggNjQrLCBFZGdlIDE4K1xuXHRcdFx0XHQvLyBTb21lIGJyb3dzZXJzIGRvbid0IHN1cHBvcnQgdGhlIFwibm9uY2VcIiBwcm9wZXJ0eSBvbiBzY3JpcHRzLlxuXHRcdFx0XHQvLyBPbiB0aGUgb3RoZXIgaGFuZCwganVzdCB1c2luZyBgZ2V0QXR0cmlidXRlYCBpcyBub3QgZW5vdWdoIGFzXG5cdFx0XHRcdC8vIHRoZSBgbm9uY2VgIGF0dHJpYnV0ZSBpcyByZXNldCB0byBhbiBlbXB0eSBzdHJpbmcgd2hlbmV2ZXIgaXRcblx0XHRcdFx0Ly8gYmVjb21lcyBicm93c2luZy1jb250ZXh0IGNvbm5lY3RlZC5cblx0XHRcdFx0Ly8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS93aGF0d2cvaHRtbC9pc3N1ZXMvMjM2OVxuXHRcdFx0XHQvLyBTZWUgaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy8jbm9uY2UtYXR0cmlidXRlc1xuXHRcdFx0XHQvLyBUaGUgYG5vZGUuZ2V0QXR0cmlidXRlYCBjaGVjayB3YXMgYWRkZWQgZm9yIHRoZSBzYWtlIG9mXG5cdFx0XHRcdC8vIGBqUXVlcnkuZ2xvYmFsRXZhbGAgc28gdGhhdCBpdCBjYW4gZmFrZSBhIG5vbmNlLWNvbnRhaW5pbmcgbm9kZVxuXHRcdFx0XHQvLyB2aWEgYW4gb2JqZWN0LlxuXHRcdFx0XHR2YWwgPSBub2RlWyBpIF0gfHwgbm9kZS5nZXRBdHRyaWJ1dGUgJiYgbm9kZS5nZXRBdHRyaWJ1dGUoIGkgKTtcblx0XHRcdFx0aWYgKCB2YWwgKSB7XG5cdFx0XHRcdFx0c2NyaXB0LnNldEF0dHJpYnV0ZSggaSwgdmFsICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdFx0ZG9jLmhlYWQuYXBwZW5kQ2hpbGQoIHNjcmlwdCApLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoIHNjcmlwdCApO1xuXHR9XG5cblxuZnVuY3Rpb24gdG9UeXBlKCBvYmogKSB7XG5cdGlmICggb2JqID09IG51bGwgKSB7XG5cdFx0cmV0dXJuIG9iaiArIFwiXCI7XG5cdH1cblxuXHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9Mi4zIG9ubHkgKGZ1bmN0aW9uaXNoIFJlZ0V4cClcblx0cmV0dXJuIHR5cGVvZiBvYmogPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIG9iaiA9PT0gXCJmdW5jdGlvblwiID9cblx0XHRjbGFzczJ0eXBlWyB0b1N0cmluZy5jYWxsKCBvYmogKSBdIHx8IFwib2JqZWN0XCIgOlxuXHRcdHR5cGVvZiBvYmo7XG59XG4vKiBnbG9iYWwgU3ltYm9sICovXG4vLyBEZWZpbmluZyB0aGlzIGdsb2JhbCBpbiAuZXNsaW50cmMuanNvbiB3b3VsZCBjcmVhdGUgYSBkYW5nZXIgb2YgdXNpbmcgdGhlIGdsb2JhbFxuLy8gdW5ndWFyZGVkIGluIGFub3RoZXIgcGxhY2UsIGl0IHNlZW1zIHNhZmVyIHRvIGRlZmluZSBnbG9iYWwgb25seSBmb3IgdGhpcyBtb2R1bGVcblxuXG5cbnZhclxuXHR2ZXJzaW9uID0gXCIzLjQuMSAtYWpheCwtYWpheC9qc29ucCwtYWpheC9sb2FkLC1hamF4L3BhcnNlWE1MLC1hamF4L3NjcmlwdCwtYWpheC92YXIvbG9jYXRpb24sLWFqYXgvdmFyL25vbmNlLC1hamF4L3Zhci9ycXVlcnksLWFqYXgveGhyLC1tYW5pcHVsYXRpb24vX2V2YWxVcmwsLWV2ZW50L2FqYXgsLWVmZmVjdHMsLWVmZmVjdHMvVHdlZW4sLWVmZmVjdHMvYW5pbWF0ZWRTZWxlY3RvclwiLFxuXG5cdC8vIERlZmluZSBhIGxvY2FsIGNvcHkgb2YgalF1ZXJ5XG5cdGpRdWVyeSA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgY29udGV4dCApIHtcblxuXHRcdC8vIFRoZSBqUXVlcnkgb2JqZWN0IGlzIGFjdHVhbGx5IGp1c3QgdGhlIGluaXQgY29uc3RydWN0b3IgJ2VuaGFuY2VkJ1xuXHRcdC8vIE5lZWQgaW5pdCBpZiBqUXVlcnkgaXMgY2FsbGVkIChqdXN0IGFsbG93IGVycm9yIHRvIGJlIHRocm93biBpZiBub3QgaW5jbHVkZWQpXG5cdFx0cmV0dXJuIG5ldyBqUXVlcnkuZm4uaW5pdCggc2VsZWN0b3IsIGNvbnRleHQgKTtcblx0fSxcblxuXHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4wIG9ubHlcblx0Ly8gTWFrZSBzdXJlIHdlIHRyaW0gQk9NIGFuZCBOQlNQXG5cdHJ0cmltID0gL15bXFxzXFx1RkVGRlxceEEwXSt8W1xcc1xcdUZFRkZcXHhBMF0rJC9nO1xuXG5qUXVlcnkuZm4gPSBqUXVlcnkucHJvdG90eXBlID0ge1xuXG5cdC8vIFRoZSBjdXJyZW50IHZlcnNpb24gb2YgalF1ZXJ5IGJlaW5nIHVzZWRcblx0anF1ZXJ5OiB2ZXJzaW9uLFxuXG5cdGNvbnN0cnVjdG9yOiBqUXVlcnksXG5cblx0Ly8gVGhlIGRlZmF1bHQgbGVuZ3RoIG9mIGEgalF1ZXJ5IG9iamVjdCBpcyAwXG5cdGxlbmd0aDogMCxcblxuXHR0b0FycmF5OiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gc2xpY2UuY2FsbCggdGhpcyApO1xuXHR9LFxuXG5cdC8vIEdldCB0aGUgTnRoIGVsZW1lbnQgaW4gdGhlIG1hdGNoZWQgZWxlbWVudCBzZXQgT1Jcblx0Ly8gR2V0IHRoZSB3aG9sZSBtYXRjaGVkIGVsZW1lbnQgc2V0IGFzIGEgY2xlYW4gYXJyYXlcblx0Z2V0OiBmdW5jdGlvbiggbnVtICkge1xuXG5cdFx0Ly8gUmV0dXJuIGFsbCB0aGUgZWxlbWVudHMgaW4gYSBjbGVhbiBhcnJheVxuXHRcdGlmICggbnVtID09IG51bGwgKSB7XG5cdFx0XHRyZXR1cm4gc2xpY2UuY2FsbCggdGhpcyApO1xuXHRcdH1cblxuXHRcdC8vIFJldHVybiBqdXN0IHRoZSBvbmUgZWxlbWVudCBmcm9tIHRoZSBzZXRcblx0XHRyZXR1cm4gbnVtIDwgMCA/IHRoaXNbIG51bSArIHRoaXMubGVuZ3RoIF0gOiB0aGlzWyBudW0gXTtcblx0fSxcblxuXHQvLyBUYWtlIGFuIGFycmF5IG9mIGVsZW1lbnRzIGFuZCBwdXNoIGl0IG9udG8gdGhlIHN0YWNrXG5cdC8vIChyZXR1cm5pbmcgdGhlIG5ldyBtYXRjaGVkIGVsZW1lbnQgc2V0KVxuXHRwdXNoU3RhY2s6IGZ1bmN0aW9uKCBlbGVtcyApIHtcblxuXHRcdC8vIEJ1aWxkIGEgbmV3IGpRdWVyeSBtYXRjaGVkIGVsZW1lbnQgc2V0XG5cdFx0dmFyIHJldCA9IGpRdWVyeS5tZXJnZSggdGhpcy5jb25zdHJ1Y3RvcigpLCBlbGVtcyApO1xuXG5cdFx0Ly8gQWRkIHRoZSBvbGQgb2JqZWN0IG9udG8gdGhlIHN0YWNrIChhcyBhIHJlZmVyZW5jZSlcblx0XHRyZXQucHJldk9iamVjdCA9IHRoaXM7XG5cblx0XHQvLyBSZXR1cm4gdGhlIG5ld2x5LWZvcm1lZCBlbGVtZW50IHNldFxuXHRcdHJldHVybiByZXQ7XG5cdH0sXG5cblx0Ly8gRXhlY3V0ZSBhIGNhbGxiYWNrIGZvciBldmVyeSBlbGVtZW50IGluIHRoZSBtYXRjaGVkIHNldC5cblx0ZWFjaDogZnVuY3Rpb24oIGNhbGxiYWNrICkge1xuXHRcdHJldHVybiBqUXVlcnkuZWFjaCggdGhpcywgY2FsbGJhY2sgKTtcblx0fSxcblxuXHRtYXA6IGZ1bmN0aW9uKCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIGpRdWVyeS5tYXAoIHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCBpICkge1xuXHRcdFx0cmV0dXJuIGNhbGxiYWNrLmNhbGwoIGVsZW0sIGksIGVsZW0gKTtcblx0XHR9ICkgKTtcblx0fSxcblxuXHRzbGljZTogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBzbGljZS5hcHBseSggdGhpcywgYXJndW1lbnRzICkgKTtcblx0fSxcblxuXHRmaXJzdDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMuZXEoIDAgKTtcblx0fSxcblxuXHRsYXN0OiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5lcSggLTEgKTtcblx0fSxcblxuXHRlcTogZnVuY3Rpb24oIGkgKSB7XG5cdFx0dmFyIGxlbiA9IHRoaXMubGVuZ3RoLFxuXHRcdFx0aiA9ICtpICsgKCBpIDwgMCA/IGxlbiA6IDAgKTtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIGogPj0gMCAmJiBqIDwgbGVuID8gWyB0aGlzWyBqIF0gXSA6IFtdICk7XG5cdH0sXG5cblx0ZW5kOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5wcmV2T2JqZWN0IHx8IHRoaXMuY29uc3RydWN0b3IoKTtcblx0fSxcblxuXHQvLyBGb3IgaW50ZXJuYWwgdXNlIG9ubHkuXG5cdC8vIEJlaGF2ZXMgbGlrZSBhbiBBcnJheSdzIG1ldGhvZCwgbm90IGxpa2UgYSBqUXVlcnkgbWV0aG9kLlxuXHRwdXNoOiBwdXNoLFxuXHRzb3J0OiBhcnIuc29ydCxcblx0c3BsaWNlOiBhcnIuc3BsaWNlXG59O1xuXG5qUXVlcnkuZXh0ZW5kID0galF1ZXJ5LmZuLmV4dGVuZCA9IGZ1bmN0aW9uKCkge1xuXHR2YXIgb3B0aW9ucywgbmFtZSwgc3JjLCBjb3B5LCBjb3B5SXNBcnJheSwgY2xvbmUsXG5cdFx0dGFyZ2V0ID0gYXJndW1lbnRzWyAwIF0gfHwge30sXG5cdFx0aSA9IDEsXG5cdFx0bGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aCxcblx0XHRkZWVwID0gZmFsc2U7XG5cblx0Ly8gSGFuZGxlIGEgZGVlcCBjb3B5IHNpdHVhdGlvblxuXHRpZiAoIHR5cGVvZiB0YXJnZXQgPT09IFwiYm9vbGVhblwiICkge1xuXHRcdGRlZXAgPSB0YXJnZXQ7XG5cblx0XHQvLyBTa2lwIHRoZSBib29sZWFuIGFuZCB0aGUgdGFyZ2V0XG5cdFx0dGFyZ2V0ID0gYXJndW1lbnRzWyBpIF0gfHwge307XG5cdFx0aSsrO1xuXHR9XG5cblx0Ly8gSGFuZGxlIGNhc2Ugd2hlbiB0YXJnZXQgaXMgYSBzdHJpbmcgb3Igc29tZXRoaW5nIChwb3NzaWJsZSBpbiBkZWVwIGNvcHkpXG5cdGlmICggdHlwZW9mIHRhcmdldCAhPT0gXCJvYmplY3RcIiAmJiAhaXNGdW5jdGlvbiggdGFyZ2V0ICkgKSB7XG5cdFx0dGFyZ2V0ID0ge307XG5cdH1cblxuXHQvLyBFeHRlbmQgalF1ZXJ5IGl0c2VsZiBpZiBvbmx5IG9uZSBhcmd1bWVudCBpcyBwYXNzZWRcblx0aWYgKCBpID09PSBsZW5ndGggKSB7XG5cdFx0dGFyZ2V0ID0gdGhpcztcblx0XHRpLS07XG5cdH1cblxuXHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHtcblxuXHRcdC8vIE9ubHkgZGVhbCB3aXRoIG5vbi1udWxsL3VuZGVmaW5lZCB2YWx1ZXNcblx0XHRpZiAoICggb3B0aW9ucyA9IGFyZ3VtZW50c1sgaSBdICkgIT0gbnVsbCApIHtcblxuXHRcdFx0Ly8gRXh0ZW5kIHRoZSBiYXNlIG9iamVjdFxuXHRcdFx0Zm9yICggbmFtZSBpbiBvcHRpb25zICkge1xuXHRcdFx0XHRjb3B5ID0gb3B0aW9uc1sgbmFtZSBdO1xuXG5cdFx0XHRcdC8vIFByZXZlbnQgT2JqZWN0LnByb3RvdHlwZSBwb2xsdXRpb25cblx0XHRcdFx0Ly8gUHJldmVudCBuZXZlci1lbmRpbmcgbG9vcFxuXHRcdFx0XHRpZiAoIG5hbWUgPT09IFwiX19wcm90b19fXCIgfHwgdGFyZ2V0ID09PSBjb3B5ICkge1xuXHRcdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gUmVjdXJzZSBpZiB3ZSdyZSBtZXJnaW5nIHBsYWluIG9iamVjdHMgb3IgYXJyYXlzXG5cdFx0XHRcdGlmICggZGVlcCAmJiBjb3B5ICYmICggalF1ZXJ5LmlzUGxhaW5PYmplY3QoIGNvcHkgKSB8fFxuXHRcdFx0XHRcdCggY29weUlzQXJyYXkgPSBBcnJheS5pc0FycmF5KCBjb3B5ICkgKSApICkge1xuXHRcdFx0XHRcdHNyYyA9IHRhcmdldFsgbmFtZSBdO1xuXG5cdFx0XHRcdFx0Ly8gRW5zdXJlIHByb3BlciB0eXBlIGZvciB0aGUgc291cmNlIHZhbHVlXG5cdFx0XHRcdFx0aWYgKCBjb3B5SXNBcnJheSAmJiAhQXJyYXkuaXNBcnJheSggc3JjICkgKSB7XG5cdFx0XHRcdFx0XHRjbG9uZSA9IFtdO1xuXHRcdFx0XHRcdH0gZWxzZSBpZiAoICFjb3B5SXNBcnJheSAmJiAhalF1ZXJ5LmlzUGxhaW5PYmplY3QoIHNyYyApICkge1xuXHRcdFx0XHRcdFx0Y2xvbmUgPSB7fTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0Y2xvbmUgPSBzcmM7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGNvcHlJc0FycmF5ID0gZmFsc2U7XG5cblx0XHRcdFx0XHQvLyBOZXZlciBtb3ZlIG9yaWdpbmFsIG9iamVjdHMsIGNsb25lIHRoZW1cblx0XHRcdFx0XHR0YXJnZXRbIG5hbWUgXSA9IGpRdWVyeS5leHRlbmQoIGRlZXAsIGNsb25lLCBjb3B5ICk7XG5cblx0XHRcdFx0Ly8gRG9uJ3QgYnJpbmcgaW4gdW5kZWZpbmVkIHZhbHVlc1xuXHRcdFx0XHR9IGVsc2UgaWYgKCBjb3B5ICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0dGFyZ2V0WyBuYW1lIF0gPSBjb3B5O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gUmV0dXJuIHRoZSBtb2RpZmllZCBvYmplY3Rcblx0cmV0dXJuIHRhcmdldDtcbn07XG5cbmpRdWVyeS5leHRlbmQoIHtcblxuXHQvLyBVbmlxdWUgZm9yIGVhY2ggY29weSBvZiBqUXVlcnkgb24gdGhlIHBhZ2Vcblx0ZXhwYW5kbzogXCJqUXVlcnlcIiArICggdmVyc2lvbiArIE1hdGgucmFuZG9tKCkgKS5yZXBsYWNlKCAvXFxEL2csIFwiXCIgKSxcblxuXHQvLyBBc3N1bWUgalF1ZXJ5IGlzIHJlYWR5IHdpdGhvdXQgdGhlIHJlYWR5IG1vZHVsZVxuXHRpc1JlYWR5OiB0cnVlLFxuXG5cdGVycm9yOiBmdW5jdGlvbiggbXNnICkge1xuXHRcdHRocm93IG5ldyBFcnJvciggbXNnICk7XG5cdH0sXG5cblx0bm9vcDogZnVuY3Rpb24oKSB7fSxcblxuXHRpc1BsYWluT2JqZWN0OiBmdW5jdGlvbiggb2JqICkge1xuXHRcdHZhciBwcm90bywgQ3RvcjtcblxuXHRcdC8vIERldGVjdCBvYnZpb3VzIG5lZ2F0aXZlc1xuXHRcdC8vIFVzZSB0b1N0cmluZyBpbnN0ZWFkIG9mIGpRdWVyeS50eXBlIHRvIGNhdGNoIGhvc3Qgb2JqZWN0c1xuXHRcdGlmICggIW9iaiB8fCB0b1N0cmluZy5jYWxsKCBvYmogKSAhPT0gXCJbb2JqZWN0IE9iamVjdF1cIiApIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRwcm90byA9IGdldFByb3RvKCBvYmogKTtcblxuXHRcdC8vIE9iamVjdHMgd2l0aCBubyBwcm90b3R5cGUgKGUuZy4sIGBPYmplY3QuY3JlYXRlKCBudWxsIClgKSBhcmUgcGxhaW5cblx0XHRpZiAoICFwcm90byApIHtcblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH1cblxuXHRcdC8vIE9iamVjdHMgd2l0aCBwcm90b3R5cGUgYXJlIHBsYWluIGlmZiB0aGV5IHdlcmUgY29uc3RydWN0ZWQgYnkgYSBnbG9iYWwgT2JqZWN0IGZ1bmN0aW9uXG5cdFx0Q3RvciA9IGhhc093bi5jYWxsKCBwcm90bywgXCJjb25zdHJ1Y3RvclwiICkgJiYgcHJvdG8uY29uc3RydWN0b3I7XG5cdFx0cmV0dXJuIHR5cGVvZiBDdG9yID09PSBcImZ1bmN0aW9uXCIgJiYgZm5Ub1N0cmluZy5jYWxsKCBDdG9yICkgPT09IE9iamVjdEZ1bmN0aW9uU3RyaW5nO1xuXHR9LFxuXG5cdGlzRW1wdHlPYmplY3Q6IGZ1bmN0aW9uKCBvYmogKSB7XG5cdFx0dmFyIG5hbWU7XG5cblx0XHRmb3IgKCBuYW1lIGluIG9iaiApIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cdFx0cmV0dXJuIHRydWU7XG5cdH0sXG5cblx0Ly8gRXZhbHVhdGVzIGEgc2NyaXB0IGluIGEgZ2xvYmFsIGNvbnRleHRcblx0Z2xvYmFsRXZhbDogZnVuY3Rpb24oIGNvZGUsIG9wdGlvbnMgKSB7XG5cdFx0RE9NRXZhbCggY29kZSwgeyBub25jZTogb3B0aW9ucyAmJiBvcHRpb25zLm5vbmNlIH0gKTtcblx0fSxcblxuXHRlYWNoOiBmdW5jdGlvbiggb2JqLCBjYWxsYmFjayApIHtcblx0XHR2YXIgbGVuZ3RoLCBpID0gMDtcblxuXHRcdGlmICggaXNBcnJheUxpa2UoIG9iaiApICkge1xuXHRcdFx0bGVuZ3RoID0gb2JqLmxlbmd0aDtcblx0XHRcdGZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkge1xuXHRcdFx0XHRpZiAoIGNhbGxiYWNrLmNhbGwoIG9ialsgaSBdLCBpLCBvYmpbIGkgXSApID09PSBmYWxzZSApIHtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHRmb3IgKCBpIGluIG9iaiApIHtcblx0XHRcdFx0aWYgKCBjYWxsYmFjay5jYWxsKCBvYmpbIGkgXSwgaSwgb2JqWyBpIF0gKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gb2JqO1xuXHR9LFxuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seVxuXHR0cmltOiBmdW5jdGlvbiggdGV4dCApIHtcblx0XHRyZXR1cm4gdGV4dCA9PSBudWxsID9cblx0XHRcdFwiXCIgOlxuXHRcdFx0KCB0ZXh0ICsgXCJcIiApLnJlcGxhY2UoIHJ0cmltLCBcIlwiICk7XG5cdH0sXG5cblx0Ly8gcmVzdWx0cyBpcyBmb3IgaW50ZXJuYWwgdXNhZ2Ugb25seVxuXHRtYWtlQXJyYXk6IGZ1bmN0aW9uKCBhcnIsIHJlc3VsdHMgKSB7XG5cdFx0dmFyIHJldCA9IHJlc3VsdHMgfHwgW107XG5cblx0XHRpZiAoIGFyciAhPSBudWxsICkge1xuXHRcdFx0aWYgKCBpc0FycmF5TGlrZSggT2JqZWN0KCBhcnIgKSApICkge1xuXHRcdFx0XHRqUXVlcnkubWVyZ2UoIHJldCxcblx0XHRcdFx0XHR0eXBlb2YgYXJyID09PSBcInN0cmluZ1wiID9cblx0XHRcdFx0XHRbIGFyciBdIDogYXJyXG5cdFx0XHRcdCk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRwdXNoLmNhbGwoIHJldCwgYXJyICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHJldDtcblx0fSxcblxuXHRpbkFycmF5OiBmdW5jdGlvbiggZWxlbSwgYXJyLCBpICkge1xuXHRcdHJldHVybiBhcnIgPT0gbnVsbCA/IC0xIDogaW5kZXhPZi5jYWxsKCBhcnIsIGVsZW0sIGkgKTtcblx0fSxcblxuXHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4wIG9ubHksIFBoYW50b21KUyAxIG9ubHlcblx0Ly8gcHVzaC5hcHBseShfLCBhcnJheWxpa2UpIHRocm93cyBvbiBhbmNpZW50IFdlYktpdFxuXHRtZXJnZTogZnVuY3Rpb24oIGZpcnN0LCBzZWNvbmQgKSB7XG5cdFx0dmFyIGxlbiA9ICtzZWNvbmQubGVuZ3RoLFxuXHRcdFx0aiA9IDAsXG5cdFx0XHRpID0gZmlyc3QubGVuZ3RoO1xuXG5cdFx0Zm9yICggOyBqIDwgbGVuOyBqKysgKSB7XG5cdFx0XHRmaXJzdFsgaSsrIF0gPSBzZWNvbmRbIGogXTtcblx0XHR9XG5cblx0XHRmaXJzdC5sZW5ndGggPSBpO1xuXG5cdFx0cmV0dXJuIGZpcnN0O1xuXHR9LFxuXG5cdGdyZXA6IGZ1bmN0aW9uKCBlbGVtcywgY2FsbGJhY2ssIGludmVydCApIHtcblx0XHR2YXIgY2FsbGJhY2tJbnZlcnNlLFxuXHRcdFx0bWF0Y2hlcyA9IFtdLFxuXHRcdFx0aSA9IDAsXG5cdFx0XHRsZW5ndGggPSBlbGVtcy5sZW5ndGgsXG5cdFx0XHRjYWxsYmFja0V4cGVjdCA9ICFpbnZlcnQ7XG5cblx0XHQvLyBHbyB0aHJvdWdoIHRoZSBhcnJheSwgb25seSBzYXZpbmcgdGhlIGl0ZW1zXG5cdFx0Ly8gdGhhdCBwYXNzIHRoZSB2YWxpZGF0b3IgZnVuY3Rpb25cblx0XHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHtcblx0XHRcdGNhbGxiYWNrSW52ZXJzZSA9ICFjYWxsYmFjayggZWxlbXNbIGkgXSwgaSApO1xuXHRcdFx0aWYgKCBjYWxsYmFja0ludmVyc2UgIT09IGNhbGxiYWNrRXhwZWN0ICkge1xuXHRcdFx0XHRtYXRjaGVzLnB1c2goIGVsZW1zWyBpIF0gKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gbWF0Y2hlcztcblx0fSxcblxuXHQvLyBhcmcgaXMgZm9yIGludGVybmFsIHVzYWdlIG9ubHlcblx0bWFwOiBmdW5jdGlvbiggZWxlbXMsIGNhbGxiYWNrLCBhcmcgKSB7XG5cdFx0dmFyIGxlbmd0aCwgdmFsdWUsXG5cdFx0XHRpID0gMCxcblx0XHRcdHJldCA9IFtdO1xuXG5cdFx0Ly8gR28gdGhyb3VnaCB0aGUgYXJyYXksIHRyYW5zbGF0aW5nIGVhY2ggb2YgdGhlIGl0ZW1zIHRvIHRoZWlyIG5ldyB2YWx1ZXNcblx0XHRpZiAoIGlzQXJyYXlMaWtlKCBlbGVtcyApICkge1xuXHRcdFx0bGVuZ3RoID0gZWxlbXMubGVuZ3RoO1xuXHRcdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpKysgKSB7XG5cdFx0XHRcdHZhbHVlID0gY2FsbGJhY2soIGVsZW1zWyBpIF0sIGksIGFyZyApO1xuXG5cdFx0XHRcdGlmICggdmFsdWUgIT0gbnVsbCApIHtcblx0XHRcdFx0XHRyZXQucHVzaCggdmFsdWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0Ly8gR28gdGhyb3VnaCBldmVyeSBrZXkgb24gdGhlIG9iamVjdCxcblx0XHR9IGVsc2Uge1xuXHRcdFx0Zm9yICggaSBpbiBlbGVtcyApIHtcblx0XHRcdFx0dmFsdWUgPSBjYWxsYmFjayggZWxlbXNbIGkgXSwgaSwgYXJnICk7XG5cblx0XHRcdFx0aWYgKCB2YWx1ZSAhPSBudWxsICkge1xuXHRcdFx0XHRcdHJldC5wdXNoKCB2YWx1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gRmxhdHRlbiBhbnkgbmVzdGVkIGFycmF5c1xuXHRcdHJldHVybiBjb25jYXQuYXBwbHkoIFtdLCByZXQgKTtcblx0fSxcblxuXHQvLyBBIGdsb2JhbCBHVUlEIGNvdW50ZXIgZm9yIG9iamVjdHNcblx0Z3VpZDogMSxcblxuXHQvLyBqUXVlcnkuc3VwcG9ydCBpcyBub3QgdXNlZCBpbiBDb3JlIGJ1dCBvdGhlciBwcm9qZWN0cyBhdHRhY2ggdGhlaXJcblx0Ly8gcHJvcGVydGllcyB0byBpdCBzbyBpdCBuZWVkcyB0byBleGlzdC5cblx0c3VwcG9ydDogc3VwcG9ydFxufSApO1xuXG5pZiAoIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiApIHtcblx0alF1ZXJ5LmZuWyBTeW1ib2wuaXRlcmF0b3IgXSA9IGFyclsgU3ltYm9sLml0ZXJhdG9yIF07XG59XG5cbi8vIFBvcHVsYXRlIHRoZSBjbGFzczJ0eXBlIG1hcFxualF1ZXJ5LmVhY2goIFwiQm9vbGVhbiBOdW1iZXIgU3RyaW5nIEZ1bmN0aW9uIEFycmF5IERhdGUgUmVnRXhwIE9iamVjdCBFcnJvciBTeW1ib2xcIi5zcGxpdCggXCIgXCIgKSxcbmZ1bmN0aW9uKCBpLCBuYW1lICkge1xuXHRjbGFzczJ0eXBlWyBcIltvYmplY3QgXCIgKyBuYW1lICsgXCJdXCIgXSA9IG5hbWUudG9Mb3dlckNhc2UoKTtcbn0gKTtcblxuZnVuY3Rpb24gaXNBcnJheUxpa2UoIG9iaiApIHtcblxuXHQvLyBTdXBwb3J0OiByZWFsIGlPUyA4LjIgb25seSAobm90IHJlcHJvZHVjaWJsZSBpbiBzaW11bGF0b3IpXG5cdC8vIGBpbmAgY2hlY2sgdXNlZCB0byBwcmV2ZW50IEpJVCBlcnJvciAoZ2gtMjE0NSlcblx0Ly8gaGFzT3duIGlzbid0IHVzZWQgaGVyZSBkdWUgdG8gZmFsc2UgbmVnYXRpdmVzXG5cdC8vIHJlZ2FyZGluZyBOb2RlbGlzdCBsZW5ndGggaW4gSUVcblx0dmFyIGxlbmd0aCA9ICEhb2JqICYmIFwibGVuZ3RoXCIgaW4gb2JqICYmIG9iai5sZW5ndGgsXG5cdFx0dHlwZSA9IHRvVHlwZSggb2JqICk7XG5cblx0aWYgKCBpc0Z1bmN0aW9uKCBvYmogKSB8fCBpc1dpbmRvdyggb2JqICkgKSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cblx0cmV0dXJuIHR5cGUgPT09IFwiYXJyYXlcIiB8fCBsZW5ndGggPT09IDAgfHxcblx0XHR0eXBlb2YgbGVuZ3RoID09PSBcIm51bWJlclwiICYmIGxlbmd0aCA+IDAgJiYgKCBsZW5ndGggLSAxICkgaW4gb2JqO1xufVxudmFyIFNpenpsZSA9XG4vKiFcbiAqIFNpenpsZSBDU1MgU2VsZWN0b3IgRW5naW5lIHYyLjMuNFxuICogaHR0cHM6Ly9zaXp6bGVqcy5jb20vXG4gKlxuICogQ29weXJpZ2h0IEpTIEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9yc1xuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlXG4gKiBodHRwczovL2pzLmZvdW5kYXRpb24vXG4gKlxuICogRGF0ZTogMjAxOS0wNC0wOFxuICovXG4oZnVuY3Rpb24oIHdpbmRvdyApIHtcblxudmFyIGksXG5cdHN1cHBvcnQsXG5cdEV4cHIsXG5cdGdldFRleHQsXG5cdGlzWE1MLFxuXHR0b2tlbml6ZSxcblx0Y29tcGlsZSxcblx0c2VsZWN0LFxuXHRvdXRlcm1vc3RDb250ZXh0LFxuXHRzb3J0SW5wdXQsXG5cdGhhc0R1cGxpY2F0ZSxcblxuXHQvLyBMb2NhbCBkb2N1bWVudCB2YXJzXG5cdHNldERvY3VtZW50LFxuXHRkb2N1bWVudCxcblx0ZG9jRWxlbSxcblx0ZG9jdW1lbnRJc0hUTUwsXG5cdHJidWdneVFTQSxcblx0cmJ1Z2d5TWF0Y2hlcyxcblx0bWF0Y2hlcyxcblx0Y29udGFpbnMsXG5cblx0Ly8gSW5zdGFuY2Utc3BlY2lmaWMgZGF0YVxuXHRleHBhbmRvID0gXCJzaXp6bGVcIiArIDEgKiBuZXcgRGF0ZSgpLFxuXHRwcmVmZXJyZWREb2MgPSB3aW5kb3cuZG9jdW1lbnQsXG5cdGRpcnJ1bnMgPSAwLFxuXHRkb25lID0gMCxcblx0Y2xhc3NDYWNoZSA9IGNyZWF0ZUNhY2hlKCksXG5cdHRva2VuQ2FjaGUgPSBjcmVhdGVDYWNoZSgpLFxuXHRjb21waWxlckNhY2hlID0gY3JlYXRlQ2FjaGUoKSxcblx0bm9ubmF0aXZlU2VsZWN0b3JDYWNoZSA9IGNyZWF0ZUNhY2hlKCksXG5cdHNvcnRPcmRlciA9IGZ1bmN0aW9uKCBhLCBiICkge1xuXHRcdGlmICggYSA9PT0gYiApIHtcblx0XHRcdGhhc0R1cGxpY2F0ZSA9IHRydWU7XG5cdFx0fVxuXHRcdHJldHVybiAwO1xuXHR9LFxuXG5cdC8vIEluc3RhbmNlIG1ldGhvZHNcblx0aGFzT3duID0gKHt9KS5oYXNPd25Qcm9wZXJ0eSxcblx0YXJyID0gW10sXG5cdHBvcCA9IGFyci5wb3AsXG5cdHB1c2hfbmF0aXZlID0gYXJyLnB1c2gsXG5cdHB1c2ggPSBhcnIucHVzaCxcblx0c2xpY2UgPSBhcnIuc2xpY2UsXG5cdC8vIFVzZSBhIHN0cmlwcGVkLWRvd24gaW5kZXhPZiBhcyBpdCdzIGZhc3RlciB0aGFuIG5hdGl2ZVxuXHQvLyBodHRwczovL2pzcGVyZi5jb20vdGhvci1pbmRleG9mLXZzLWZvci81XG5cdGluZGV4T2YgPSBmdW5jdGlvbiggbGlzdCwgZWxlbSApIHtcblx0XHR2YXIgaSA9IDAsXG5cdFx0XHRsZW4gPSBsaXN0Lmxlbmd0aDtcblx0XHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRcdGlmICggbGlzdFtpXSA9PT0gZWxlbSApIHtcblx0XHRcdFx0cmV0dXJuIGk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHJldHVybiAtMTtcblx0fSxcblxuXHRib29sZWFucyA9IFwiY2hlY2tlZHxzZWxlY3RlZHxhc3luY3xhdXRvZm9jdXN8YXV0b3BsYXl8Y29udHJvbHN8ZGVmZXJ8ZGlzYWJsZWR8aGlkZGVufGlzbWFwfGxvb3B8bXVsdGlwbGV8b3BlbnxyZWFkb25seXxyZXF1aXJlZHxzY29wZWRcIixcblxuXHQvLyBSZWd1bGFyIGV4cHJlc3Npb25zXG5cblx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvY3NzMy1zZWxlY3RvcnMvI3doaXRlc3BhY2Vcblx0d2hpdGVzcGFjZSA9IFwiW1xcXFx4MjBcXFxcdFxcXFxyXFxcXG5cXFxcZl1cIixcblxuXHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS9zeW5kYXRhLmh0bWwjdmFsdWUtZGVmLWlkZW50aWZpZXJcblx0aWRlbnRpZmllciA9IFwiKD86XFxcXFxcXFwufFtcXFxcdy1dfFteXFwwLVxcXFx4YTBdKStcIixcblxuXHQvLyBBdHRyaWJ1dGUgc2VsZWN0b3JzOiBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI2F0dHJpYnV0ZS1zZWxlY3RvcnNcblx0YXR0cmlidXRlcyA9IFwiXFxcXFtcIiArIHdoaXRlc3BhY2UgKyBcIiooXCIgKyBpZGVudGlmaWVyICsgXCIpKD86XCIgKyB3aGl0ZXNwYWNlICtcblx0XHQvLyBPcGVyYXRvciAoY2FwdHVyZSAyKVxuXHRcdFwiKihbKl4kfCF+XT89KVwiICsgd2hpdGVzcGFjZSArXG5cdFx0Ly8gXCJBdHRyaWJ1dGUgdmFsdWVzIG11c3QgYmUgQ1NTIGlkZW50aWZpZXJzIFtjYXB0dXJlIDVdIG9yIHN0cmluZ3MgW2NhcHR1cmUgMyBvciBjYXB0dXJlIDRdXCJcblx0XHRcIiooPzonKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcJ10pKiknfFxcXCIoKD86XFxcXFxcXFwufFteXFxcXFxcXFxcXFwiXSkqKVxcXCJ8KFwiICsgaWRlbnRpZmllciArIFwiKSl8KVwiICsgd2hpdGVzcGFjZSArXG5cdFx0XCIqXFxcXF1cIixcblxuXHRwc2V1ZG9zID0gXCI6KFwiICsgaWRlbnRpZmllciArIFwiKSg/OlxcXFwoKFwiICtcblx0XHQvLyBUbyByZWR1Y2UgdGhlIG51bWJlciBvZiBzZWxlY3RvcnMgbmVlZGluZyB0b2tlbml6ZSBpbiB0aGUgcHJlRmlsdGVyLCBwcmVmZXIgYXJndW1lbnRzOlxuXHRcdC8vIDEuIHF1b3RlZCAoY2FwdHVyZSAzOyBjYXB0dXJlIDQgb3IgY2FwdHVyZSA1KVxuXHRcdFwiKCcoKD86XFxcXFxcXFwufFteXFxcXFxcXFwnXSkqKSd8XFxcIigoPzpcXFxcXFxcXC58W15cXFxcXFxcXFxcXCJdKSopXFxcIil8XCIgK1xuXHRcdC8vIDIuIHNpbXBsZSAoY2FwdHVyZSA2KVxuXHRcdFwiKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKClbXFxcXF1dfFwiICsgYXR0cmlidXRlcyArIFwiKSopfFwiICtcblx0XHQvLyAzLiBhbnl0aGluZyBlbHNlIChjYXB0dXJlIDIpXG5cdFx0XCIuKlwiICtcblx0XHRcIilcXFxcKXwpXCIsXG5cblx0Ly8gTGVhZGluZyBhbmQgbm9uLWVzY2FwZWQgdHJhaWxpbmcgd2hpdGVzcGFjZSwgY2FwdHVyaW5nIHNvbWUgbm9uLXdoaXRlc3BhY2UgY2hhcmFjdGVycyBwcmVjZWRpbmcgdGhlIGxhdHRlclxuXHRyd2hpdGVzcGFjZSA9IG5ldyBSZWdFeHAoIHdoaXRlc3BhY2UgKyBcIitcIiwgXCJnXCIgKSxcblx0cnRyaW0gPSBuZXcgUmVnRXhwKCBcIl5cIiArIHdoaXRlc3BhY2UgKyBcIit8KCg/Ol58W15cXFxcXFxcXF0pKD86XFxcXFxcXFwuKSopXCIgKyB3aGl0ZXNwYWNlICsgXCIrJFwiLCBcImdcIiApLFxuXG5cdHJjb21tYSA9IG5ldyBSZWdFeHAoIFwiXlwiICsgd2hpdGVzcGFjZSArIFwiKixcIiArIHdoaXRlc3BhY2UgKyBcIipcIiApLFxuXHRyY29tYmluYXRvcnMgPSBuZXcgUmVnRXhwKCBcIl5cIiArIHdoaXRlc3BhY2UgKyBcIiooWz4rfl18XCIgKyB3aGl0ZXNwYWNlICsgXCIpXCIgKyB3aGl0ZXNwYWNlICsgXCIqXCIgKSxcblx0cmRlc2NlbmQgPSBuZXcgUmVnRXhwKCB3aGl0ZXNwYWNlICsgXCJ8PlwiICksXG5cblx0cnBzZXVkbyA9IG5ldyBSZWdFeHAoIHBzZXVkb3MgKSxcblx0cmlkZW50aWZpZXIgPSBuZXcgUmVnRXhwKCBcIl5cIiArIGlkZW50aWZpZXIgKyBcIiRcIiApLFxuXG5cdG1hdGNoRXhwciA9IHtcblx0XHRcIklEXCI6IG5ldyBSZWdFeHAoIFwiXiMoXCIgKyBpZGVudGlmaWVyICsgXCIpXCIgKSxcblx0XHRcIkNMQVNTXCI6IG5ldyBSZWdFeHAoIFwiXlxcXFwuKFwiICsgaWRlbnRpZmllciArIFwiKVwiICksXG5cdFx0XCJUQUdcIjogbmV3IFJlZ0V4cCggXCJeKFwiICsgaWRlbnRpZmllciArIFwifFsqXSlcIiApLFxuXHRcdFwiQVRUUlwiOiBuZXcgUmVnRXhwKCBcIl5cIiArIGF0dHJpYnV0ZXMgKSxcblx0XHRcIlBTRVVET1wiOiBuZXcgUmVnRXhwKCBcIl5cIiArIHBzZXVkb3MgKSxcblx0XHRcIkNISUxEXCI6IG5ldyBSZWdFeHAoIFwiXjoob25seXxmaXJzdHxsYXN0fG50aHxudGgtbGFzdCktKGNoaWxkfG9mLXR5cGUpKD86XFxcXChcIiArIHdoaXRlc3BhY2UgK1xuXHRcdFx0XCIqKGV2ZW58b2RkfCgoWystXXwpKFxcXFxkKilufClcIiArIHdoaXRlc3BhY2UgKyBcIiooPzooWystXXwpXCIgKyB3aGl0ZXNwYWNlICtcblx0XHRcdFwiKihcXFxcZCspfCkpXCIgKyB3aGl0ZXNwYWNlICsgXCIqXFxcXCl8KVwiLCBcImlcIiApLFxuXHRcdFwiYm9vbFwiOiBuZXcgUmVnRXhwKCBcIl4oPzpcIiArIGJvb2xlYW5zICsgXCIpJFwiLCBcImlcIiApLFxuXHRcdC8vIEZvciB1c2UgaW4gbGlicmFyaWVzIGltcGxlbWVudGluZyAuaXMoKVxuXHRcdC8vIFdlIHVzZSB0aGlzIGZvciBQT1MgbWF0Y2hpbmcgaW4gYHNlbGVjdGBcblx0XHRcIm5lZWRzQ29udGV4dFwiOiBuZXcgUmVnRXhwKCBcIl5cIiArIHdoaXRlc3BhY2UgKyBcIipbPit+XXw6KGV2ZW58b2RkfGVxfGd0fGx0fG50aHxmaXJzdHxsYXN0KSg/OlxcXFwoXCIgK1xuXHRcdFx0d2hpdGVzcGFjZSArIFwiKigoPzotXFxcXGQpP1xcXFxkKilcIiArIHdoaXRlc3BhY2UgKyBcIipcXFxcKXwpKD89W14tXXwkKVwiLCBcImlcIiApXG5cdH0sXG5cblx0cmh0bWwgPSAvSFRNTCQvaSxcblx0cmlucHV0cyA9IC9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhfGJ1dHRvbikkL2ksXG5cdHJoZWFkZXIgPSAvXmhcXGQkL2ksXG5cblx0cm5hdGl2ZSA9IC9eW157XStcXHtcXHMqXFxbbmF0aXZlIFxcdy8sXG5cblx0Ly8gRWFzaWx5LXBhcnNlYWJsZS9yZXRyaWV2YWJsZSBJRCBvciBUQUcgb3IgQ0xBU1Mgc2VsZWN0b3JzXG5cdHJxdWlja0V4cHIgPSAvXig/OiMoW1xcdy1dKyl8KFxcdyspfFxcLihbXFx3LV0rKSkkLyxcblxuXHRyc2libGluZyA9IC9bK35dLyxcblxuXHQvLyBDU1MgZXNjYXBlc1xuXHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS9zeW5kYXRhLmh0bWwjZXNjYXBlZC1jaGFyYWN0ZXJzXG5cdHJ1bmVzY2FwZSA9IG5ldyBSZWdFeHAoIFwiXFxcXFxcXFwoW1xcXFxkYS1mXXsxLDZ9XCIgKyB3aGl0ZXNwYWNlICsgXCI/fChcIiArIHdoaXRlc3BhY2UgKyBcIil8LilcIiwgXCJpZ1wiICksXG5cdGZ1bmVzY2FwZSA9IGZ1bmN0aW9uKCBfLCBlc2NhcGVkLCBlc2NhcGVkV2hpdGVzcGFjZSApIHtcblx0XHR2YXIgaGlnaCA9IFwiMHhcIiArIGVzY2FwZWQgLSAweDEwMDAwO1xuXHRcdC8vIE5hTiBtZWFucyBub24tY29kZXBvaW50XG5cdFx0Ly8gU3VwcG9ydDogRmlyZWZveDwyNFxuXHRcdC8vIFdvcmthcm91bmQgZXJyb25lb3VzIG51bWVyaWMgaW50ZXJwcmV0YXRpb24gb2YgK1wiMHhcIlxuXHRcdHJldHVybiBoaWdoICE9PSBoaWdoIHx8IGVzY2FwZWRXaGl0ZXNwYWNlID9cblx0XHRcdGVzY2FwZWQgOlxuXHRcdFx0aGlnaCA8IDAgP1xuXHRcdFx0XHQvLyBCTVAgY29kZXBvaW50XG5cdFx0XHRcdFN0cmluZy5mcm9tQ2hhckNvZGUoIGhpZ2ggKyAweDEwMDAwICkgOlxuXHRcdFx0XHQvLyBTdXBwbGVtZW50YWwgUGxhbmUgY29kZXBvaW50IChzdXJyb2dhdGUgcGFpcilcblx0XHRcdFx0U3RyaW5nLmZyb21DaGFyQ29kZSggaGlnaCA+PiAxMCB8IDB4RDgwMCwgaGlnaCAmIDB4M0ZGIHwgMHhEQzAwICk7XG5cdH0sXG5cblx0Ly8gQ1NTIHN0cmluZy9pZGVudGlmaWVyIHNlcmlhbGl6YXRpb25cblx0Ly8gaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzc29tLyNjb21tb24tc2VyaWFsaXppbmctaWRpb21zXG5cdHJjc3Nlc2NhcGUgPSAvKFtcXDAtXFx4MWZcXHg3Zl18Xi0/XFxkKXxeLSR8W15cXDAtXFx4MWZcXHg3Zi1cXHVGRkZGXFx3LV0vZyxcblx0ZmNzc2VzY2FwZSA9IGZ1bmN0aW9uKCBjaCwgYXNDb2RlUG9pbnQgKSB7XG5cdFx0aWYgKCBhc0NvZGVQb2ludCApIHtcblxuXHRcdFx0Ly8gVSswMDAwIE5VTEwgYmVjb21lcyBVK0ZGRkQgUkVQTEFDRU1FTlQgQ0hBUkFDVEVSXG5cdFx0XHRpZiAoIGNoID09PSBcIlxcMFwiICkge1xuXHRcdFx0XHRyZXR1cm4gXCJcXHVGRkZEXCI7XG5cdFx0XHR9XG5cblx0XHRcdC8vIENvbnRyb2wgY2hhcmFjdGVycyBhbmQgKGRlcGVuZGVudCB1cG9uIHBvc2l0aW9uKSBudW1iZXJzIGdldCBlc2NhcGVkIGFzIGNvZGUgcG9pbnRzXG5cdFx0XHRyZXR1cm4gY2guc2xpY2UoIDAsIC0xICkgKyBcIlxcXFxcIiArIGNoLmNoYXJDb2RlQXQoIGNoLmxlbmd0aCAtIDEgKS50b1N0cmluZyggMTYgKSArIFwiIFwiO1xuXHRcdH1cblxuXHRcdC8vIE90aGVyIHBvdGVudGlhbGx5LXNwZWNpYWwgQVNDSUkgY2hhcmFjdGVycyBnZXQgYmFja3NsYXNoLWVzY2FwZWRcblx0XHRyZXR1cm4gXCJcXFxcXCIgKyBjaDtcblx0fSxcblxuXHQvLyBVc2VkIGZvciBpZnJhbWVzXG5cdC8vIFNlZSBzZXREb2N1bWVudCgpXG5cdC8vIFJlbW92aW5nIHRoZSBmdW5jdGlvbiB3cmFwcGVyIGNhdXNlcyBhIFwiUGVybWlzc2lvbiBEZW5pZWRcIlxuXHQvLyBlcnJvciBpbiBJRVxuXHR1bmxvYWRIYW5kbGVyID0gZnVuY3Rpb24oKSB7XG5cdFx0c2V0RG9jdW1lbnQoKTtcblx0fSxcblxuXHRpbkRpc2FibGVkRmllbGRzZXQgPSBhZGRDb21iaW5hdG9yKFxuXHRcdGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0uZGlzYWJsZWQgPT09IHRydWUgJiYgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBcImZpZWxkc2V0XCI7XG5cdFx0fSxcblx0XHR7IGRpcjogXCJwYXJlbnROb2RlXCIsIG5leHQ6IFwibGVnZW5kXCIgfVxuXHQpO1xuXG4vLyBPcHRpbWl6ZSBmb3IgcHVzaC5hcHBseSggXywgTm9kZUxpc3QgKVxudHJ5IHtcblx0cHVzaC5hcHBseShcblx0XHQoYXJyID0gc2xpY2UuY2FsbCggcHJlZmVycmVkRG9jLmNoaWxkTm9kZXMgKSksXG5cdFx0cHJlZmVycmVkRG9jLmNoaWxkTm9kZXNcblx0KTtcblx0Ly8gU3VwcG9ydDogQW5kcm9pZDw0LjBcblx0Ly8gRGV0ZWN0IHNpbGVudGx5IGZhaWxpbmcgcHVzaC5hcHBseVxuXHRhcnJbIHByZWZlcnJlZERvYy5jaGlsZE5vZGVzLmxlbmd0aCBdLm5vZGVUeXBlO1xufSBjYXRjaCAoIGUgKSB7XG5cdHB1c2ggPSB7IGFwcGx5OiBhcnIubGVuZ3RoID9cblxuXHRcdC8vIExldmVyYWdlIHNsaWNlIGlmIHBvc3NpYmxlXG5cdFx0ZnVuY3Rpb24oIHRhcmdldCwgZWxzICkge1xuXHRcdFx0cHVzaF9uYXRpdmUuYXBwbHkoIHRhcmdldCwgc2xpY2UuY2FsbChlbHMpICk7XG5cdFx0fSA6XG5cblx0XHQvLyBTdXBwb3J0OiBJRTw5XG5cdFx0Ly8gT3RoZXJ3aXNlIGFwcGVuZCBkaXJlY3RseVxuXHRcdGZ1bmN0aW9uKCB0YXJnZXQsIGVscyApIHtcblx0XHRcdHZhciBqID0gdGFyZ2V0Lmxlbmd0aCxcblx0XHRcdFx0aSA9IDA7XG5cdFx0XHQvLyBDYW4ndCB0cnVzdCBOb2RlTGlzdC5sZW5ndGhcblx0XHRcdHdoaWxlICggKHRhcmdldFtqKytdID0gZWxzW2krK10pICkge31cblx0XHRcdHRhcmdldC5sZW5ndGggPSBqIC0gMTtcblx0XHR9XG5cdH07XG59XG5cbmZ1bmN0aW9uIFNpenpsZSggc2VsZWN0b3IsIGNvbnRleHQsIHJlc3VsdHMsIHNlZWQgKSB7XG5cdHZhciBtLCBpLCBlbGVtLCBuaWQsIG1hdGNoLCBncm91cHMsIG5ld1NlbGVjdG9yLFxuXHRcdG5ld0NvbnRleHQgPSBjb250ZXh0ICYmIGNvbnRleHQub3duZXJEb2N1bWVudCxcblxuXHRcdC8vIG5vZGVUeXBlIGRlZmF1bHRzIHRvIDksIHNpbmNlIGNvbnRleHQgZGVmYXVsdHMgdG8gZG9jdW1lbnRcblx0XHRub2RlVHlwZSA9IGNvbnRleHQgPyBjb250ZXh0Lm5vZGVUeXBlIDogOTtcblxuXHRyZXN1bHRzID0gcmVzdWx0cyB8fCBbXTtcblxuXHQvLyBSZXR1cm4gZWFybHkgZnJvbSBjYWxscyB3aXRoIGludmFsaWQgc2VsZWN0b3Igb3IgY29udGV4dFxuXHRpZiAoIHR5cGVvZiBzZWxlY3RvciAhPT0gXCJzdHJpbmdcIiB8fCAhc2VsZWN0b3IgfHxcblx0XHRub2RlVHlwZSAhPT0gMSAmJiBub2RlVHlwZSAhPT0gOSAmJiBub2RlVHlwZSAhPT0gMTEgKSB7XG5cblx0XHRyZXR1cm4gcmVzdWx0cztcblx0fVxuXG5cdC8vIFRyeSB0byBzaG9ydGN1dCBmaW5kIG9wZXJhdGlvbnMgKGFzIG9wcG9zZWQgdG8gZmlsdGVycykgaW4gSFRNTCBkb2N1bWVudHNcblx0aWYgKCAhc2VlZCApIHtcblxuXHRcdGlmICggKCBjb250ZXh0ID8gY29udGV4dC5vd25lckRvY3VtZW50IHx8IGNvbnRleHQgOiBwcmVmZXJyZWREb2MgKSAhPT0gZG9jdW1lbnQgKSB7XG5cdFx0XHRzZXREb2N1bWVudCggY29udGV4dCApO1xuXHRcdH1cblx0XHRjb250ZXh0ID0gY29udGV4dCB8fCBkb2N1bWVudDtcblxuXHRcdGlmICggZG9jdW1lbnRJc0hUTUwgKSB7XG5cblx0XHRcdC8vIElmIHRoZSBzZWxlY3RvciBpcyBzdWZmaWNpZW50bHkgc2ltcGxlLCB0cnkgdXNpbmcgYSBcImdldCpCeSpcIiBET00gbWV0aG9kXG5cdFx0XHQvLyAoZXhjZXB0aW5nIERvY3VtZW50RnJhZ21lbnQgY29udGV4dCwgd2hlcmUgdGhlIG1ldGhvZHMgZG9uJ3QgZXhpc3QpXG5cdFx0XHRpZiAoIG5vZGVUeXBlICE9PSAxMSAmJiAobWF0Y2ggPSBycXVpY2tFeHByLmV4ZWMoIHNlbGVjdG9yICkpICkge1xuXG5cdFx0XHRcdC8vIElEIHNlbGVjdG9yXG5cdFx0XHRcdGlmICggKG0gPSBtYXRjaFsxXSkgKSB7XG5cblx0XHRcdFx0XHQvLyBEb2N1bWVudCBjb250ZXh0XG5cdFx0XHRcdFx0aWYgKCBub2RlVHlwZSA9PT0gOSApIHtcblx0XHRcdFx0XHRcdGlmICggKGVsZW0gPSBjb250ZXh0LmdldEVsZW1lbnRCeUlkKCBtICkpICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFLCBPcGVyYSwgV2Via2l0XG5cdFx0XHRcdFx0XHRcdC8vIFRPRE86IGlkZW50aWZ5IHZlcnNpb25zXG5cdFx0XHRcdFx0XHRcdC8vIGdldEVsZW1lbnRCeUlkIGNhbiBtYXRjaCBlbGVtZW50cyBieSBuYW1lIGluc3RlYWQgb2YgSURcblx0XHRcdFx0XHRcdFx0aWYgKCBlbGVtLmlkID09PSBtICkge1xuXHRcdFx0XHRcdFx0XHRcdHJlc3VsdHMucHVzaCggZWxlbSApO1xuXHRcdFx0XHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIEVsZW1lbnQgY29udGV4dFxuXHRcdFx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFLCBPcGVyYSwgV2Via2l0XG5cdFx0XHRcdFx0XHQvLyBUT0RPOiBpZGVudGlmeSB2ZXJzaW9uc1xuXHRcdFx0XHRcdFx0Ly8gZ2V0RWxlbWVudEJ5SWQgY2FuIG1hdGNoIGVsZW1lbnRzIGJ5IG5hbWUgaW5zdGVhZCBvZiBJRFxuXHRcdFx0XHRcdFx0aWYgKCBuZXdDb250ZXh0ICYmIChlbGVtID0gbmV3Q29udGV4dC5nZXRFbGVtZW50QnlJZCggbSApKSAmJlxuXHRcdFx0XHRcdFx0XHRjb250YWlucyggY29udGV4dCwgZWxlbSApICYmXG5cdFx0XHRcdFx0XHRcdGVsZW0uaWQgPT09IG0gKSB7XG5cblx0XHRcdFx0XHRcdFx0cmVzdWx0cy5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBUeXBlIHNlbGVjdG9yXG5cdFx0XHRcdH0gZWxzZSBpZiAoIG1hdGNoWzJdICkge1xuXHRcdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsIGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIHNlbGVjdG9yICkgKTtcblx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblxuXHRcdFx0XHQvLyBDbGFzcyBzZWxlY3RvclxuXHRcdFx0XHR9IGVsc2UgaWYgKCAobSA9IG1hdGNoWzNdKSAmJiBzdXBwb3J0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgJiZcblx0XHRcdFx0XHRjb250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgKSB7XG5cblx0XHRcdFx0XHRwdXNoLmFwcGx5KCByZXN1bHRzLCBjb250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoIG0gKSApO1xuXHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIFRha2UgYWR2YW50YWdlIG9mIHF1ZXJ5U2VsZWN0b3JBbGxcblx0XHRcdGlmICggc3VwcG9ydC5xc2EgJiZcblx0XHRcdFx0IW5vbm5hdGl2ZVNlbGVjdG9yQ2FjaGVbIHNlbGVjdG9yICsgXCIgXCIgXSAmJlxuXHRcdFx0XHQoIXJidWdneVFTQSB8fCAhcmJ1Z2d5UVNBLnRlc3QoIHNlbGVjdG9yICkpICYmXG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgOCBvbmx5XG5cdFx0XHRcdC8vIEV4Y2x1ZGUgb2JqZWN0IGVsZW1lbnRzXG5cdFx0XHRcdChub2RlVHlwZSAhPT0gMSB8fCBjb250ZXh0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgIT09IFwib2JqZWN0XCIpICkge1xuXG5cdFx0XHRcdG5ld1NlbGVjdG9yID0gc2VsZWN0b3I7XG5cdFx0XHRcdG5ld0NvbnRleHQgPSBjb250ZXh0O1xuXG5cdFx0XHRcdC8vIHFTQSBjb25zaWRlcnMgZWxlbWVudHMgb3V0c2lkZSBhIHNjb3Bpbmcgcm9vdCB3aGVuIGV2YWx1YXRpbmcgY2hpbGQgb3Jcblx0XHRcdFx0Ly8gZGVzY2VuZGFudCBjb21iaW5hdG9ycywgd2hpY2ggaXMgbm90IHdoYXQgd2Ugd2FudC5cblx0XHRcdFx0Ly8gSW4gc3VjaCBjYXNlcywgd2Ugd29yayBhcm91bmQgdGhlIGJlaGF2aW9yIGJ5IHByZWZpeGluZyBldmVyeSBzZWxlY3RvciBpbiB0aGVcblx0XHRcdFx0Ly8gbGlzdCB3aXRoIGFuIElEIHNlbGVjdG9yIHJlZmVyZW5jaW5nIHRoZSBzY29wZSBjb250ZXh0LlxuXHRcdFx0XHQvLyBUaGFua3MgdG8gQW5kcmV3IER1cG9udCBmb3IgdGhpcyB0ZWNobmlxdWUuXG5cdFx0XHRcdGlmICggbm9kZVR5cGUgPT09IDEgJiYgcmRlc2NlbmQudGVzdCggc2VsZWN0b3IgKSApIHtcblxuXHRcdFx0XHRcdC8vIENhcHR1cmUgdGhlIGNvbnRleHQgSUQsIHNldHRpbmcgaXQgZmlyc3QgaWYgbmVjZXNzYXJ5XG5cdFx0XHRcdFx0aWYgKCAobmlkID0gY29udGV4dC5nZXRBdHRyaWJ1dGUoIFwiaWRcIiApKSApIHtcblx0XHRcdFx0XHRcdG5pZCA9IG5pZC5yZXBsYWNlKCByY3NzZXNjYXBlLCBmY3NzZXNjYXBlICk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdGNvbnRleHQuc2V0QXR0cmlidXRlKCBcImlkXCIsIChuaWQgPSBleHBhbmRvKSApO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIFByZWZpeCBldmVyeSBzZWxlY3RvciBpbiB0aGUgbGlzdFxuXHRcdFx0XHRcdGdyb3VwcyA9IHRva2VuaXplKCBzZWxlY3RvciApO1xuXHRcdFx0XHRcdGkgPSBncm91cHMubGVuZ3RoO1xuXHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdFx0Z3JvdXBzW2ldID0gXCIjXCIgKyBuaWQgKyBcIiBcIiArIHRvU2VsZWN0b3IoIGdyb3Vwc1tpXSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRuZXdTZWxlY3RvciA9IGdyb3Vwcy5qb2luKCBcIixcIiApO1xuXG5cdFx0XHRcdFx0Ly8gRXhwYW5kIGNvbnRleHQgZm9yIHNpYmxpbmcgc2VsZWN0b3JzXG5cdFx0XHRcdFx0bmV3Q29udGV4dCA9IHJzaWJsaW5nLnRlc3QoIHNlbGVjdG9yICkgJiYgdGVzdENvbnRleHQoIGNvbnRleHQucGFyZW50Tm9kZSApIHx8XG5cdFx0XHRcdFx0XHRjb250ZXh0O1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRwdXNoLmFwcGx5KCByZXN1bHRzLFxuXHRcdFx0XHRcdFx0bmV3Q29udGV4dC5xdWVyeVNlbGVjdG9yQWxsKCBuZXdTZWxlY3RvciApXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHRcdFx0fSBjYXRjaCAoIHFzYUVycm9yICkge1xuXHRcdFx0XHRcdG5vbm5hdGl2ZVNlbGVjdG9yQ2FjaGUoIHNlbGVjdG9yLCB0cnVlICk7XG5cdFx0XHRcdH0gZmluYWxseSB7XG5cdFx0XHRcdFx0aWYgKCBuaWQgPT09IGV4cGFuZG8gKSB7XG5cdFx0XHRcdFx0XHRjb250ZXh0LnJlbW92ZUF0dHJpYnV0ZSggXCJpZFwiICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gQWxsIG90aGVyc1xuXHRyZXR1cm4gc2VsZWN0KCBzZWxlY3Rvci5yZXBsYWNlKCBydHJpbSwgXCIkMVwiICksIGNvbnRleHQsIHJlc3VsdHMsIHNlZWQgKTtcbn1cblxuLyoqXG4gKiBDcmVhdGUga2V5LXZhbHVlIGNhY2hlcyBvZiBsaW1pdGVkIHNpemVcbiAqIEByZXR1cm5zIHtmdW5jdGlvbihzdHJpbmcsIG9iamVjdCl9IFJldHVybnMgdGhlIE9iamVjdCBkYXRhIGFmdGVyIHN0b3JpbmcgaXQgb24gaXRzZWxmIHdpdGhcbiAqXHRwcm9wZXJ0eSBuYW1lIHRoZSAoc3BhY2Utc3VmZml4ZWQpIHN0cmluZyBhbmQgKGlmIHRoZSBjYWNoZSBpcyBsYXJnZXIgdGhhbiBFeHByLmNhY2hlTGVuZ3RoKVxuICpcdGRlbGV0aW5nIHRoZSBvbGRlc3QgZW50cnlcbiAqL1xuZnVuY3Rpb24gY3JlYXRlQ2FjaGUoKSB7XG5cdHZhciBrZXlzID0gW107XG5cblx0ZnVuY3Rpb24gY2FjaGUoIGtleSwgdmFsdWUgKSB7XG5cdFx0Ly8gVXNlIChrZXkgKyBcIiBcIikgdG8gYXZvaWQgY29sbGlzaW9uIHdpdGggbmF0aXZlIHByb3RvdHlwZSBwcm9wZXJ0aWVzIChzZWUgSXNzdWUgIzE1Nylcblx0XHRpZiAoIGtleXMucHVzaCgga2V5ICsgXCIgXCIgKSA+IEV4cHIuY2FjaGVMZW5ndGggKSB7XG5cdFx0XHQvLyBPbmx5IGtlZXAgdGhlIG1vc3QgcmVjZW50IGVudHJpZXNcblx0XHRcdGRlbGV0ZSBjYWNoZVsga2V5cy5zaGlmdCgpIF07XG5cdFx0fVxuXHRcdHJldHVybiAoY2FjaGVbIGtleSArIFwiIFwiIF0gPSB2YWx1ZSk7XG5cdH1cblx0cmV0dXJuIGNhY2hlO1xufVxuXG4vKipcbiAqIE1hcmsgYSBmdW5jdGlvbiBmb3Igc3BlY2lhbCB1c2UgYnkgU2l6emxlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgZnVuY3Rpb24gdG8gbWFya1xuICovXG5mdW5jdGlvbiBtYXJrRnVuY3Rpb24oIGZuICkge1xuXHRmblsgZXhwYW5kbyBdID0gdHJ1ZTtcblx0cmV0dXJuIGZuO1xufVxuXG4vKipcbiAqIFN1cHBvcnQgdGVzdGluZyB1c2luZyBhbiBlbGVtZW50XG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBQYXNzZWQgdGhlIGNyZWF0ZWQgZWxlbWVudCBhbmQgcmV0dXJucyBhIGJvb2xlYW4gcmVzdWx0XG4gKi9cbmZ1bmN0aW9uIGFzc2VydCggZm4gKSB7XG5cdHZhciBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJmaWVsZHNldFwiKTtcblxuXHR0cnkge1xuXHRcdHJldHVybiAhIWZuKCBlbCApO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9IGZpbmFsbHkge1xuXHRcdC8vIFJlbW92ZSBmcm9tIGl0cyBwYXJlbnQgYnkgZGVmYXVsdFxuXHRcdGlmICggZWwucGFyZW50Tm9kZSApIHtcblx0XHRcdGVsLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoIGVsICk7XG5cdFx0fVxuXHRcdC8vIHJlbGVhc2UgbWVtb3J5IGluIElFXG5cdFx0ZWwgPSBudWxsO1xuXHR9XG59XG5cbi8qKlxuICogQWRkcyB0aGUgc2FtZSBoYW5kbGVyIGZvciBhbGwgb2YgdGhlIHNwZWNpZmllZCBhdHRyc1xuICogQHBhcmFtIHtTdHJpbmd9IGF0dHJzIFBpcGUtc2VwYXJhdGVkIGxpc3Qgb2YgYXR0cmlidXRlc1xuICogQHBhcmFtIHtGdW5jdGlvbn0gaGFuZGxlciBUaGUgbWV0aG9kIHRoYXQgd2lsbCBiZSBhcHBsaWVkXG4gKi9cbmZ1bmN0aW9uIGFkZEhhbmRsZSggYXR0cnMsIGhhbmRsZXIgKSB7XG5cdHZhciBhcnIgPSBhdHRycy5zcGxpdChcInxcIiksXG5cdFx0aSA9IGFyci5sZW5ndGg7XG5cblx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0RXhwci5hdHRySGFuZGxlWyBhcnJbaV0gXSA9IGhhbmRsZXI7XG5cdH1cbn1cblxuLyoqXG4gKiBDaGVja3MgZG9jdW1lbnQgb3JkZXIgb2YgdHdvIHNpYmxpbmdzXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGFcbiAqIEBwYXJhbSB7RWxlbWVudH0gYlxuICogQHJldHVybnMge051bWJlcn0gUmV0dXJucyBsZXNzIHRoYW4gMCBpZiBhIHByZWNlZGVzIGIsIGdyZWF0ZXIgdGhhbiAwIGlmIGEgZm9sbG93cyBiXG4gKi9cbmZ1bmN0aW9uIHNpYmxpbmdDaGVjayggYSwgYiApIHtcblx0dmFyIGN1ciA9IGIgJiYgYSxcblx0XHRkaWZmID0gY3VyICYmIGEubm9kZVR5cGUgPT09IDEgJiYgYi5ub2RlVHlwZSA9PT0gMSAmJlxuXHRcdFx0YS5zb3VyY2VJbmRleCAtIGIuc291cmNlSW5kZXg7XG5cblx0Ly8gVXNlIElFIHNvdXJjZUluZGV4IGlmIGF2YWlsYWJsZSBvbiBib3RoIG5vZGVzXG5cdGlmICggZGlmZiApIHtcblx0XHRyZXR1cm4gZGlmZjtcblx0fVxuXG5cdC8vIENoZWNrIGlmIGIgZm9sbG93cyBhXG5cdGlmICggY3VyICkge1xuXHRcdHdoaWxlICggKGN1ciA9IGN1ci5uZXh0U2libGluZykgKSB7XG5cdFx0XHRpZiAoIGN1ciA9PT0gYiApIHtcblx0XHRcdFx0cmV0dXJuIC0xO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiBhID8gMSA6IC0xO1xufVxuXG4vKipcbiAqIFJldHVybnMgYSBmdW5jdGlvbiB0byB1c2UgaW4gcHNldWRvcyBmb3IgaW5wdXQgdHlwZXNcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUlucHV0UHNldWRvKCB0eXBlICkge1xuXHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0dmFyIG5hbWUgPSBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XG5cdFx0cmV0dXJuIG5hbWUgPT09IFwiaW5wdXRcIiAmJiBlbGVtLnR5cGUgPT09IHR5cGU7XG5cdH07XG59XG5cbi8qKlxuICogUmV0dXJucyBhIGZ1bmN0aW9uIHRvIHVzZSBpbiBwc2V1ZG9zIGZvciBidXR0b25zXG4gKiBAcGFyYW0ge1N0cmluZ30gdHlwZVxuICovXG5mdW5jdGlvbiBjcmVhdGVCdXR0b25Qc2V1ZG8oIHR5cGUgKSB7XG5cdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHR2YXIgbmFtZSA9IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcblx0XHRyZXR1cm4gKG5hbWUgPT09IFwiaW5wdXRcIiB8fCBuYW1lID09PSBcImJ1dHRvblwiKSAmJiBlbGVtLnR5cGUgPT09IHR5cGU7XG5cdH07XG59XG5cbi8qKlxuICogUmV0dXJucyBhIGZ1bmN0aW9uIHRvIHVzZSBpbiBwc2V1ZG9zIGZvciA6ZW5hYmxlZC86ZGlzYWJsZWRcbiAqIEBwYXJhbSB7Qm9vbGVhbn0gZGlzYWJsZWQgdHJ1ZSBmb3IgOmRpc2FibGVkOyBmYWxzZSBmb3IgOmVuYWJsZWRcbiAqL1xuZnVuY3Rpb24gY3JlYXRlRGlzYWJsZWRQc2V1ZG8oIGRpc2FibGVkICkge1xuXG5cdC8vIEtub3duIDpkaXNhYmxlZCBmYWxzZSBwb3NpdGl2ZXM6IGZpZWxkc2V0W2Rpc2FibGVkXSA+IGxlZ2VuZDpudGgtb2YtdHlwZShuKzIpIDpjYW4tZGlzYWJsZVxuXHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHQvLyBPbmx5IGNlcnRhaW4gZWxlbWVudHMgY2FuIG1hdGNoIDplbmFibGVkIG9yIDpkaXNhYmxlZFxuXHRcdC8vIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL3NjcmlwdGluZy5odG1sI3NlbGVjdG9yLWVuYWJsZWRcblx0XHQvLyBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9zY3JpcHRpbmcuaHRtbCNzZWxlY3Rvci1kaXNhYmxlZFxuXHRcdGlmICggXCJmb3JtXCIgaW4gZWxlbSApIHtcblxuXHRcdFx0Ly8gQ2hlY2sgZm9yIGluaGVyaXRlZCBkaXNhYmxlZG5lc3Mgb24gcmVsZXZhbnQgbm9uLWRpc2FibGVkIGVsZW1lbnRzOlxuXHRcdFx0Ly8gKiBsaXN0ZWQgZm9ybS1hc3NvY2lhdGVkIGVsZW1lbnRzIGluIGEgZGlzYWJsZWQgZmllbGRzZXRcblx0XHRcdC8vICAgaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvZm9ybXMuaHRtbCNjYXRlZ29yeS1saXN0ZWRcblx0XHRcdC8vICAgaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvZm9ybXMuaHRtbCNjb25jZXB0LWZlLWRpc2FibGVkXG5cdFx0XHQvLyAqIG9wdGlvbiBlbGVtZW50cyBpbiBhIGRpc2FibGVkIG9wdGdyb3VwXG5cdFx0XHQvLyAgIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL2Zvcm1zLmh0bWwjY29uY2VwdC1vcHRpb24tZGlzYWJsZWRcblx0XHRcdC8vIEFsbCBzdWNoIGVsZW1lbnRzIGhhdmUgYSBcImZvcm1cIiBwcm9wZXJ0eS5cblx0XHRcdGlmICggZWxlbS5wYXJlbnROb2RlICYmIGVsZW0uZGlzYWJsZWQgPT09IGZhbHNlICkge1xuXG5cdFx0XHRcdC8vIE9wdGlvbiBlbGVtZW50cyBkZWZlciB0byBhIHBhcmVudCBvcHRncm91cCBpZiBwcmVzZW50XG5cdFx0XHRcdGlmICggXCJsYWJlbFwiIGluIGVsZW0gKSB7XG5cdFx0XHRcdFx0aWYgKCBcImxhYmVsXCIgaW4gZWxlbS5wYXJlbnROb2RlICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGVsZW0ucGFyZW50Tm9kZS5kaXNhYmxlZCA9PT0gZGlzYWJsZWQ7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHJldHVybiBlbGVtLmRpc2FibGVkID09PSBkaXNhYmxlZDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA2IC0gMTFcblx0XHRcdFx0Ly8gVXNlIHRoZSBpc0Rpc2FibGVkIHNob3J0Y3V0IHByb3BlcnR5IHRvIGNoZWNrIGZvciBkaXNhYmxlZCBmaWVsZHNldCBhbmNlc3RvcnNcblx0XHRcdFx0cmV0dXJuIGVsZW0uaXNEaXNhYmxlZCA9PT0gZGlzYWJsZWQgfHxcblxuXHRcdFx0XHRcdC8vIFdoZXJlIHRoZXJlIGlzIG5vIGlzRGlzYWJsZWQsIGNoZWNrIG1hbnVhbGx5XG5cdFx0XHRcdFx0LyoganNoaW50IC1XMDE4ICovXG5cdFx0XHRcdFx0ZWxlbS5pc0Rpc2FibGVkICE9PSAhZGlzYWJsZWQgJiZcblx0XHRcdFx0XHRcdGluRGlzYWJsZWRGaWVsZHNldCggZWxlbSApID09PSBkaXNhYmxlZDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGVsZW0uZGlzYWJsZWQgPT09IGRpc2FibGVkO1xuXG5cdFx0Ly8gVHJ5IHRvIHdpbm5vdyBvdXQgZWxlbWVudHMgdGhhdCBjYW4ndCBiZSBkaXNhYmxlZCBiZWZvcmUgdHJ1c3RpbmcgdGhlIGRpc2FibGVkIHByb3BlcnR5LlxuXHRcdC8vIFNvbWUgdmljdGltcyBnZXQgY2F1Z2h0IGluIG91ciBuZXQgKGxhYmVsLCBsZWdlbmQsIG1lbnUsIHRyYWNrKSwgYnV0IGl0IHNob3VsZG4ndFxuXHRcdC8vIGV2ZW4gZXhpc3Qgb24gdGhlbSwgbGV0IGFsb25lIGhhdmUgYSBib29sZWFuIHZhbHVlLlxuXHRcdH0gZWxzZSBpZiAoIFwibGFiZWxcIiBpbiBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0uZGlzYWJsZWQgPT09IGRpc2FibGVkO1xuXHRcdH1cblxuXHRcdC8vIFJlbWFpbmluZyBlbGVtZW50cyBhcmUgbmVpdGhlciA6ZW5hYmxlZCBub3IgOmRpc2FibGVkXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9O1xufVxuXG4vKipcbiAqIFJldHVybnMgYSBmdW5jdGlvbiB0byB1c2UgaW4gcHNldWRvcyBmb3IgcG9zaXRpb25hbHNcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZuICkge1xuXHRyZXR1cm4gbWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBhcmd1bWVudCApIHtcblx0XHRhcmd1bWVudCA9ICthcmd1bWVudDtcblx0XHRyZXR1cm4gbWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBzZWVkLCBtYXRjaGVzICkge1xuXHRcdFx0dmFyIGosXG5cdFx0XHRcdG1hdGNoSW5kZXhlcyA9IGZuKCBbXSwgc2VlZC5sZW5ndGgsIGFyZ3VtZW50ICksXG5cdFx0XHRcdGkgPSBtYXRjaEluZGV4ZXMubGVuZ3RoO1xuXG5cdFx0XHQvLyBNYXRjaCBlbGVtZW50cyBmb3VuZCBhdCB0aGUgc3BlY2lmaWVkIGluZGV4ZXNcblx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRpZiAoIHNlZWRbIChqID0gbWF0Y2hJbmRleGVzW2ldKSBdICkge1xuXHRcdFx0XHRcdHNlZWRbal0gPSAhKG1hdGNoZXNbal0gPSBzZWVkW2pdKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0pO1xuXHR9KTtcbn1cblxuLyoqXG4gKiBDaGVja3MgYSBub2RlIGZvciB2YWxpZGl0eSBhcyBhIFNpenpsZSBjb250ZXh0XG4gKiBAcGFyYW0ge0VsZW1lbnR8T2JqZWN0PX0gY29udGV4dFxuICogQHJldHVybnMge0VsZW1lbnR8T2JqZWN0fEJvb2xlYW59IFRoZSBpbnB1dCBub2RlIGlmIGFjY2VwdGFibGUsIG90aGVyd2lzZSBhIGZhbHN5IHZhbHVlXG4gKi9cbmZ1bmN0aW9uIHRlc3RDb250ZXh0KCBjb250ZXh0ICkge1xuXHRyZXR1cm4gY29udGV4dCAmJiB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBjb250ZXh0O1xufVxuXG4vLyBFeHBvc2Ugc3VwcG9ydCB2YXJzIGZvciBjb252ZW5pZW5jZVxuc3VwcG9ydCA9IFNpenpsZS5zdXBwb3J0ID0ge307XG5cbi8qKlxuICogRGV0ZWN0cyBYTUwgbm9kZXNcbiAqIEBwYXJhbSB7RWxlbWVudHxPYmplY3R9IGVsZW0gQW4gZWxlbWVudCBvciBhIGRvY3VtZW50XG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gVHJ1ZSBpZmYgZWxlbSBpcyBhIG5vbi1IVE1MIFhNTCBub2RlXG4gKi9cbmlzWE1MID0gU2l6emxlLmlzWE1MID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdHZhciBuYW1lc3BhY2UgPSBlbGVtLm5hbWVzcGFjZVVSSSxcblx0XHRkb2NFbGVtID0gKGVsZW0ub3duZXJEb2N1bWVudCB8fCBlbGVtKS5kb2N1bWVudEVsZW1lbnQ7XG5cblx0Ly8gU3VwcG9ydDogSUUgPD04XG5cdC8vIEFzc3VtZSBIVE1MIHdoZW4gZG9jdW1lbnRFbGVtZW50IGRvZXNuJ3QgeWV0IGV4aXN0LCBzdWNoIGFzIGluc2lkZSBsb2FkaW5nIGlmcmFtZXNcblx0Ly8gaHR0cHM6Ly9idWdzLmpxdWVyeS5jb20vdGlja2V0LzQ4MzNcblx0cmV0dXJuICFyaHRtbC50ZXN0KCBuYW1lc3BhY2UgfHwgZG9jRWxlbSAmJiBkb2NFbGVtLm5vZGVOYW1lIHx8IFwiSFRNTFwiICk7XG59O1xuXG4vKipcbiAqIFNldHMgZG9jdW1lbnQtcmVsYXRlZCB2YXJpYWJsZXMgb25jZSBiYXNlZCBvbiB0aGUgY3VycmVudCBkb2N1bWVudFxuICogQHBhcmFtIHtFbGVtZW50fE9iamVjdH0gW2RvY10gQW4gZWxlbWVudCBvciBkb2N1bWVudCBvYmplY3QgdG8gdXNlIHRvIHNldCB0aGUgZG9jdW1lbnRcbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGN1cnJlbnQgZG9jdW1lbnRcbiAqL1xuc2V0RG9jdW1lbnQgPSBTaXp6bGUuc2V0RG9jdW1lbnQgPSBmdW5jdGlvbiggbm9kZSApIHtcblx0dmFyIGhhc0NvbXBhcmUsIHN1YldpbmRvdyxcblx0XHRkb2MgPSBub2RlID8gbm9kZS5vd25lckRvY3VtZW50IHx8IG5vZGUgOiBwcmVmZXJyZWREb2M7XG5cblx0Ly8gUmV0dXJuIGVhcmx5IGlmIGRvYyBpcyBpbnZhbGlkIG9yIGFscmVhZHkgc2VsZWN0ZWRcblx0aWYgKCBkb2MgPT09IGRvY3VtZW50IHx8IGRvYy5ub2RlVHlwZSAhPT0gOSB8fCAhZG9jLmRvY3VtZW50RWxlbWVudCApIHtcblx0XHRyZXR1cm4gZG9jdW1lbnQ7XG5cdH1cblxuXHQvLyBVcGRhdGUgZ2xvYmFsIHZhcmlhYmxlc1xuXHRkb2N1bWVudCA9IGRvYztcblx0ZG9jRWxlbSA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcblx0ZG9jdW1lbnRJc0hUTUwgPSAhaXNYTUwoIGRvY3VtZW50ICk7XG5cblx0Ly8gU3VwcG9ydDogSUUgOS0xMSwgRWRnZVxuXHQvLyBBY2Nlc3NpbmcgaWZyYW1lIGRvY3VtZW50cyBhZnRlciB1bmxvYWQgdGhyb3dzIFwicGVybWlzc2lvbiBkZW5pZWRcIiBlcnJvcnMgKGpRdWVyeSAjMTM5MzYpXG5cdGlmICggcHJlZmVycmVkRG9jICE9PSBkb2N1bWVudCAmJlxuXHRcdChzdWJXaW5kb3cgPSBkb2N1bWVudC5kZWZhdWx0VmlldykgJiYgc3ViV2luZG93LnRvcCAhPT0gc3ViV2luZG93ICkge1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgMTEsIEVkZ2Vcblx0XHRpZiAoIHN1YldpbmRvdy5hZGRFdmVudExpc3RlbmVyICkge1xuXHRcdFx0c3ViV2luZG93LmFkZEV2ZW50TGlzdGVuZXIoIFwidW5sb2FkXCIsIHVubG9hZEhhbmRsZXIsIGZhbHNlICk7XG5cblx0XHQvLyBTdXBwb3J0OiBJRSA5IC0gMTAgb25seVxuXHRcdH0gZWxzZSBpZiAoIHN1YldpbmRvdy5hdHRhY2hFdmVudCApIHtcblx0XHRcdHN1YldpbmRvdy5hdHRhY2hFdmVudCggXCJvbnVubG9hZFwiLCB1bmxvYWRIYW5kbGVyICk7XG5cdFx0fVxuXHR9XG5cblx0LyogQXR0cmlidXRlc1xuXHQtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cblx0Ly8gU3VwcG9ydDogSUU8OFxuXHQvLyBWZXJpZnkgdGhhdCBnZXRBdHRyaWJ1dGUgcmVhbGx5IHJldHVybnMgYXR0cmlidXRlcyBhbmQgbm90IHByb3BlcnRpZXNcblx0Ly8gKGV4Y2VwdGluZyBJRTggYm9vbGVhbnMpXG5cdHN1cHBvcnQuYXR0cmlidXRlcyA9IGFzc2VydChmdW5jdGlvbiggZWwgKSB7XG5cdFx0ZWwuY2xhc3NOYW1lID0gXCJpXCI7XG5cdFx0cmV0dXJuICFlbC5nZXRBdHRyaWJ1dGUoXCJjbGFzc05hbWVcIik7XG5cdH0pO1xuXG5cdC8qIGdldEVsZW1lbnQocylCeSpcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5cdC8vIENoZWNrIGlmIGdldEVsZW1lbnRzQnlUYWdOYW1lKFwiKlwiKSByZXR1cm5zIG9ubHkgZWxlbWVudHNcblx0c3VwcG9ydC5nZXRFbGVtZW50c0J5VGFnTmFtZSA9IGFzc2VydChmdW5jdGlvbiggZWwgKSB7XG5cdFx0ZWwuYXBwZW5kQ2hpbGQoIGRvY3VtZW50LmNyZWF0ZUNvbW1lbnQoXCJcIikgKTtcblx0XHRyZXR1cm4gIWVsLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiKlwiKS5sZW5ndGg7XG5cdH0pO1xuXG5cdC8vIFN1cHBvcnQ6IElFPDlcblx0c3VwcG9ydC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lID0gcm5hdGl2ZS50ZXN0KCBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lICk7XG5cblx0Ly8gU3VwcG9ydDogSUU8MTBcblx0Ly8gQ2hlY2sgaWYgZ2V0RWxlbWVudEJ5SWQgcmV0dXJucyBlbGVtZW50cyBieSBuYW1lXG5cdC8vIFRoZSBicm9rZW4gZ2V0RWxlbWVudEJ5SWQgbWV0aG9kcyBkb24ndCBwaWNrIHVwIHByb2dyYW1tYXRpY2FsbHktc2V0IG5hbWVzLFxuXHQvLyBzbyB1c2UgYSByb3VuZGFib3V0IGdldEVsZW1lbnRzQnlOYW1lIHRlc3Rcblx0c3VwcG9ydC5nZXRCeUlkID0gYXNzZXJ0KGZ1bmN0aW9uKCBlbCApIHtcblx0XHRkb2NFbGVtLmFwcGVuZENoaWxkKCBlbCApLmlkID0gZXhwYW5kbztcblx0XHRyZXR1cm4gIWRvY3VtZW50LmdldEVsZW1lbnRzQnlOYW1lIHx8ICFkb2N1bWVudC5nZXRFbGVtZW50c0J5TmFtZSggZXhwYW5kbyApLmxlbmd0aDtcblx0fSk7XG5cblx0Ly8gSUQgZmlsdGVyIGFuZCBmaW5kXG5cdGlmICggc3VwcG9ydC5nZXRCeUlkICkge1xuXHRcdEV4cHIuZmlsdGVyW1wiSURcIl0gPSBmdW5jdGlvbiggaWQgKSB7XG5cdFx0XHR2YXIgYXR0cklkID0gaWQucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKTtcblx0XHRcdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0cmV0dXJuIGVsZW0uZ2V0QXR0cmlidXRlKFwiaWRcIikgPT09IGF0dHJJZDtcblx0XHRcdH07XG5cdFx0fTtcblx0XHRFeHByLmZpbmRbXCJJRFwiXSA9IGZ1bmN0aW9uKCBpZCwgY29udGV4dCApIHtcblx0XHRcdGlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQgIT09IFwidW5kZWZpbmVkXCIgJiYgZG9jdW1lbnRJc0hUTUwgKSB7XG5cdFx0XHRcdHZhciBlbGVtID0gY29udGV4dC5nZXRFbGVtZW50QnlJZCggaWQgKTtcblx0XHRcdFx0cmV0dXJuIGVsZW0gPyBbIGVsZW0gXSA6IFtdO1xuXHRcdFx0fVxuXHRcdH07XG5cdH0gZWxzZSB7XG5cdFx0RXhwci5maWx0ZXJbXCJJRFwiXSA9ICBmdW5jdGlvbiggaWQgKSB7XG5cdFx0XHR2YXIgYXR0cklkID0gaWQucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKTtcblx0XHRcdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0dmFyIG5vZGUgPSB0eXBlb2YgZWxlbS5nZXRBdHRyaWJ1dGVOb2RlICE9PSBcInVuZGVmaW5lZFwiICYmXG5cdFx0XHRcdFx0ZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKFwiaWRcIik7XG5cdFx0XHRcdHJldHVybiBub2RlICYmIG5vZGUudmFsdWUgPT09IGF0dHJJZDtcblx0XHRcdH07XG5cdFx0fTtcblxuXHRcdC8vIFN1cHBvcnQ6IElFIDYgLSA3IG9ubHlcblx0XHQvLyBnZXRFbGVtZW50QnlJZCBpcyBub3QgcmVsaWFibGUgYXMgYSBmaW5kIHNob3J0Y3V0XG5cdFx0RXhwci5maW5kW1wiSURcIl0gPSBmdW5jdGlvbiggaWQsIGNvbnRleHQgKSB7XG5cdFx0XHRpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRCeUlkICE9PSBcInVuZGVmaW5lZFwiICYmIGRvY3VtZW50SXNIVE1MICkge1xuXHRcdFx0XHR2YXIgbm9kZSwgaSwgZWxlbXMsXG5cdFx0XHRcdFx0ZWxlbSA9IGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQoIGlkICk7XG5cblx0XHRcdFx0aWYgKCBlbGVtICkge1xuXG5cdFx0XHRcdFx0Ly8gVmVyaWZ5IHRoZSBpZCBhdHRyaWJ1dGVcblx0XHRcdFx0XHRub2RlID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKFwiaWRcIik7XG5cdFx0XHRcdFx0aWYgKCBub2RlICYmIG5vZGUudmFsdWUgPT09IGlkICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIFsgZWxlbSBdO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIEZhbGwgYmFjayBvbiBnZXRFbGVtZW50c0J5TmFtZVxuXHRcdFx0XHRcdGVsZW1zID0gY29udGV4dC5nZXRFbGVtZW50c0J5TmFtZSggaWQgKTtcblx0XHRcdFx0XHRpID0gMDtcblx0XHRcdFx0XHR3aGlsZSAoIChlbGVtID0gZWxlbXNbaSsrXSkgKSB7XG5cdFx0XHRcdFx0XHRub2RlID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKFwiaWRcIik7XG5cdFx0XHRcdFx0XHRpZiAoIG5vZGUgJiYgbm9kZS52YWx1ZSA9PT0gaWQgKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBbIGVsZW0gXTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gW107XG5cdFx0XHR9XG5cdFx0fTtcblx0fVxuXG5cdC8vIFRhZ1xuXHRFeHByLmZpbmRbXCJUQUdcIl0gPSBzdXBwb3J0LmdldEVsZW1lbnRzQnlUYWdOYW1lID9cblx0XHRmdW5jdGlvbiggdGFnLCBjb250ZXh0ICkge1xuXHRcdFx0aWYgKCB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSAhPT0gXCJ1bmRlZmluZWRcIiApIHtcblx0XHRcdFx0cmV0dXJuIGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIHRhZyApO1xuXG5cdFx0XHQvLyBEb2N1bWVudEZyYWdtZW50IG5vZGVzIGRvbid0IGhhdmUgZ0VCVE5cblx0XHRcdH0gZWxzZSBpZiAoIHN1cHBvcnQucXNhICkge1xuXHRcdFx0XHRyZXR1cm4gY29udGV4dC5xdWVyeVNlbGVjdG9yQWxsKCB0YWcgKTtcblx0XHRcdH1cblx0XHR9IDpcblxuXHRcdGZ1bmN0aW9uKCB0YWcsIGNvbnRleHQgKSB7XG5cdFx0XHR2YXIgZWxlbSxcblx0XHRcdFx0dG1wID0gW10sXG5cdFx0XHRcdGkgPSAwLFxuXHRcdFx0XHQvLyBCeSBoYXBweSBjb2luY2lkZW5jZSwgYSAoYnJva2VuKSBnRUJUTiBhcHBlYXJzIG9uIERvY3VtZW50RnJhZ21lbnQgbm9kZXMgdG9vXG5cdFx0XHRcdHJlc3VsdHMgPSBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCB0YWcgKTtcblxuXHRcdFx0Ly8gRmlsdGVyIG91dCBwb3NzaWJsZSBjb21tZW50c1xuXHRcdFx0aWYgKCB0YWcgPT09IFwiKlwiICkge1xuXHRcdFx0XHR3aGlsZSAoIChlbGVtID0gcmVzdWx0c1tpKytdKSApIHtcblx0XHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0XHRcdFx0XHR0bXAucHVzaCggZWxlbSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiB0bXA7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHR9O1xuXG5cdC8vIENsYXNzXG5cdEV4cHIuZmluZFtcIkNMQVNTXCJdID0gc3VwcG9ydC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lICYmIGZ1bmN0aW9uKCBjbGFzc05hbWUsIGNvbnRleHQgKSB7XG5cdFx0aWYgKCB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lICE9PSBcInVuZGVmaW5lZFwiICYmIGRvY3VtZW50SXNIVE1MICkge1xuXHRcdFx0cmV0dXJuIGNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSggY2xhc3NOYW1lICk7XG5cdFx0fVxuXHR9O1xuXG5cdC8qIFFTQS9tYXRjaGVzU2VsZWN0b3Jcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5cdC8vIFFTQSBhbmQgbWF0Y2hlc1NlbGVjdG9yIHN1cHBvcnRcblxuXHQvLyBtYXRjaGVzU2VsZWN0b3IoOmFjdGl2ZSkgcmVwb3J0cyBmYWxzZSB3aGVuIHRydWUgKElFOS9PcGVyYSAxMS41KVxuXHRyYnVnZ3lNYXRjaGVzID0gW107XG5cblx0Ly8gcVNhKDpmb2N1cykgcmVwb3J0cyBmYWxzZSB3aGVuIHRydWUgKENocm9tZSAyMSlcblx0Ly8gV2UgYWxsb3cgdGhpcyBiZWNhdXNlIG9mIGEgYnVnIGluIElFOC85IHRoYXQgdGhyb3dzIGFuIGVycm9yXG5cdC8vIHdoZW5ldmVyIGBkb2N1bWVudC5hY3RpdmVFbGVtZW50YCBpcyBhY2Nlc3NlZCBvbiBhbiBpZnJhbWVcblx0Ly8gU28sIHdlIGFsbG93IDpmb2N1cyB0byBwYXNzIHRocm91Z2ggUVNBIGFsbCB0aGUgdGltZSB0byBhdm9pZCB0aGUgSUUgZXJyb3Jcblx0Ly8gU2VlIGh0dHBzOi8vYnVncy5qcXVlcnkuY29tL3RpY2tldC8xMzM3OFxuXHRyYnVnZ3lRU0EgPSBbXTtcblxuXHRpZiAoIChzdXBwb3J0LnFzYSA9IHJuYXRpdmUudGVzdCggZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCApKSApIHtcblx0XHQvLyBCdWlsZCBRU0EgcmVnZXhcblx0XHQvLyBSZWdleCBzdHJhdGVneSBhZG9wdGVkIGZyb20gRGllZ28gUGVyaW5pXG5cdFx0YXNzZXJ0KGZ1bmN0aW9uKCBlbCApIHtcblx0XHRcdC8vIFNlbGVjdCBpcyBzZXQgdG8gZW1wdHkgc3RyaW5nIG9uIHB1cnBvc2Vcblx0XHRcdC8vIFRoaXMgaXMgdG8gdGVzdCBJRSdzIHRyZWF0bWVudCBvZiBub3QgZXhwbGljaXRseVxuXHRcdFx0Ly8gc2V0dGluZyBhIGJvb2xlYW4gY29udGVudCBhdHRyaWJ1dGUsXG5cdFx0XHQvLyBzaW5jZSBpdHMgcHJlc2VuY2Ugc2hvdWxkIGJlIGVub3VnaFxuXHRcdFx0Ly8gaHR0cHM6Ly9idWdzLmpxdWVyeS5jb20vdGlja2V0LzEyMzU5XG5cdFx0XHRkb2NFbGVtLmFwcGVuZENoaWxkKCBlbCApLmlubmVySFRNTCA9IFwiPGEgaWQ9J1wiICsgZXhwYW5kbyArIFwiJz48L2E+XCIgK1xuXHRcdFx0XHRcIjxzZWxlY3QgaWQ9J1wiICsgZXhwYW5kbyArIFwiLVxcclxcXFwnIG1zYWxsb3djYXB0dXJlPScnPlwiICtcblx0XHRcdFx0XCI8b3B0aW9uIHNlbGVjdGVkPScnPjwvb3B0aW9uPjwvc2VsZWN0PlwiO1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRTgsIE9wZXJhIDExLTEyLjE2XG5cdFx0XHQvLyBOb3RoaW5nIHNob3VsZCBiZSBzZWxlY3RlZCB3aGVuIGVtcHR5IHN0cmluZ3MgZm9sbG93IF49IG9yICQ9IG9yICo9XG5cdFx0XHQvLyBUaGUgdGVzdCBhdHRyaWJ1dGUgbXVzdCBiZSB1bmtub3duIGluIE9wZXJhIGJ1dCBcInNhZmVcIiBmb3IgV2luUlRcblx0XHRcdC8vIGh0dHBzOi8vbXNkbi5taWNyb3NvZnQuY29tL2VuLXVzL2xpYnJhcnkvaWUvaGg0NjUzODguYXNweCNhdHRyaWJ1dGVfc2VjdGlvblxuXHRcdFx0aWYgKCBlbC5xdWVyeVNlbGVjdG9yQWxsKFwiW21zYWxsb3djYXB0dXJlXj0nJ11cIikubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCJbKl4kXT1cIiArIHdoaXRlc3BhY2UgKyBcIiooPzonJ3xcXFwiXFxcIilcIiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRThcblx0XHRcdC8vIEJvb2xlYW4gYXR0cmlidXRlcyBhbmQgXCJ2YWx1ZVwiIGFyZSBub3QgdHJlYXRlZCBjb3JyZWN0bHlcblx0XHRcdGlmICggIWVsLnF1ZXJ5U2VsZWN0b3JBbGwoXCJbc2VsZWN0ZWRdXCIpLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiXFxcXFtcIiArIHdoaXRlc3BhY2UgKyBcIiooPzp2YWx1ZXxcIiArIGJvb2xlYW5zICsgXCIpXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogQ2hyb21lPDI5LCBBbmRyb2lkPDQuNCwgU2FmYXJpPDcuMCssIGlPUzw3LjArLCBQaGFudG9tSlM8MS45LjgrXG5cdFx0XHRpZiAoICFlbC5xdWVyeVNlbGVjdG9yQWxsKCBcIltpZH49XCIgKyBleHBhbmRvICsgXCItXVwiICkubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaChcIn49XCIpO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBXZWJraXQvT3BlcmEgLSA6Y2hlY2tlZCBzaG91bGQgcmV0dXJuIHNlbGVjdGVkIG9wdGlvbiBlbGVtZW50c1xuXHRcdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvMjAxMS9SRUMtY3NzMy1zZWxlY3RvcnMtMjAxMTA5MjkvI2NoZWNrZWRcblx0XHRcdC8vIElFOCB0aHJvd3MgZXJyb3IgaGVyZSBhbmQgd2lsbCBub3Qgc2VlIGxhdGVyIHRlc3RzXG5cdFx0XHRpZiAoICFlbC5xdWVyeVNlbGVjdG9yQWxsKFwiOmNoZWNrZWRcIikubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaChcIjpjaGVja2VkXCIpO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdXBwb3J0OiBTYWZhcmkgOCssIGlPUyA4K1xuXHRcdFx0Ly8gaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTEzNjg1MVxuXHRcdFx0Ly8gSW4tcGFnZSBgc2VsZWN0b3IjaWQgc2libGluZy1jb21iaW5hdG9yIHNlbGVjdG9yYCBmYWlsc1xuXHRcdFx0aWYgKCAhZWwucXVlcnlTZWxlY3RvckFsbCggXCJhI1wiICsgZXhwYW5kbyArIFwiKypcIiApLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goXCIuIy4rWyt+XVwiKTtcblx0XHRcdH1cblx0XHR9KTtcblxuXHRcdGFzc2VydChmdW5jdGlvbiggZWwgKSB7XG5cdFx0XHRlbC5pbm5lckhUTUwgPSBcIjxhIGhyZWY9JycgZGlzYWJsZWQ9J2Rpc2FibGVkJz48L2E+XCIgK1xuXHRcdFx0XHRcIjxzZWxlY3QgZGlzYWJsZWQ9J2Rpc2FibGVkJz48b3B0aW9uLz48L3NlbGVjdD5cIjtcblxuXHRcdFx0Ly8gU3VwcG9ydDogV2luZG93cyA4IE5hdGl2ZSBBcHBzXG5cdFx0XHQvLyBUaGUgdHlwZSBhbmQgbmFtZSBhdHRyaWJ1dGVzIGFyZSByZXN0cmljdGVkIGR1cmluZyAuaW5uZXJIVE1MIGFzc2lnbm1lbnRcblx0XHRcdHZhciBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcblx0XHRcdGlucHV0LnNldEF0dHJpYnV0ZSggXCJ0eXBlXCIsIFwiaGlkZGVuXCIgKTtcblx0XHRcdGVsLmFwcGVuZENoaWxkKCBpbnB1dCApLnNldEF0dHJpYnV0ZSggXCJuYW1lXCIsIFwiRFwiICk7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFOFxuXHRcdFx0Ly8gRW5mb3JjZSBjYXNlLXNlbnNpdGl2aXR5IG9mIG5hbWUgYXR0cmlidXRlXG5cdFx0XHRpZiAoIGVsLnF1ZXJ5U2VsZWN0b3JBbGwoXCJbbmFtZT1kXVwiKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIm5hbWVcIiArIHdoaXRlc3BhY2UgKyBcIipbKl4kfCF+XT89XCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gRkYgMy41IC0gOmVuYWJsZWQvOmRpc2FibGVkIGFuZCBoaWRkZW4gZWxlbWVudHMgKGhpZGRlbiBlbGVtZW50cyBhcmUgc3RpbGwgZW5hYmxlZClcblx0XHRcdC8vIElFOCB0aHJvd3MgZXJyb3IgaGVyZSBhbmQgd2lsbCBub3Qgc2VlIGxhdGVyIHRlc3RzXG5cdFx0XHRpZiAoIGVsLnF1ZXJ5U2VsZWN0b3JBbGwoXCI6ZW5hYmxlZFwiKS5sZW5ndGggIT09IDIgKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIjplbmFibGVkXCIsIFwiOmRpc2FibGVkXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogSUU5LTExK1xuXHRcdFx0Ly8gSUUncyA6ZGlzYWJsZWQgc2VsZWN0b3IgZG9lcyBub3QgcGljayB1cCB0aGUgY2hpbGRyZW4gb2YgZGlzYWJsZWQgZmllbGRzZXRzXG5cdFx0XHRkb2NFbGVtLmFwcGVuZENoaWxkKCBlbCApLmRpc2FibGVkID0gdHJ1ZTtcblx0XHRcdGlmICggZWwucXVlcnlTZWxlY3RvckFsbChcIjpkaXNhYmxlZFwiKS5sZW5ndGggIT09IDIgKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIjplbmFibGVkXCIsIFwiOmRpc2FibGVkXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gT3BlcmEgMTAtMTEgZG9lcyBub3QgdGhyb3cgb24gcG9zdC1jb21tYSBpbnZhbGlkIHBzZXVkb3Ncblx0XHRcdGVsLnF1ZXJ5U2VsZWN0b3JBbGwoXCIqLDp4XCIpO1xuXHRcdFx0cmJ1Z2d5UVNBLnB1c2goXCIsLio6XCIpO1xuXHRcdH0pO1xuXHR9XG5cblx0aWYgKCAoc3VwcG9ydC5tYXRjaGVzU2VsZWN0b3IgPSBybmF0aXZlLnRlc3QoIChtYXRjaGVzID0gZG9jRWxlbS5tYXRjaGVzIHx8XG5cdFx0ZG9jRWxlbS53ZWJraXRNYXRjaGVzU2VsZWN0b3IgfHxcblx0XHRkb2NFbGVtLm1vek1hdGNoZXNTZWxlY3RvciB8fFxuXHRcdGRvY0VsZW0ub01hdGNoZXNTZWxlY3RvciB8fFxuXHRcdGRvY0VsZW0ubXNNYXRjaGVzU2VsZWN0b3IpICkpICkge1xuXG5cdFx0YXNzZXJ0KGZ1bmN0aW9uKCBlbCApIHtcblx0XHRcdC8vIENoZWNrIHRvIHNlZSBpZiBpdCdzIHBvc3NpYmxlIHRvIGRvIG1hdGNoZXNTZWxlY3RvclxuXHRcdFx0Ly8gb24gYSBkaXNjb25uZWN0ZWQgbm9kZSAoSUUgOSlcblx0XHRcdHN1cHBvcnQuZGlzY29ubmVjdGVkTWF0Y2ggPSBtYXRjaGVzLmNhbGwoIGVsLCBcIipcIiApO1xuXG5cdFx0XHQvLyBUaGlzIHNob3VsZCBmYWlsIHdpdGggYW4gZXhjZXB0aW9uXG5cdFx0XHQvLyBHZWNrbyBkb2VzIG5vdCBlcnJvciwgcmV0dXJucyBmYWxzZSBpbnN0ZWFkXG5cdFx0XHRtYXRjaGVzLmNhbGwoIGVsLCBcIltzIT0nJ106eFwiICk7XG5cdFx0XHRyYnVnZ3lNYXRjaGVzLnB1c2goIFwiIT1cIiwgcHNldWRvcyApO1xuXHRcdH0pO1xuXHR9XG5cblx0cmJ1Z2d5UVNBID0gcmJ1Z2d5UVNBLmxlbmd0aCAmJiBuZXcgUmVnRXhwKCByYnVnZ3lRU0Euam9pbihcInxcIikgKTtcblx0cmJ1Z2d5TWF0Y2hlcyA9IHJidWdneU1hdGNoZXMubGVuZ3RoICYmIG5ldyBSZWdFeHAoIHJidWdneU1hdGNoZXMuam9pbihcInxcIikgKTtcblxuXHQvKiBDb250YWluc1xuXHQtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cdGhhc0NvbXBhcmUgPSBybmF0aXZlLnRlc3QoIGRvY0VsZW0uY29tcGFyZURvY3VtZW50UG9zaXRpb24gKTtcblxuXHQvLyBFbGVtZW50IGNvbnRhaW5zIGFub3RoZXJcblx0Ly8gUHVycG9zZWZ1bGx5IHNlbGYtZXhjbHVzaXZlXG5cdC8vIEFzIGluLCBhbiBlbGVtZW50IGRvZXMgbm90IGNvbnRhaW4gaXRzZWxmXG5cdGNvbnRhaW5zID0gaGFzQ29tcGFyZSB8fCBybmF0aXZlLnRlc3QoIGRvY0VsZW0uY29udGFpbnMgKSA/XG5cdFx0ZnVuY3Rpb24oIGEsIGIgKSB7XG5cdFx0XHR2YXIgYWRvd24gPSBhLm5vZGVUeXBlID09PSA5ID8gYS5kb2N1bWVudEVsZW1lbnQgOiBhLFxuXHRcdFx0XHRidXAgPSBiICYmIGIucGFyZW50Tm9kZTtcblx0XHRcdHJldHVybiBhID09PSBidXAgfHwgISEoIGJ1cCAmJiBidXAubm9kZVR5cGUgPT09IDEgJiYgKFxuXHRcdFx0XHRhZG93bi5jb250YWlucyA/XG5cdFx0XHRcdFx0YWRvd24uY29udGFpbnMoIGJ1cCApIDpcblx0XHRcdFx0XHRhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uICYmIGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oIGJ1cCApICYgMTZcblx0XHRcdCkpO1xuXHRcdH0gOlxuXHRcdGZ1bmN0aW9uKCBhLCBiICkge1xuXHRcdFx0aWYgKCBiICkge1xuXHRcdFx0XHR3aGlsZSAoIChiID0gYi5wYXJlbnROb2RlKSApIHtcblx0XHRcdFx0XHRpZiAoIGIgPT09IGEgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9O1xuXG5cdC8qIFNvcnRpbmdcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5cdC8vIERvY3VtZW50IG9yZGVyIHNvcnRpbmdcblx0c29ydE9yZGVyID0gaGFzQ29tcGFyZSA/XG5cdGZ1bmN0aW9uKCBhLCBiICkge1xuXG5cdFx0Ly8gRmxhZyBmb3IgZHVwbGljYXRlIHJlbW92YWxcblx0XHRpZiAoIGEgPT09IGIgKSB7XG5cdFx0XHRoYXNEdXBsaWNhdGUgPSB0cnVlO1xuXHRcdFx0cmV0dXJuIDA7XG5cdFx0fVxuXG5cdFx0Ly8gU29ydCBvbiBtZXRob2QgZXhpc3RlbmNlIGlmIG9ubHkgb25lIGlucHV0IGhhcyBjb21wYXJlRG9jdW1lbnRQb3NpdGlvblxuXHRcdHZhciBjb21wYXJlID0gIWEuY29tcGFyZURvY3VtZW50UG9zaXRpb24gLSAhYi5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbjtcblx0XHRpZiAoIGNvbXBhcmUgKSB7XG5cdFx0XHRyZXR1cm4gY29tcGFyZTtcblx0XHR9XG5cblx0XHQvLyBDYWxjdWxhdGUgcG9zaXRpb24gaWYgYm90aCBpbnB1dHMgYmVsb25nIHRvIHRoZSBzYW1lIGRvY3VtZW50XG5cdFx0Y29tcGFyZSA9ICggYS5vd25lckRvY3VtZW50IHx8IGEgKSA9PT0gKCBiLm93bmVyRG9jdW1lbnQgfHwgYiApID9cblx0XHRcdGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oIGIgKSA6XG5cblx0XHRcdC8vIE90aGVyd2lzZSB3ZSBrbm93IHRoZXkgYXJlIGRpc2Nvbm5lY3RlZFxuXHRcdFx0MTtcblxuXHRcdC8vIERpc2Nvbm5lY3RlZCBub2Rlc1xuXHRcdGlmICggY29tcGFyZSAmIDEgfHxcblx0XHRcdCghc3VwcG9ydC5zb3J0RGV0YWNoZWQgJiYgYi5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiggYSApID09PSBjb21wYXJlKSApIHtcblxuXHRcdFx0Ly8gQ2hvb3NlIHRoZSBmaXJzdCBlbGVtZW50IHRoYXQgaXMgcmVsYXRlZCB0byBvdXIgcHJlZmVycmVkIGRvY3VtZW50XG5cdFx0XHRpZiAoIGEgPT09IGRvY3VtZW50IHx8IGEub3duZXJEb2N1bWVudCA9PT0gcHJlZmVycmVkRG9jICYmIGNvbnRhaW5zKHByZWZlcnJlZERvYywgYSkgKSB7XG5cdFx0XHRcdHJldHVybiAtMTtcblx0XHRcdH1cblx0XHRcdGlmICggYiA9PT0gZG9jdW1lbnQgfHwgYi5vd25lckRvY3VtZW50ID09PSBwcmVmZXJyZWREb2MgJiYgY29udGFpbnMocHJlZmVycmVkRG9jLCBiKSApIHtcblx0XHRcdFx0cmV0dXJuIDE7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE1haW50YWluIG9yaWdpbmFsIG9yZGVyXG5cdFx0XHRyZXR1cm4gc29ydElucHV0ID9cblx0XHRcdFx0KCBpbmRleE9mKCBzb3J0SW5wdXQsIGEgKSAtIGluZGV4T2YoIHNvcnRJbnB1dCwgYiApICkgOlxuXHRcdFx0XHQwO1xuXHRcdH1cblxuXHRcdHJldHVybiBjb21wYXJlICYgNCA/IC0xIDogMTtcblx0fSA6XG5cdGZ1bmN0aW9uKCBhLCBiICkge1xuXHRcdC8vIEV4aXQgZWFybHkgaWYgdGhlIG5vZGVzIGFyZSBpZGVudGljYWxcblx0XHRpZiAoIGEgPT09IGIgKSB7XG5cdFx0XHRoYXNEdXBsaWNhdGUgPSB0cnVlO1xuXHRcdFx0cmV0dXJuIDA7XG5cdFx0fVxuXG5cdFx0dmFyIGN1cixcblx0XHRcdGkgPSAwLFxuXHRcdFx0YXVwID0gYS5wYXJlbnROb2RlLFxuXHRcdFx0YnVwID0gYi5wYXJlbnROb2RlLFxuXHRcdFx0YXAgPSBbIGEgXSxcblx0XHRcdGJwID0gWyBiIF07XG5cblx0XHQvLyBQYXJlbnRsZXNzIG5vZGVzIGFyZSBlaXRoZXIgZG9jdW1lbnRzIG9yIGRpc2Nvbm5lY3RlZFxuXHRcdGlmICggIWF1cCB8fCAhYnVwICkge1xuXHRcdFx0cmV0dXJuIGEgPT09IGRvY3VtZW50ID8gLTEgOlxuXHRcdFx0XHRiID09PSBkb2N1bWVudCA/IDEgOlxuXHRcdFx0XHRhdXAgPyAtMSA6XG5cdFx0XHRcdGJ1cCA/IDEgOlxuXHRcdFx0XHRzb3J0SW5wdXQgP1xuXHRcdFx0XHQoIGluZGV4T2YoIHNvcnRJbnB1dCwgYSApIC0gaW5kZXhPZiggc29ydElucHV0LCBiICkgKSA6XG5cdFx0XHRcdDA7XG5cblx0XHQvLyBJZiB0aGUgbm9kZXMgYXJlIHNpYmxpbmdzLCB3ZSBjYW4gZG8gYSBxdWljayBjaGVja1xuXHRcdH0gZWxzZSBpZiAoIGF1cCA9PT0gYnVwICkge1xuXHRcdFx0cmV0dXJuIHNpYmxpbmdDaGVjayggYSwgYiApO1xuXHRcdH1cblxuXHRcdC8vIE90aGVyd2lzZSB3ZSBuZWVkIGZ1bGwgbGlzdHMgb2YgdGhlaXIgYW5jZXN0b3JzIGZvciBjb21wYXJpc29uXG5cdFx0Y3VyID0gYTtcblx0XHR3aGlsZSAoIChjdXIgPSBjdXIucGFyZW50Tm9kZSkgKSB7XG5cdFx0XHRhcC51bnNoaWZ0KCBjdXIgKTtcblx0XHR9XG5cdFx0Y3VyID0gYjtcblx0XHR3aGlsZSAoIChjdXIgPSBjdXIucGFyZW50Tm9kZSkgKSB7XG5cdFx0XHRicC51bnNoaWZ0KCBjdXIgKTtcblx0XHR9XG5cblx0XHQvLyBXYWxrIGRvd24gdGhlIHRyZWUgbG9va2luZyBmb3IgYSBkaXNjcmVwYW5jeVxuXHRcdHdoaWxlICggYXBbaV0gPT09IGJwW2ldICkge1xuXHRcdFx0aSsrO1xuXHRcdH1cblxuXHRcdHJldHVybiBpID9cblx0XHRcdC8vIERvIGEgc2libGluZyBjaGVjayBpZiB0aGUgbm9kZXMgaGF2ZSBhIGNvbW1vbiBhbmNlc3RvclxuXHRcdFx0c2libGluZ0NoZWNrKCBhcFtpXSwgYnBbaV0gKSA6XG5cblx0XHRcdC8vIE90aGVyd2lzZSBub2RlcyBpbiBvdXIgZG9jdW1lbnQgc29ydCBmaXJzdFxuXHRcdFx0YXBbaV0gPT09IHByZWZlcnJlZERvYyA/IC0xIDpcblx0XHRcdGJwW2ldID09PSBwcmVmZXJyZWREb2MgPyAxIDpcblx0XHRcdDA7XG5cdH07XG5cblx0cmV0dXJuIGRvY3VtZW50O1xufTtcblxuU2l6emxlLm1hdGNoZXMgPSBmdW5jdGlvbiggZXhwciwgZWxlbWVudHMgKSB7XG5cdHJldHVybiBTaXp6bGUoIGV4cHIsIG51bGwsIG51bGwsIGVsZW1lbnRzICk7XG59O1xuXG5TaXp6bGUubWF0Y2hlc1NlbGVjdG9yID0gZnVuY3Rpb24oIGVsZW0sIGV4cHIgKSB7XG5cdC8vIFNldCBkb2N1bWVudCB2YXJzIGlmIG5lZWRlZFxuXHRpZiAoICggZWxlbS5vd25lckRvY3VtZW50IHx8IGVsZW0gKSAhPT0gZG9jdW1lbnQgKSB7XG5cdFx0c2V0RG9jdW1lbnQoIGVsZW0gKTtcblx0fVxuXG5cdGlmICggc3VwcG9ydC5tYXRjaGVzU2VsZWN0b3IgJiYgZG9jdW1lbnRJc0hUTUwgJiZcblx0XHQhbm9ubmF0aXZlU2VsZWN0b3JDYWNoZVsgZXhwciArIFwiIFwiIF0gJiZcblx0XHQoICFyYnVnZ3lNYXRjaGVzIHx8ICFyYnVnZ3lNYXRjaGVzLnRlc3QoIGV4cHIgKSApICYmXG5cdFx0KCAhcmJ1Z2d5UVNBICAgICB8fCAhcmJ1Z2d5UVNBLnRlc3QoIGV4cHIgKSApICkge1xuXG5cdFx0dHJ5IHtcblx0XHRcdHZhciByZXQgPSBtYXRjaGVzLmNhbGwoIGVsZW0sIGV4cHIgKTtcblxuXHRcdFx0Ly8gSUUgOSdzIG1hdGNoZXNTZWxlY3RvciByZXR1cm5zIGZhbHNlIG9uIGRpc2Nvbm5lY3RlZCBub2Rlc1xuXHRcdFx0aWYgKCByZXQgfHwgc3VwcG9ydC5kaXNjb25uZWN0ZWRNYXRjaCB8fFxuXHRcdFx0XHRcdC8vIEFzIHdlbGwsIGRpc2Nvbm5lY3RlZCBub2RlcyBhcmUgc2FpZCB0byBiZSBpbiBhIGRvY3VtZW50XG5cdFx0XHRcdFx0Ly8gZnJhZ21lbnQgaW4gSUUgOVxuXHRcdFx0XHRcdGVsZW0uZG9jdW1lbnQgJiYgZWxlbS5kb2N1bWVudC5ub2RlVHlwZSAhPT0gMTEgKSB7XG5cdFx0XHRcdHJldHVybiByZXQ7XG5cdFx0XHR9XG5cdFx0fSBjYXRjaCAoZSkge1xuXHRcdFx0bm9ubmF0aXZlU2VsZWN0b3JDYWNoZSggZXhwciwgdHJ1ZSApO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiBTaXp6bGUoIGV4cHIsIGRvY3VtZW50LCBudWxsLCBbIGVsZW0gXSApLmxlbmd0aCA+IDA7XG59O1xuXG5TaXp6bGUuY29udGFpbnMgPSBmdW5jdGlvbiggY29udGV4dCwgZWxlbSApIHtcblx0Ly8gU2V0IGRvY3VtZW50IHZhcnMgaWYgbmVlZGVkXG5cdGlmICggKCBjb250ZXh0Lm93bmVyRG9jdW1lbnQgfHwgY29udGV4dCApICE9PSBkb2N1bWVudCApIHtcblx0XHRzZXREb2N1bWVudCggY29udGV4dCApO1xuXHR9XG5cdHJldHVybiBjb250YWlucyggY29udGV4dCwgZWxlbSApO1xufTtcblxuU2l6emxlLmF0dHIgPSBmdW5jdGlvbiggZWxlbSwgbmFtZSApIHtcblx0Ly8gU2V0IGRvY3VtZW50IHZhcnMgaWYgbmVlZGVkXG5cdGlmICggKCBlbGVtLm93bmVyRG9jdW1lbnQgfHwgZWxlbSApICE9PSBkb2N1bWVudCApIHtcblx0XHRzZXREb2N1bWVudCggZWxlbSApO1xuXHR9XG5cblx0dmFyIGZuID0gRXhwci5hdHRySGFuZGxlWyBuYW1lLnRvTG93ZXJDYXNlKCkgXSxcblx0XHQvLyBEb24ndCBnZXQgZm9vbGVkIGJ5IE9iamVjdC5wcm90b3R5cGUgcHJvcGVydGllcyAoalF1ZXJ5ICMxMzgwNylcblx0XHR2YWwgPSBmbiAmJiBoYXNPd24uY2FsbCggRXhwci5hdHRySGFuZGxlLCBuYW1lLnRvTG93ZXJDYXNlKCkgKSA/XG5cdFx0XHRmbiggZWxlbSwgbmFtZSwgIWRvY3VtZW50SXNIVE1MICkgOlxuXHRcdFx0dW5kZWZpbmVkO1xuXG5cdHJldHVybiB2YWwgIT09IHVuZGVmaW5lZCA/XG5cdFx0dmFsIDpcblx0XHRzdXBwb3J0LmF0dHJpYnV0ZXMgfHwgIWRvY3VtZW50SXNIVE1MID9cblx0XHRcdGVsZW0uZ2V0QXR0cmlidXRlKCBuYW1lICkgOlxuXHRcdFx0KHZhbCA9IGVsZW0uZ2V0QXR0cmlidXRlTm9kZShuYW1lKSkgJiYgdmFsLnNwZWNpZmllZCA/XG5cdFx0XHRcdHZhbC52YWx1ZSA6XG5cdFx0XHRcdG51bGw7XG59O1xuXG5TaXp6bGUuZXNjYXBlID0gZnVuY3Rpb24oIHNlbCApIHtcblx0cmV0dXJuIChzZWwgKyBcIlwiKS5yZXBsYWNlKCByY3NzZXNjYXBlLCBmY3NzZXNjYXBlICk7XG59O1xuXG5TaXp6bGUuZXJyb3IgPSBmdW5jdGlvbiggbXNnICkge1xuXHR0aHJvdyBuZXcgRXJyb3IoIFwiU3ludGF4IGVycm9yLCB1bnJlY29nbml6ZWQgZXhwcmVzc2lvbjogXCIgKyBtc2cgKTtcbn07XG5cbi8qKlxuICogRG9jdW1lbnQgc29ydGluZyBhbmQgcmVtb3ZpbmcgZHVwbGljYXRlc1xuICogQHBhcmFtIHtBcnJheUxpa2V9IHJlc3VsdHNcbiAqL1xuU2l6emxlLnVuaXF1ZVNvcnQgPSBmdW5jdGlvbiggcmVzdWx0cyApIHtcblx0dmFyIGVsZW0sXG5cdFx0ZHVwbGljYXRlcyA9IFtdLFxuXHRcdGogPSAwLFxuXHRcdGkgPSAwO1xuXG5cdC8vIFVubGVzcyB3ZSAqa25vdyogd2UgY2FuIGRldGVjdCBkdXBsaWNhdGVzLCBhc3N1bWUgdGhlaXIgcHJlc2VuY2Vcblx0aGFzRHVwbGljYXRlID0gIXN1cHBvcnQuZGV0ZWN0RHVwbGljYXRlcztcblx0c29ydElucHV0ID0gIXN1cHBvcnQuc29ydFN0YWJsZSAmJiByZXN1bHRzLnNsaWNlKCAwICk7XG5cdHJlc3VsdHMuc29ydCggc29ydE9yZGVyICk7XG5cblx0aWYgKCBoYXNEdXBsaWNhdGUgKSB7XG5cdFx0d2hpbGUgKCAoZWxlbSA9IHJlc3VsdHNbaSsrXSkgKSB7XG5cdFx0XHRpZiAoIGVsZW0gPT09IHJlc3VsdHNbIGkgXSApIHtcblx0XHRcdFx0aiA9IGR1cGxpY2F0ZXMucHVzaCggaSApO1xuXHRcdFx0fVxuXHRcdH1cblx0XHR3aGlsZSAoIGotLSApIHtcblx0XHRcdHJlc3VsdHMuc3BsaWNlKCBkdXBsaWNhdGVzWyBqIF0sIDEgKTtcblx0XHR9XG5cdH1cblxuXHQvLyBDbGVhciBpbnB1dCBhZnRlciBzb3J0aW5nIHRvIHJlbGVhc2Ugb2JqZWN0c1xuXHQvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2pxdWVyeS9zaXp6bGUvcHVsbC8yMjVcblx0c29ydElucHV0ID0gbnVsbDtcblxuXHRyZXR1cm4gcmVzdWx0cztcbn07XG5cbi8qKlxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmV0cmlldmluZyB0aGUgdGV4dCB2YWx1ZSBvZiBhbiBhcnJheSBvZiBET00gbm9kZXNcbiAqIEBwYXJhbSB7QXJyYXl8RWxlbWVudH0gZWxlbVxuICovXG5nZXRUZXh0ID0gU2l6emxlLmdldFRleHQgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0dmFyIG5vZGUsXG5cdFx0cmV0ID0gXCJcIixcblx0XHRpID0gMCxcblx0XHRub2RlVHlwZSA9IGVsZW0ubm9kZVR5cGU7XG5cblx0aWYgKCAhbm9kZVR5cGUgKSB7XG5cdFx0Ly8gSWYgbm8gbm9kZVR5cGUsIHRoaXMgaXMgZXhwZWN0ZWQgdG8gYmUgYW4gYXJyYXlcblx0XHR3aGlsZSAoIChub2RlID0gZWxlbVtpKytdKSApIHtcblx0XHRcdC8vIERvIG5vdCB0cmF2ZXJzZSBjb21tZW50IG5vZGVzXG5cdFx0XHRyZXQgKz0gZ2V0VGV4dCggbm9kZSApO1xuXHRcdH1cblx0fSBlbHNlIGlmICggbm9kZVR5cGUgPT09IDEgfHwgbm9kZVR5cGUgPT09IDkgfHwgbm9kZVR5cGUgPT09IDExICkge1xuXHRcdC8vIFVzZSB0ZXh0Q29udGVudCBmb3IgZWxlbWVudHNcblx0XHQvLyBpbm5lclRleHQgdXNhZ2UgcmVtb3ZlZCBmb3IgY29uc2lzdGVuY3kgb2YgbmV3IGxpbmVzIChqUXVlcnkgIzExMTUzKVxuXHRcdGlmICggdHlwZW9mIGVsZW0udGV4dENvbnRlbnQgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS50ZXh0Q29udGVudDtcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gVHJhdmVyc2UgaXRzIGNoaWxkcmVuXG5cdFx0XHRmb3IgKCBlbGVtID0gZWxlbS5maXJzdENoaWxkOyBlbGVtOyBlbGVtID0gZWxlbS5uZXh0U2libGluZyApIHtcblx0XHRcdFx0cmV0ICs9IGdldFRleHQoIGVsZW0gKTtcblx0XHRcdH1cblx0XHR9XG5cdH0gZWxzZSBpZiAoIG5vZGVUeXBlID09PSAzIHx8IG5vZGVUeXBlID09PSA0ICkge1xuXHRcdHJldHVybiBlbGVtLm5vZGVWYWx1ZTtcblx0fVxuXHQvLyBEbyBub3QgaW5jbHVkZSBjb21tZW50IG9yIHByb2Nlc3NpbmcgaW5zdHJ1Y3Rpb24gbm9kZXNcblxuXHRyZXR1cm4gcmV0O1xufTtcblxuRXhwciA9IFNpenpsZS5zZWxlY3RvcnMgPSB7XG5cblx0Ly8gQ2FuIGJlIGFkanVzdGVkIGJ5IHRoZSB1c2VyXG5cdGNhY2hlTGVuZ3RoOiA1MCxcblxuXHRjcmVhdGVQc2V1ZG86IG1hcmtGdW5jdGlvbixcblxuXHRtYXRjaDogbWF0Y2hFeHByLFxuXG5cdGF0dHJIYW5kbGU6IHt9LFxuXG5cdGZpbmQ6IHt9LFxuXG5cdHJlbGF0aXZlOiB7XG5cdFx0XCI+XCI6IHsgZGlyOiBcInBhcmVudE5vZGVcIiwgZmlyc3Q6IHRydWUgfSxcblx0XHRcIiBcIjogeyBkaXI6IFwicGFyZW50Tm9kZVwiIH0sXG5cdFx0XCIrXCI6IHsgZGlyOiBcInByZXZpb3VzU2libGluZ1wiLCBmaXJzdDogdHJ1ZSB9LFxuXHRcdFwiflwiOiB7IGRpcjogXCJwcmV2aW91c1NpYmxpbmdcIiB9XG5cdH0sXG5cblx0cHJlRmlsdGVyOiB7XG5cdFx0XCJBVFRSXCI6IGZ1bmN0aW9uKCBtYXRjaCApIHtcblx0XHRcdG1hdGNoWzFdID0gbWF0Y2hbMV0ucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKTtcblxuXHRcdFx0Ly8gTW92ZSB0aGUgZ2l2ZW4gdmFsdWUgdG8gbWF0Y2hbM10gd2hldGhlciBxdW90ZWQgb3IgdW5xdW90ZWRcblx0XHRcdG1hdGNoWzNdID0gKCBtYXRjaFszXSB8fCBtYXRjaFs0XSB8fCBtYXRjaFs1XSB8fCBcIlwiICkucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKTtcblxuXHRcdFx0aWYgKCBtYXRjaFsyXSA9PT0gXCJ+PVwiICkge1xuXHRcdFx0XHRtYXRjaFszXSA9IFwiIFwiICsgbWF0Y2hbM10gKyBcIiBcIjtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIG1hdGNoLnNsaWNlKCAwLCA0ICk7XG5cdFx0fSxcblxuXHRcdFwiQ0hJTERcIjogZnVuY3Rpb24oIG1hdGNoICkge1xuXHRcdFx0LyogbWF0Y2hlcyBmcm9tIG1hdGNoRXhwcltcIkNISUxEXCJdXG5cdFx0XHRcdDEgdHlwZSAob25seXxudGh8Li4uKVxuXHRcdFx0XHQyIHdoYXQgKGNoaWxkfG9mLXR5cGUpXG5cdFx0XHRcdDMgYXJndW1lbnQgKGV2ZW58b2RkfFxcZCp8XFxkKm4oWystXVxcZCspP3wuLi4pXG5cdFx0XHRcdDQgeG4tY29tcG9uZW50IG9mIHhuK3kgYXJndW1lbnQgKFsrLV0/XFxkKm58KVxuXHRcdFx0XHQ1IHNpZ24gb2YgeG4tY29tcG9uZW50XG5cdFx0XHRcdDYgeCBvZiB4bi1jb21wb25lbnRcblx0XHRcdFx0NyBzaWduIG9mIHktY29tcG9uZW50XG5cdFx0XHRcdDggeSBvZiB5LWNvbXBvbmVudFxuXHRcdFx0Ki9cblx0XHRcdG1hdGNoWzFdID0gbWF0Y2hbMV0udG9Mb3dlckNhc2UoKTtcblxuXHRcdFx0aWYgKCBtYXRjaFsxXS5zbGljZSggMCwgMyApID09PSBcIm50aFwiICkge1xuXHRcdFx0XHQvLyBudGgtKiByZXF1aXJlcyBhcmd1bWVudFxuXHRcdFx0XHRpZiAoICFtYXRjaFszXSApIHtcblx0XHRcdFx0XHRTaXp6bGUuZXJyb3IoIG1hdGNoWzBdICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBudW1lcmljIHggYW5kIHkgcGFyYW1ldGVycyBmb3IgRXhwci5maWx0ZXIuQ0hJTERcblx0XHRcdFx0Ly8gcmVtZW1iZXIgdGhhdCBmYWxzZS90cnVlIGNhc3QgcmVzcGVjdGl2ZWx5IHRvIDAvMVxuXHRcdFx0XHRtYXRjaFs0XSA9ICsoIG1hdGNoWzRdID8gbWF0Y2hbNV0gKyAobWF0Y2hbNl0gfHwgMSkgOiAyICogKCBtYXRjaFszXSA9PT0gXCJldmVuXCIgfHwgbWF0Y2hbM10gPT09IFwib2RkXCIgKSApO1xuXHRcdFx0XHRtYXRjaFs1XSA9ICsoICggbWF0Y2hbN10gKyBtYXRjaFs4XSApIHx8IG1hdGNoWzNdID09PSBcIm9kZFwiICk7XG5cblx0XHRcdC8vIG90aGVyIHR5cGVzIHByb2hpYml0IGFyZ3VtZW50c1xuXHRcdFx0fSBlbHNlIGlmICggbWF0Y2hbM10gKSB7XG5cdFx0XHRcdFNpenpsZS5lcnJvciggbWF0Y2hbMF0gKTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIG1hdGNoO1xuXHRcdH0sXG5cblx0XHRcIlBTRVVET1wiOiBmdW5jdGlvbiggbWF0Y2ggKSB7XG5cdFx0XHR2YXIgZXhjZXNzLFxuXHRcdFx0XHR1bnF1b3RlZCA9ICFtYXRjaFs2XSAmJiBtYXRjaFsyXTtcblxuXHRcdFx0aWYgKCBtYXRjaEV4cHJbXCJDSElMRFwiXS50ZXN0KCBtYXRjaFswXSApICkge1xuXHRcdFx0XHRyZXR1cm4gbnVsbDtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQWNjZXB0IHF1b3RlZCBhcmd1bWVudHMgYXMtaXNcblx0XHRcdGlmICggbWF0Y2hbM10gKSB7XG5cdFx0XHRcdG1hdGNoWzJdID0gbWF0Y2hbNF0gfHwgbWF0Y2hbNV0gfHwgXCJcIjtcblxuXHRcdFx0Ly8gU3RyaXAgZXhjZXNzIGNoYXJhY3RlcnMgZnJvbSB1bnF1b3RlZCBhcmd1bWVudHNcblx0XHRcdH0gZWxzZSBpZiAoIHVucXVvdGVkICYmIHJwc2V1ZG8udGVzdCggdW5xdW90ZWQgKSAmJlxuXHRcdFx0XHQvLyBHZXQgZXhjZXNzIGZyb20gdG9rZW5pemUgKHJlY3Vyc2l2ZWx5KVxuXHRcdFx0XHQoZXhjZXNzID0gdG9rZW5pemUoIHVucXVvdGVkLCB0cnVlICkpICYmXG5cdFx0XHRcdC8vIGFkdmFuY2UgdG8gdGhlIG5leHQgY2xvc2luZyBwYXJlbnRoZXNpc1xuXHRcdFx0XHQoZXhjZXNzID0gdW5xdW90ZWQuaW5kZXhPZiggXCIpXCIsIHVucXVvdGVkLmxlbmd0aCAtIGV4Y2VzcyApIC0gdW5xdW90ZWQubGVuZ3RoKSApIHtcblxuXHRcdFx0XHQvLyBleGNlc3MgaXMgYSBuZWdhdGl2ZSBpbmRleFxuXHRcdFx0XHRtYXRjaFswXSA9IG1hdGNoWzBdLnNsaWNlKCAwLCBleGNlc3MgKTtcblx0XHRcdFx0bWF0Y2hbMl0gPSB1bnF1b3RlZC5zbGljZSggMCwgZXhjZXNzICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFJldHVybiBvbmx5IGNhcHR1cmVzIG5lZWRlZCBieSB0aGUgcHNldWRvIGZpbHRlciBtZXRob2QgKHR5cGUgYW5kIGFyZ3VtZW50KVxuXHRcdFx0cmV0dXJuIG1hdGNoLnNsaWNlKCAwLCAzICk7XG5cdFx0fVxuXHR9LFxuXG5cdGZpbHRlcjoge1xuXG5cdFx0XCJUQUdcIjogZnVuY3Rpb24oIG5vZGVOYW1lU2VsZWN0b3IgKSB7XG5cdFx0XHR2YXIgbm9kZU5hbWUgPSBub2RlTmFtZVNlbGVjdG9yLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICkudG9Mb3dlckNhc2UoKTtcblx0XHRcdHJldHVybiBub2RlTmFtZVNlbGVjdG9yID09PSBcIipcIiA/XG5cdFx0XHRcdGZ1bmN0aW9uKCkgeyByZXR1cm4gdHJ1ZTsgfSA6XG5cdFx0XHRcdGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRcdHJldHVybiBlbGVtLm5vZGVOYW1lICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbm9kZU5hbWU7XG5cdFx0XHRcdH07XG5cdFx0fSxcblxuXHRcdFwiQ0xBU1NcIjogZnVuY3Rpb24oIGNsYXNzTmFtZSApIHtcblx0XHRcdHZhciBwYXR0ZXJuID0gY2xhc3NDYWNoZVsgY2xhc3NOYW1lICsgXCIgXCIgXTtcblxuXHRcdFx0cmV0dXJuIHBhdHRlcm4gfHxcblx0XHRcdFx0KHBhdHRlcm4gPSBuZXcgUmVnRXhwKCBcIihefFwiICsgd2hpdGVzcGFjZSArIFwiKVwiICsgY2xhc3NOYW1lICsgXCIoXCIgKyB3aGl0ZXNwYWNlICsgXCJ8JClcIiApKSAmJlxuXHRcdFx0XHRjbGFzc0NhY2hlKCBjbGFzc05hbWUsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRcdHJldHVybiBwYXR0ZXJuLnRlc3QoIHR5cGVvZiBlbGVtLmNsYXNzTmFtZSA9PT0gXCJzdHJpbmdcIiAmJiBlbGVtLmNsYXNzTmFtZSB8fCB0eXBlb2YgZWxlbS5nZXRBdHRyaWJ1dGUgIT09IFwidW5kZWZpbmVkXCIgJiYgZWxlbS5nZXRBdHRyaWJ1dGUoXCJjbGFzc1wiKSB8fCBcIlwiICk7XG5cdFx0XHRcdH0pO1xuXHRcdH0sXG5cblx0XHRcIkFUVFJcIjogZnVuY3Rpb24oIG5hbWUsIG9wZXJhdG9yLCBjaGVjayApIHtcblx0XHRcdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0dmFyIHJlc3VsdCA9IFNpenpsZS5hdHRyKCBlbGVtLCBuYW1lICk7XG5cblx0XHRcdFx0aWYgKCByZXN1bHQgPT0gbnVsbCApIHtcblx0XHRcdFx0XHRyZXR1cm4gb3BlcmF0b3IgPT09IFwiIT1cIjtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoICFvcGVyYXRvciApIHtcblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJlc3VsdCArPSBcIlwiO1xuXG5cdFx0XHRcdHJldHVybiBvcGVyYXRvciA9PT0gXCI9XCIgPyByZXN1bHQgPT09IGNoZWNrIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCIhPVwiID8gcmVzdWx0ICE9PSBjaGVjayA6XG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwiXj1cIiA/IGNoZWNrICYmIHJlc3VsdC5pbmRleE9mKCBjaGVjayApID09PSAwIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCIqPVwiID8gY2hlY2sgJiYgcmVzdWx0LmluZGV4T2YoIGNoZWNrICkgPiAtMSA6XG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwiJD1cIiA/IGNoZWNrICYmIHJlc3VsdC5zbGljZSggLWNoZWNrLmxlbmd0aCApID09PSBjaGVjayA6XG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwifj1cIiA/ICggXCIgXCIgKyByZXN1bHQucmVwbGFjZSggcndoaXRlc3BhY2UsIFwiIFwiICkgKyBcIiBcIiApLmluZGV4T2YoIGNoZWNrICkgPiAtMSA6XG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwifD1cIiA/IHJlc3VsdCA9PT0gY2hlY2sgfHwgcmVzdWx0LnNsaWNlKCAwLCBjaGVjay5sZW5ndGggKyAxICkgPT09IGNoZWNrICsgXCItXCIgOlxuXHRcdFx0XHRcdGZhbHNlO1xuXHRcdFx0fTtcblx0XHR9LFxuXG5cdFx0XCJDSElMRFwiOiBmdW5jdGlvbiggdHlwZSwgd2hhdCwgYXJndW1lbnQsIGZpcnN0LCBsYXN0ICkge1xuXHRcdFx0dmFyIHNpbXBsZSA9IHR5cGUuc2xpY2UoIDAsIDMgKSAhPT0gXCJudGhcIixcblx0XHRcdFx0Zm9yd2FyZCA9IHR5cGUuc2xpY2UoIC00ICkgIT09IFwibGFzdFwiLFxuXHRcdFx0XHRvZlR5cGUgPSB3aGF0ID09PSBcIm9mLXR5cGVcIjtcblxuXHRcdFx0cmV0dXJuIGZpcnN0ID09PSAxICYmIGxhc3QgPT09IDAgP1xuXG5cdFx0XHRcdC8vIFNob3J0Y3V0IGZvciA6bnRoLSoobilcblx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdFx0cmV0dXJuICEhZWxlbS5wYXJlbnROb2RlO1xuXHRcdFx0XHR9IDpcblxuXHRcdFx0XHRmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0XHRcdHZhciBjYWNoZSwgdW5pcXVlQ2FjaGUsIG91dGVyQ2FjaGUsIG5vZGUsIG5vZGVJbmRleCwgc3RhcnQsXG5cdFx0XHRcdFx0XHRkaXIgPSBzaW1wbGUgIT09IGZvcndhcmQgPyBcIm5leHRTaWJsaW5nXCIgOiBcInByZXZpb3VzU2libGluZ1wiLFxuXHRcdFx0XHRcdFx0cGFyZW50ID0gZWxlbS5wYXJlbnROb2RlLFxuXHRcdFx0XHRcdFx0bmFtZSA9IG9mVHlwZSAmJiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCksXG5cdFx0XHRcdFx0XHR1c2VDYWNoZSA9ICF4bWwgJiYgIW9mVHlwZSxcblx0XHRcdFx0XHRcdGRpZmYgPSBmYWxzZTtcblxuXHRcdFx0XHRcdGlmICggcGFyZW50ICkge1xuXG5cdFx0XHRcdFx0XHQvLyA6KGZpcnN0fGxhc3R8b25seSktKGNoaWxkfG9mLXR5cGUpXG5cdFx0XHRcdFx0XHRpZiAoIHNpbXBsZSApIHtcblx0XHRcdFx0XHRcdFx0d2hpbGUgKCBkaXIgKSB7XG5cdFx0XHRcdFx0XHRcdFx0bm9kZSA9IGVsZW07XG5cdFx0XHRcdFx0XHRcdFx0d2hpbGUgKCAobm9kZSA9IG5vZGVbIGRpciBdKSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdGlmICggb2ZUeXBlID9cblx0XHRcdFx0XHRcdFx0XHRcdFx0bm9kZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBuYW1lIDpcblx0XHRcdFx0XHRcdFx0XHRcdFx0bm9kZS5ub2RlVHlwZSA9PT0gMSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdC8vIFJldmVyc2UgZGlyZWN0aW9uIGZvciA6b25seS0qIChpZiB3ZSBoYXZlbid0IHlldCBkb25lIHNvKVxuXHRcdFx0XHRcdFx0XHRcdHN0YXJ0ID0gZGlyID0gdHlwZSA9PT0gXCJvbmx5XCIgJiYgIXN0YXJ0ICYmIFwibmV4dFNpYmxpbmdcIjtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0c3RhcnQgPSBbIGZvcndhcmQgPyBwYXJlbnQuZmlyc3RDaGlsZCA6IHBhcmVudC5sYXN0Q2hpbGQgXTtcblxuXHRcdFx0XHRcdFx0Ly8gbm9uLXhtbCA6bnRoLWNoaWxkKC4uLikgc3RvcmVzIGNhY2hlIGRhdGEgb24gYHBhcmVudGBcblx0XHRcdFx0XHRcdGlmICggZm9yd2FyZCAmJiB1c2VDYWNoZSApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBTZWVrIGBlbGVtYCBmcm9tIGEgcHJldmlvdXNseS1jYWNoZWQgaW5kZXhcblxuXHRcdFx0XHRcdFx0XHQvLyAuLi5pbiBhIGd6aXAtZnJpZW5kbHkgd2F5XG5cdFx0XHRcdFx0XHRcdG5vZGUgPSBwYXJlbnQ7XG5cdFx0XHRcdFx0XHRcdG91dGVyQ2FjaGUgPSBub2RlWyBleHBhbmRvIF0gfHwgKG5vZGVbIGV4cGFuZG8gXSA9IHt9KTtcblxuXHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8OSBvbmx5XG5cdFx0XHRcdFx0XHRcdC8vIERlZmVuZCBhZ2FpbnN0IGNsb25lZCBhdHRyb3BlcnRpZXMgKGpRdWVyeSBnaC0xNzA5KVxuXHRcdFx0XHRcdFx0XHR1bmlxdWVDYWNoZSA9IG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSB8fFxuXHRcdFx0XHRcdFx0XHRcdChvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gPSB7fSk7XG5cblx0XHRcdFx0XHRcdFx0Y2FjaGUgPSB1bmlxdWVDYWNoZVsgdHlwZSBdIHx8IFtdO1xuXHRcdFx0XHRcdFx0XHRub2RlSW5kZXggPSBjYWNoZVsgMCBdID09PSBkaXJydW5zICYmIGNhY2hlWyAxIF07XG5cdFx0XHRcdFx0XHRcdGRpZmYgPSBub2RlSW5kZXggJiYgY2FjaGVbIDIgXTtcblx0XHRcdFx0XHRcdFx0bm9kZSA9IG5vZGVJbmRleCAmJiBwYXJlbnQuY2hpbGROb2Rlc1sgbm9kZUluZGV4IF07XG5cblx0XHRcdFx0XHRcdFx0d2hpbGUgKCAobm9kZSA9ICsrbm9kZUluZGV4ICYmIG5vZGUgJiYgbm9kZVsgZGlyIF0gfHxcblxuXHRcdFx0XHRcdFx0XHRcdC8vIEZhbGxiYWNrIHRvIHNlZWtpbmcgYGVsZW1gIGZyb20gdGhlIHN0YXJ0XG5cdFx0XHRcdFx0XHRcdFx0KGRpZmYgPSBub2RlSW5kZXggPSAwKSB8fCBzdGFydC5wb3AoKSkgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBXaGVuIGZvdW5kLCBjYWNoZSBpbmRleGVzIG9uIGBwYXJlbnRgIGFuZCBicmVha1xuXHRcdFx0XHRcdFx0XHRcdGlmICggbm9kZS5ub2RlVHlwZSA9PT0gMSAmJiArK2RpZmYgJiYgbm9kZSA9PT0gZWxlbSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlWyB0eXBlIF0gPSBbIGRpcnJ1bnMsIG5vZGVJbmRleCwgZGlmZiBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdC8vIFVzZSBwcmV2aW91c2x5LWNhY2hlZCBlbGVtZW50IGluZGV4IGlmIGF2YWlsYWJsZVxuXHRcdFx0XHRcdFx0XHRpZiAoIHVzZUNhY2hlICkge1xuXHRcdFx0XHRcdFx0XHRcdC8vIC4uLmluIGEgZ3ppcC1mcmllbmRseSB3YXlcblx0XHRcdFx0XHRcdFx0XHRub2RlID0gZWxlbTtcblx0XHRcdFx0XHRcdFx0XHRvdXRlckNhY2hlID0gbm9kZVsgZXhwYW5kbyBdIHx8IChub2RlWyBleHBhbmRvIF0gPSB7fSk7XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8OSBvbmx5XG5cdFx0XHRcdFx0XHRcdFx0Ly8gRGVmZW5kIGFnYWluc3QgY2xvbmVkIGF0dHJvcGVydGllcyAoalF1ZXJ5IGdoLTE3MDkpXG5cdFx0XHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGUgPSBvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gfHxcblx0XHRcdFx0XHRcdFx0XHRcdChvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gPSB7fSk7XG5cblx0XHRcdFx0XHRcdFx0XHRjYWNoZSA9IHVuaXF1ZUNhY2hlWyB0eXBlIF0gfHwgW107XG5cdFx0XHRcdFx0XHRcdFx0bm9kZUluZGV4ID0gY2FjaGVbIDAgXSA9PT0gZGlycnVucyAmJiBjYWNoZVsgMSBdO1xuXHRcdFx0XHRcdFx0XHRcdGRpZmYgPSBub2RlSW5kZXg7XG5cdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHQvLyB4bWwgOm50aC1jaGlsZCguLi4pXG5cdFx0XHRcdFx0XHRcdC8vIG9yIDpudGgtbGFzdC1jaGlsZCguLi4pIG9yIDpudGgoLWxhc3QpPy1vZi10eXBlKC4uLilcblx0XHRcdFx0XHRcdFx0aWYgKCBkaWZmID09PSBmYWxzZSApIHtcblx0XHRcdFx0XHRcdFx0XHQvLyBVc2UgdGhlIHNhbWUgbG9vcCBhcyBhYm92ZSB0byBzZWVrIGBlbGVtYCBmcm9tIHRoZSBzdGFydFxuXHRcdFx0XHRcdFx0XHRcdHdoaWxlICggKG5vZGUgPSArK25vZGVJbmRleCAmJiBub2RlICYmIG5vZGVbIGRpciBdIHx8XG5cdFx0XHRcdFx0XHRcdFx0XHQoZGlmZiA9IG5vZGVJbmRleCA9IDApIHx8IHN0YXJ0LnBvcCgpKSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKCAoIG9mVHlwZSA/XG5cdFx0XHRcdFx0XHRcdFx0XHRcdG5vZGUubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbmFtZSA6XG5cdFx0XHRcdFx0XHRcdFx0XHRcdG5vZGUubm9kZVR5cGUgPT09IDEgKSAmJlxuXHRcdFx0XHRcdFx0XHRcdFx0XHQrK2RpZmYgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gQ2FjaGUgdGhlIGluZGV4IG9mIGVhY2ggZW5jb3VudGVyZWQgZWxlbWVudFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIHVzZUNhY2hlICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdG91dGVyQ2FjaGUgPSBub2RlWyBleHBhbmRvIF0gfHwgKG5vZGVbIGV4cGFuZG8gXSA9IHt9KTtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw5IG9ubHlcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBEZWZlbmQgYWdhaW5zdCBjbG9uZWQgYXR0cm9wZXJ0aWVzIChqUXVlcnkgZ2gtMTcwOSlcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR1bmlxdWVDYWNoZSA9IG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSB8fFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0KG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSA9IHt9KTtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlWyB0eXBlIF0gPSBbIGRpcnJ1bnMsIGRpZmYgXTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggbm9kZSA9PT0gZWxlbSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHQvLyBJbmNvcnBvcmF0ZSB0aGUgb2Zmc2V0LCB0aGVuIGNoZWNrIGFnYWluc3QgY3ljbGUgc2l6ZVxuXHRcdFx0XHRcdFx0ZGlmZiAtPSBsYXN0O1xuXHRcdFx0XHRcdFx0cmV0dXJuIGRpZmYgPT09IGZpcnN0IHx8ICggZGlmZiAlIGZpcnN0ID09PSAwICYmIGRpZmYgLyBmaXJzdCA+PSAwICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9O1xuXHRcdH0sXG5cblx0XHRcIlBTRVVET1wiOiBmdW5jdGlvbiggcHNldWRvLCBhcmd1bWVudCApIHtcblx0XHRcdC8vIHBzZXVkby1jbGFzcyBuYW1lcyBhcmUgY2FzZS1pbnNlbnNpdGl2ZVxuXHRcdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvc2VsZWN0b3JzLyNwc2V1ZG8tY2xhc3Nlc1xuXHRcdFx0Ly8gUHJpb3JpdGl6ZSBieSBjYXNlIHNlbnNpdGl2aXR5IGluIGNhc2UgY3VzdG9tIHBzZXVkb3MgYXJlIGFkZGVkIHdpdGggdXBwZXJjYXNlIGxldHRlcnNcblx0XHRcdC8vIFJlbWVtYmVyIHRoYXQgc2V0RmlsdGVycyBpbmhlcml0cyBmcm9tIHBzZXVkb3Ncblx0XHRcdHZhciBhcmdzLFxuXHRcdFx0XHRmbiA9IEV4cHIucHNldWRvc1sgcHNldWRvIF0gfHwgRXhwci5zZXRGaWx0ZXJzWyBwc2V1ZG8udG9Mb3dlckNhc2UoKSBdIHx8XG5cdFx0XHRcdFx0U2l6emxlLmVycm9yKCBcInVuc3VwcG9ydGVkIHBzZXVkbzogXCIgKyBwc2V1ZG8gKTtcblxuXHRcdFx0Ly8gVGhlIHVzZXIgbWF5IHVzZSBjcmVhdGVQc2V1ZG8gdG8gaW5kaWNhdGUgdGhhdFxuXHRcdFx0Ly8gYXJndW1lbnRzIGFyZSBuZWVkZWQgdG8gY3JlYXRlIHRoZSBmaWx0ZXIgZnVuY3Rpb25cblx0XHRcdC8vIGp1c3QgYXMgU2l6emxlIGRvZXNcblx0XHRcdGlmICggZm5bIGV4cGFuZG8gXSApIHtcblx0XHRcdFx0cmV0dXJuIGZuKCBhcmd1bWVudCApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBCdXQgbWFpbnRhaW4gc3VwcG9ydCBmb3Igb2xkIHNpZ25hdHVyZXNcblx0XHRcdGlmICggZm4ubGVuZ3RoID4gMSApIHtcblx0XHRcdFx0YXJncyA9IFsgcHNldWRvLCBwc2V1ZG8sIFwiXCIsIGFyZ3VtZW50IF07XG5cdFx0XHRcdHJldHVybiBFeHByLnNldEZpbHRlcnMuaGFzT3duUHJvcGVydHkoIHBzZXVkby50b0xvd2VyQ2FzZSgpICkgP1xuXHRcdFx0XHRcdG1hcmtGdW5jdGlvbihmdW5jdGlvbiggc2VlZCwgbWF0Y2hlcyApIHtcblx0XHRcdFx0XHRcdHZhciBpZHgsXG5cdFx0XHRcdFx0XHRcdG1hdGNoZWQgPSBmbiggc2VlZCwgYXJndW1lbnQgKSxcblx0XHRcdFx0XHRcdFx0aSA9IG1hdGNoZWQubGVuZ3RoO1xuXHRcdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0XHRcdGlkeCA9IGluZGV4T2YoIHNlZWQsIG1hdGNoZWRbaV0gKTtcblx0XHRcdFx0XHRcdFx0c2VlZFsgaWR4IF0gPSAhKCBtYXRjaGVzWyBpZHggXSA9IG1hdGNoZWRbaV0gKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9KSA6XG5cdFx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZm4oIGVsZW0sIDAsIGFyZ3MgKTtcblx0XHRcdFx0XHR9O1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gZm47XG5cdFx0fVxuXHR9LFxuXG5cdHBzZXVkb3M6IHtcblx0XHQvLyBQb3RlbnRpYWxseSBjb21wbGV4IHBzZXVkb3Ncblx0XHRcIm5vdFwiOiBtYXJrRnVuY3Rpb24oZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdFx0Ly8gVHJpbSB0aGUgc2VsZWN0b3IgcGFzc2VkIHRvIGNvbXBpbGVcblx0XHRcdC8vIHRvIGF2b2lkIHRyZWF0aW5nIGxlYWRpbmcgYW5kIHRyYWlsaW5nXG5cdFx0XHQvLyBzcGFjZXMgYXMgY29tYmluYXRvcnNcblx0XHRcdHZhciBpbnB1dCA9IFtdLFxuXHRcdFx0XHRyZXN1bHRzID0gW10sXG5cdFx0XHRcdG1hdGNoZXIgPSBjb21waWxlKCBzZWxlY3Rvci5yZXBsYWNlKCBydHJpbSwgXCIkMVwiICkgKTtcblxuXHRcdFx0cmV0dXJuIG1hdGNoZXJbIGV4cGFuZG8gXSA/XG5cdFx0XHRcdG1hcmtGdW5jdGlvbihmdW5jdGlvbiggc2VlZCwgbWF0Y2hlcywgY29udGV4dCwgeG1sICkge1xuXHRcdFx0XHRcdHZhciBlbGVtLFxuXHRcdFx0XHRcdFx0dW5tYXRjaGVkID0gbWF0Y2hlciggc2VlZCwgbnVsbCwgeG1sLCBbXSApLFxuXHRcdFx0XHRcdFx0aSA9IHNlZWQubGVuZ3RoO1xuXG5cdFx0XHRcdFx0Ly8gTWF0Y2ggZWxlbWVudHMgdW5tYXRjaGVkIGJ5IGBtYXRjaGVyYFxuXHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdFx0aWYgKCAoZWxlbSA9IHVubWF0Y2hlZFtpXSkgKSB7XG5cdFx0XHRcdFx0XHRcdHNlZWRbaV0gPSAhKG1hdGNoZXNbaV0gPSBlbGVtKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pIDpcblx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHtcblx0XHRcdFx0XHRpbnB1dFswXSA9IGVsZW07XG5cdFx0XHRcdFx0bWF0Y2hlciggaW5wdXQsIG51bGwsIHhtbCwgcmVzdWx0cyApO1xuXHRcdFx0XHRcdC8vIERvbid0IGtlZXAgdGhlIGVsZW1lbnQgKGlzc3VlICMyOTkpXG5cdFx0XHRcdFx0aW5wdXRbMF0gPSBudWxsO1xuXHRcdFx0XHRcdHJldHVybiAhcmVzdWx0cy5wb3AoKTtcblx0XHRcdFx0fTtcblx0XHR9KSxcblxuXHRcdFwiaGFzXCI6IG1hcmtGdW5jdGlvbihmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHJldHVybiBTaXp6bGUoIHNlbGVjdG9yLCBlbGVtICkubGVuZ3RoID4gMDtcblx0XHRcdH07XG5cdFx0fSksXG5cblx0XHRcImNvbnRhaW5zXCI6IG1hcmtGdW5jdGlvbihmdW5jdGlvbiggdGV4dCApIHtcblx0XHRcdHRleHQgPSB0ZXh0LnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHJldHVybiAoIGVsZW0udGV4dENvbnRlbnQgfHwgZ2V0VGV4dCggZWxlbSApICkuaW5kZXhPZiggdGV4dCApID4gLTE7XG5cdFx0XHR9O1xuXHRcdH0pLFxuXG5cdFx0Ly8gXCJXaGV0aGVyIGFuIGVsZW1lbnQgaXMgcmVwcmVzZW50ZWQgYnkgYSA6bGFuZygpIHNlbGVjdG9yXG5cdFx0Ly8gaXMgYmFzZWQgc29sZWx5IG9uIHRoZSBlbGVtZW50J3MgbGFuZ3VhZ2UgdmFsdWVcblx0XHQvLyBiZWluZyBlcXVhbCB0byB0aGUgaWRlbnRpZmllciBDLFxuXHRcdC8vIG9yIGJlZ2lubmluZyB3aXRoIHRoZSBpZGVudGlmaWVyIEMgaW1tZWRpYXRlbHkgZm9sbG93ZWQgYnkgXCItXCIuXG5cdFx0Ly8gVGhlIG1hdGNoaW5nIG9mIEMgYWdhaW5zdCB0aGUgZWxlbWVudCdzIGxhbmd1YWdlIHZhbHVlIGlzIHBlcmZvcm1lZCBjYXNlLWluc2Vuc2l0aXZlbHkuXG5cdFx0Ly8gVGhlIGlkZW50aWZpZXIgQyBkb2VzIG5vdCBoYXZlIHRvIGJlIGEgdmFsaWQgbGFuZ3VhZ2UgbmFtZS5cIlxuXHRcdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL3NlbGVjdG9ycy8jbGFuZy1wc2V1ZG9cblx0XHRcImxhbmdcIjogbWFya0Z1bmN0aW9uKCBmdW5jdGlvbiggbGFuZyApIHtcblx0XHRcdC8vIGxhbmcgdmFsdWUgbXVzdCBiZSBhIHZhbGlkIGlkZW50aWZpZXJcblx0XHRcdGlmICggIXJpZGVudGlmaWVyLnRlc3QobGFuZyB8fCBcIlwiKSApIHtcblx0XHRcdFx0U2l6emxlLmVycm9yKCBcInVuc3VwcG9ydGVkIGxhbmc6IFwiICsgbGFuZyApO1xuXHRcdFx0fVxuXHRcdFx0bGFuZyA9IGxhbmcucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKS50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHR2YXIgZWxlbUxhbmc7XG5cdFx0XHRcdGRvIHtcblx0XHRcdFx0XHRpZiAoIChlbGVtTGFuZyA9IGRvY3VtZW50SXNIVE1MID9cblx0XHRcdFx0XHRcdGVsZW0ubGFuZyA6XG5cdFx0XHRcdFx0XHRlbGVtLmdldEF0dHJpYnV0ZShcInhtbDpsYW5nXCIpIHx8IGVsZW0uZ2V0QXR0cmlidXRlKFwibGFuZ1wiKSkgKSB7XG5cblx0XHRcdFx0XHRcdGVsZW1MYW5nID0gZWxlbUxhbmcudG9Mb3dlckNhc2UoKTtcblx0XHRcdFx0XHRcdHJldHVybiBlbGVtTGFuZyA9PT0gbGFuZyB8fCBlbGVtTGFuZy5pbmRleE9mKCBsYW5nICsgXCItXCIgKSA9PT0gMDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gd2hpbGUgKCAoZWxlbSA9IGVsZW0ucGFyZW50Tm9kZSkgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApO1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9O1xuXHRcdH0pLFxuXG5cdFx0Ly8gTWlzY2VsbGFuZW91c1xuXHRcdFwidGFyZ2V0XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0dmFyIGhhc2ggPSB3aW5kb3cubG9jYXRpb24gJiYgd2luZG93LmxvY2F0aW9uLmhhc2g7XG5cdFx0XHRyZXR1cm4gaGFzaCAmJiBoYXNoLnNsaWNlKCAxICkgPT09IGVsZW0uaWQ7XG5cdFx0fSxcblxuXHRcdFwicm9vdFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtID09PSBkb2NFbGVtO1xuXHRcdH0sXG5cblx0XHRcImZvY3VzXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0gPT09IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgJiYgKCFkb2N1bWVudC5oYXNGb2N1cyB8fCBkb2N1bWVudC5oYXNGb2N1cygpKSAmJiAhIShlbGVtLnR5cGUgfHwgZWxlbS5ocmVmIHx8IH5lbGVtLnRhYkluZGV4KTtcblx0XHR9LFxuXG5cdFx0Ly8gQm9vbGVhbiBwcm9wZXJ0aWVzXG5cdFx0XCJlbmFibGVkXCI6IGNyZWF0ZURpc2FibGVkUHNldWRvKCBmYWxzZSApLFxuXHRcdFwiZGlzYWJsZWRcIjogY3JlYXRlRGlzYWJsZWRQc2V1ZG8oIHRydWUgKSxcblxuXHRcdFwiY2hlY2tlZFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdC8vIEluIENTUzMsIDpjaGVja2VkIHNob3VsZCByZXR1cm4gYm90aCBjaGVja2VkIGFuZCBzZWxlY3RlZCBlbGVtZW50c1xuXHRcdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvMjAxMS9SRUMtY3NzMy1zZWxlY3RvcnMtMjAxMTA5MjkvI2NoZWNrZWRcblx0XHRcdHZhciBub2RlTmFtZSA9IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcblx0XHRcdHJldHVybiAobm9kZU5hbWUgPT09IFwiaW5wdXRcIiAmJiAhIWVsZW0uY2hlY2tlZCkgfHwgKG5vZGVOYW1lID09PSBcIm9wdGlvblwiICYmICEhZWxlbS5zZWxlY3RlZCk7XG5cdFx0fSxcblxuXHRcdFwic2VsZWN0ZWRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHQvLyBBY2Nlc3NpbmcgdGhpcyBwcm9wZXJ0eSBtYWtlcyBzZWxlY3RlZC1ieS1kZWZhdWx0XG5cdFx0XHQvLyBvcHRpb25zIGluIFNhZmFyaSB3b3JrIHByb3Blcmx5XG5cdFx0XHRpZiAoIGVsZW0ucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0ZWxlbS5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXg7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBlbGVtLnNlbGVjdGVkID09PSB0cnVlO1xuXHRcdH0sXG5cblx0XHQvLyBDb250ZW50c1xuXHRcdFwiZW1wdHlcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI2VtcHR5LXBzZXVkb1xuXHRcdFx0Ly8gOmVtcHR5IGlzIG5lZ2F0ZWQgYnkgZWxlbWVudCAoMSkgb3IgY29udGVudCBub2RlcyAodGV4dDogMzsgY2RhdGE6IDQ7IGVudGl0eSByZWY6IDUpLFxuXHRcdFx0Ly8gICBidXQgbm90IGJ5IG90aGVycyAoY29tbWVudDogODsgcHJvY2Vzc2luZyBpbnN0cnVjdGlvbjogNzsgZXRjLilcblx0XHRcdC8vIG5vZGVUeXBlIDwgNiB3b3JrcyBiZWNhdXNlIGF0dHJpYnV0ZXMgKDIpIGRvIG5vdCBhcHBlYXIgYXMgY2hpbGRyZW5cblx0XHRcdGZvciAoIGVsZW0gPSBlbGVtLmZpcnN0Q2hpbGQ7IGVsZW07IGVsZW0gPSBlbGVtLm5leHRTaWJsaW5nICkge1xuXHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPCA2ICkge1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fSxcblxuXHRcdFwicGFyZW50XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuICFFeHByLnBzZXVkb3NbXCJlbXB0eVwiXSggZWxlbSApO1xuXHRcdH0sXG5cblx0XHQvLyBFbGVtZW50L2lucHV0IHR5cGVzXG5cdFx0XCJoZWFkZXJcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gcmhlYWRlci50ZXN0KCBlbGVtLm5vZGVOYW1lICk7XG5cdFx0fSxcblxuXHRcdFwiaW5wdXRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gcmlucHV0cy50ZXN0KCBlbGVtLm5vZGVOYW1lICk7XG5cdFx0fSxcblxuXHRcdFwiYnV0dG9uXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0dmFyIG5hbWUgPSBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XG5cdFx0XHRyZXR1cm4gbmFtZSA9PT0gXCJpbnB1dFwiICYmIGVsZW0udHlwZSA9PT0gXCJidXR0b25cIiB8fCBuYW1lID09PSBcImJ1dHRvblwiO1xuXHRcdH0sXG5cblx0XHRcInRleHRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHR2YXIgYXR0cjtcblx0XHRcdHJldHVybiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IFwiaW5wdXRcIiAmJlxuXHRcdFx0XHRlbGVtLnR5cGUgPT09IFwidGV4dFwiICYmXG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogSUU8OFxuXHRcdFx0XHQvLyBOZXcgSFRNTDUgYXR0cmlidXRlIHZhbHVlcyAoZS5nLiwgXCJzZWFyY2hcIikgYXBwZWFyIHdpdGggZWxlbS50eXBlID09PSBcInRleHRcIlxuXHRcdFx0XHQoIChhdHRyID0gZWxlbS5nZXRBdHRyaWJ1dGUoXCJ0eXBlXCIpKSA9PSBudWxsIHx8IGF0dHIudG9Mb3dlckNhc2UoKSA9PT0gXCJ0ZXh0XCIgKTtcblx0XHR9LFxuXG5cdFx0Ly8gUG9zaXRpb24taW4tY29sbGVjdGlvblxuXHRcdFwiZmlyc3RcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbigpIHtcblx0XHRcdHJldHVybiBbIDAgXTtcblx0XHR9KSxcblxuXHRcdFwibGFzdFwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCApIHtcblx0XHRcdHJldHVybiBbIGxlbmd0aCAtIDEgXTtcblx0XHR9KSxcblxuXHRcdFwiZXFcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGgsIGFyZ3VtZW50ICkge1xuXHRcdFx0cmV0dXJuIFsgYXJndW1lbnQgPCAwID8gYXJndW1lbnQgKyBsZW5ndGggOiBhcmd1bWVudCBdO1xuXHRcdH0pLFxuXG5cdFx0XCJldmVuXCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oZnVuY3Rpb24oIG1hdGNoSW5kZXhlcywgbGVuZ3RoICkge1xuXHRcdFx0dmFyIGkgPSAwO1xuXHRcdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpICs9IDIgKSB7XG5cdFx0XHRcdG1hdGNoSW5kZXhlcy5wdXNoKCBpICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gbWF0Y2hJbmRleGVzO1xuXHRcdH0pLFxuXG5cdFx0XCJvZGRcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGggKSB7XG5cdFx0XHR2YXIgaSA9IDE7XG5cdFx0XHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkgKz0gMiApIHtcblx0XHRcdFx0bWF0Y2hJbmRleGVzLnB1c2goIGkgKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBtYXRjaEluZGV4ZXM7XG5cdFx0fSksXG5cblx0XHRcImx0XCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oZnVuY3Rpb24oIG1hdGNoSW5kZXhlcywgbGVuZ3RoLCBhcmd1bWVudCApIHtcblx0XHRcdHZhciBpID0gYXJndW1lbnQgPCAwID9cblx0XHRcdFx0YXJndW1lbnQgKyBsZW5ndGggOlxuXHRcdFx0XHRhcmd1bWVudCA+IGxlbmd0aCA/XG5cdFx0XHRcdFx0bGVuZ3RoIDpcblx0XHRcdFx0XHRhcmd1bWVudDtcblx0XHRcdGZvciAoIDsgLS1pID49IDA7ICkge1xuXHRcdFx0XHRtYXRjaEluZGV4ZXMucHVzaCggaSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG1hdGNoSW5kZXhlcztcblx0XHR9KSxcblxuXHRcdFwiZ3RcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGgsIGFyZ3VtZW50ICkge1xuXHRcdFx0dmFyIGkgPSBhcmd1bWVudCA8IDAgPyBhcmd1bWVudCArIGxlbmd0aCA6IGFyZ3VtZW50O1xuXHRcdFx0Zm9yICggOyArK2kgPCBsZW5ndGg7ICkge1xuXHRcdFx0XHRtYXRjaEluZGV4ZXMucHVzaCggaSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG1hdGNoSW5kZXhlcztcblx0XHR9KVxuXHR9XG59O1xuXG5FeHByLnBzZXVkb3NbXCJudGhcIl0gPSBFeHByLnBzZXVkb3NbXCJlcVwiXTtcblxuLy8gQWRkIGJ1dHRvbi9pbnB1dCB0eXBlIHBzZXVkb3NcbmZvciAoIGkgaW4geyByYWRpbzogdHJ1ZSwgY2hlY2tib3g6IHRydWUsIGZpbGU6IHRydWUsIHBhc3N3b3JkOiB0cnVlLCBpbWFnZTogdHJ1ZSB9ICkge1xuXHRFeHByLnBzZXVkb3NbIGkgXSA9IGNyZWF0ZUlucHV0UHNldWRvKCBpICk7XG59XG5mb3IgKCBpIGluIHsgc3VibWl0OiB0cnVlLCByZXNldDogdHJ1ZSB9ICkge1xuXHRFeHByLnBzZXVkb3NbIGkgXSA9IGNyZWF0ZUJ1dHRvblBzZXVkbyggaSApO1xufVxuXG4vLyBFYXN5IEFQSSBmb3IgY3JlYXRpbmcgbmV3IHNldEZpbHRlcnNcbmZ1bmN0aW9uIHNldEZpbHRlcnMoKSB7fVxuc2V0RmlsdGVycy5wcm90b3R5cGUgPSBFeHByLmZpbHRlcnMgPSBFeHByLnBzZXVkb3M7XG5FeHByLnNldEZpbHRlcnMgPSBuZXcgc2V0RmlsdGVycygpO1xuXG50b2tlbml6ZSA9IFNpenpsZS50b2tlbml6ZSA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgcGFyc2VPbmx5ICkge1xuXHR2YXIgbWF0Y2hlZCwgbWF0Y2gsIHRva2VucywgdHlwZSxcblx0XHRzb0ZhciwgZ3JvdXBzLCBwcmVGaWx0ZXJzLFxuXHRcdGNhY2hlZCA9IHRva2VuQ2FjaGVbIHNlbGVjdG9yICsgXCIgXCIgXTtcblxuXHRpZiAoIGNhY2hlZCApIHtcblx0XHRyZXR1cm4gcGFyc2VPbmx5ID8gMCA6IGNhY2hlZC5zbGljZSggMCApO1xuXHR9XG5cblx0c29GYXIgPSBzZWxlY3Rvcjtcblx0Z3JvdXBzID0gW107XG5cdHByZUZpbHRlcnMgPSBFeHByLnByZUZpbHRlcjtcblxuXHR3aGlsZSAoIHNvRmFyICkge1xuXG5cdFx0Ly8gQ29tbWEgYW5kIGZpcnN0IHJ1blxuXHRcdGlmICggIW1hdGNoZWQgfHwgKG1hdGNoID0gcmNvbW1hLmV4ZWMoIHNvRmFyICkpICkge1xuXHRcdFx0aWYgKCBtYXRjaCApIHtcblx0XHRcdFx0Ly8gRG9uJ3QgY29uc3VtZSB0cmFpbGluZyBjb21tYXMgYXMgdmFsaWRcblx0XHRcdFx0c29GYXIgPSBzb0Zhci5zbGljZSggbWF0Y2hbMF0ubGVuZ3RoICkgfHwgc29GYXI7XG5cdFx0XHR9XG5cdFx0XHRncm91cHMucHVzaCggKHRva2VucyA9IFtdKSApO1xuXHRcdH1cblxuXHRcdG1hdGNoZWQgPSBmYWxzZTtcblxuXHRcdC8vIENvbWJpbmF0b3JzXG5cdFx0aWYgKCAobWF0Y2ggPSByY29tYmluYXRvcnMuZXhlYyggc29GYXIgKSkgKSB7XG5cdFx0XHRtYXRjaGVkID0gbWF0Y2guc2hpZnQoKTtcblx0XHRcdHRva2Vucy5wdXNoKHtcblx0XHRcdFx0dmFsdWU6IG1hdGNoZWQsXG5cdFx0XHRcdC8vIENhc3QgZGVzY2VuZGFudCBjb21iaW5hdG9ycyB0byBzcGFjZVxuXHRcdFx0XHR0eXBlOiBtYXRjaFswXS5yZXBsYWNlKCBydHJpbSwgXCIgXCIgKVxuXHRcdFx0fSk7XG5cdFx0XHRzb0ZhciA9IHNvRmFyLnNsaWNlKCBtYXRjaGVkLmxlbmd0aCApO1xuXHRcdH1cblxuXHRcdC8vIEZpbHRlcnNcblx0XHRmb3IgKCB0eXBlIGluIEV4cHIuZmlsdGVyICkge1xuXHRcdFx0aWYgKCAobWF0Y2ggPSBtYXRjaEV4cHJbIHR5cGUgXS5leGVjKCBzb0ZhciApKSAmJiAoIXByZUZpbHRlcnNbIHR5cGUgXSB8fFxuXHRcdFx0XHQobWF0Y2ggPSBwcmVGaWx0ZXJzWyB0eXBlIF0oIG1hdGNoICkpKSApIHtcblx0XHRcdFx0bWF0Y2hlZCA9IG1hdGNoLnNoaWZ0KCk7XG5cdFx0XHRcdHRva2Vucy5wdXNoKHtcblx0XHRcdFx0XHR2YWx1ZTogbWF0Y2hlZCxcblx0XHRcdFx0XHR0eXBlOiB0eXBlLFxuXHRcdFx0XHRcdG1hdGNoZXM6IG1hdGNoXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRzb0ZhciA9IHNvRmFyLnNsaWNlKCBtYXRjaGVkLmxlbmd0aCApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmICggIW1hdGNoZWQgKSB7XG5cdFx0XHRicmVhaztcblx0XHR9XG5cdH1cblxuXHQvLyBSZXR1cm4gdGhlIGxlbmd0aCBvZiB0aGUgaW52YWxpZCBleGNlc3Ncblx0Ly8gaWYgd2UncmUganVzdCBwYXJzaW5nXG5cdC8vIE90aGVyd2lzZSwgdGhyb3cgYW4gZXJyb3Igb3IgcmV0dXJuIHRva2Vuc1xuXHRyZXR1cm4gcGFyc2VPbmx5ID9cblx0XHRzb0Zhci5sZW5ndGggOlxuXHRcdHNvRmFyID9cblx0XHRcdFNpenpsZS5lcnJvciggc2VsZWN0b3IgKSA6XG5cdFx0XHQvLyBDYWNoZSB0aGUgdG9rZW5zXG5cdFx0XHR0b2tlbkNhY2hlKCBzZWxlY3RvciwgZ3JvdXBzICkuc2xpY2UoIDAgKTtcbn07XG5cbmZ1bmN0aW9uIHRvU2VsZWN0b3IoIHRva2VucyApIHtcblx0dmFyIGkgPSAwLFxuXHRcdGxlbiA9IHRva2Vucy5sZW5ndGgsXG5cdFx0c2VsZWN0b3IgPSBcIlwiO1xuXHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRzZWxlY3RvciArPSB0b2tlbnNbaV0udmFsdWU7XG5cdH1cblx0cmV0dXJuIHNlbGVjdG9yO1xufVxuXG5mdW5jdGlvbiBhZGRDb21iaW5hdG9yKCBtYXRjaGVyLCBjb21iaW5hdG9yLCBiYXNlICkge1xuXHR2YXIgZGlyID0gY29tYmluYXRvci5kaXIsXG5cdFx0c2tpcCA9IGNvbWJpbmF0b3IubmV4dCxcblx0XHRrZXkgPSBza2lwIHx8IGRpcixcblx0XHRjaGVja05vbkVsZW1lbnRzID0gYmFzZSAmJiBrZXkgPT09IFwicGFyZW50Tm9kZVwiLFxuXHRcdGRvbmVOYW1lID0gZG9uZSsrO1xuXG5cdHJldHVybiBjb21iaW5hdG9yLmZpcnN0ID9cblx0XHQvLyBDaGVjayBhZ2FpbnN0IGNsb3Nlc3QgYW5jZXN0b3IvcHJlY2VkaW5nIGVsZW1lbnRcblx0XHRmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0d2hpbGUgKCAoZWxlbSA9IGVsZW1bIGRpciBdKSApIHtcblx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGNoZWNrTm9uRWxlbWVudHMgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIG1hdGNoZXIoIGVsZW0sIGNvbnRleHQsIHhtbCApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fSA6XG5cblx0XHQvLyBDaGVjayBhZ2FpbnN0IGFsbCBhbmNlc3Rvci9wcmVjZWRpbmcgZWxlbWVudHNcblx0XHRmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0dmFyIG9sZENhY2hlLCB1bmlxdWVDYWNoZSwgb3V0ZXJDYWNoZSxcblx0XHRcdFx0bmV3Q2FjaGUgPSBbIGRpcnJ1bnMsIGRvbmVOYW1lIF07XG5cblx0XHRcdC8vIFdlIGNhbid0IHNldCBhcmJpdHJhcnkgZGF0YSBvbiBYTUwgbm9kZXMsIHNvIHRoZXkgZG9uJ3QgYmVuZWZpdCBmcm9tIGNvbWJpbmF0b3IgY2FjaGluZ1xuXHRcdFx0aWYgKCB4bWwgKSB7XG5cdFx0XHRcdHdoaWxlICggKGVsZW0gPSBlbGVtWyBkaXIgXSkgKSB7XG5cdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGNoZWNrTm9uRWxlbWVudHMgKSB7XG5cdFx0XHRcdFx0XHRpZiAoIG1hdGNoZXIoIGVsZW0sIGNvbnRleHQsIHhtbCApICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHdoaWxlICggKGVsZW0gPSBlbGVtWyBkaXIgXSkgKSB7XG5cdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGNoZWNrTm9uRWxlbWVudHMgKSB7XG5cdFx0XHRcdFx0XHRvdXRlckNhY2hlID0gZWxlbVsgZXhwYW5kbyBdIHx8IChlbGVtWyBleHBhbmRvIF0gPSB7fSk7XG5cblx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw5IG9ubHlcblx0XHRcdFx0XHRcdC8vIERlZmVuZCBhZ2FpbnN0IGNsb25lZCBhdHRyb3BlcnRpZXMgKGpRdWVyeSBnaC0xNzA5KVxuXHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGUgPSBvdXRlckNhY2hlWyBlbGVtLnVuaXF1ZUlEIF0gfHwgKG91dGVyQ2FjaGVbIGVsZW0udW5pcXVlSUQgXSA9IHt9KTtcblxuXHRcdFx0XHRcdFx0aWYgKCBza2lwICYmIHNraXAgPT09IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSApIHtcblx0XHRcdFx0XHRcdFx0ZWxlbSA9IGVsZW1bIGRpciBdIHx8IGVsZW07XG5cdFx0XHRcdFx0XHR9IGVsc2UgaWYgKCAob2xkQ2FjaGUgPSB1bmlxdWVDYWNoZVsga2V5IF0pICYmXG5cdFx0XHRcdFx0XHRcdG9sZENhY2hlWyAwIF0gPT09IGRpcnJ1bnMgJiYgb2xkQ2FjaGVbIDEgXSA9PT0gZG9uZU5hbWUgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gQXNzaWduIHRvIG5ld0NhY2hlIHNvIHJlc3VsdHMgYmFjay1wcm9wYWdhdGUgdG8gcHJldmlvdXMgZWxlbWVudHNcblx0XHRcdFx0XHRcdFx0cmV0dXJuIChuZXdDYWNoZVsgMiBdID0gb2xkQ2FjaGVbIDIgXSk7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHQvLyBSZXVzZSBuZXdjYWNoZSBzbyByZXN1bHRzIGJhY2stcHJvcGFnYXRlIHRvIHByZXZpb3VzIGVsZW1lbnRzXG5cdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlWyBrZXkgXSA9IG5ld0NhY2hlO1xuXG5cdFx0XHRcdFx0XHRcdC8vIEEgbWF0Y2ggbWVhbnMgd2UncmUgZG9uZTsgYSBmYWlsIG1lYW5zIHdlIGhhdmUgdG8ga2VlcCBjaGVja2luZ1xuXHRcdFx0XHRcdFx0XHRpZiAoIChuZXdDYWNoZVsgMiBdID0gbWF0Y2hlciggZWxlbSwgY29udGV4dCwgeG1sICkpICkge1xuXHRcdFx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fTtcbn1cblxuZnVuY3Rpb24gZWxlbWVudE1hdGNoZXIoIG1hdGNoZXJzICkge1xuXHRyZXR1cm4gbWF0Y2hlcnMubGVuZ3RoID4gMSA/XG5cdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHtcblx0XHRcdHZhciBpID0gbWF0Y2hlcnMubGVuZ3RoO1xuXHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdGlmICggIW1hdGNoZXJzW2ldKCBlbGVtLCBjb250ZXh0LCB4bWwgKSApIHtcblx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH0gOlxuXHRcdG1hdGNoZXJzWzBdO1xufVxuXG5mdW5jdGlvbiBtdWx0aXBsZUNvbnRleHRzKCBzZWxlY3RvciwgY29udGV4dHMsIHJlc3VsdHMgKSB7XG5cdHZhciBpID0gMCxcblx0XHRsZW4gPSBjb250ZXh0cy5sZW5ndGg7XG5cdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFNpenpsZSggc2VsZWN0b3IsIGNvbnRleHRzW2ldLCByZXN1bHRzICk7XG5cdH1cblx0cmV0dXJuIHJlc3VsdHM7XG59XG5cbmZ1bmN0aW9uIGNvbmRlbnNlKCB1bm1hdGNoZWQsIG1hcCwgZmlsdGVyLCBjb250ZXh0LCB4bWwgKSB7XG5cdHZhciBlbGVtLFxuXHRcdG5ld1VubWF0Y2hlZCA9IFtdLFxuXHRcdGkgPSAwLFxuXHRcdGxlbiA9IHVubWF0Y2hlZC5sZW5ndGgsXG5cdFx0bWFwcGVkID0gbWFwICE9IG51bGw7XG5cblx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0aWYgKCAoZWxlbSA9IHVubWF0Y2hlZFtpXSkgKSB7XG5cdFx0XHRpZiAoICFmaWx0ZXIgfHwgZmlsdGVyKCBlbGVtLCBjb250ZXh0LCB4bWwgKSApIHtcblx0XHRcdFx0bmV3VW5tYXRjaGVkLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0aWYgKCBtYXBwZWQgKSB7XG5cdFx0XHRcdFx0bWFwLnB1c2goIGkgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiBuZXdVbm1hdGNoZWQ7XG59XG5cbmZ1bmN0aW9uIHNldE1hdGNoZXIoIHByZUZpbHRlciwgc2VsZWN0b3IsIG1hdGNoZXIsIHBvc3RGaWx0ZXIsIHBvc3RGaW5kZXIsIHBvc3RTZWxlY3RvciApIHtcblx0aWYgKCBwb3N0RmlsdGVyICYmICFwb3N0RmlsdGVyWyBleHBhbmRvIF0gKSB7XG5cdFx0cG9zdEZpbHRlciA9IHNldE1hdGNoZXIoIHBvc3RGaWx0ZXIgKTtcblx0fVxuXHRpZiAoIHBvc3RGaW5kZXIgJiYgIXBvc3RGaW5kZXJbIGV4cGFuZG8gXSApIHtcblx0XHRwb3N0RmluZGVyID0gc2V0TWF0Y2hlciggcG9zdEZpbmRlciwgcG9zdFNlbGVjdG9yICk7XG5cdH1cblx0cmV0dXJuIG1hcmtGdW5jdGlvbihmdW5jdGlvbiggc2VlZCwgcmVzdWx0cywgY29udGV4dCwgeG1sICkge1xuXHRcdHZhciB0ZW1wLCBpLCBlbGVtLFxuXHRcdFx0cHJlTWFwID0gW10sXG5cdFx0XHRwb3N0TWFwID0gW10sXG5cdFx0XHRwcmVleGlzdGluZyA9IHJlc3VsdHMubGVuZ3RoLFxuXG5cdFx0XHQvLyBHZXQgaW5pdGlhbCBlbGVtZW50cyBmcm9tIHNlZWQgb3IgY29udGV4dFxuXHRcdFx0ZWxlbXMgPSBzZWVkIHx8IG11bHRpcGxlQ29udGV4dHMoIHNlbGVjdG9yIHx8IFwiKlwiLCBjb250ZXh0Lm5vZGVUeXBlID8gWyBjb250ZXh0IF0gOiBjb250ZXh0LCBbXSApLFxuXG5cdFx0XHQvLyBQcmVmaWx0ZXIgdG8gZ2V0IG1hdGNoZXIgaW5wdXQsIHByZXNlcnZpbmcgYSBtYXAgZm9yIHNlZWQtcmVzdWx0cyBzeW5jaHJvbml6YXRpb25cblx0XHRcdG1hdGNoZXJJbiA9IHByZUZpbHRlciAmJiAoIHNlZWQgfHwgIXNlbGVjdG9yICkgP1xuXHRcdFx0XHRjb25kZW5zZSggZWxlbXMsIHByZU1hcCwgcHJlRmlsdGVyLCBjb250ZXh0LCB4bWwgKSA6XG5cdFx0XHRcdGVsZW1zLFxuXG5cdFx0XHRtYXRjaGVyT3V0ID0gbWF0Y2hlciA/XG5cdFx0XHRcdC8vIElmIHdlIGhhdmUgYSBwb3N0RmluZGVyLCBvciBmaWx0ZXJlZCBzZWVkLCBvciBub24tc2VlZCBwb3N0RmlsdGVyIG9yIHByZWV4aXN0aW5nIHJlc3VsdHMsXG5cdFx0XHRcdHBvc3RGaW5kZXIgfHwgKCBzZWVkID8gcHJlRmlsdGVyIDogcHJlZXhpc3RpbmcgfHwgcG9zdEZpbHRlciApID9cblxuXHRcdFx0XHRcdC8vIC4uLmludGVybWVkaWF0ZSBwcm9jZXNzaW5nIGlzIG5lY2Vzc2FyeVxuXHRcdFx0XHRcdFtdIDpcblxuXHRcdFx0XHRcdC8vIC4uLm90aGVyd2lzZSB1c2UgcmVzdWx0cyBkaXJlY3RseVxuXHRcdFx0XHRcdHJlc3VsdHMgOlxuXHRcdFx0XHRtYXRjaGVySW47XG5cblx0XHQvLyBGaW5kIHByaW1hcnkgbWF0Y2hlc1xuXHRcdGlmICggbWF0Y2hlciApIHtcblx0XHRcdG1hdGNoZXIoIG1hdGNoZXJJbiwgbWF0Y2hlck91dCwgY29udGV4dCwgeG1sICk7XG5cdFx0fVxuXG5cdFx0Ly8gQXBwbHkgcG9zdEZpbHRlclxuXHRcdGlmICggcG9zdEZpbHRlciApIHtcblx0XHRcdHRlbXAgPSBjb25kZW5zZSggbWF0Y2hlck91dCwgcG9zdE1hcCApO1xuXHRcdFx0cG9zdEZpbHRlciggdGVtcCwgW10sIGNvbnRleHQsIHhtbCApO1xuXG5cdFx0XHQvLyBVbi1tYXRjaCBmYWlsaW5nIGVsZW1lbnRzIGJ5IG1vdmluZyB0aGVtIGJhY2sgdG8gbWF0Y2hlckluXG5cdFx0XHRpID0gdGVtcC5sZW5ndGg7XG5cdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0aWYgKCAoZWxlbSA9IHRlbXBbaV0pICkge1xuXHRcdFx0XHRcdG1hdGNoZXJPdXRbIHBvc3RNYXBbaV0gXSA9ICEobWF0Y2hlckluWyBwb3N0TWFwW2ldIF0gPSBlbGVtKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmICggc2VlZCApIHtcblx0XHRcdGlmICggcG9zdEZpbmRlciB8fCBwcmVGaWx0ZXIgKSB7XG5cdFx0XHRcdGlmICggcG9zdEZpbmRlciApIHtcblx0XHRcdFx0XHQvLyBHZXQgdGhlIGZpbmFsIG1hdGNoZXJPdXQgYnkgY29uZGVuc2luZyB0aGlzIGludGVybWVkaWF0ZSBpbnRvIHBvc3RGaW5kZXIgY29udGV4dHNcblx0XHRcdFx0XHR0ZW1wID0gW107XG5cdFx0XHRcdFx0aSA9IG1hdGNoZXJPdXQubGVuZ3RoO1xuXHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdFx0aWYgKCAoZWxlbSA9IG1hdGNoZXJPdXRbaV0pICkge1xuXHRcdFx0XHRcdFx0XHQvLyBSZXN0b3JlIG1hdGNoZXJJbiBzaW5jZSBlbGVtIGlzIG5vdCB5ZXQgYSBmaW5hbCBtYXRjaFxuXHRcdFx0XHRcdFx0XHR0ZW1wLnB1c2goIChtYXRjaGVySW5baV0gPSBlbGVtKSApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRwb3N0RmluZGVyKCBudWxsLCAobWF0Y2hlck91dCA9IFtdKSwgdGVtcCwgeG1sICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBNb3ZlIG1hdGNoZWQgZWxlbWVudHMgZnJvbSBzZWVkIHRvIHJlc3VsdHMgdG8ga2VlcCB0aGVtIHN5bmNocm9uaXplZFxuXHRcdFx0XHRpID0gbWF0Y2hlck91dC5sZW5ndGg7XG5cdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdGlmICggKGVsZW0gPSBtYXRjaGVyT3V0W2ldKSAmJlxuXHRcdFx0XHRcdFx0KHRlbXAgPSBwb3N0RmluZGVyID8gaW5kZXhPZiggc2VlZCwgZWxlbSApIDogcHJlTWFwW2ldKSA+IC0xICkge1xuXG5cdFx0XHRcdFx0XHRzZWVkW3RlbXBdID0gIShyZXN1bHRzW3RlbXBdID0gZWxlbSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHQvLyBBZGQgZWxlbWVudHMgdG8gcmVzdWx0cywgdGhyb3VnaCBwb3N0RmluZGVyIGlmIGRlZmluZWRcblx0XHR9IGVsc2Uge1xuXHRcdFx0bWF0Y2hlck91dCA9IGNvbmRlbnNlKFxuXHRcdFx0XHRtYXRjaGVyT3V0ID09PSByZXN1bHRzID9cblx0XHRcdFx0XHRtYXRjaGVyT3V0LnNwbGljZSggcHJlZXhpc3RpbmcsIG1hdGNoZXJPdXQubGVuZ3RoICkgOlxuXHRcdFx0XHRcdG1hdGNoZXJPdXRcblx0XHRcdCk7XG5cdFx0XHRpZiAoIHBvc3RGaW5kZXIgKSB7XG5cdFx0XHRcdHBvc3RGaW5kZXIoIG51bGwsIHJlc3VsdHMsIG1hdGNoZXJPdXQsIHhtbCApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgbWF0Y2hlck91dCApO1xuXHRcdFx0fVxuXHRcdH1cblx0fSk7XG59XG5cbmZ1bmN0aW9uIG1hdGNoZXJGcm9tVG9rZW5zKCB0b2tlbnMgKSB7XG5cdHZhciBjaGVja0NvbnRleHQsIG1hdGNoZXIsIGosXG5cdFx0bGVuID0gdG9rZW5zLmxlbmd0aCxcblx0XHRsZWFkaW5nUmVsYXRpdmUgPSBFeHByLnJlbGF0aXZlWyB0b2tlbnNbMF0udHlwZSBdLFxuXHRcdGltcGxpY2l0UmVsYXRpdmUgPSBsZWFkaW5nUmVsYXRpdmUgfHwgRXhwci5yZWxhdGl2ZVtcIiBcIl0sXG5cdFx0aSA9IGxlYWRpbmdSZWxhdGl2ZSA/IDEgOiAwLFxuXG5cdFx0Ly8gVGhlIGZvdW5kYXRpb25hbCBtYXRjaGVyIGVuc3VyZXMgdGhhdCBlbGVtZW50cyBhcmUgcmVhY2hhYmxlIGZyb20gdG9wLWxldmVsIGNvbnRleHQocylcblx0XHRtYXRjaENvbnRleHQgPSBhZGRDb21iaW5hdG9yKCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtID09PSBjaGVja0NvbnRleHQ7XG5cdFx0fSwgaW1wbGljaXRSZWxhdGl2ZSwgdHJ1ZSApLFxuXHRcdG1hdGNoQW55Q29udGV4dCA9IGFkZENvbWJpbmF0b3IoIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGluZGV4T2YoIGNoZWNrQ29udGV4dCwgZWxlbSApID4gLTE7XG5cdFx0fSwgaW1wbGljaXRSZWxhdGl2ZSwgdHJ1ZSApLFxuXHRcdG1hdGNoZXJzID0gWyBmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0dmFyIHJldCA9ICggIWxlYWRpbmdSZWxhdGl2ZSAmJiAoIHhtbCB8fCBjb250ZXh0ICE9PSBvdXRlcm1vc3RDb250ZXh0ICkgKSB8fCAoXG5cdFx0XHRcdChjaGVja0NvbnRleHQgPSBjb250ZXh0KS5ub2RlVHlwZSA/XG5cdFx0XHRcdFx0bWF0Y2hDb250ZXh0KCBlbGVtLCBjb250ZXh0LCB4bWwgKSA6XG5cdFx0XHRcdFx0bWF0Y2hBbnlDb250ZXh0KCBlbGVtLCBjb250ZXh0LCB4bWwgKSApO1xuXHRcdFx0Ly8gQXZvaWQgaGFuZ2luZyBvbnRvIGVsZW1lbnQgKGlzc3VlICMyOTkpXG5cdFx0XHRjaGVja0NvbnRleHQgPSBudWxsO1xuXHRcdFx0cmV0dXJuIHJldDtcblx0XHR9IF07XG5cblx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0aWYgKCAobWF0Y2hlciA9IEV4cHIucmVsYXRpdmVbIHRva2Vuc1tpXS50eXBlIF0pICkge1xuXHRcdFx0bWF0Y2hlcnMgPSBbIGFkZENvbWJpbmF0b3IoZWxlbWVudE1hdGNoZXIoIG1hdGNoZXJzICksIG1hdGNoZXIpIF07XG5cdFx0fSBlbHNlIHtcblx0XHRcdG1hdGNoZXIgPSBFeHByLmZpbHRlclsgdG9rZW5zW2ldLnR5cGUgXS5hcHBseSggbnVsbCwgdG9rZW5zW2ldLm1hdGNoZXMgKTtcblxuXHRcdFx0Ly8gUmV0dXJuIHNwZWNpYWwgdXBvbiBzZWVpbmcgYSBwb3NpdGlvbmFsIG1hdGNoZXJcblx0XHRcdGlmICggbWF0Y2hlclsgZXhwYW5kbyBdICkge1xuXHRcdFx0XHQvLyBGaW5kIHRoZSBuZXh0IHJlbGF0aXZlIG9wZXJhdG9yIChpZiBhbnkpIGZvciBwcm9wZXIgaGFuZGxpbmdcblx0XHRcdFx0aiA9ICsraTtcblx0XHRcdFx0Zm9yICggOyBqIDwgbGVuOyBqKysgKSB7XG5cdFx0XHRcdFx0aWYgKCBFeHByLnJlbGF0aXZlWyB0b2tlbnNbal0udHlwZSBdICkge1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiBzZXRNYXRjaGVyKFxuXHRcdFx0XHRcdGkgPiAxICYmIGVsZW1lbnRNYXRjaGVyKCBtYXRjaGVycyApLFxuXHRcdFx0XHRcdGkgPiAxICYmIHRvU2VsZWN0b3IoXG5cdFx0XHRcdFx0XHQvLyBJZiB0aGUgcHJlY2VkaW5nIHRva2VuIHdhcyBhIGRlc2NlbmRhbnQgY29tYmluYXRvciwgaW5zZXJ0IGFuIGltcGxpY2l0IGFueS1lbGVtZW50IGAqYFxuXHRcdFx0XHRcdFx0dG9rZW5zLnNsaWNlKCAwLCBpIC0gMSApLmNvbmNhdCh7IHZhbHVlOiB0b2tlbnNbIGkgLSAyIF0udHlwZSA9PT0gXCIgXCIgPyBcIipcIiA6IFwiXCIgfSlcblx0XHRcdFx0XHQpLnJlcGxhY2UoIHJ0cmltLCBcIiQxXCIgKSxcblx0XHRcdFx0XHRtYXRjaGVyLFxuXHRcdFx0XHRcdGkgPCBqICYmIG1hdGNoZXJGcm9tVG9rZW5zKCB0b2tlbnMuc2xpY2UoIGksIGogKSApLFxuXHRcdFx0XHRcdGogPCBsZW4gJiYgbWF0Y2hlckZyb21Ub2tlbnMoICh0b2tlbnMgPSB0b2tlbnMuc2xpY2UoIGogKSkgKSxcblx0XHRcdFx0XHRqIDwgbGVuICYmIHRvU2VsZWN0b3IoIHRva2VucyApXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cdFx0XHRtYXRjaGVycy5wdXNoKCBtYXRjaGVyICk7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGVsZW1lbnRNYXRjaGVyKCBtYXRjaGVycyApO1xufVxuXG5mdW5jdGlvbiBtYXRjaGVyRnJvbUdyb3VwTWF0Y2hlcnMoIGVsZW1lbnRNYXRjaGVycywgc2V0TWF0Y2hlcnMgKSB7XG5cdHZhciBieVNldCA9IHNldE1hdGNoZXJzLmxlbmd0aCA+IDAsXG5cdFx0YnlFbGVtZW50ID0gZWxlbWVudE1hdGNoZXJzLmxlbmd0aCA+IDAsXG5cdFx0c3VwZXJNYXRjaGVyID0gZnVuY3Rpb24oIHNlZWQsIGNvbnRleHQsIHhtbCwgcmVzdWx0cywgb3V0ZXJtb3N0ICkge1xuXHRcdFx0dmFyIGVsZW0sIGosIG1hdGNoZXIsXG5cdFx0XHRcdG1hdGNoZWRDb3VudCA9IDAsXG5cdFx0XHRcdGkgPSBcIjBcIixcblx0XHRcdFx0dW5tYXRjaGVkID0gc2VlZCAmJiBbXSxcblx0XHRcdFx0c2V0TWF0Y2hlZCA9IFtdLFxuXHRcdFx0XHRjb250ZXh0QmFja3VwID0gb3V0ZXJtb3N0Q29udGV4dCxcblx0XHRcdFx0Ly8gV2UgbXVzdCBhbHdheXMgaGF2ZSBlaXRoZXIgc2VlZCBlbGVtZW50cyBvciBvdXRlcm1vc3QgY29udGV4dFxuXHRcdFx0XHRlbGVtcyA9IHNlZWQgfHwgYnlFbGVtZW50ICYmIEV4cHIuZmluZFtcIlRBR1wiXSggXCIqXCIsIG91dGVybW9zdCApLFxuXHRcdFx0XHQvLyBVc2UgaW50ZWdlciBkaXJydW5zIGlmZiB0aGlzIGlzIHRoZSBvdXRlcm1vc3QgbWF0Y2hlclxuXHRcdFx0XHRkaXJydW5zVW5pcXVlID0gKGRpcnJ1bnMgKz0gY29udGV4dEJhY2t1cCA9PSBudWxsID8gMSA6IE1hdGgucmFuZG9tKCkgfHwgMC4xKSxcblx0XHRcdFx0bGVuID0gZWxlbXMubGVuZ3RoO1xuXG5cdFx0XHRpZiAoIG91dGVybW9zdCApIHtcblx0XHRcdFx0b3V0ZXJtb3N0Q29udGV4dCA9IGNvbnRleHQgPT09IGRvY3VtZW50IHx8IGNvbnRleHQgfHwgb3V0ZXJtb3N0O1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBBZGQgZWxlbWVudHMgcGFzc2luZyBlbGVtZW50TWF0Y2hlcnMgZGlyZWN0bHkgdG8gcmVzdWx0c1xuXHRcdFx0Ly8gU3VwcG9ydDogSUU8OSwgU2FmYXJpXG5cdFx0XHQvLyBUb2xlcmF0ZSBOb2RlTGlzdCBwcm9wZXJ0aWVzIChJRTogXCJsZW5ndGhcIjsgU2FmYXJpOiA8bnVtYmVyPikgbWF0Y2hpbmcgZWxlbWVudHMgYnkgaWRcblx0XHRcdGZvciAoIDsgaSAhPT0gbGVuICYmIChlbGVtID0gZWxlbXNbaV0pICE9IG51bGw7IGkrKyApIHtcblx0XHRcdFx0aWYgKCBieUVsZW1lbnQgJiYgZWxlbSApIHtcblx0XHRcdFx0XHRqID0gMDtcblx0XHRcdFx0XHRpZiAoICFjb250ZXh0ICYmIGVsZW0ub3duZXJEb2N1bWVudCAhPT0gZG9jdW1lbnQgKSB7XG5cdFx0XHRcdFx0XHRzZXREb2N1bWVudCggZWxlbSApO1xuXHRcdFx0XHRcdFx0eG1sID0gIWRvY3VtZW50SXNIVE1MO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHR3aGlsZSAoIChtYXRjaGVyID0gZWxlbWVudE1hdGNoZXJzW2orK10pICkge1xuXHRcdFx0XHRcdFx0aWYgKCBtYXRjaGVyKCBlbGVtLCBjb250ZXh0IHx8IGRvY3VtZW50LCB4bWwpICkge1xuXHRcdFx0XHRcdFx0XHRyZXN1bHRzLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICggb3V0ZXJtb3N0ICkge1xuXHRcdFx0XHRcdFx0ZGlycnVucyA9IGRpcnJ1bnNVbmlxdWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gVHJhY2sgdW5tYXRjaGVkIGVsZW1lbnRzIGZvciBzZXQgZmlsdGVyc1xuXHRcdFx0XHRpZiAoIGJ5U2V0ICkge1xuXHRcdFx0XHRcdC8vIFRoZXkgd2lsbCBoYXZlIGdvbmUgdGhyb3VnaCBhbGwgcG9zc2libGUgbWF0Y2hlcnNcblx0XHRcdFx0XHRpZiAoIChlbGVtID0gIW1hdGNoZXIgJiYgZWxlbSkgKSB7XG5cdFx0XHRcdFx0XHRtYXRjaGVkQ291bnQtLTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBMZW5ndGhlbiB0aGUgYXJyYXkgZm9yIGV2ZXJ5IGVsZW1lbnQsIG1hdGNoZWQgb3Igbm90XG5cdFx0XHRcdFx0aWYgKCBzZWVkICkge1xuXHRcdFx0XHRcdFx0dW5tYXRjaGVkLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gYGlgIGlzIG5vdyB0aGUgY291bnQgb2YgZWxlbWVudHMgdmlzaXRlZCBhYm92ZSwgYW5kIGFkZGluZyBpdCB0byBgbWF0Y2hlZENvdW50YFxuXHRcdFx0Ly8gbWFrZXMgdGhlIGxhdHRlciBub25uZWdhdGl2ZS5cblx0XHRcdG1hdGNoZWRDb3VudCArPSBpO1xuXG5cdFx0XHQvLyBBcHBseSBzZXQgZmlsdGVycyB0byB1bm1hdGNoZWQgZWxlbWVudHNcblx0XHRcdC8vIE5PVEU6IFRoaXMgY2FuIGJlIHNraXBwZWQgaWYgdGhlcmUgYXJlIG5vIHVubWF0Y2hlZCBlbGVtZW50cyAoaS5lLiwgYG1hdGNoZWRDb3VudGBcblx0XHRcdC8vIGVxdWFscyBgaWApLCB1bmxlc3Mgd2UgZGlkbid0IHZpc2l0IF9hbnlfIGVsZW1lbnRzIGluIHRoZSBhYm92ZSBsb29wIGJlY2F1c2Ugd2UgaGF2ZVxuXHRcdFx0Ly8gbm8gZWxlbWVudCBtYXRjaGVycyBhbmQgbm8gc2VlZC5cblx0XHRcdC8vIEluY3JlbWVudGluZyBhbiBpbml0aWFsbHktc3RyaW5nIFwiMFwiIGBpYCBhbGxvd3MgYGlgIHRvIHJlbWFpbiBhIHN0cmluZyBvbmx5IGluIHRoYXRcblx0XHRcdC8vIGNhc2UsIHdoaWNoIHdpbGwgcmVzdWx0IGluIGEgXCIwMFwiIGBtYXRjaGVkQ291bnRgIHRoYXQgZGlmZmVycyBmcm9tIGBpYCBidXQgaXMgYWxzb1xuXHRcdFx0Ly8gbnVtZXJpY2FsbHkgemVyby5cblx0XHRcdGlmICggYnlTZXQgJiYgaSAhPT0gbWF0Y2hlZENvdW50ICkge1xuXHRcdFx0XHRqID0gMDtcblx0XHRcdFx0d2hpbGUgKCAobWF0Y2hlciA9IHNldE1hdGNoZXJzW2orK10pICkge1xuXHRcdFx0XHRcdG1hdGNoZXIoIHVubWF0Y2hlZCwgc2V0TWF0Y2hlZCwgY29udGV4dCwgeG1sICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoIHNlZWQgKSB7XG5cdFx0XHRcdFx0Ly8gUmVpbnRlZ3JhdGUgZWxlbWVudCBtYXRjaGVzIHRvIGVsaW1pbmF0ZSB0aGUgbmVlZCBmb3Igc29ydGluZ1xuXHRcdFx0XHRcdGlmICggbWF0Y2hlZENvdW50ID4gMCApIHtcblx0XHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdFx0XHRpZiAoICEodW5tYXRjaGVkW2ldIHx8IHNldE1hdGNoZWRbaV0pICkge1xuXHRcdFx0XHRcdFx0XHRcdHNldE1hdGNoZWRbaV0gPSBwb3AuY2FsbCggcmVzdWx0cyApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gRGlzY2FyZCBpbmRleCBwbGFjZWhvbGRlciB2YWx1ZXMgdG8gZ2V0IG9ubHkgYWN0dWFsIG1hdGNoZXNcblx0XHRcdFx0XHRzZXRNYXRjaGVkID0gY29uZGVuc2UoIHNldE1hdGNoZWQgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEFkZCBtYXRjaGVzIHRvIHJlc3VsdHNcblx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgc2V0TWF0Y2hlZCApO1xuXG5cdFx0XHRcdC8vIFNlZWRsZXNzIHNldCBtYXRjaGVzIHN1Y2NlZWRpbmcgbXVsdGlwbGUgc3VjY2Vzc2Z1bCBtYXRjaGVycyBzdGlwdWxhdGUgc29ydGluZ1xuXHRcdFx0XHRpZiAoIG91dGVybW9zdCAmJiAhc2VlZCAmJiBzZXRNYXRjaGVkLmxlbmd0aCA+IDAgJiZcblx0XHRcdFx0XHQoIG1hdGNoZWRDb3VudCArIHNldE1hdGNoZXJzLmxlbmd0aCApID4gMSApIHtcblxuXHRcdFx0XHRcdFNpenpsZS51bmlxdWVTb3J0KCByZXN1bHRzICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gT3ZlcnJpZGUgbWFuaXB1bGF0aW9uIG9mIGdsb2JhbHMgYnkgbmVzdGVkIG1hdGNoZXJzXG5cdFx0XHRpZiAoIG91dGVybW9zdCApIHtcblx0XHRcdFx0ZGlycnVucyA9IGRpcnJ1bnNVbmlxdWU7XG5cdFx0XHRcdG91dGVybW9zdENvbnRleHQgPSBjb250ZXh0QmFja3VwO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gdW5tYXRjaGVkO1xuXHRcdH07XG5cblx0cmV0dXJuIGJ5U2V0ID9cblx0XHRtYXJrRnVuY3Rpb24oIHN1cGVyTWF0Y2hlciApIDpcblx0XHRzdXBlck1hdGNoZXI7XG59XG5cbmNvbXBpbGUgPSBTaXp6bGUuY29tcGlsZSA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgbWF0Y2ggLyogSW50ZXJuYWwgVXNlIE9ubHkgKi8gKSB7XG5cdHZhciBpLFxuXHRcdHNldE1hdGNoZXJzID0gW10sXG5cdFx0ZWxlbWVudE1hdGNoZXJzID0gW10sXG5cdFx0Y2FjaGVkID0gY29tcGlsZXJDYWNoZVsgc2VsZWN0b3IgKyBcIiBcIiBdO1xuXG5cdGlmICggIWNhY2hlZCApIHtcblx0XHQvLyBHZW5lcmF0ZSBhIGZ1bmN0aW9uIG9mIHJlY3Vyc2l2ZSBmdW5jdGlvbnMgdGhhdCBjYW4gYmUgdXNlZCB0byBjaGVjayBlYWNoIGVsZW1lbnRcblx0XHRpZiAoICFtYXRjaCApIHtcblx0XHRcdG1hdGNoID0gdG9rZW5pemUoIHNlbGVjdG9yICk7XG5cdFx0fVxuXHRcdGkgPSBtYXRjaC5sZW5ndGg7XG5cdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRjYWNoZWQgPSBtYXRjaGVyRnJvbVRva2VucyggbWF0Y2hbaV0gKTtcblx0XHRcdGlmICggY2FjaGVkWyBleHBhbmRvIF0gKSB7XG5cdFx0XHRcdHNldE1hdGNoZXJzLnB1c2goIGNhY2hlZCApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZWxlbWVudE1hdGNoZXJzLnB1c2goIGNhY2hlZCApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENhY2hlIHRoZSBjb21waWxlZCBmdW5jdGlvblxuXHRcdGNhY2hlZCA9IGNvbXBpbGVyQ2FjaGUoIHNlbGVjdG9yLCBtYXRjaGVyRnJvbUdyb3VwTWF0Y2hlcnMoIGVsZW1lbnRNYXRjaGVycywgc2V0TWF0Y2hlcnMgKSApO1xuXG5cdFx0Ly8gU2F2ZSBzZWxlY3RvciBhbmQgdG9rZW5pemF0aW9uXG5cdFx0Y2FjaGVkLnNlbGVjdG9yID0gc2VsZWN0b3I7XG5cdH1cblx0cmV0dXJuIGNhY2hlZDtcbn07XG5cbi8qKlxuICogQSBsb3ctbGV2ZWwgc2VsZWN0aW9uIGZ1bmN0aW9uIHRoYXQgd29ya3Mgd2l0aCBTaXp6bGUncyBjb21waWxlZFxuICogIHNlbGVjdG9yIGZ1bmN0aW9uc1xuICogQHBhcmFtIHtTdHJpbmd8RnVuY3Rpb259IHNlbGVjdG9yIEEgc2VsZWN0b3Igb3IgYSBwcmUtY29tcGlsZWRcbiAqICBzZWxlY3RvciBmdW5jdGlvbiBidWlsdCB3aXRoIFNpenpsZS5jb21waWxlXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGNvbnRleHRcbiAqIEBwYXJhbSB7QXJyYXl9IFtyZXN1bHRzXVxuICogQHBhcmFtIHtBcnJheX0gW3NlZWRdIEEgc2V0IG9mIGVsZW1lbnRzIHRvIG1hdGNoIGFnYWluc3RcbiAqL1xuc2VsZWN0ID0gU2l6emxlLnNlbGVjdCA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgY29udGV4dCwgcmVzdWx0cywgc2VlZCApIHtcblx0dmFyIGksIHRva2VucywgdG9rZW4sIHR5cGUsIGZpbmQsXG5cdFx0Y29tcGlsZWQgPSB0eXBlb2Ygc2VsZWN0b3IgPT09IFwiZnVuY3Rpb25cIiAmJiBzZWxlY3Rvcixcblx0XHRtYXRjaCA9ICFzZWVkICYmIHRva2VuaXplKCAoc2VsZWN0b3IgPSBjb21waWxlZC5zZWxlY3RvciB8fCBzZWxlY3RvcikgKTtcblxuXHRyZXN1bHRzID0gcmVzdWx0cyB8fCBbXTtcblxuXHQvLyBUcnkgdG8gbWluaW1pemUgb3BlcmF0aW9ucyBpZiB0aGVyZSBpcyBvbmx5IG9uZSBzZWxlY3RvciBpbiB0aGUgbGlzdCBhbmQgbm8gc2VlZFxuXHQvLyAodGhlIGxhdHRlciBvZiB3aGljaCBndWFyYW50ZWVzIHVzIGNvbnRleHQpXG5cdGlmICggbWF0Y2gubGVuZ3RoID09PSAxICkge1xuXG5cdFx0Ly8gUmVkdWNlIGNvbnRleHQgaWYgdGhlIGxlYWRpbmcgY29tcG91bmQgc2VsZWN0b3IgaXMgYW4gSURcblx0XHR0b2tlbnMgPSBtYXRjaFswXSA9IG1hdGNoWzBdLnNsaWNlKCAwICk7XG5cdFx0aWYgKCB0b2tlbnMubGVuZ3RoID4gMiAmJiAodG9rZW4gPSB0b2tlbnNbMF0pLnR5cGUgPT09IFwiSURcIiAmJlxuXHRcdFx0XHRjb250ZXh0Lm5vZGVUeXBlID09PSA5ICYmIGRvY3VtZW50SXNIVE1MICYmIEV4cHIucmVsYXRpdmVbIHRva2Vuc1sxXS50eXBlIF0gKSB7XG5cblx0XHRcdGNvbnRleHQgPSAoIEV4cHIuZmluZFtcIklEXCJdKCB0b2tlbi5tYXRjaGVzWzBdLnJlcGxhY2UocnVuZXNjYXBlLCBmdW5lc2NhcGUpLCBjb250ZXh0ICkgfHwgW10gKVswXTtcblx0XHRcdGlmICggIWNvbnRleHQgKSB7XG5cdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXG5cdFx0XHQvLyBQcmVjb21waWxlZCBtYXRjaGVycyB3aWxsIHN0aWxsIHZlcmlmeSBhbmNlc3RyeSwgc28gc3RlcCB1cCBhIGxldmVsXG5cdFx0XHR9IGVsc2UgaWYgKCBjb21waWxlZCApIHtcblx0XHRcdFx0Y29udGV4dCA9IGNvbnRleHQucGFyZW50Tm9kZTtcblx0XHRcdH1cblxuXHRcdFx0c2VsZWN0b3IgPSBzZWxlY3Rvci5zbGljZSggdG9rZW5zLnNoaWZ0KCkudmFsdWUubGVuZ3RoICk7XG5cdFx0fVxuXG5cdFx0Ly8gRmV0Y2ggYSBzZWVkIHNldCBmb3IgcmlnaHQtdG8tbGVmdCBtYXRjaGluZ1xuXHRcdGkgPSBtYXRjaEV4cHJbXCJuZWVkc0NvbnRleHRcIl0udGVzdCggc2VsZWN0b3IgKSA/IDAgOiB0b2tlbnMubGVuZ3RoO1xuXHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0dG9rZW4gPSB0b2tlbnNbaV07XG5cblx0XHRcdC8vIEFib3J0IGlmIHdlIGhpdCBhIGNvbWJpbmF0b3Jcblx0XHRcdGlmICggRXhwci5yZWxhdGl2ZVsgKHR5cGUgPSB0b2tlbi50eXBlKSBdICkge1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHRcdGlmICggKGZpbmQgPSBFeHByLmZpbmRbIHR5cGUgXSkgKSB7XG5cdFx0XHRcdC8vIFNlYXJjaCwgZXhwYW5kaW5nIGNvbnRleHQgZm9yIGxlYWRpbmcgc2libGluZyBjb21iaW5hdG9yc1xuXHRcdFx0XHRpZiAoIChzZWVkID0gZmluZChcblx0XHRcdFx0XHR0b2tlbi5tYXRjaGVzWzBdLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICksXG5cdFx0XHRcdFx0cnNpYmxpbmcudGVzdCggdG9rZW5zWzBdLnR5cGUgKSAmJiB0ZXN0Q29udGV4dCggY29udGV4dC5wYXJlbnROb2RlICkgfHwgY29udGV4dFxuXHRcdFx0XHQpKSApIHtcblxuXHRcdFx0XHRcdC8vIElmIHNlZWQgaXMgZW1wdHkgb3Igbm8gdG9rZW5zIHJlbWFpbiwgd2UgY2FuIHJldHVybiBlYXJseVxuXHRcdFx0XHRcdHRva2Vucy5zcGxpY2UoIGksIDEgKTtcblx0XHRcdFx0XHRzZWxlY3RvciA9IHNlZWQubGVuZ3RoICYmIHRvU2VsZWN0b3IoIHRva2VucyApO1xuXHRcdFx0XHRcdGlmICggIXNlbGVjdG9yICkge1xuXHRcdFx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgc2VlZCApO1xuXHRcdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBDb21waWxlIGFuZCBleGVjdXRlIGEgZmlsdGVyaW5nIGZ1bmN0aW9uIGlmIG9uZSBpcyBub3QgcHJvdmlkZWRcblx0Ly8gUHJvdmlkZSBgbWF0Y2hgIHRvIGF2b2lkIHJldG9rZW5pemF0aW9uIGlmIHdlIG1vZGlmaWVkIHRoZSBzZWxlY3RvciBhYm92ZVxuXHQoIGNvbXBpbGVkIHx8IGNvbXBpbGUoIHNlbGVjdG9yLCBtYXRjaCApICkoXG5cdFx0c2VlZCxcblx0XHRjb250ZXh0LFxuXHRcdCFkb2N1bWVudElzSFRNTCxcblx0XHRyZXN1bHRzLFxuXHRcdCFjb250ZXh0IHx8IHJzaWJsaW5nLnRlc3QoIHNlbGVjdG9yICkgJiYgdGVzdENvbnRleHQoIGNvbnRleHQucGFyZW50Tm9kZSApIHx8IGNvbnRleHRcblx0KTtcblx0cmV0dXJuIHJlc3VsdHM7XG59O1xuXG4vLyBPbmUtdGltZSBhc3NpZ25tZW50c1xuXG4vLyBTb3J0IHN0YWJpbGl0eVxuc3VwcG9ydC5zb3J0U3RhYmxlID0gZXhwYW5kby5zcGxpdChcIlwiKS5zb3J0KCBzb3J0T3JkZXIgKS5qb2luKFwiXCIpID09PSBleHBhbmRvO1xuXG4vLyBTdXBwb3J0OiBDaHJvbWUgMTQtMzUrXG4vLyBBbHdheXMgYXNzdW1lIGR1cGxpY2F0ZXMgaWYgdGhleSBhcmVuJ3QgcGFzc2VkIHRvIHRoZSBjb21wYXJpc29uIGZ1bmN0aW9uXG5zdXBwb3J0LmRldGVjdER1cGxpY2F0ZXMgPSAhIWhhc0R1cGxpY2F0ZTtcblxuLy8gSW5pdGlhbGl6ZSBhZ2FpbnN0IHRoZSBkZWZhdWx0IGRvY3VtZW50XG5zZXREb2N1bWVudCgpO1xuXG4vLyBTdXBwb3J0OiBXZWJraXQ8NTM3LjMyIC0gU2FmYXJpIDYuMC4zL0Nocm9tZSAyNSAoZml4ZWQgaW4gQ2hyb21lIDI3KVxuLy8gRGV0YWNoZWQgbm9kZXMgY29uZm91bmRpbmdseSBmb2xsb3cgKmVhY2ggb3RoZXIqXG5zdXBwb3J0LnNvcnREZXRhY2hlZCA9IGFzc2VydChmdW5jdGlvbiggZWwgKSB7XG5cdC8vIFNob3VsZCByZXR1cm4gMSwgYnV0IHJldHVybnMgNCAoZm9sbG93aW5nKVxuXHRyZXR1cm4gZWwuY29tcGFyZURvY3VtZW50UG9zaXRpb24oIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJmaWVsZHNldFwiKSApICYgMTtcbn0pO1xuXG4vLyBTdXBwb3J0OiBJRTw4XG4vLyBQcmV2ZW50IGF0dHJpYnV0ZS9wcm9wZXJ0eSBcImludGVycG9sYXRpb25cIlxuLy8gaHR0cHM6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS9tczUzNjQyOSUyOFZTLjg1JTI5LmFzcHhcbmlmICggIWFzc2VydChmdW5jdGlvbiggZWwgKSB7XG5cdGVsLmlubmVySFRNTCA9IFwiPGEgaHJlZj0nIyc+PC9hPlwiO1xuXHRyZXR1cm4gZWwuZmlyc3RDaGlsZC5nZXRBdHRyaWJ1dGUoXCJocmVmXCIpID09PSBcIiNcIiA7XG59KSApIHtcblx0YWRkSGFuZGxlKCBcInR5cGV8aHJlZnxoZWlnaHR8d2lkdGhcIiwgZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGlzWE1MICkge1xuXHRcdGlmICggIWlzWE1MICkge1xuXHRcdFx0cmV0dXJuIGVsZW0uZ2V0QXR0cmlidXRlKCBuYW1lLCBuYW1lLnRvTG93ZXJDYXNlKCkgPT09IFwidHlwZVwiID8gMSA6IDIgKTtcblx0XHR9XG5cdH0pO1xufVxuXG4vLyBTdXBwb3J0OiBJRTw5XG4vLyBVc2UgZGVmYXVsdFZhbHVlIGluIHBsYWNlIG9mIGdldEF0dHJpYnV0ZShcInZhbHVlXCIpXG5pZiAoICFzdXBwb3J0LmF0dHJpYnV0ZXMgfHwgIWFzc2VydChmdW5jdGlvbiggZWwgKSB7XG5cdGVsLmlubmVySFRNTCA9IFwiPGlucHV0Lz5cIjtcblx0ZWwuZmlyc3RDaGlsZC5zZXRBdHRyaWJ1dGUoIFwidmFsdWVcIiwgXCJcIiApO1xuXHRyZXR1cm4gZWwuZmlyc3RDaGlsZC5nZXRBdHRyaWJ1dGUoIFwidmFsdWVcIiApID09PSBcIlwiO1xufSkgKSB7XG5cdGFkZEhhbmRsZSggXCJ2YWx1ZVwiLCBmdW5jdGlvbiggZWxlbSwgbmFtZSwgaXNYTUwgKSB7XG5cdFx0aWYgKCAhaXNYTUwgJiYgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBcImlucHV0XCIgKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5kZWZhdWx0VmFsdWU7XG5cdFx0fVxuXHR9KTtcbn1cblxuLy8gU3VwcG9ydDogSUU8OVxuLy8gVXNlIGdldEF0dHJpYnV0ZU5vZGUgdG8gZmV0Y2ggYm9vbGVhbnMgd2hlbiBnZXRBdHRyaWJ1dGUgbGllc1xuaWYgKCAhYXNzZXJ0KGZ1bmN0aW9uKCBlbCApIHtcblx0cmV0dXJuIGVsLmdldEF0dHJpYnV0ZShcImRpc2FibGVkXCIpID09IG51bGw7XG59KSApIHtcblx0YWRkSGFuZGxlKCBib29sZWFucywgZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGlzWE1MICkge1xuXHRcdHZhciB2YWw7XG5cdFx0aWYgKCAhaXNYTUwgKSB7XG5cdFx0XHRyZXR1cm4gZWxlbVsgbmFtZSBdID09PSB0cnVlID8gbmFtZS50b0xvd2VyQ2FzZSgpIDpcblx0XHRcdFx0XHQodmFsID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKCBuYW1lICkpICYmIHZhbC5zcGVjaWZpZWQgP1xuXHRcdFx0XHRcdHZhbC52YWx1ZSA6XG5cdFx0XHRcdG51bGw7XG5cdFx0fVxuXHR9KTtcbn1cblxucmV0dXJuIFNpenpsZTtcblxufSkoIHdpbmRvdyApO1xuXG5cblxualF1ZXJ5LmZpbmQgPSBTaXp6bGU7XG5qUXVlcnkuZXhwciA9IFNpenpsZS5zZWxlY3RvcnM7XG5cbi8vIERlcHJlY2F0ZWRcbmpRdWVyeS5leHByWyBcIjpcIiBdID0galF1ZXJ5LmV4cHIucHNldWRvcztcbmpRdWVyeS51bmlxdWVTb3J0ID0galF1ZXJ5LnVuaXF1ZSA9IFNpenpsZS51bmlxdWVTb3J0O1xualF1ZXJ5LnRleHQgPSBTaXp6bGUuZ2V0VGV4dDtcbmpRdWVyeS5pc1hNTERvYyA9IFNpenpsZS5pc1hNTDtcbmpRdWVyeS5jb250YWlucyA9IFNpenpsZS5jb250YWlucztcbmpRdWVyeS5lc2NhcGVTZWxlY3RvciA9IFNpenpsZS5lc2NhcGU7XG5cblxuXG5cbnZhciBkaXIgPSBmdW5jdGlvbiggZWxlbSwgZGlyLCB1bnRpbCApIHtcblx0dmFyIG1hdGNoZWQgPSBbXSxcblx0XHR0cnVuY2F0ZSA9IHVudGlsICE9PSB1bmRlZmluZWQ7XG5cblx0d2hpbGUgKCAoIGVsZW0gPSBlbGVtWyBkaXIgXSApICYmIGVsZW0ubm9kZVR5cGUgIT09IDkgKSB7XG5cdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0aWYgKCB0cnVuY2F0ZSAmJiBqUXVlcnkoIGVsZW0gKS5pcyggdW50aWwgKSApIHtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0XHRtYXRjaGVkLnB1c2goIGVsZW0gKTtcblx0XHR9XG5cdH1cblx0cmV0dXJuIG1hdGNoZWQ7XG59O1xuXG5cbnZhciBzaWJsaW5ncyA9IGZ1bmN0aW9uKCBuLCBlbGVtICkge1xuXHR2YXIgbWF0Y2hlZCA9IFtdO1xuXG5cdGZvciAoIDsgbjsgbiA9IG4ubmV4dFNpYmxpbmcgKSB7XG5cdFx0aWYgKCBuLm5vZGVUeXBlID09PSAxICYmIG4gIT09IGVsZW0gKSB7XG5cdFx0XHRtYXRjaGVkLnB1c2goIG4gKTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gbWF0Y2hlZDtcbn07XG5cblxudmFyIHJuZWVkc0NvbnRleHQgPSBqUXVlcnkuZXhwci5tYXRjaC5uZWVkc0NvbnRleHQ7XG5cblxuXG5mdW5jdGlvbiBub2RlTmFtZSggZWxlbSwgbmFtZSApIHtcblxuICByZXR1cm4gZWxlbS5ub2RlTmFtZSAmJiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IG5hbWUudG9Mb3dlckNhc2UoKTtcblxufTtcbnZhciByc2luZ2xlVGFnID0gKCAvXjwoW2Etel1bXlxcL1xcMD46XFx4MjBcXHRcXHJcXG5cXGZdKilbXFx4MjBcXHRcXHJcXG5cXGZdKlxcLz8+KD86PFxcL1xcMT58KSQvaSApO1xuXG5cblxuLy8gSW1wbGVtZW50IHRoZSBpZGVudGljYWwgZnVuY3Rpb25hbGl0eSBmb3IgZmlsdGVyIGFuZCBub3RcbmZ1bmN0aW9uIHdpbm5vdyggZWxlbWVudHMsIHF1YWxpZmllciwgbm90ICkge1xuXHRpZiAoIGlzRnVuY3Rpb24oIHF1YWxpZmllciApICkge1xuXHRcdHJldHVybiBqUXVlcnkuZ3JlcCggZWxlbWVudHMsIGZ1bmN0aW9uKCBlbGVtLCBpICkge1xuXHRcdFx0cmV0dXJuICEhcXVhbGlmaWVyLmNhbGwoIGVsZW0sIGksIGVsZW0gKSAhPT0gbm90O1xuXHRcdH0gKTtcblx0fVxuXG5cdC8vIFNpbmdsZSBlbGVtZW50XG5cdGlmICggcXVhbGlmaWVyLm5vZGVUeXBlICkge1xuXHRcdHJldHVybiBqUXVlcnkuZ3JlcCggZWxlbWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuICggZWxlbSA9PT0gcXVhbGlmaWVyICkgIT09IG5vdDtcblx0XHR9ICk7XG5cdH1cblxuXHQvLyBBcnJheWxpa2Ugb2YgZWxlbWVudHMgKGpRdWVyeSwgYXJndW1lbnRzLCBBcnJheSlcblx0aWYgKCB0eXBlb2YgcXVhbGlmaWVyICE9PSBcInN0cmluZ1wiICkge1xuXHRcdHJldHVybiBqUXVlcnkuZ3JlcCggZWxlbWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuICggaW5kZXhPZi5jYWxsKCBxdWFsaWZpZXIsIGVsZW0gKSA+IC0xICkgIT09IG5vdDtcblx0XHR9ICk7XG5cdH1cblxuXHQvLyBGaWx0ZXJlZCBkaXJlY3RseSBmb3IgYm90aCBzaW1wbGUgYW5kIGNvbXBsZXggc2VsZWN0b3JzXG5cdHJldHVybiBqUXVlcnkuZmlsdGVyKCBxdWFsaWZpZXIsIGVsZW1lbnRzLCBub3QgKTtcbn1cblxualF1ZXJ5LmZpbHRlciA9IGZ1bmN0aW9uKCBleHByLCBlbGVtcywgbm90ICkge1xuXHR2YXIgZWxlbSA9IGVsZW1zWyAwIF07XG5cblx0aWYgKCBub3QgKSB7XG5cdFx0ZXhwciA9IFwiOm5vdChcIiArIGV4cHIgKyBcIilcIjtcblx0fVxuXG5cdGlmICggZWxlbXMubGVuZ3RoID09PSAxICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5maW5kLm1hdGNoZXNTZWxlY3RvciggZWxlbSwgZXhwciApID8gWyBlbGVtIF0gOiBbXTtcblx0fVxuXG5cdHJldHVybiBqUXVlcnkuZmluZC5tYXRjaGVzKCBleHByLCBqUXVlcnkuZ3JlcCggZWxlbXMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBlbGVtLm5vZGVUeXBlID09PSAxO1xuXHR9ICkgKTtcbn07XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0ZmluZDogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHZhciBpLCByZXQsXG5cdFx0XHRsZW4gPSB0aGlzLmxlbmd0aCxcblx0XHRcdHNlbGYgPSB0aGlzO1xuXG5cdFx0aWYgKCB0eXBlb2Ygc2VsZWN0b3IgIT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIGpRdWVyeSggc2VsZWN0b3IgKS5maWx0ZXIoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRmb3IgKCBpID0gMDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFx0XHRcdGlmICggalF1ZXJ5LmNvbnRhaW5zKCBzZWxmWyBpIF0sIHRoaXMgKSApIHtcblx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSApICk7XG5cdFx0fVxuXG5cdFx0cmV0ID0gdGhpcy5wdXNoU3RhY2soIFtdICk7XG5cblx0XHRmb3IgKCBpID0gMDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFx0alF1ZXJ5LmZpbmQoIHNlbGVjdG9yLCBzZWxmWyBpIF0sIHJldCApO1xuXHRcdH1cblxuXHRcdHJldHVybiBsZW4gPiAxID8galF1ZXJ5LnVuaXF1ZVNvcnQoIHJldCApIDogcmV0O1xuXHR9LFxuXHRmaWx0ZXI6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHdpbm5vdyggdGhpcywgc2VsZWN0b3IgfHwgW10sIGZhbHNlICkgKTtcblx0fSxcblx0bm90OiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCB3aW5ub3coIHRoaXMsIHNlbGVjdG9yIHx8IFtdLCB0cnVlICkgKTtcblx0fSxcblx0aXM6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRyZXR1cm4gISF3aW5ub3coXG5cdFx0XHR0aGlzLFxuXG5cdFx0XHQvLyBJZiB0aGlzIGlzIGEgcG9zaXRpb25hbC9yZWxhdGl2ZSBzZWxlY3RvciwgY2hlY2sgbWVtYmVyc2hpcCBpbiB0aGUgcmV0dXJuZWQgc2V0XG5cdFx0XHQvLyBzbyAkKFwicDpmaXJzdFwiKS5pcyhcInA6bGFzdFwiKSB3b24ndCByZXR1cm4gdHJ1ZSBmb3IgYSBkb2Mgd2l0aCB0d28gXCJwXCIuXG5cdFx0XHR0eXBlb2Ygc2VsZWN0b3IgPT09IFwic3RyaW5nXCIgJiYgcm5lZWRzQ29udGV4dC50ZXN0KCBzZWxlY3RvciApID9cblx0XHRcdFx0alF1ZXJ5KCBzZWxlY3RvciApIDpcblx0XHRcdFx0c2VsZWN0b3IgfHwgW10sXG5cdFx0XHRmYWxzZVxuXHRcdCkubGVuZ3RoO1xuXHR9XG59ICk7XG5cblxuLy8gSW5pdGlhbGl6ZSBhIGpRdWVyeSBvYmplY3RcblxuXG4vLyBBIGNlbnRyYWwgcmVmZXJlbmNlIHRvIHRoZSByb290IGpRdWVyeShkb2N1bWVudClcbnZhciByb290alF1ZXJ5LFxuXG5cdC8vIEEgc2ltcGxlIHdheSB0byBjaGVjayBmb3IgSFRNTCBzdHJpbmdzXG5cdC8vIFByaW9yaXRpemUgI2lkIG92ZXIgPHRhZz4gdG8gYXZvaWQgWFNTIHZpYSBsb2NhdGlvbi5oYXNoICgjOTUyMSlcblx0Ly8gU3RyaWN0IEhUTUwgcmVjb2duaXRpb24gKCMxMTI5MDogbXVzdCBzdGFydCB3aXRoIDwpXG5cdC8vIFNob3J0Y3V0IHNpbXBsZSAjaWQgY2FzZSBmb3Igc3BlZWRcblx0cnF1aWNrRXhwciA9IC9eKD86XFxzKig8W1xcd1xcV10rPilbXj5dKnwjKFtcXHctXSspKSQvLFxuXG5cdGluaXQgPSBqUXVlcnkuZm4uaW5pdCA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgY29udGV4dCwgcm9vdCApIHtcblx0XHR2YXIgbWF0Y2gsIGVsZW07XG5cblx0XHQvLyBIQU5ETEU6ICQoXCJcIiksICQobnVsbCksICQodW5kZWZpbmVkKSwgJChmYWxzZSlcblx0XHRpZiAoICFzZWxlY3RvciApIHtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH1cblxuXHRcdC8vIE1ldGhvZCBpbml0KCkgYWNjZXB0cyBhbiBhbHRlcm5hdGUgcm9vdGpRdWVyeVxuXHRcdC8vIHNvIG1pZ3JhdGUgY2FuIHN1cHBvcnQgalF1ZXJ5LnN1YiAoZ2gtMjEwMSlcblx0XHRyb290ID0gcm9vdCB8fCByb290alF1ZXJ5O1xuXG5cdFx0Ly8gSGFuZGxlIEhUTUwgc3RyaW5nc1xuXHRcdGlmICggdHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0aWYgKCBzZWxlY3RvclsgMCBdID09PSBcIjxcIiAmJlxuXHRcdFx0XHRzZWxlY3Rvclsgc2VsZWN0b3IubGVuZ3RoIC0gMSBdID09PSBcIj5cIiAmJlxuXHRcdFx0XHRzZWxlY3Rvci5sZW5ndGggPj0gMyApIHtcblxuXHRcdFx0XHQvLyBBc3N1bWUgdGhhdCBzdHJpbmdzIHRoYXQgc3RhcnQgYW5kIGVuZCB3aXRoIDw+IGFyZSBIVE1MIGFuZCBza2lwIHRoZSByZWdleCBjaGVja1xuXHRcdFx0XHRtYXRjaCA9IFsgbnVsbCwgc2VsZWN0b3IsIG51bGwgXTtcblxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0bWF0Y2ggPSBycXVpY2tFeHByLmV4ZWMoIHNlbGVjdG9yICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE1hdGNoIGh0bWwgb3IgbWFrZSBzdXJlIG5vIGNvbnRleHQgaXMgc3BlY2lmaWVkIGZvciAjaWRcblx0XHRcdGlmICggbWF0Y2ggJiYgKCBtYXRjaFsgMSBdIHx8ICFjb250ZXh0ICkgKSB7XG5cblx0XHRcdFx0Ly8gSEFORExFOiAkKGh0bWwpIC0+ICQoYXJyYXkpXG5cdFx0XHRcdGlmICggbWF0Y2hbIDEgXSApIHtcblx0XHRcdFx0XHRjb250ZXh0ID0gY29udGV4dCBpbnN0YW5jZW9mIGpRdWVyeSA/IGNvbnRleHRbIDAgXSA6IGNvbnRleHQ7XG5cblx0XHRcdFx0XHQvLyBPcHRpb24gdG8gcnVuIHNjcmlwdHMgaXMgdHJ1ZSBmb3IgYmFjay1jb21wYXRcblx0XHRcdFx0XHQvLyBJbnRlbnRpb25hbGx5IGxldCB0aGUgZXJyb3IgYmUgdGhyb3duIGlmIHBhcnNlSFRNTCBpcyBub3QgcHJlc2VudFxuXHRcdFx0XHRcdGpRdWVyeS5tZXJnZSggdGhpcywgalF1ZXJ5LnBhcnNlSFRNTChcblx0XHRcdFx0XHRcdG1hdGNoWyAxIF0sXG5cdFx0XHRcdFx0XHRjb250ZXh0ICYmIGNvbnRleHQubm9kZVR5cGUgPyBjb250ZXh0Lm93bmVyRG9jdW1lbnQgfHwgY29udGV4dCA6IGRvY3VtZW50LFxuXHRcdFx0XHRcdFx0dHJ1ZVxuXHRcdFx0XHRcdCkgKTtcblxuXHRcdFx0XHRcdC8vIEhBTkRMRTogJChodG1sLCBwcm9wcylcblx0XHRcdFx0XHRpZiAoIHJzaW5nbGVUYWcudGVzdCggbWF0Y2hbIDEgXSApICYmIGpRdWVyeS5pc1BsYWluT2JqZWN0KCBjb250ZXh0ICkgKSB7XG5cdFx0XHRcdFx0XHRmb3IgKCBtYXRjaCBpbiBjb250ZXh0ICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIFByb3BlcnRpZXMgb2YgY29udGV4dCBhcmUgY2FsbGVkIGFzIG1ldGhvZHMgaWYgcG9zc2libGVcblx0XHRcdFx0XHRcdFx0aWYgKCBpc0Z1bmN0aW9uKCB0aGlzWyBtYXRjaCBdICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0dGhpc1sgbWF0Y2ggXSggY29udGV4dFsgbWF0Y2ggXSApO1xuXG5cdFx0XHRcdFx0XHRcdC8vIC4uLmFuZCBvdGhlcndpc2Ugc2V0IGFzIGF0dHJpYnV0ZXNcblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHR0aGlzLmF0dHIoIG1hdGNoLCBjb250ZXh0WyBtYXRjaCBdICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblxuXHRcdFx0XHQvLyBIQU5ETEU6ICQoI2lkKVxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGVsZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCggbWF0Y2hbIDIgXSApO1xuXG5cdFx0XHRcdFx0aWYgKCBlbGVtICkge1xuXG5cdFx0XHRcdFx0XHQvLyBJbmplY3QgdGhlIGVsZW1lbnQgZGlyZWN0bHkgaW50byB0aGUgalF1ZXJ5IG9iamVjdFxuXHRcdFx0XHRcdFx0dGhpc1sgMCBdID0gZWxlbTtcblx0XHRcdFx0XHRcdHRoaXMubGVuZ3RoID0gMTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH1cblxuXHRcdFx0Ly8gSEFORExFOiAkKGV4cHIsICQoLi4uKSlcblx0XHRcdH0gZWxzZSBpZiAoICFjb250ZXh0IHx8IGNvbnRleHQuanF1ZXJ5ICkge1xuXHRcdFx0XHRyZXR1cm4gKCBjb250ZXh0IHx8IHJvb3QgKS5maW5kKCBzZWxlY3RvciApO1xuXG5cdFx0XHQvLyBIQU5ETEU6ICQoZXhwciwgY29udGV4dClcblx0XHRcdC8vICh3aGljaCBpcyBqdXN0IGVxdWl2YWxlbnQgdG86ICQoY29udGV4dCkuZmluZChleHByKVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmV0dXJuIHRoaXMuY29uc3RydWN0b3IoIGNvbnRleHQgKS5maW5kKCBzZWxlY3RvciApO1xuXHRcdFx0fVxuXG5cdFx0Ly8gSEFORExFOiAkKERPTUVsZW1lbnQpXG5cdFx0fSBlbHNlIGlmICggc2VsZWN0b3Iubm9kZVR5cGUgKSB7XG5cdFx0XHR0aGlzWyAwIF0gPSBzZWxlY3Rvcjtcblx0XHRcdHRoaXMubGVuZ3RoID0gMTtcblx0XHRcdHJldHVybiB0aGlzO1xuXG5cdFx0Ly8gSEFORExFOiAkKGZ1bmN0aW9uKVxuXHRcdC8vIFNob3J0Y3V0IGZvciBkb2N1bWVudCByZWFkeVxuXHRcdH0gZWxzZSBpZiAoIGlzRnVuY3Rpb24oIHNlbGVjdG9yICkgKSB7XG5cdFx0XHRyZXR1cm4gcm9vdC5yZWFkeSAhPT0gdW5kZWZpbmVkID9cblx0XHRcdFx0cm9vdC5yZWFkeSggc2VsZWN0b3IgKSA6XG5cblx0XHRcdFx0Ly8gRXhlY3V0ZSBpbW1lZGlhdGVseSBpZiByZWFkeSBpcyBub3QgcHJlc2VudFxuXHRcdFx0XHRzZWxlY3RvciggalF1ZXJ5ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGpRdWVyeS5tYWtlQXJyYXkoIHNlbGVjdG9yLCB0aGlzICk7XG5cdH07XG5cbi8vIEdpdmUgdGhlIGluaXQgZnVuY3Rpb24gdGhlIGpRdWVyeSBwcm90b3R5cGUgZm9yIGxhdGVyIGluc3RhbnRpYXRpb25cbmluaXQucHJvdG90eXBlID0galF1ZXJ5LmZuO1xuXG4vLyBJbml0aWFsaXplIGNlbnRyYWwgcmVmZXJlbmNlXG5yb290alF1ZXJ5ID0galF1ZXJ5KCBkb2N1bWVudCApO1xuXG5cbnZhciBycGFyZW50c3ByZXYgPSAvXig/OnBhcmVudHN8cHJldig/OlVudGlsfEFsbCkpLyxcblxuXHQvLyBNZXRob2RzIGd1YXJhbnRlZWQgdG8gcHJvZHVjZSBhIHVuaXF1ZSBzZXQgd2hlbiBzdGFydGluZyBmcm9tIGEgdW5pcXVlIHNldFxuXHRndWFyYW50ZWVkVW5pcXVlID0ge1xuXHRcdGNoaWxkcmVuOiB0cnVlLFxuXHRcdGNvbnRlbnRzOiB0cnVlLFxuXHRcdG5leHQ6IHRydWUsXG5cdFx0cHJldjogdHJ1ZVxuXHR9O1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGhhczogZnVuY3Rpb24oIHRhcmdldCApIHtcblx0XHR2YXIgdGFyZ2V0cyA9IGpRdWVyeSggdGFyZ2V0LCB0aGlzICksXG5cdFx0XHRsID0gdGFyZ2V0cy5sZW5ndGg7XG5cblx0XHRyZXR1cm4gdGhpcy5maWx0ZXIoIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGkgPSAwO1xuXHRcdFx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRpZiAoIGpRdWVyeS5jb250YWlucyggdGhpcywgdGFyZ2V0c1sgaSBdICkgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0Y2xvc2VzdDogZnVuY3Rpb24oIHNlbGVjdG9ycywgY29udGV4dCApIHtcblx0XHR2YXIgY3VyLFxuXHRcdFx0aSA9IDAsXG5cdFx0XHRsID0gdGhpcy5sZW5ndGgsXG5cdFx0XHRtYXRjaGVkID0gW10sXG5cdFx0XHR0YXJnZXRzID0gdHlwZW9mIHNlbGVjdG9ycyAhPT0gXCJzdHJpbmdcIiAmJiBqUXVlcnkoIHNlbGVjdG9ycyApO1xuXG5cdFx0Ly8gUG9zaXRpb25hbCBzZWxlY3RvcnMgbmV2ZXIgbWF0Y2gsIHNpbmNlIHRoZXJlJ3Mgbm8gX3NlbGVjdGlvbl8gY29udGV4dFxuXHRcdGlmICggIXJuZWVkc0NvbnRleHQudGVzdCggc2VsZWN0b3JzICkgKSB7XG5cdFx0XHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRcdGZvciAoIGN1ciA9IHRoaXNbIGkgXTsgY3VyICYmIGN1ciAhPT0gY29udGV4dDsgY3VyID0gY3VyLnBhcmVudE5vZGUgKSB7XG5cblx0XHRcdFx0XHQvLyBBbHdheXMgc2tpcCBkb2N1bWVudCBmcmFnbWVudHNcblx0XHRcdFx0XHRpZiAoIGN1ci5ub2RlVHlwZSA8IDExICYmICggdGFyZ2V0cyA/XG5cdFx0XHRcdFx0XHR0YXJnZXRzLmluZGV4KCBjdXIgKSA+IC0xIDpcblxuXHRcdFx0XHRcdFx0Ly8gRG9uJ3QgcGFzcyBub24tZWxlbWVudHMgdG8gU2l6emxlXG5cdFx0XHRcdFx0XHRjdXIubm9kZVR5cGUgPT09IDEgJiZcblx0XHRcdFx0XHRcdFx0alF1ZXJ5LmZpbmQubWF0Y2hlc1NlbGVjdG9yKCBjdXIsIHNlbGVjdG9ycyApICkgKSB7XG5cblx0XHRcdFx0XHRcdG1hdGNoZWQucHVzaCggY3VyICk7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIG1hdGNoZWQubGVuZ3RoID4gMSA/IGpRdWVyeS51bmlxdWVTb3J0KCBtYXRjaGVkICkgOiBtYXRjaGVkICk7XG5cdH0sXG5cblx0Ly8gRGV0ZXJtaW5lIHRoZSBwb3NpdGlvbiBvZiBhbiBlbGVtZW50IHdpdGhpbiB0aGUgc2V0XG5cdGluZGV4OiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdC8vIE5vIGFyZ3VtZW50LCByZXR1cm4gaW5kZXggaW4gcGFyZW50XG5cdFx0aWYgKCAhZWxlbSApIHtcblx0XHRcdHJldHVybiAoIHRoaXNbIDAgXSAmJiB0aGlzWyAwIF0ucGFyZW50Tm9kZSApID8gdGhpcy5maXJzdCgpLnByZXZBbGwoKS5sZW5ndGggOiAtMTtcblx0XHR9XG5cblx0XHQvLyBJbmRleCBpbiBzZWxlY3RvclxuXHRcdGlmICggdHlwZW9mIGVsZW0gPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRyZXR1cm4gaW5kZXhPZi5jYWxsKCBqUXVlcnkoIGVsZW0gKSwgdGhpc1sgMCBdICk7XG5cdFx0fVxuXG5cdFx0Ly8gTG9jYXRlIHRoZSBwb3NpdGlvbiBvZiB0aGUgZGVzaXJlZCBlbGVtZW50XG5cdFx0cmV0dXJuIGluZGV4T2YuY2FsbCggdGhpcyxcblxuXHRcdFx0Ly8gSWYgaXQgcmVjZWl2ZXMgYSBqUXVlcnkgb2JqZWN0LCB0aGUgZmlyc3QgZWxlbWVudCBpcyB1c2VkXG5cdFx0XHRlbGVtLmpxdWVyeSA/IGVsZW1bIDAgXSA6IGVsZW1cblx0XHQpO1xuXHR9LFxuXG5cdGFkZDogZnVuY3Rpb24oIHNlbGVjdG9yLCBjb250ZXh0ICkge1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayhcblx0XHRcdGpRdWVyeS51bmlxdWVTb3J0KFxuXHRcdFx0XHRqUXVlcnkubWVyZ2UoIHRoaXMuZ2V0KCksIGpRdWVyeSggc2VsZWN0b3IsIGNvbnRleHQgKSApXG5cdFx0XHQpXG5cdFx0KTtcblx0fSxcblxuXHRhZGRCYWNrOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0cmV0dXJuIHRoaXMuYWRkKCBzZWxlY3RvciA9PSBudWxsID9cblx0XHRcdHRoaXMucHJldk9iamVjdCA6IHRoaXMucHJldk9iamVjdC5maWx0ZXIoIHNlbGVjdG9yIClcblx0XHQpO1xuXHR9XG59ICk7XG5cbmZ1bmN0aW9uIHNpYmxpbmcoIGN1ciwgZGlyICkge1xuXHR3aGlsZSAoICggY3VyID0gY3VyWyBkaXIgXSApICYmIGN1ci5ub2RlVHlwZSAhPT0gMSApIHt9XG5cdHJldHVybiBjdXI7XG59XG5cbmpRdWVyeS5lYWNoKCB7XG5cdHBhcmVudDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0dmFyIHBhcmVudCA9IGVsZW0ucGFyZW50Tm9kZTtcblx0XHRyZXR1cm4gcGFyZW50ICYmIHBhcmVudC5ub2RlVHlwZSAhPT0gMTEgPyBwYXJlbnQgOiBudWxsO1xuXHR9LFxuXHRwYXJlbnRzOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcInBhcmVudE5vZGVcIiApO1xuXHR9LFxuXHRwYXJlbnRzVW50aWw6IGZ1bmN0aW9uKCBlbGVtLCBpLCB1bnRpbCApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcInBhcmVudE5vZGVcIiwgdW50aWwgKTtcblx0fSxcblx0bmV4dDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIHNpYmxpbmcoIGVsZW0sIFwibmV4dFNpYmxpbmdcIiApO1xuXHR9LFxuXHRwcmV2OiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gc2libGluZyggZWxlbSwgXCJwcmV2aW91c1NpYmxpbmdcIiApO1xuXHR9LFxuXHRuZXh0QWxsOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcIm5leHRTaWJsaW5nXCIgKTtcblx0fSxcblx0cHJldkFsbDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIGRpciggZWxlbSwgXCJwcmV2aW91c1NpYmxpbmdcIiApO1xuXHR9LFxuXHRuZXh0VW50aWw6IGZ1bmN0aW9uKCBlbGVtLCBpLCB1bnRpbCApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcIm5leHRTaWJsaW5nXCIsIHVudGlsICk7XG5cdH0sXG5cdHByZXZVbnRpbDogZnVuY3Rpb24oIGVsZW0sIGksIHVudGlsICkge1xuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwicHJldmlvdXNTaWJsaW5nXCIsIHVudGlsICk7XG5cdH0sXG5cdHNpYmxpbmdzOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gc2libGluZ3MoICggZWxlbS5wYXJlbnROb2RlIHx8IHt9ICkuZmlyc3RDaGlsZCwgZWxlbSApO1xuXHR9LFxuXHRjaGlsZHJlbjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIHNpYmxpbmdzKCBlbGVtLmZpcnN0Q2hpbGQgKTtcblx0fSxcblx0Y29udGVudHM6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdGlmICggdHlwZW9mIGVsZW0uY29udGVudERvY3VtZW50ICE9PSBcInVuZGVmaW5lZFwiICkge1xuXHRcdFx0cmV0dXJuIGVsZW0uY29udGVudERvY3VtZW50O1xuXHRcdH1cblxuXHRcdC8vIFN1cHBvcnQ6IElFIDkgLSAxMSBvbmx5LCBpT1MgNyBvbmx5LCBBbmRyb2lkIEJyb3dzZXIgPD00LjMgb25seVxuXHRcdC8vIFRyZWF0IHRoZSB0ZW1wbGF0ZSBlbGVtZW50IGFzIGEgcmVndWxhciBvbmUgaW4gYnJvd3NlcnMgdGhhdFxuXHRcdC8vIGRvbid0IHN1cHBvcnQgaXQuXG5cdFx0aWYgKCBub2RlTmFtZSggZWxlbSwgXCJ0ZW1wbGF0ZVwiICkgKSB7XG5cdFx0XHRlbGVtID0gZWxlbS5jb250ZW50IHx8IGVsZW07XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGpRdWVyeS5tZXJnZSggW10sIGVsZW0uY2hpbGROb2RlcyApO1xuXHR9XG59LCBmdW5jdGlvbiggbmFtZSwgZm4gKSB7XG5cdGpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIHVudGlsLCBzZWxlY3RvciApIHtcblx0XHR2YXIgbWF0Y2hlZCA9IGpRdWVyeS5tYXAoIHRoaXMsIGZuLCB1bnRpbCApO1xuXG5cdFx0aWYgKCBuYW1lLnNsaWNlKCAtNSApICE9PSBcIlVudGlsXCIgKSB7XG5cdFx0XHRzZWxlY3RvciA9IHVudGlsO1xuXHRcdH1cblxuXHRcdGlmICggc2VsZWN0b3IgJiYgdHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0bWF0Y2hlZCA9IGpRdWVyeS5maWx0ZXIoIHNlbGVjdG9yLCBtYXRjaGVkICk7XG5cdFx0fVxuXG5cdFx0aWYgKCB0aGlzLmxlbmd0aCA+IDEgKSB7XG5cblx0XHRcdC8vIFJlbW92ZSBkdXBsaWNhdGVzXG5cdFx0XHRpZiAoICFndWFyYW50ZWVkVW5pcXVlWyBuYW1lIF0gKSB7XG5cdFx0XHRcdGpRdWVyeS51bmlxdWVTb3J0KCBtYXRjaGVkICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFJldmVyc2Ugb3JkZXIgZm9yIHBhcmVudHMqIGFuZCBwcmV2LWRlcml2YXRpdmVzXG5cdFx0XHRpZiAoIHJwYXJlbnRzcHJldi50ZXN0KCBuYW1lICkgKSB7XG5cdFx0XHRcdG1hdGNoZWQucmV2ZXJzZSgpO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggbWF0Y2hlZCApO1xuXHR9O1xufSApO1xudmFyIHJub3RodG1sd2hpdGUgPSAoIC9bXlxceDIwXFx0XFxyXFxuXFxmXSsvZyApO1xuXG5cblxuLy8gQ29udmVydCBTdHJpbmctZm9ybWF0dGVkIG9wdGlvbnMgaW50byBPYmplY3QtZm9ybWF0dGVkIG9uZXNcbmZ1bmN0aW9uIGNyZWF0ZU9wdGlvbnMoIG9wdGlvbnMgKSB7XG5cdHZhciBvYmplY3QgPSB7fTtcblx0alF1ZXJ5LmVhY2goIG9wdGlvbnMubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbXSwgZnVuY3Rpb24oIF8sIGZsYWcgKSB7XG5cdFx0b2JqZWN0WyBmbGFnIF0gPSB0cnVlO1xuXHR9ICk7XG5cdHJldHVybiBvYmplY3Q7XG59XG5cbi8qXG4gKiBDcmVhdGUgYSBjYWxsYmFjayBsaXN0IHVzaW5nIHRoZSBmb2xsb3dpbmcgcGFyYW1ldGVyczpcbiAqXG4gKlx0b3B0aW9uczogYW4gb3B0aW9uYWwgbGlzdCBvZiBzcGFjZS1zZXBhcmF0ZWQgb3B0aW9ucyB0aGF0IHdpbGwgY2hhbmdlIGhvd1xuICpcdFx0XHR0aGUgY2FsbGJhY2sgbGlzdCBiZWhhdmVzIG9yIGEgbW9yZSB0cmFkaXRpb25hbCBvcHRpb24gb2JqZWN0XG4gKlxuICogQnkgZGVmYXVsdCBhIGNhbGxiYWNrIGxpc3Qgd2lsbCBhY3QgbGlrZSBhbiBldmVudCBjYWxsYmFjayBsaXN0IGFuZCBjYW4gYmVcbiAqIFwiZmlyZWRcIiBtdWx0aXBsZSB0aW1lcy5cbiAqXG4gKiBQb3NzaWJsZSBvcHRpb25zOlxuICpcbiAqXHRvbmNlOlx0XHRcdHdpbGwgZW5zdXJlIHRoZSBjYWxsYmFjayBsaXN0IGNhbiBvbmx5IGJlIGZpcmVkIG9uY2UgKGxpa2UgYSBEZWZlcnJlZClcbiAqXG4gKlx0bWVtb3J5Olx0XHRcdHdpbGwga2VlcCB0cmFjayBvZiBwcmV2aW91cyB2YWx1ZXMgYW5kIHdpbGwgY2FsbCBhbnkgY2FsbGJhY2sgYWRkZWRcbiAqXHRcdFx0XHRcdGFmdGVyIHRoZSBsaXN0IGhhcyBiZWVuIGZpcmVkIHJpZ2h0IGF3YXkgd2l0aCB0aGUgbGF0ZXN0IFwibWVtb3JpemVkXCJcbiAqXHRcdFx0XHRcdHZhbHVlcyAobGlrZSBhIERlZmVycmVkKVxuICpcbiAqXHR1bmlxdWU6XHRcdFx0d2lsbCBlbnN1cmUgYSBjYWxsYmFjayBjYW4gb25seSBiZSBhZGRlZCBvbmNlIChubyBkdXBsaWNhdGUgaW4gdGhlIGxpc3QpXG4gKlxuICpcdHN0b3BPbkZhbHNlOlx0aW50ZXJydXB0IGNhbGxpbmdzIHdoZW4gYSBjYWxsYmFjayByZXR1cm5zIGZhbHNlXG4gKlxuICovXG5qUXVlcnkuQ2FsbGJhY2tzID0gZnVuY3Rpb24oIG9wdGlvbnMgKSB7XG5cblx0Ly8gQ29udmVydCBvcHRpb25zIGZyb20gU3RyaW5nLWZvcm1hdHRlZCB0byBPYmplY3QtZm9ybWF0dGVkIGlmIG5lZWRlZFxuXHQvLyAod2UgY2hlY2sgaW4gY2FjaGUgZmlyc3QpXG5cdG9wdGlvbnMgPSB0eXBlb2Ygb3B0aW9ucyA9PT0gXCJzdHJpbmdcIiA/XG5cdFx0Y3JlYXRlT3B0aW9ucyggb3B0aW9ucyApIDpcblx0XHRqUXVlcnkuZXh0ZW5kKCB7fSwgb3B0aW9ucyApO1xuXG5cdHZhciAvLyBGbGFnIHRvIGtub3cgaWYgbGlzdCBpcyBjdXJyZW50bHkgZmlyaW5nXG5cdFx0ZmlyaW5nLFxuXG5cdFx0Ly8gTGFzdCBmaXJlIHZhbHVlIGZvciBub24tZm9yZ2V0dGFibGUgbGlzdHNcblx0XHRtZW1vcnksXG5cblx0XHQvLyBGbGFnIHRvIGtub3cgaWYgbGlzdCB3YXMgYWxyZWFkeSBmaXJlZFxuXHRcdGZpcmVkLFxuXG5cdFx0Ly8gRmxhZyB0byBwcmV2ZW50IGZpcmluZ1xuXHRcdGxvY2tlZCxcblxuXHRcdC8vIEFjdHVhbCBjYWxsYmFjayBsaXN0XG5cdFx0bGlzdCA9IFtdLFxuXG5cdFx0Ly8gUXVldWUgb2YgZXhlY3V0aW9uIGRhdGEgZm9yIHJlcGVhdGFibGUgbGlzdHNcblx0XHRxdWV1ZSA9IFtdLFxuXG5cdFx0Ly8gSW5kZXggb2YgY3VycmVudGx5IGZpcmluZyBjYWxsYmFjayAobW9kaWZpZWQgYnkgYWRkL3JlbW92ZSBhcyBuZWVkZWQpXG5cdFx0ZmlyaW5nSW5kZXggPSAtMSxcblxuXHRcdC8vIEZpcmUgY2FsbGJhY2tzXG5cdFx0ZmlyZSA9IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBFbmZvcmNlIHNpbmdsZS1maXJpbmdcblx0XHRcdGxvY2tlZCA9IGxvY2tlZCB8fCBvcHRpb25zLm9uY2U7XG5cblx0XHRcdC8vIEV4ZWN1dGUgY2FsbGJhY2tzIGZvciBhbGwgcGVuZGluZyBleGVjdXRpb25zLFxuXHRcdFx0Ly8gcmVzcGVjdGluZyBmaXJpbmdJbmRleCBvdmVycmlkZXMgYW5kIHJ1bnRpbWUgY2hhbmdlc1xuXHRcdFx0ZmlyZWQgPSBmaXJpbmcgPSB0cnVlO1xuXHRcdFx0Zm9yICggOyBxdWV1ZS5sZW5ndGg7IGZpcmluZ0luZGV4ID0gLTEgKSB7XG5cdFx0XHRcdG1lbW9yeSA9IHF1ZXVlLnNoaWZ0KCk7XG5cdFx0XHRcdHdoaWxlICggKytmaXJpbmdJbmRleCA8IGxpc3QubGVuZ3RoICkge1xuXG5cdFx0XHRcdFx0Ly8gUnVuIGNhbGxiYWNrIGFuZCBjaGVjayBmb3IgZWFybHkgdGVybWluYXRpb25cblx0XHRcdFx0XHRpZiAoIGxpc3RbIGZpcmluZ0luZGV4IF0uYXBwbHkoIG1lbW9yeVsgMCBdLCBtZW1vcnlbIDEgXSApID09PSBmYWxzZSAmJlxuXHRcdFx0XHRcdFx0b3B0aW9ucy5zdG9wT25GYWxzZSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gSnVtcCB0byBlbmQgYW5kIGZvcmdldCB0aGUgZGF0YSBzbyAuYWRkIGRvZXNuJ3QgcmUtZmlyZVxuXHRcdFx0XHRcdFx0ZmlyaW5nSW5kZXggPSBsaXN0Lmxlbmd0aDtcblx0XHRcdFx0XHRcdG1lbW9yeSA9IGZhbHNlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBGb3JnZXQgdGhlIGRhdGEgaWYgd2UncmUgZG9uZSB3aXRoIGl0XG5cdFx0XHRpZiAoICFvcHRpb25zLm1lbW9yeSApIHtcblx0XHRcdFx0bWVtb3J5ID0gZmFsc2U7XG5cdFx0XHR9XG5cblx0XHRcdGZpcmluZyA9IGZhbHNlO1xuXG5cdFx0XHQvLyBDbGVhbiB1cCBpZiB3ZSdyZSBkb25lIGZpcmluZyBmb3IgZ29vZFxuXHRcdFx0aWYgKCBsb2NrZWQgKSB7XG5cblx0XHRcdFx0Ly8gS2VlcCBhbiBlbXB0eSBsaXN0IGlmIHdlIGhhdmUgZGF0YSBmb3IgZnV0dXJlIGFkZCBjYWxsc1xuXHRcdFx0XHRpZiAoIG1lbW9yeSApIHtcblx0XHRcdFx0XHRsaXN0ID0gW107XG5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlLCB0aGlzIG9iamVjdCBpcyBzcGVudFxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGxpc3QgPSBcIlwiO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdC8vIEFjdHVhbCBDYWxsYmFja3Mgb2JqZWN0XG5cdFx0c2VsZiA9IHtcblxuXHRcdFx0Ly8gQWRkIGEgY2FsbGJhY2sgb3IgYSBjb2xsZWN0aW9uIG9mIGNhbGxiYWNrcyB0byB0aGUgbGlzdFxuXHRcdFx0YWRkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCBsaXN0ICkge1xuXG5cdFx0XHRcdFx0Ly8gSWYgd2UgaGF2ZSBtZW1vcnkgZnJvbSBhIHBhc3QgcnVuLCB3ZSBzaG91bGQgZmlyZSBhZnRlciBhZGRpbmdcblx0XHRcdFx0XHRpZiAoIG1lbW9yeSAmJiAhZmlyaW5nICkge1xuXHRcdFx0XHRcdFx0ZmlyaW5nSW5kZXggPSBsaXN0Lmxlbmd0aCAtIDE7XG5cdFx0XHRcdFx0XHRxdWV1ZS5wdXNoKCBtZW1vcnkgKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQoIGZ1bmN0aW9uIGFkZCggYXJncyApIHtcblx0XHRcdFx0XHRcdGpRdWVyeS5lYWNoKCBhcmdzLCBmdW5jdGlvbiggXywgYXJnICkge1xuXHRcdFx0XHRcdFx0XHRpZiAoIGlzRnVuY3Rpb24oIGFyZyApICkge1xuXHRcdFx0XHRcdFx0XHRcdGlmICggIW9wdGlvbnMudW5pcXVlIHx8ICFzZWxmLmhhcyggYXJnICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRsaXN0LnB1c2goIGFyZyApO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fSBlbHNlIGlmICggYXJnICYmIGFyZy5sZW5ndGggJiYgdG9UeXBlKCBhcmcgKSAhPT0gXCJzdHJpbmdcIiApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIEluc3BlY3QgcmVjdXJzaXZlbHlcblx0XHRcdFx0XHRcdFx0XHRhZGQoIGFyZyApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9ICk7XG5cdFx0XHRcdFx0fSApKCBhcmd1bWVudHMgKTtcblxuXHRcdFx0XHRcdGlmICggbWVtb3J5ICYmICFmaXJpbmcgKSB7XG5cdFx0XHRcdFx0XHRmaXJlKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gUmVtb3ZlIGEgY2FsbGJhY2sgZnJvbSB0aGUgbGlzdFxuXHRcdFx0cmVtb3ZlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0alF1ZXJ5LmVhY2goIGFyZ3VtZW50cywgZnVuY3Rpb24oIF8sIGFyZyApIHtcblx0XHRcdFx0XHR2YXIgaW5kZXg7XG5cdFx0XHRcdFx0d2hpbGUgKCAoIGluZGV4ID0galF1ZXJ5LmluQXJyYXkoIGFyZywgbGlzdCwgaW5kZXggKSApID4gLTEgKSB7XG5cdFx0XHRcdFx0XHRsaXN0LnNwbGljZSggaW5kZXgsIDEgKTtcblxuXHRcdFx0XHRcdFx0Ly8gSGFuZGxlIGZpcmluZyBpbmRleGVzXG5cdFx0XHRcdFx0XHRpZiAoIGluZGV4IDw9IGZpcmluZ0luZGV4ICkge1xuXHRcdFx0XHRcdFx0XHRmaXJpbmdJbmRleC0tO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSApO1xuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cblx0XHRcdC8vIENoZWNrIGlmIGEgZ2l2ZW4gY2FsbGJhY2sgaXMgaW4gdGhlIGxpc3QuXG5cdFx0XHQvLyBJZiBubyBhcmd1bWVudCBpcyBnaXZlbiwgcmV0dXJuIHdoZXRoZXIgb3Igbm90IGxpc3QgaGFzIGNhbGxiYWNrcyBhdHRhY2hlZC5cblx0XHRcdGhhczogZnVuY3Rpb24oIGZuICkge1xuXHRcdFx0XHRyZXR1cm4gZm4gP1xuXHRcdFx0XHRcdGpRdWVyeS5pbkFycmF5KCBmbiwgbGlzdCApID4gLTEgOlxuXHRcdFx0XHRcdGxpc3QubGVuZ3RoID4gMDtcblx0XHRcdH0sXG5cblx0XHRcdC8vIFJlbW92ZSBhbGwgY2FsbGJhY2tzIGZyb20gdGhlIGxpc3Rcblx0XHRcdGVtcHR5OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCBsaXN0ICkge1xuXHRcdFx0XHRcdGxpc3QgPSBbXTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cblx0XHRcdC8vIERpc2FibGUgLmZpcmUgYW5kIC5hZGRcblx0XHRcdC8vIEFib3J0IGFueSBjdXJyZW50L3BlbmRpbmcgZXhlY3V0aW9uc1xuXHRcdFx0Ly8gQ2xlYXIgYWxsIGNhbGxiYWNrcyBhbmQgdmFsdWVzXG5cdFx0XHRkaXNhYmxlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0bG9ja2VkID0gcXVldWUgPSBbXTtcblx0XHRcdFx0bGlzdCA9IG1lbW9yeSA9IFwiXCI7XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblx0XHRcdGRpc2FibGVkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuICFsaXN0O1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gRGlzYWJsZSAuZmlyZVxuXHRcdFx0Ly8gQWxzbyBkaXNhYmxlIC5hZGQgdW5sZXNzIHdlIGhhdmUgbWVtb3J5IChzaW5jZSBpdCB3b3VsZCBoYXZlIG5vIGVmZmVjdClcblx0XHRcdC8vIEFib3J0IGFueSBwZW5kaW5nIGV4ZWN1dGlvbnNcblx0XHRcdGxvY2s6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRsb2NrZWQgPSBxdWV1ZSA9IFtdO1xuXHRcdFx0XHRpZiAoICFtZW1vcnkgJiYgIWZpcmluZyApIHtcblx0XHRcdFx0XHRsaXN0ID0gbWVtb3J5ID0gXCJcIjtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cdFx0XHRsb2NrZWQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gISFsb2NrZWQ7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBDYWxsIGFsbCBjYWxsYmFja3Mgd2l0aCB0aGUgZ2l2ZW4gY29udGV4dCBhbmQgYXJndW1lbnRzXG5cdFx0XHRmaXJlV2l0aDogZnVuY3Rpb24oIGNvbnRleHQsIGFyZ3MgKSB7XG5cdFx0XHRcdGlmICggIWxvY2tlZCApIHtcblx0XHRcdFx0XHRhcmdzID0gYXJncyB8fCBbXTtcblx0XHRcdFx0XHRhcmdzID0gWyBjb250ZXh0LCBhcmdzLnNsaWNlID8gYXJncy5zbGljZSgpIDogYXJncyBdO1xuXHRcdFx0XHRcdHF1ZXVlLnB1c2goIGFyZ3MgKTtcblx0XHRcdFx0XHRpZiAoICFmaXJpbmcgKSB7XG5cdFx0XHRcdFx0XHRmaXJlKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gQ2FsbCBhbGwgdGhlIGNhbGxiYWNrcyB3aXRoIHRoZSBnaXZlbiBhcmd1bWVudHNcblx0XHRcdGZpcmU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRzZWxmLmZpcmVXaXRoKCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBUbyBrbm93IGlmIHRoZSBjYWxsYmFja3MgaGF2ZSBhbHJlYWR5IGJlZW4gY2FsbGVkIGF0IGxlYXN0IG9uY2Vcblx0XHRcdGZpcmVkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuICEhZmlyZWQ7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRyZXR1cm4gc2VsZjtcbn07XG5cblxuZnVuY3Rpb24gSWRlbnRpdHkoIHYgKSB7XG5cdHJldHVybiB2O1xufVxuZnVuY3Rpb24gVGhyb3dlciggZXggKSB7XG5cdHRocm93IGV4O1xufVxuXG5mdW5jdGlvbiBhZG9wdFZhbHVlKCB2YWx1ZSwgcmVzb2x2ZSwgcmVqZWN0LCBub1ZhbHVlICkge1xuXHR2YXIgbWV0aG9kO1xuXG5cdHRyeSB7XG5cblx0XHQvLyBDaGVjayBmb3IgcHJvbWlzZSBhc3BlY3QgZmlyc3QgdG8gcHJpdmlsZWdlIHN5bmNocm9ub3VzIGJlaGF2aW9yXG5cdFx0aWYgKCB2YWx1ZSAmJiBpc0Z1bmN0aW9uKCAoIG1ldGhvZCA9IHZhbHVlLnByb21pc2UgKSApICkge1xuXHRcdFx0bWV0aG9kLmNhbGwoIHZhbHVlICkuZG9uZSggcmVzb2x2ZSApLmZhaWwoIHJlamVjdCApO1xuXG5cdFx0Ly8gT3RoZXIgdGhlbmFibGVzXG5cdFx0fSBlbHNlIGlmICggdmFsdWUgJiYgaXNGdW5jdGlvbiggKCBtZXRob2QgPSB2YWx1ZS50aGVuICkgKSApIHtcblx0XHRcdG1ldGhvZC5jYWxsKCB2YWx1ZSwgcmVzb2x2ZSwgcmVqZWN0ICk7XG5cblx0XHQvLyBPdGhlciBub24tdGhlbmFibGVzXG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0Ly8gQ29udHJvbCBgcmVzb2x2ZWAgYXJndW1lbnRzIGJ5IGxldHRpbmcgQXJyYXkjc2xpY2UgY2FzdCBib29sZWFuIGBub1ZhbHVlYCB0byBpbnRlZ2VyOlxuXHRcdFx0Ly8gKiBmYWxzZTogWyB2YWx1ZSBdLnNsaWNlKCAwICkgPT4gcmVzb2x2ZSggdmFsdWUgKVxuXHRcdFx0Ly8gKiB0cnVlOiBbIHZhbHVlIF0uc2xpY2UoIDEgKSA9PiByZXNvbHZlKClcblx0XHRcdHJlc29sdmUuYXBwbHkoIHVuZGVmaW5lZCwgWyB2YWx1ZSBdLnNsaWNlKCBub1ZhbHVlICkgKTtcblx0XHR9XG5cblx0Ly8gRm9yIFByb21pc2VzL0ErLCBjb252ZXJ0IGV4Y2VwdGlvbnMgaW50byByZWplY3Rpb25zXG5cdC8vIFNpbmNlIGpRdWVyeS53aGVuIGRvZXNuJ3QgdW53cmFwIHRoZW5hYmxlcywgd2UgY2FuIHNraXAgdGhlIGV4dHJhIGNoZWNrcyBhcHBlYXJpbmcgaW5cblx0Ly8gRGVmZXJyZWQjdGhlbiB0byBjb25kaXRpb25hbGx5IHN1cHByZXNzIHJlamVjdGlvbi5cblx0fSBjYXRjaCAoIHZhbHVlICkge1xuXG5cdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA0LjAgb25seVxuXHRcdC8vIFN0cmljdCBtb2RlIGZ1bmN0aW9ucyBpbnZva2VkIHdpdGhvdXQgLmNhbGwvLmFwcGx5IGdldCBnbG9iYWwtb2JqZWN0IGNvbnRleHRcblx0XHRyZWplY3QuYXBwbHkoIHVuZGVmaW5lZCwgWyB2YWx1ZSBdICk7XG5cdH1cbn1cblxualF1ZXJ5LmV4dGVuZCgge1xuXG5cdERlZmVycmVkOiBmdW5jdGlvbiggZnVuYyApIHtcblx0XHR2YXIgdHVwbGVzID0gW1xuXG5cdFx0XHRcdC8vIGFjdGlvbiwgYWRkIGxpc3RlbmVyLCBjYWxsYmFja3MsXG5cdFx0XHRcdC8vIC4uLiAudGhlbiBoYW5kbGVycywgYXJndW1lbnQgaW5kZXgsIFtmaW5hbCBzdGF0ZV1cblx0XHRcdFx0WyBcIm5vdGlmeVwiLCBcInByb2dyZXNzXCIsIGpRdWVyeS5DYWxsYmFja3MoIFwibWVtb3J5XCIgKSxcblx0XHRcdFx0XHRqUXVlcnkuQ2FsbGJhY2tzKCBcIm1lbW9yeVwiICksIDIgXSxcblx0XHRcdFx0WyBcInJlc29sdmVcIiwgXCJkb25lXCIsIGpRdWVyeS5DYWxsYmFja3MoIFwib25jZSBtZW1vcnlcIiApLFxuXHRcdFx0XHRcdGpRdWVyeS5DYWxsYmFja3MoIFwib25jZSBtZW1vcnlcIiApLCAwLCBcInJlc29sdmVkXCIgXSxcblx0XHRcdFx0WyBcInJlamVjdFwiLCBcImZhaWxcIiwgalF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICksXG5cdFx0XHRcdFx0alF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICksIDEsIFwicmVqZWN0ZWRcIiBdXG5cdFx0XHRdLFxuXHRcdFx0c3RhdGUgPSBcInBlbmRpbmdcIixcblx0XHRcdHByb21pc2UgPSB7XG5cdFx0XHRcdHN0YXRlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRyZXR1cm4gc3RhdGU7XG5cdFx0XHRcdH0sXG5cdFx0XHRcdGFsd2F5czogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0ZGVmZXJyZWQuZG9uZSggYXJndW1lbnRzICkuZmFpbCggYXJndW1lbnRzICk7XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH0sXG5cdFx0XHRcdFwiY2F0Y2hcIjogZnVuY3Rpb24oIGZuICkge1xuXHRcdFx0XHRcdHJldHVybiBwcm9taXNlLnRoZW4oIG51bGwsIGZuICk7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gS2VlcCBwaXBlIGZvciBiYWNrLWNvbXBhdFxuXHRcdFx0XHRwaXBlOiBmdW5jdGlvbiggLyogZm5Eb25lLCBmbkZhaWwsIGZuUHJvZ3Jlc3MgKi8gKSB7XG5cdFx0XHRcdFx0dmFyIGZucyA9IGFyZ3VtZW50cztcblxuXHRcdFx0XHRcdHJldHVybiBqUXVlcnkuRGVmZXJyZWQoIGZ1bmN0aW9uKCBuZXdEZWZlciApIHtcblx0XHRcdFx0XHRcdGpRdWVyeS5lYWNoKCB0dXBsZXMsIGZ1bmN0aW9uKCBpLCB0dXBsZSApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBNYXAgdHVwbGVzIChwcm9ncmVzcywgZG9uZSwgZmFpbCkgdG8gYXJndW1lbnRzIChkb25lLCBmYWlsLCBwcm9ncmVzcylcblx0XHRcdFx0XHRcdFx0dmFyIGZuID0gaXNGdW5jdGlvbiggZm5zWyB0dXBsZVsgNCBdIF0gKSAmJiBmbnNbIHR1cGxlWyA0IF0gXTtcblxuXHRcdFx0XHRcdFx0XHQvLyBkZWZlcnJlZC5wcm9ncmVzcyhmdW5jdGlvbigpIHsgYmluZCB0byBuZXdEZWZlciBvciBuZXdEZWZlci5ub3RpZnkgfSlcblx0XHRcdFx0XHRcdFx0Ly8gZGVmZXJyZWQuZG9uZShmdW5jdGlvbigpIHsgYmluZCB0byBuZXdEZWZlciBvciBuZXdEZWZlci5yZXNvbHZlIH0pXG5cdFx0XHRcdFx0XHRcdC8vIGRlZmVycmVkLmZhaWwoZnVuY3Rpb24oKSB7IGJpbmQgdG8gbmV3RGVmZXIgb3IgbmV3RGVmZXIucmVqZWN0IH0pXG5cdFx0XHRcdFx0XHRcdGRlZmVycmVkWyB0dXBsZVsgMSBdIF0oIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHRcdHZhciByZXR1cm5lZCA9IGZuICYmIGZuLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdFx0XHRcdFx0XHRpZiAoIHJldHVybmVkICYmIGlzRnVuY3Rpb24oIHJldHVybmVkLnByb21pc2UgKSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdHJldHVybmVkLnByb21pc2UoKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQucHJvZ3Jlc3MoIG5ld0RlZmVyLm5vdGlmeSApXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC5kb25lKCBuZXdEZWZlci5yZXNvbHZlIClcblx0XHRcdFx0XHRcdFx0XHRcdFx0LmZhaWwoIG5ld0RlZmVyLnJlamVjdCApO1xuXHRcdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRuZXdEZWZlclsgdHVwbGVbIDAgXSArIFwiV2l0aFwiIF0oXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHRoaXMsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGZuID8gWyByZXR1cm5lZCBdIDogYXJndW1lbnRzXG5cdFx0XHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fSApO1xuXHRcdFx0XHRcdFx0fSApO1xuXHRcdFx0XHRcdFx0Zm5zID0gbnVsbDtcblx0XHRcdFx0XHR9ICkucHJvbWlzZSgpO1xuXHRcdFx0XHR9LFxuXHRcdFx0XHR0aGVuOiBmdW5jdGlvbiggb25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQsIG9uUHJvZ3Jlc3MgKSB7XG5cdFx0XHRcdFx0dmFyIG1heERlcHRoID0gMDtcblx0XHRcdFx0XHRmdW5jdGlvbiByZXNvbHZlKCBkZXB0aCwgZGVmZXJyZWQsIGhhbmRsZXIsIHNwZWNpYWwgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdHZhciB0aGF0ID0gdGhpcyxcblx0XHRcdFx0XHRcdFx0XHRhcmdzID0gYXJndW1lbnRzLFxuXHRcdFx0XHRcdFx0XHRcdG1pZ2h0VGhyb3cgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0XHRcdHZhciByZXR1cm5lZCwgdGhlbjtcblxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbiAyLjMuMy4zLjNcblx0XHRcdFx0XHRcdFx0XHRcdC8vIGh0dHBzOi8vcHJvbWlzZXNhcGx1cy5jb20vI3BvaW50LTU5XG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBJZ25vcmUgZG91YmxlLXJlc29sdXRpb24gYXR0ZW1wdHNcblx0XHRcdFx0XHRcdFx0XHRcdGlmICggZGVwdGggPCBtYXhEZXB0aCApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm5lZCA9IGhhbmRsZXIuYXBwbHkoIHRoYXQsIGFyZ3MgKTtcblxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbiAyLjMuMVxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNDhcblx0XHRcdFx0XHRcdFx0XHRcdGlmICggcmV0dXJuZWQgPT09IGRlZmVycmVkLnByb21pc2UoKSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0dGhyb3cgbmV3IFR5cGVFcnJvciggXCJUaGVuYWJsZSBzZWxmLXJlc29sdXRpb25cIiApO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBQcm9taXNlcy9BKyBzZWN0aW9ucyAyLjMuMy4xLCAzLjVcblx0XHRcdFx0XHRcdFx0XHRcdC8vIGh0dHBzOi8vcHJvbWlzZXNhcGx1cy5jb20vI3BvaW50LTU0XG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC03NVxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gUmV0cmlldmUgYHRoZW5gIG9ubHkgb25jZVxuXHRcdFx0XHRcdFx0XHRcdFx0dGhlbiA9IHJldHVybmVkICYmXG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbiAyLjMuNFxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC02NFxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBPbmx5IGNoZWNrIG9iamVjdHMgYW5kIGZ1bmN0aW9ucyBmb3IgdGhlbmFiaWxpdHlcblx0XHRcdFx0XHRcdFx0XHRcdFx0KCB0eXBlb2YgcmV0dXJuZWQgPT09IFwib2JqZWN0XCIgfHxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0eXBlb2YgcmV0dXJuZWQgPT09IFwiZnVuY3Rpb25cIiApICYmXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHJldHVybmVkLnRoZW47XG5cblx0XHRcdFx0XHRcdFx0XHRcdC8vIEhhbmRsZSBhIHJldHVybmVkIHRoZW5hYmxlXG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGlzRnVuY3Rpb24oIHRoZW4gKSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBTcGVjaWFsIHByb2Nlc3NvcnMgKG5vdGlmeSkganVzdCB3YWl0IGZvciByZXNvbHV0aW9uXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggc3BlY2lhbCApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0aGVuLmNhbGwoXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm5lZCxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJlc29sdmUoIG1heERlcHRoLCBkZWZlcnJlZCwgSWRlbnRpdHksIHNwZWNpYWwgKSxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJlc29sdmUoIG1heERlcHRoLCBkZWZlcnJlZCwgVGhyb3dlciwgc3BlY2lhbCApXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0KTtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBOb3JtYWwgcHJvY2Vzc29ycyAocmVzb2x2ZSkgYWxzbyBob29rIGludG8gcHJvZ3Jlc3Ncblx0XHRcdFx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIC4uLmFuZCBkaXNyZWdhcmQgb2xkZXIgcmVzb2x1dGlvbiB2YWx1ZXNcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRtYXhEZXB0aCsrO1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dGhlbi5jYWxsKFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuZWQsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIElkZW50aXR5LCBzcGVjaWFsICksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIFRocm93ZXIsIHNwZWNpYWwgKSxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJlc29sdmUoIG1heERlcHRoLCBkZWZlcnJlZCwgSWRlbnRpdHksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGRlZmVycmVkLm5vdGlmeVdpdGggKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gSGFuZGxlIGFsbCBvdGhlciByZXR1cm5lZCB2YWx1ZXNcblx0XHRcdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gT25seSBzdWJzdGl0dXRlIGhhbmRsZXJzIHBhc3Mgb24gY29udGV4dFxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBhbmQgbXVsdGlwbGUgdmFsdWVzIChub24tc3BlYyBiZWhhdmlvcilcblx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBoYW5kbGVyICE9PSBJZGVudGl0eSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0aGF0ID0gdW5kZWZpbmVkO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGFyZ3MgPSBbIHJldHVybmVkIF07XG5cdFx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBQcm9jZXNzIHRoZSB2YWx1ZShzKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBEZWZhdWx0IHByb2Nlc3MgaXMgcmVzb2x2ZVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQoIHNwZWNpYWwgfHwgZGVmZXJyZWQucmVzb2x2ZVdpdGggKSggdGhhdCwgYXJncyApO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdH0sXG5cblx0XHRcdFx0XHRcdFx0XHQvLyBPbmx5IG5vcm1hbCBwcm9jZXNzb3JzIChyZXNvbHZlKSBjYXRjaCBhbmQgcmVqZWN0IGV4Y2VwdGlvbnNcblx0XHRcdFx0XHRcdFx0XHRwcm9jZXNzID0gc3BlY2lhbCA/XG5cdFx0XHRcdFx0XHRcdFx0XHRtaWdodFRocm93IDpcblx0XHRcdFx0XHRcdFx0XHRcdGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdG1pZ2h0VGhyb3coKTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0fSBjYXRjaCAoIGUgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGpRdWVyeS5EZWZlcnJlZC5leGNlcHRpb25Ib29rICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0alF1ZXJ5LkRlZmVycmVkLmV4Y2VwdGlvbkhvb2soIGUsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHByb2Nlc3Muc3RhY2tUcmFjZSApO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFByb21pc2VzL0ErIHNlY3Rpb24gMi4zLjMuMy40LjFcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC02MVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIElnbm9yZSBwb3N0LXJlc29sdXRpb24gZXhjZXB0aW9uc1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggZGVwdGggKyAxID49IG1heERlcHRoICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBPbmx5IHN1YnN0aXR1dGUgaGFuZGxlcnMgcGFzcyBvbiBjb250ZXh0XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBhbmQgbXVsdGlwbGUgdmFsdWVzIChub24tc3BlYyBiZWhhdmlvcilcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggaGFuZGxlciAhPT0gVGhyb3dlciApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0dGhhdCA9IHVuZGVmaW5lZDtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0YXJncyA9IFsgZSBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRkZWZlcnJlZC5yZWplY3RXaXRoKCB0aGF0LCBhcmdzICk7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0XHR9O1xuXG5cdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFByb21pc2VzL0ErIHNlY3Rpb24gMi4zLjMuMy4xXG5cdFx0XHRcdFx0XHRcdC8vIGh0dHBzOi8vcHJvbWlzZXNhcGx1cy5jb20vI3BvaW50LTU3XG5cdFx0XHRcdFx0XHRcdC8vIFJlLXJlc29sdmUgcHJvbWlzZXMgaW1tZWRpYXRlbHkgdG8gZG9kZ2UgZmFsc2UgcmVqZWN0aW9uIGZyb21cblx0XHRcdFx0XHRcdFx0Ly8gc3Vic2VxdWVudCBlcnJvcnNcblx0XHRcdFx0XHRcdFx0aWYgKCBkZXB0aCApIHtcblx0XHRcdFx0XHRcdFx0XHRwcm9jZXNzKCk7XG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBDYWxsIGFuIG9wdGlvbmFsIGhvb2sgdG8gcmVjb3JkIHRoZSBzdGFjaywgaW4gY2FzZSBvZiBleGNlcHRpb25cblx0XHRcdFx0XHRcdFx0XHQvLyBzaW5jZSBpdCdzIG90aGVyd2lzZSBsb3N0IHdoZW4gZXhlY3V0aW9uIGdvZXMgYXN5bmNcblx0XHRcdFx0XHRcdFx0XHRpZiAoIGpRdWVyeS5EZWZlcnJlZC5nZXRTdGFja0hvb2sgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRwcm9jZXNzLnN0YWNrVHJhY2UgPSBqUXVlcnkuRGVmZXJyZWQuZ2V0U3RhY2tIb29rKCk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdHdpbmRvdy5zZXRUaW1lb3V0KCBwcm9jZXNzICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0cmV0dXJuIGpRdWVyeS5EZWZlcnJlZCggZnVuY3Rpb24oIG5ld0RlZmVyICkge1xuXG5cdFx0XHRcdFx0XHQvLyBwcm9ncmVzc19oYW5kbGVycy5hZGQoIC4uLiApXG5cdFx0XHRcdFx0XHR0dXBsZXNbIDAgXVsgMyBdLmFkZChcblx0XHRcdFx0XHRcdFx0cmVzb2x2ZShcblx0XHRcdFx0XHRcdFx0XHQwLFxuXHRcdFx0XHRcdFx0XHRcdG5ld0RlZmVyLFxuXHRcdFx0XHRcdFx0XHRcdGlzRnVuY3Rpb24oIG9uUHJvZ3Jlc3MgKSA/XG5cdFx0XHRcdFx0XHRcdFx0XHRvblByb2dyZXNzIDpcblx0XHRcdFx0XHRcdFx0XHRcdElkZW50aXR5LFxuXHRcdFx0XHRcdFx0XHRcdG5ld0RlZmVyLm5vdGlmeVdpdGhcblx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdFx0KTtcblxuXHRcdFx0XHRcdFx0Ly8gZnVsZmlsbGVkX2hhbmRsZXJzLmFkZCggLi4uIClcblx0XHRcdFx0XHRcdHR1cGxlc1sgMSBdWyAzIF0uYWRkKFxuXHRcdFx0XHRcdFx0XHRyZXNvbHZlKFxuXHRcdFx0XHRcdFx0XHRcdDAsXG5cdFx0XHRcdFx0XHRcdFx0bmV3RGVmZXIsXG5cdFx0XHRcdFx0XHRcdFx0aXNGdW5jdGlvbiggb25GdWxmaWxsZWQgKSA/XG5cdFx0XHRcdFx0XHRcdFx0XHRvbkZ1bGZpbGxlZCA6XG5cdFx0XHRcdFx0XHRcdFx0XHRJZGVudGl0eVxuXHRcdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0XHQpO1xuXG5cdFx0XHRcdFx0XHQvLyByZWplY3RlZF9oYW5kbGVycy5hZGQoIC4uLiApXG5cdFx0XHRcdFx0XHR0dXBsZXNbIDIgXVsgMyBdLmFkZChcblx0XHRcdFx0XHRcdFx0cmVzb2x2ZShcblx0XHRcdFx0XHRcdFx0XHQwLFxuXHRcdFx0XHRcdFx0XHRcdG5ld0RlZmVyLFxuXHRcdFx0XHRcdFx0XHRcdGlzRnVuY3Rpb24oIG9uUmVqZWN0ZWQgKSA/XG5cdFx0XHRcdFx0XHRcdFx0XHRvblJlamVjdGVkIDpcblx0XHRcdFx0XHRcdFx0XHRcdFRocm93ZXJcblx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHR9ICkucHJvbWlzZSgpO1xuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIEdldCBhIHByb21pc2UgZm9yIHRoaXMgZGVmZXJyZWRcblx0XHRcdFx0Ly8gSWYgb2JqIGlzIHByb3ZpZGVkLCB0aGUgcHJvbWlzZSBhc3BlY3QgaXMgYWRkZWQgdG8gdGhlIG9iamVjdFxuXHRcdFx0XHRwcm9taXNlOiBmdW5jdGlvbiggb2JqICkge1xuXHRcdFx0XHRcdHJldHVybiBvYmogIT0gbnVsbCA/IGpRdWVyeS5leHRlbmQoIG9iaiwgcHJvbWlzZSApIDogcHJvbWlzZTtcblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHRcdGRlZmVycmVkID0ge307XG5cblx0XHQvLyBBZGQgbGlzdC1zcGVjaWZpYyBtZXRob2RzXG5cdFx0alF1ZXJ5LmVhY2goIHR1cGxlcywgZnVuY3Rpb24oIGksIHR1cGxlICkge1xuXHRcdFx0dmFyIGxpc3QgPSB0dXBsZVsgMiBdLFxuXHRcdFx0XHRzdGF0ZVN0cmluZyA9IHR1cGxlWyA1IF07XG5cblx0XHRcdC8vIHByb21pc2UucHJvZ3Jlc3MgPSBsaXN0LmFkZFxuXHRcdFx0Ly8gcHJvbWlzZS5kb25lID0gbGlzdC5hZGRcblx0XHRcdC8vIHByb21pc2UuZmFpbCA9IGxpc3QuYWRkXG5cdFx0XHRwcm9taXNlWyB0dXBsZVsgMSBdIF0gPSBsaXN0LmFkZDtcblxuXHRcdFx0Ly8gSGFuZGxlIHN0YXRlXG5cdFx0XHRpZiAoIHN0YXRlU3RyaW5nICkge1xuXHRcdFx0XHRsaXN0LmFkZChcblx0XHRcdFx0XHRmdW5jdGlvbigpIHtcblxuXHRcdFx0XHRcdFx0Ly8gc3RhdGUgPSBcInJlc29sdmVkXCIgKGkuZS4sIGZ1bGZpbGxlZClcblx0XHRcdFx0XHRcdC8vIHN0YXRlID0gXCJyZWplY3RlZFwiXG5cdFx0XHRcdFx0XHRzdGF0ZSA9IHN0YXRlU3RyaW5nO1xuXHRcdFx0XHRcdH0sXG5cblx0XHRcdFx0XHQvLyByZWplY3RlZF9jYWxsYmFja3MuZGlzYWJsZVxuXHRcdFx0XHRcdC8vIGZ1bGZpbGxlZF9jYWxsYmFja3MuZGlzYWJsZVxuXHRcdFx0XHRcdHR1cGxlc1sgMyAtIGkgXVsgMiBdLmRpc2FibGUsXG5cblx0XHRcdFx0XHQvLyByZWplY3RlZF9oYW5kbGVycy5kaXNhYmxlXG5cdFx0XHRcdFx0Ly8gZnVsZmlsbGVkX2hhbmRsZXJzLmRpc2FibGVcblx0XHRcdFx0XHR0dXBsZXNbIDMgLSBpIF1bIDMgXS5kaXNhYmxlLFxuXG5cdFx0XHRcdFx0Ly8gcHJvZ3Jlc3NfY2FsbGJhY2tzLmxvY2tcblx0XHRcdFx0XHR0dXBsZXNbIDAgXVsgMiBdLmxvY2ssXG5cblx0XHRcdFx0XHQvLyBwcm9ncmVzc19oYW5kbGVycy5sb2NrXG5cdFx0XHRcdFx0dHVwbGVzWyAwIF1bIDMgXS5sb2NrXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIHByb2dyZXNzX2hhbmRsZXJzLmZpcmVcblx0XHRcdC8vIGZ1bGZpbGxlZF9oYW5kbGVycy5maXJlXG5cdFx0XHQvLyByZWplY3RlZF9oYW5kbGVycy5maXJlXG5cdFx0XHRsaXN0LmFkZCggdHVwbGVbIDMgXS5maXJlICk7XG5cblx0XHRcdC8vIGRlZmVycmVkLm5vdGlmeSA9IGZ1bmN0aW9uKCkgeyBkZWZlcnJlZC5ub3RpZnlXaXRoKC4uLikgfVxuXHRcdFx0Ly8gZGVmZXJyZWQucmVzb2x2ZSA9IGZ1bmN0aW9uKCkgeyBkZWZlcnJlZC5yZXNvbHZlV2l0aCguLi4pIH1cblx0XHRcdC8vIGRlZmVycmVkLnJlamVjdCA9IGZ1bmN0aW9uKCkgeyBkZWZlcnJlZC5yZWplY3RXaXRoKC4uLikgfVxuXHRcdFx0ZGVmZXJyZWRbIHR1cGxlWyAwIF0gXSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRkZWZlcnJlZFsgdHVwbGVbIDAgXSArIFwiV2l0aFwiIF0oIHRoaXMgPT09IGRlZmVycmVkID8gdW5kZWZpbmVkIDogdGhpcywgYXJndW1lbnRzICk7XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fTtcblxuXHRcdFx0Ly8gZGVmZXJyZWQubm90aWZ5V2l0aCA9IGxpc3QuZmlyZVdpdGhcblx0XHRcdC8vIGRlZmVycmVkLnJlc29sdmVXaXRoID0gbGlzdC5maXJlV2l0aFxuXHRcdFx0Ly8gZGVmZXJyZWQucmVqZWN0V2l0aCA9IGxpc3QuZmlyZVdpdGhcblx0XHRcdGRlZmVycmVkWyB0dXBsZVsgMCBdICsgXCJXaXRoXCIgXSA9IGxpc3QuZmlyZVdpdGg7XG5cdFx0fSApO1xuXG5cdFx0Ly8gTWFrZSB0aGUgZGVmZXJyZWQgYSBwcm9taXNlXG5cdFx0cHJvbWlzZS5wcm9taXNlKCBkZWZlcnJlZCApO1xuXG5cdFx0Ly8gQ2FsbCBnaXZlbiBmdW5jIGlmIGFueVxuXHRcdGlmICggZnVuYyApIHtcblx0XHRcdGZ1bmMuY2FsbCggZGVmZXJyZWQsIGRlZmVycmVkICk7XG5cdFx0fVxuXG5cdFx0Ly8gQWxsIGRvbmUhXG5cdFx0cmV0dXJuIGRlZmVycmVkO1xuXHR9LFxuXG5cdC8vIERlZmVycmVkIGhlbHBlclxuXHR3aGVuOiBmdW5jdGlvbiggc2luZ2xlVmFsdWUgKSB7XG5cdFx0dmFyXG5cblx0XHRcdC8vIGNvdW50IG9mIHVuY29tcGxldGVkIHN1Ym9yZGluYXRlc1xuXHRcdFx0cmVtYWluaW5nID0gYXJndW1lbnRzLmxlbmd0aCxcblxuXHRcdFx0Ly8gY291bnQgb2YgdW5wcm9jZXNzZWQgYXJndW1lbnRzXG5cdFx0XHRpID0gcmVtYWluaW5nLFxuXG5cdFx0XHQvLyBzdWJvcmRpbmF0ZSBmdWxmaWxsbWVudCBkYXRhXG5cdFx0XHRyZXNvbHZlQ29udGV4dHMgPSBBcnJheSggaSApLFxuXHRcdFx0cmVzb2x2ZVZhbHVlcyA9IHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApLFxuXG5cdFx0XHQvLyB0aGUgbWFzdGVyIERlZmVycmVkXG5cdFx0XHRtYXN0ZXIgPSBqUXVlcnkuRGVmZXJyZWQoKSxcblxuXHRcdFx0Ly8gc3Vib3JkaW5hdGUgY2FsbGJhY2sgZmFjdG9yeVxuXHRcdFx0dXBkYXRlRnVuYyA9IGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0XHRyZXR1cm4gZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0XHRcdHJlc29sdmVDb250ZXh0c1sgaSBdID0gdGhpcztcblx0XHRcdFx0XHRyZXNvbHZlVmFsdWVzWyBpIF0gPSBhcmd1bWVudHMubGVuZ3RoID4gMSA/IHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApIDogdmFsdWU7XG5cdFx0XHRcdFx0aWYgKCAhKCAtLXJlbWFpbmluZyApICkge1xuXHRcdFx0XHRcdFx0bWFzdGVyLnJlc29sdmVXaXRoKCByZXNvbHZlQ29udGV4dHMsIHJlc29sdmVWYWx1ZXMgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH07XG5cdFx0XHR9O1xuXG5cdFx0Ly8gU2luZ2xlLSBhbmQgZW1wdHkgYXJndW1lbnRzIGFyZSBhZG9wdGVkIGxpa2UgUHJvbWlzZS5yZXNvbHZlXG5cdFx0aWYgKCByZW1haW5pbmcgPD0gMSApIHtcblx0XHRcdGFkb3B0VmFsdWUoIHNpbmdsZVZhbHVlLCBtYXN0ZXIuZG9uZSggdXBkYXRlRnVuYyggaSApICkucmVzb2x2ZSwgbWFzdGVyLnJlamVjdCxcblx0XHRcdFx0IXJlbWFpbmluZyApO1xuXG5cdFx0XHQvLyBVc2UgLnRoZW4oKSB0byB1bndyYXAgc2Vjb25kYXJ5IHRoZW5hYmxlcyAoY2YuIGdoLTMwMDApXG5cdFx0XHRpZiAoIG1hc3Rlci5zdGF0ZSgpID09PSBcInBlbmRpbmdcIiB8fFxuXHRcdFx0XHRpc0Z1bmN0aW9uKCByZXNvbHZlVmFsdWVzWyBpIF0gJiYgcmVzb2x2ZVZhbHVlc1sgaSBdLnRoZW4gKSApIHtcblxuXHRcdFx0XHRyZXR1cm4gbWFzdGVyLnRoZW4oKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBNdWx0aXBsZSBhcmd1bWVudHMgYXJlIGFnZ3JlZ2F0ZWQgbGlrZSBQcm9taXNlLmFsbCBhcnJheSBlbGVtZW50c1xuXHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0YWRvcHRWYWx1ZSggcmVzb2x2ZVZhbHVlc1sgaSBdLCB1cGRhdGVGdW5jKCBpICksIG1hc3Rlci5yZWplY3QgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gbWFzdGVyLnByb21pc2UoKTtcblx0fVxufSApO1xuXG5cbi8vIFRoZXNlIHVzdWFsbHkgaW5kaWNhdGUgYSBwcm9ncmFtbWVyIG1pc3Rha2UgZHVyaW5nIGRldmVsb3BtZW50LFxuLy8gd2FybiBhYm91dCB0aGVtIEFTQVAgcmF0aGVyIHRoYW4gc3dhbGxvd2luZyB0aGVtIGJ5IGRlZmF1bHQuXG52YXIgcmVycm9yTmFtZXMgPSAvXihFdmFsfEludGVybmFsfFJhbmdlfFJlZmVyZW5jZXxTeW50YXh8VHlwZXxVUkkpRXJyb3IkLztcblxualF1ZXJ5LkRlZmVycmVkLmV4Y2VwdGlvbkhvb2sgPSBmdW5jdGlvbiggZXJyb3IsIHN0YWNrICkge1xuXG5cdC8vIFN1cHBvcnQ6IElFIDggLSA5IG9ubHlcblx0Ly8gQ29uc29sZSBleGlzdHMgd2hlbiBkZXYgdG9vbHMgYXJlIG9wZW4sIHdoaWNoIGNhbiBoYXBwZW4gYXQgYW55IHRpbWVcblx0aWYgKCB3aW5kb3cuY29uc29sZSAmJiB3aW5kb3cuY29uc29sZS53YXJuICYmIGVycm9yICYmIHJlcnJvck5hbWVzLnRlc3QoIGVycm9yLm5hbWUgKSApIHtcblx0XHR3aW5kb3cuY29uc29sZS53YXJuKCBcImpRdWVyeS5EZWZlcnJlZCBleGNlcHRpb246IFwiICsgZXJyb3IubWVzc2FnZSwgZXJyb3Iuc3RhY2ssIHN0YWNrICk7XG5cdH1cbn07XG5cblxuXG5cbmpRdWVyeS5yZWFkeUV4Y2VwdGlvbiA9IGZ1bmN0aW9uKCBlcnJvciApIHtcblx0d2luZG93LnNldFRpbWVvdXQoIGZ1bmN0aW9uKCkge1xuXHRcdHRocm93IGVycm9yO1xuXHR9ICk7XG59O1xuXG5cblxuXG4vLyBUaGUgZGVmZXJyZWQgdXNlZCBvbiBET00gcmVhZHlcbnZhciByZWFkeUxpc3QgPSBqUXVlcnkuRGVmZXJyZWQoKTtcblxualF1ZXJ5LmZuLnJlYWR5ID0gZnVuY3Rpb24oIGZuICkge1xuXG5cdHJlYWR5TGlzdFxuXHRcdC50aGVuKCBmbiApXG5cblx0XHQvLyBXcmFwIGpRdWVyeS5yZWFkeUV4Y2VwdGlvbiBpbiBhIGZ1bmN0aW9uIHNvIHRoYXQgdGhlIGxvb2t1cFxuXHRcdC8vIGhhcHBlbnMgYXQgdGhlIHRpbWUgb2YgZXJyb3IgaGFuZGxpbmcgaW5zdGVhZCBvZiBjYWxsYmFja1xuXHRcdC8vIHJlZ2lzdHJhdGlvbi5cblx0XHQuY2F0Y2goIGZ1bmN0aW9uKCBlcnJvciApIHtcblx0XHRcdGpRdWVyeS5yZWFkeUV4Y2VwdGlvbiggZXJyb3IgKTtcblx0XHR9ICk7XG5cblx0cmV0dXJuIHRoaXM7XG59O1xuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cblx0Ly8gSXMgdGhlIERPTSByZWFkeSB0byBiZSB1c2VkPyBTZXQgdG8gdHJ1ZSBvbmNlIGl0IG9jY3Vycy5cblx0aXNSZWFkeTogZmFsc2UsXG5cblx0Ly8gQSBjb3VudGVyIHRvIHRyYWNrIGhvdyBtYW55IGl0ZW1zIHRvIHdhaXQgZm9yIGJlZm9yZVxuXHQvLyB0aGUgcmVhZHkgZXZlbnQgZmlyZXMuIFNlZSAjNjc4MVxuXHRyZWFkeVdhaXQ6IDEsXG5cblx0Ly8gSGFuZGxlIHdoZW4gdGhlIERPTSBpcyByZWFkeVxuXHRyZWFkeTogZnVuY3Rpb24oIHdhaXQgKSB7XG5cblx0XHQvLyBBYm9ydCBpZiB0aGVyZSBhcmUgcGVuZGluZyBob2xkcyBvciB3ZSdyZSBhbHJlYWR5IHJlYWR5XG5cdFx0aWYgKCB3YWl0ID09PSB0cnVlID8gLS1qUXVlcnkucmVhZHlXYWl0IDogalF1ZXJ5LmlzUmVhZHkgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gUmVtZW1iZXIgdGhhdCB0aGUgRE9NIGlzIHJlYWR5XG5cdFx0alF1ZXJ5LmlzUmVhZHkgPSB0cnVlO1xuXG5cdFx0Ly8gSWYgYSBub3JtYWwgRE9NIFJlYWR5IGV2ZW50IGZpcmVkLCBkZWNyZW1lbnQsIGFuZCB3YWl0IGlmIG5lZWQgYmVcblx0XHRpZiAoIHdhaXQgIT09IHRydWUgJiYgLS1qUXVlcnkucmVhZHlXYWl0ID4gMCApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBJZiB0aGVyZSBhcmUgZnVuY3Rpb25zIGJvdW5kLCB0byBleGVjdXRlXG5cdFx0cmVhZHlMaXN0LnJlc29sdmVXaXRoKCBkb2N1bWVudCwgWyBqUXVlcnkgXSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5yZWFkeS50aGVuID0gcmVhZHlMaXN0LnRoZW47XG5cbi8vIFRoZSByZWFkeSBldmVudCBoYW5kbGVyIGFuZCBzZWxmIGNsZWFudXAgbWV0aG9kXG5mdW5jdGlvbiBjb21wbGV0ZWQoKSB7XG5cdGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoIFwiRE9NQ29udGVudExvYWRlZFwiLCBjb21wbGV0ZWQgKTtcblx0d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoIFwibG9hZFwiLCBjb21wbGV0ZWQgKTtcblx0alF1ZXJ5LnJlYWR5KCk7XG59XG5cbi8vIENhdGNoIGNhc2VzIHdoZXJlICQoZG9jdW1lbnQpLnJlYWR5KCkgaXMgY2FsbGVkXG4vLyBhZnRlciB0aGUgYnJvd3NlciBldmVudCBoYXMgYWxyZWFkeSBvY2N1cnJlZC5cbi8vIFN1cHBvcnQ6IElFIDw9OSAtIDEwIG9ubHlcbi8vIE9sZGVyIElFIHNvbWV0aW1lcyBzaWduYWxzIFwiaW50ZXJhY3RpdmVcIiB0b28gc29vblxuaWYgKCBkb2N1bWVudC5yZWFkeVN0YXRlID09PSBcImNvbXBsZXRlXCIgfHxcblx0KCBkb2N1bWVudC5yZWFkeVN0YXRlICE9PSBcImxvYWRpbmdcIiAmJiAhZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmRvU2Nyb2xsICkgKSB7XG5cblx0Ly8gSGFuZGxlIGl0IGFzeW5jaHJvbm91c2x5IHRvIGFsbG93IHNjcmlwdHMgdGhlIG9wcG9ydHVuaXR5IHRvIGRlbGF5IHJlYWR5XG5cdHdpbmRvdy5zZXRUaW1lb3V0KCBqUXVlcnkucmVhZHkgKTtcblxufSBlbHNlIHtcblxuXHQvLyBVc2UgdGhlIGhhbmR5IGV2ZW50IGNhbGxiYWNrXG5cdGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIFwiRE9NQ29udGVudExvYWRlZFwiLCBjb21wbGV0ZWQgKTtcblxuXHQvLyBBIGZhbGxiYWNrIHRvIHdpbmRvdy5vbmxvYWQsIHRoYXQgd2lsbCBhbHdheXMgd29ya1xuXHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciggXCJsb2FkXCIsIGNvbXBsZXRlZCApO1xufVxuXG5cblxuXG4vLyBNdWx0aWZ1bmN0aW9uYWwgbWV0aG9kIHRvIGdldCBhbmQgc2V0IHZhbHVlcyBvZiBhIGNvbGxlY3Rpb25cbi8vIFRoZSB2YWx1ZS9zIGNhbiBvcHRpb25hbGx5IGJlIGV4ZWN1dGVkIGlmIGl0J3MgYSBmdW5jdGlvblxudmFyIGFjY2VzcyA9IGZ1bmN0aW9uKCBlbGVtcywgZm4sIGtleSwgdmFsdWUsIGNoYWluYWJsZSwgZW1wdHlHZXQsIHJhdyApIHtcblx0dmFyIGkgPSAwLFxuXHRcdGxlbiA9IGVsZW1zLmxlbmd0aCxcblx0XHRidWxrID0ga2V5ID09IG51bGw7XG5cblx0Ly8gU2V0cyBtYW55IHZhbHVlc1xuXHRpZiAoIHRvVHlwZSgga2V5ICkgPT09IFwib2JqZWN0XCIgKSB7XG5cdFx0Y2hhaW5hYmxlID0gdHJ1ZTtcblx0XHRmb3IgKCBpIGluIGtleSApIHtcblx0XHRcdGFjY2VzcyggZWxlbXMsIGZuLCBpLCBrZXlbIGkgXSwgdHJ1ZSwgZW1wdHlHZXQsIHJhdyApO1xuXHRcdH1cblxuXHQvLyBTZXRzIG9uZSB2YWx1ZVxuXHR9IGVsc2UgaWYgKCB2YWx1ZSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdGNoYWluYWJsZSA9IHRydWU7XG5cblx0XHRpZiAoICFpc0Z1bmN0aW9uKCB2YWx1ZSApICkge1xuXHRcdFx0cmF3ID0gdHJ1ZTtcblx0XHR9XG5cblx0XHRpZiAoIGJ1bGsgKSB7XG5cblx0XHRcdC8vIEJ1bGsgb3BlcmF0aW9ucyBydW4gYWdhaW5zdCB0aGUgZW50aXJlIHNldFxuXHRcdFx0aWYgKCByYXcgKSB7XG5cdFx0XHRcdGZuLmNhbGwoIGVsZW1zLCB2YWx1ZSApO1xuXHRcdFx0XHRmbiA9IG51bGw7XG5cblx0XHRcdC8vIC4uLmV4Y2VwdCB3aGVuIGV4ZWN1dGluZyBmdW5jdGlvbiB2YWx1ZXNcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGJ1bGsgPSBmbjtcblx0XHRcdFx0Zm4gPSBmdW5jdGlvbiggZWxlbSwga2V5LCB2YWx1ZSApIHtcblx0XHRcdFx0XHRyZXR1cm4gYnVsay5jYWxsKCBqUXVlcnkoIGVsZW0gKSwgdmFsdWUgKTtcblx0XHRcdFx0fTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoIGZuICkge1xuXHRcdFx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0XHRcdGZuKFxuXHRcdFx0XHRcdGVsZW1zWyBpIF0sIGtleSwgcmF3ID9cblx0XHRcdFx0XHR2YWx1ZSA6XG5cdFx0XHRcdFx0dmFsdWUuY2FsbCggZWxlbXNbIGkgXSwgaSwgZm4oIGVsZW1zWyBpIF0sIGtleSApIClcblx0XHRcdFx0KTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRpZiAoIGNoYWluYWJsZSApIHtcblx0XHRyZXR1cm4gZWxlbXM7XG5cdH1cblxuXHQvLyBHZXRzXG5cdGlmICggYnVsayApIHtcblx0XHRyZXR1cm4gZm4uY2FsbCggZWxlbXMgKTtcblx0fVxuXG5cdHJldHVybiBsZW4gPyBmbiggZWxlbXNbIDAgXSwga2V5ICkgOiBlbXB0eUdldDtcbn07XG5cblxuLy8gTWF0Y2hlcyBkYXNoZWQgc3RyaW5nIGZvciBjYW1lbGl6aW5nXG52YXIgcm1zUHJlZml4ID0gL14tbXMtLyxcblx0cmRhc2hBbHBoYSA9IC8tKFthLXpdKS9nO1xuXG4vLyBVc2VkIGJ5IGNhbWVsQ2FzZSBhcyBjYWxsYmFjayB0byByZXBsYWNlKClcbmZ1bmN0aW9uIGZjYW1lbENhc2UoIGFsbCwgbGV0dGVyICkge1xuXHRyZXR1cm4gbGV0dGVyLnRvVXBwZXJDYXNlKCk7XG59XG5cbi8vIENvbnZlcnQgZGFzaGVkIHRvIGNhbWVsQ2FzZTsgdXNlZCBieSB0aGUgY3NzIGFuZCBkYXRhIG1vZHVsZXNcbi8vIFN1cHBvcnQ6IElFIDw9OSAtIDExLCBFZGdlIDEyIC0gMTVcbi8vIE1pY3Jvc29mdCBmb3Jnb3QgdG8gaHVtcCB0aGVpciB2ZW5kb3IgcHJlZml4ICgjOTU3MilcbmZ1bmN0aW9uIGNhbWVsQ2FzZSggc3RyaW5nICkge1xuXHRyZXR1cm4gc3RyaW5nLnJlcGxhY2UoIHJtc1ByZWZpeCwgXCJtcy1cIiApLnJlcGxhY2UoIHJkYXNoQWxwaGEsIGZjYW1lbENhc2UgKTtcbn1cbnZhciBhY2NlcHREYXRhID0gZnVuY3Rpb24oIG93bmVyICkge1xuXG5cdC8vIEFjY2VwdHMgb25seTpcblx0Ly8gIC0gTm9kZVxuXHQvLyAgICAtIE5vZGUuRUxFTUVOVF9OT0RFXG5cdC8vICAgIC0gTm9kZS5ET0NVTUVOVF9OT0RFXG5cdC8vICAtIE9iamVjdFxuXHQvLyAgICAtIEFueVxuXHRyZXR1cm4gb3duZXIubm9kZVR5cGUgPT09IDEgfHwgb3duZXIubm9kZVR5cGUgPT09IDkgfHwgISggK293bmVyLm5vZGVUeXBlICk7XG59O1xuXG5cblxuXG5mdW5jdGlvbiBEYXRhKCkge1xuXHR0aGlzLmV4cGFuZG8gPSBqUXVlcnkuZXhwYW5kbyArIERhdGEudWlkKys7XG59XG5cbkRhdGEudWlkID0gMTtcblxuRGF0YS5wcm90b3R5cGUgPSB7XG5cblx0Y2FjaGU6IGZ1bmN0aW9uKCBvd25lciApIHtcblxuXHRcdC8vIENoZWNrIGlmIHRoZSBvd25lciBvYmplY3QgYWxyZWFkeSBoYXMgYSBjYWNoZVxuXHRcdHZhciB2YWx1ZSA9IG93bmVyWyB0aGlzLmV4cGFuZG8gXTtcblxuXHRcdC8vIElmIG5vdCwgY3JlYXRlIG9uZVxuXHRcdGlmICggIXZhbHVlICkge1xuXHRcdFx0dmFsdWUgPSB7fTtcblxuXHRcdFx0Ly8gV2UgY2FuIGFjY2VwdCBkYXRhIGZvciBub24tZWxlbWVudCBub2RlcyBpbiBtb2Rlcm4gYnJvd3NlcnMsXG5cdFx0XHQvLyBidXQgd2Ugc2hvdWxkIG5vdCwgc2VlICM4MzM1LlxuXHRcdFx0Ly8gQWx3YXlzIHJldHVybiBhbiBlbXB0eSBvYmplY3QuXG5cdFx0XHRpZiAoIGFjY2VwdERhdGEoIG93bmVyICkgKSB7XG5cblx0XHRcdFx0Ly8gSWYgaXQgaXMgYSBub2RlIHVubGlrZWx5IHRvIGJlIHN0cmluZ2lmeS1lZCBvciBsb29wZWQgb3ZlclxuXHRcdFx0XHQvLyB1c2UgcGxhaW4gYXNzaWdubWVudFxuXHRcdFx0XHRpZiAoIG93bmVyLm5vZGVUeXBlICkge1xuXHRcdFx0XHRcdG93bmVyWyB0aGlzLmV4cGFuZG8gXSA9IHZhbHVlO1xuXG5cdFx0XHRcdC8vIE90aGVyd2lzZSBzZWN1cmUgaXQgaW4gYSBub24tZW51bWVyYWJsZSBwcm9wZXJ0eVxuXHRcdFx0XHQvLyBjb25maWd1cmFibGUgbXVzdCBiZSB0cnVlIHRvIGFsbG93IHRoZSBwcm9wZXJ0eSB0byBiZVxuXHRcdFx0XHQvLyBkZWxldGVkIHdoZW4gZGF0YSBpcyByZW1vdmVkXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KCBvd25lciwgdGhpcy5leHBhbmRvLCB7XG5cdFx0XHRcdFx0XHR2YWx1ZTogdmFsdWUsXG5cdFx0XHRcdFx0XHRjb25maWd1cmFibGU6IHRydWVcblx0XHRcdFx0XHR9ICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gdmFsdWU7XG5cdH0sXG5cdHNldDogZnVuY3Rpb24oIG93bmVyLCBkYXRhLCB2YWx1ZSApIHtcblx0XHR2YXIgcHJvcCxcblx0XHRcdGNhY2hlID0gdGhpcy5jYWNoZSggb3duZXIgKTtcblxuXHRcdC8vIEhhbmRsZTogWyBvd25lciwga2V5LCB2YWx1ZSBdIGFyZ3Ncblx0XHQvLyBBbHdheXMgdXNlIGNhbWVsQ2FzZSBrZXkgKGdoLTIyNTcpXG5cdFx0aWYgKCB0eXBlb2YgZGF0YSA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdGNhY2hlWyBjYW1lbENhc2UoIGRhdGEgKSBdID0gdmFsdWU7XG5cblx0XHQvLyBIYW5kbGU6IFsgb3duZXIsIHsgcHJvcGVydGllcyB9IF0gYXJnc1xuXHRcdH0gZWxzZSB7XG5cblx0XHRcdC8vIENvcHkgdGhlIHByb3BlcnRpZXMgb25lLWJ5LW9uZSB0byB0aGUgY2FjaGUgb2JqZWN0XG5cdFx0XHRmb3IgKCBwcm9wIGluIGRhdGEgKSB7XG5cdFx0XHRcdGNhY2hlWyBjYW1lbENhc2UoIHByb3AgKSBdID0gZGF0YVsgcHJvcCBdO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gY2FjaGU7XG5cdH0sXG5cdGdldDogZnVuY3Rpb24oIG93bmVyLCBrZXkgKSB7XG5cdFx0cmV0dXJuIGtleSA9PT0gdW5kZWZpbmVkID9cblx0XHRcdHRoaXMuY2FjaGUoIG93bmVyICkgOlxuXG5cdFx0XHQvLyBBbHdheXMgdXNlIGNhbWVsQ2FzZSBrZXkgKGdoLTIyNTcpXG5cdFx0XHRvd25lclsgdGhpcy5leHBhbmRvIF0gJiYgb3duZXJbIHRoaXMuZXhwYW5kbyBdWyBjYW1lbENhc2UoIGtleSApIF07XG5cdH0sXG5cdGFjY2VzczogZnVuY3Rpb24oIG93bmVyLCBrZXksIHZhbHVlICkge1xuXG5cdFx0Ly8gSW4gY2FzZXMgd2hlcmUgZWl0aGVyOlxuXHRcdC8vXG5cdFx0Ly8gICAxLiBObyBrZXkgd2FzIHNwZWNpZmllZFxuXHRcdC8vICAgMi4gQSBzdHJpbmcga2V5IHdhcyBzcGVjaWZpZWQsIGJ1dCBubyB2YWx1ZSBwcm92aWRlZFxuXHRcdC8vXG5cdFx0Ly8gVGFrZSB0aGUgXCJyZWFkXCIgcGF0aCBhbmQgYWxsb3cgdGhlIGdldCBtZXRob2QgdG8gZGV0ZXJtaW5lXG5cdFx0Ly8gd2hpY2ggdmFsdWUgdG8gcmV0dXJuLCByZXNwZWN0aXZlbHkgZWl0aGVyOlxuXHRcdC8vXG5cdFx0Ly8gICAxLiBUaGUgZW50aXJlIGNhY2hlIG9iamVjdFxuXHRcdC8vICAgMi4gVGhlIGRhdGEgc3RvcmVkIGF0IHRoZSBrZXlcblx0XHQvL1xuXHRcdGlmICgga2V5ID09PSB1bmRlZmluZWQgfHxcblx0XHRcdFx0KCAoIGtleSAmJiB0eXBlb2Yga2V5ID09PSBcInN0cmluZ1wiICkgJiYgdmFsdWUgPT09IHVuZGVmaW5lZCApICkge1xuXG5cdFx0XHRyZXR1cm4gdGhpcy5nZXQoIG93bmVyLCBrZXkgKTtcblx0XHR9XG5cblx0XHQvLyBXaGVuIHRoZSBrZXkgaXMgbm90IGEgc3RyaW5nLCBvciBib3RoIGEga2V5IGFuZCB2YWx1ZVxuXHRcdC8vIGFyZSBzcGVjaWZpZWQsIHNldCBvciBleHRlbmQgKGV4aXN0aW5nIG9iamVjdHMpIHdpdGggZWl0aGVyOlxuXHRcdC8vXG5cdFx0Ly8gICAxLiBBbiBvYmplY3Qgb2YgcHJvcGVydGllc1xuXHRcdC8vICAgMi4gQSBrZXkgYW5kIHZhbHVlXG5cdFx0Ly9cblx0XHR0aGlzLnNldCggb3duZXIsIGtleSwgdmFsdWUgKTtcblxuXHRcdC8vIFNpbmNlIHRoZSBcInNldFwiIHBhdGggY2FuIGhhdmUgdHdvIHBvc3NpYmxlIGVudHJ5IHBvaW50c1xuXHRcdC8vIHJldHVybiB0aGUgZXhwZWN0ZWQgZGF0YSBiYXNlZCBvbiB3aGljaCBwYXRoIHdhcyB0YWtlblsqXVxuXHRcdHJldHVybiB2YWx1ZSAhPT0gdW5kZWZpbmVkID8gdmFsdWUgOiBrZXk7XG5cdH0sXG5cdHJlbW92ZTogZnVuY3Rpb24oIG93bmVyLCBrZXkgKSB7XG5cdFx0dmFyIGksXG5cdFx0XHRjYWNoZSA9IG93bmVyWyB0aGlzLmV4cGFuZG8gXTtcblxuXHRcdGlmICggY2FjaGUgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRpZiAoIGtleSAhPT0gdW5kZWZpbmVkICkge1xuXG5cdFx0XHQvLyBTdXBwb3J0IGFycmF5IG9yIHNwYWNlIHNlcGFyYXRlZCBzdHJpbmcgb2Yga2V5c1xuXHRcdFx0aWYgKCBBcnJheS5pc0FycmF5KCBrZXkgKSApIHtcblxuXHRcdFx0XHQvLyBJZiBrZXkgaXMgYW4gYXJyYXkgb2Yga2V5cy4uLlxuXHRcdFx0XHQvLyBXZSBhbHdheXMgc2V0IGNhbWVsQ2FzZSBrZXlzLCBzbyByZW1vdmUgdGhhdC5cblx0XHRcdFx0a2V5ID0ga2V5Lm1hcCggY2FtZWxDYXNlICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRrZXkgPSBjYW1lbENhc2UoIGtleSApO1xuXG5cdFx0XHRcdC8vIElmIGEga2V5IHdpdGggdGhlIHNwYWNlcyBleGlzdHMsIHVzZSBpdC5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlLCBjcmVhdGUgYW4gYXJyYXkgYnkgbWF0Y2hpbmcgbm9uLXdoaXRlc3BhY2Vcblx0XHRcdFx0a2V5ID0ga2V5IGluIGNhY2hlID9cblx0XHRcdFx0XHRbIGtleSBdIDpcblx0XHRcdFx0XHQoIGtleS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8IFtdICk7XG5cdFx0XHR9XG5cblx0XHRcdGkgPSBrZXkubGVuZ3RoO1xuXG5cdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0ZGVsZXRlIGNhY2hlWyBrZXlbIGkgXSBdO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIFJlbW92ZSB0aGUgZXhwYW5kbyBpZiB0aGVyZSdzIG5vIG1vcmUgZGF0YVxuXHRcdGlmICgga2V5ID09PSB1bmRlZmluZWQgfHwgalF1ZXJ5LmlzRW1wdHlPYmplY3QoIGNhY2hlICkgKSB7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IENocm9tZSA8PTM1IC0gNDVcblx0XHRcdC8vIFdlYmtpdCAmIEJsaW5rIHBlcmZvcm1hbmNlIHN1ZmZlcnMgd2hlbiBkZWxldGluZyBwcm9wZXJ0aWVzXG5cdFx0XHQvLyBmcm9tIERPTSBub2Rlcywgc28gc2V0IHRvIHVuZGVmaW5lZCBpbnN0ZWFkXG5cdFx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD0zNzg2MDcgKGJ1ZyByZXN0cmljdGVkKVxuXHRcdFx0aWYgKCBvd25lci5ub2RlVHlwZSApIHtcblx0XHRcdFx0b3duZXJbIHRoaXMuZXhwYW5kbyBdID0gdW5kZWZpbmVkO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZGVsZXRlIG93bmVyWyB0aGlzLmV4cGFuZG8gXTtcblx0XHRcdH1cblx0XHR9XG5cdH0sXG5cdGhhc0RhdGE6IGZ1bmN0aW9uKCBvd25lciApIHtcblx0XHR2YXIgY2FjaGUgPSBvd25lclsgdGhpcy5leHBhbmRvIF07XG5cdFx0cmV0dXJuIGNhY2hlICE9PSB1bmRlZmluZWQgJiYgIWpRdWVyeS5pc0VtcHR5T2JqZWN0KCBjYWNoZSApO1xuXHR9XG59O1xudmFyIGRhdGFQcml2ID0gbmV3IERhdGEoKTtcblxudmFyIGRhdGFVc2VyID0gbmV3IERhdGEoKTtcblxuXG5cbi8vXHRJbXBsZW1lbnRhdGlvbiBTdW1tYXJ5XG4vL1xuLy9cdDEuIEVuZm9yY2UgQVBJIHN1cmZhY2UgYW5kIHNlbWFudGljIGNvbXBhdGliaWxpdHkgd2l0aCAxLjkueCBicmFuY2hcbi8vXHQyLiBJbXByb3ZlIHRoZSBtb2R1bGUncyBtYWludGFpbmFiaWxpdHkgYnkgcmVkdWNpbmcgdGhlIHN0b3JhZ2Vcbi8vXHRcdHBhdGhzIHRvIGEgc2luZ2xlIG1lY2hhbmlzbS5cbi8vXHQzLiBVc2UgdGhlIHNhbWUgc2luZ2xlIG1lY2hhbmlzbSB0byBzdXBwb3J0IFwicHJpdmF0ZVwiIGFuZCBcInVzZXJcIiBkYXRhLlxuLy9cdDQuIF9OZXZlcl8gZXhwb3NlIFwicHJpdmF0ZVwiIGRhdGEgdG8gdXNlciBjb2RlIChUT0RPOiBEcm9wIF9kYXRhLCBfcmVtb3ZlRGF0YSlcbi8vXHQ1LiBBdm9pZCBleHBvc2luZyBpbXBsZW1lbnRhdGlvbiBkZXRhaWxzIG9uIHVzZXIgb2JqZWN0cyAoZWcuIGV4cGFuZG8gcHJvcGVydGllcylcbi8vXHQ2LiBQcm92aWRlIGEgY2xlYXIgcGF0aCBmb3IgaW1wbGVtZW50YXRpb24gdXBncmFkZSB0byBXZWFrTWFwIGluIDIwMTRcblxudmFyIHJicmFjZSA9IC9eKD86XFx7W1xcd1xcV10qXFx9fFxcW1tcXHdcXFddKlxcXSkkLyxcblx0cm11bHRpRGFzaCA9IC9bQS1aXS9nO1xuXG5mdW5jdGlvbiBnZXREYXRhKCBkYXRhICkge1xuXHRpZiAoIGRhdGEgPT09IFwidHJ1ZVwiICkge1xuXHRcdHJldHVybiB0cnVlO1xuXHR9XG5cblx0aWYgKCBkYXRhID09PSBcImZhbHNlXCIgKSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cblx0aWYgKCBkYXRhID09PSBcIm51bGxcIiApIHtcblx0XHRyZXR1cm4gbnVsbDtcblx0fVxuXG5cdC8vIE9ubHkgY29udmVydCB0byBhIG51bWJlciBpZiBpdCBkb2Vzbid0IGNoYW5nZSB0aGUgc3RyaW5nXG5cdGlmICggZGF0YSA9PT0gK2RhdGEgKyBcIlwiICkge1xuXHRcdHJldHVybiArZGF0YTtcblx0fVxuXG5cdGlmICggcmJyYWNlLnRlc3QoIGRhdGEgKSApIHtcblx0XHRyZXR1cm4gSlNPTi5wYXJzZSggZGF0YSApO1xuXHR9XG5cblx0cmV0dXJuIGRhdGE7XG59XG5cbmZ1bmN0aW9uIGRhdGFBdHRyKCBlbGVtLCBrZXksIGRhdGEgKSB7XG5cdHZhciBuYW1lO1xuXG5cdC8vIElmIG5vdGhpbmcgd2FzIGZvdW5kIGludGVybmFsbHksIHRyeSB0byBmZXRjaCBhbnlcblx0Ly8gZGF0YSBmcm9tIHRoZSBIVE1MNSBkYXRhLSogYXR0cmlidXRlXG5cdGlmICggZGF0YSA9PT0gdW5kZWZpbmVkICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0bmFtZSA9IFwiZGF0YS1cIiArIGtleS5yZXBsYWNlKCBybXVsdGlEYXNoLCBcIi0kJlwiICkudG9Mb3dlckNhc2UoKTtcblx0XHRkYXRhID0gZWxlbS5nZXRBdHRyaWJ1dGUoIG5hbWUgKTtcblxuXHRcdGlmICggdHlwZW9mIGRhdGEgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHR0cnkge1xuXHRcdFx0XHRkYXRhID0gZ2V0RGF0YSggZGF0YSApO1xuXHRcdFx0fSBjYXRjaCAoIGUgKSB7fVxuXG5cdFx0XHQvLyBNYWtlIHN1cmUgd2Ugc2V0IHRoZSBkYXRhIHNvIGl0IGlzbid0IGNoYW5nZWQgbGF0ZXJcblx0XHRcdGRhdGFVc2VyLnNldCggZWxlbSwga2V5LCBkYXRhICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGRhdGEgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHR9XG5cdHJldHVybiBkYXRhO1xufVxuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cdGhhc0RhdGE6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBkYXRhVXNlci5oYXNEYXRhKCBlbGVtICkgfHwgZGF0YVByaXYuaGFzRGF0YSggZWxlbSApO1xuXHR9LFxuXG5cdGRhdGE6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBkYXRhICkge1xuXHRcdHJldHVybiBkYXRhVXNlci5hY2Nlc3MoIGVsZW0sIG5hbWUsIGRhdGEgKTtcblx0fSxcblxuXHRyZW1vdmVEYXRhOiBmdW5jdGlvbiggZWxlbSwgbmFtZSApIHtcblx0XHRkYXRhVXNlci5yZW1vdmUoIGVsZW0sIG5hbWUgKTtcblx0fSxcblxuXHQvLyBUT0RPOiBOb3cgdGhhdCBhbGwgY2FsbHMgdG8gX2RhdGEgYW5kIF9yZW1vdmVEYXRhIGhhdmUgYmVlbiByZXBsYWNlZFxuXHQvLyB3aXRoIGRpcmVjdCBjYWxscyB0byBkYXRhUHJpdiBtZXRob2RzLCB0aGVzZSBjYW4gYmUgZGVwcmVjYXRlZC5cblx0X2RhdGE6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBkYXRhICkge1xuXHRcdHJldHVybiBkYXRhUHJpdi5hY2Nlc3MoIGVsZW0sIG5hbWUsIGRhdGEgKTtcblx0fSxcblxuXHRfcmVtb3ZlRGF0YTogZnVuY3Rpb24oIGVsZW0sIG5hbWUgKSB7XG5cdFx0ZGF0YVByaXYucmVtb3ZlKCBlbGVtLCBuYW1lICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRkYXRhOiBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHtcblx0XHR2YXIgaSwgbmFtZSwgZGF0YSxcblx0XHRcdGVsZW0gPSB0aGlzWyAwIF0sXG5cdFx0XHRhdHRycyA9IGVsZW0gJiYgZWxlbS5hdHRyaWJ1dGVzO1xuXG5cdFx0Ly8gR2V0cyBhbGwgdmFsdWVzXG5cdFx0aWYgKCBrZXkgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdGlmICggdGhpcy5sZW5ndGggKSB7XG5cdFx0XHRcdGRhdGEgPSBkYXRhVXNlci5nZXQoIGVsZW0gKTtcblxuXHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgJiYgIWRhdGFQcml2LmdldCggZWxlbSwgXCJoYXNEYXRhQXR0cnNcIiApICkge1xuXHRcdFx0XHRcdGkgPSBhdHRycy5sZW5ndGg7XG5cdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cblx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDExIG9ubHlcblx0XHRcdFx0XHRcdC8vIFRoZSBhdHRycyBlbGVtZW50cyBjYW4gYmUgbnVsbCAoIzE0ODk0KVxuXHRcdFx0XHRcdFx0aWYgKCBhdHRyc1sgaSBdICkge1xuXHRcdFx0XHRcdFx0XHRuYW1lID0gYXR0cnNbIGkgXS5uYW1lO1xuXHRcdFx0XHRcdFx0XHRpZiAoIG5hbWUuaW5kZXhPZiggXCJkYXRhLVwiICkgPT09IDAgKSB7XG5cdFx0XHRcdFx0XHRcdFx0bmFtZSA9IGNhbWVsQ2FzZSggbmFtZS5zbGljZSggNSApICk7XG5cdFx0XHRcdFx0XHRcdFx0ZGF0YUF0dHIoIGVsZW0sIG5hbWUsIGRhdGFbIG5hbWUgXSApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGRhdGFQcml2LnNldCggZWxlbSwgXCJoYXNEYXRhQXR0cnNcIiwgdHJ1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBkYXRhO1xuXHRcdH1cblxuXHRcdC8vIFNldHMgbXVsdGlwbGUgdmFsdWVzXG5cdFx0aWYgKCB0eXBlb2Yga2V5ID09PSBcIm9iamVjdFwiICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGRhdGFVc2VyLnNldCggdGhpcywga2V5ICk7XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0dmFyIGRhdGE7XG5cblx0XHRcdC8vIFRoZSBjYWxsaW5nIGpRdWVyeSBvYmplY3QgKGVsZW1lbnQgbWF0Y2hlcykgaXMgbm90IGVtcHR5XG5cdFx0XHQvLyAoYW5kIHRoZXJlZm9yZSBoYXMgYW4gZWxlbWVudCBhcHBlYXJzIGF0IHRoaXNbIDAgXSkgYW5kIHRoZVxuXHRcdFx0Ly8gYHZhbHVlYCBwYXJhbWV0ZXIgd2FzIG5vdCB1bmRlZmluZWQuIEFuIGVtcHR5IGpRdWVyeSBvYmplY3Rcblx0XHRcdC8vIHdpbGwgcmVzdWx0IGluIGB1bmRlZmluZWRgIGZvciBlbGVtID0gdGhpc1sgMCBdIHdoaWNoIHdpbGxcblx0XHRcdC8vIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhbiBhdHRlbXB0IHRvIHJlYWQgYSBkYXRhIGNhY2hlIGlzIG1hZGUuXG5cdFx0XHRpZiAoIGVsZW0gJiYgdmFsdWUgPT09IHVuZGVmaW5lZCApIHtcblxuXHRcdFx0XHQvLyBBdHRlbXB0IHRvIGdldCBkYXRhIGZyb20gdGhlIGNhY2hlXG5cdFx0XHRcdC8vIFRoZSBrZXkgd2lsbCBhbHdheXMgYmUgY2FtZWxDYXNlZCBpbiBEYXRhXG5cdFx0XHRcdGRhdGEgPSBkYXRhVXNlci5nZXQoIGVsZW0sIGtleSApO1xuXHRcdFx0XHRpZiAoIGRhdGEgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRyZXR1cm4gZGF0YTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEF0dGVtcHQgdG8gXCJkaXNjb3ZlclwiIHRoZSBkYXRhIGluXG5cdFx0XHRcdC8vIEhUTUw1IGN1c3RvbSBkYXRhLSogYXR0cnNcblx0XHRcdFx0ZGF0YSA9IGRhdGFBdHRyKCBlbGVtLCBrZXkgKTtcblx0XHRcdFx0aWYgKCBkYXRhICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGRhdGE7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBXZSB0cmllZCByZWFsbHkgaGFyZCwgYnV0IHRoZSBkYXRhIGRvZXNuJ3QgZXhpc3QuXG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU2V0IHRoZSBkYXRhLi4uXG5cdFx0XHR0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXG5cdFx0XHRcdC8vIFdlIGFsd2F5cyBzdG9yZSB0aGUgY2FtZWxDYXNlZCBrZXlcblx0XHRcdFx0ZGF0YVVzZXIuc2V0KCB0aGlzLCBrZXksIHZhbHVlICk7XG5cdFx0XHR9ICk7XG5cdFx0fSwgbnVsbCwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxLCBudWxsLCB0cnVlICk7XG5cdH0sXG5cblx0cmVtb3ZlRGF0YTogZnVuY3Rpb24oIGtleSApIHtcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGRhdGFVc2VyLnJlbW92ZSggdGhpcywga2V5ICk7XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cblxualF1ZXJ5LmV4dGVuZCgge1xuXHRxdWV1ZTogZnVuY3Rpb24oIGVsZW0sIHR5cGUsIGRhdGEgKSB7XG5cdFx0dmFyIHF1ZXVlO1xuXG5cdFx0aWYgKCBlbGVtICkge1xuXHRcdFx0dHlwZSA9ICggdHlwZSB8fCBcImZ4XCIgKSArIFwicXVldWVcIjtcblx0XHRcdHF1ZXVlID0gZGF0YVByaXYuZ2V0KCBlbGVtLCB0eXBlICk7XG5cblx0XHRcdC8vIFNwZWVkIHVwIGRlcXVldWUgYnkgZ2V0dGluZyBvdXQgcXVpY2tseSBpZiB0aGlzIGlzIGp1c3QgYSBsb29rdXBcblx0XHRcdGlmICggZGF0YSApIHtcblx0XHRcdFx0aWYgKCAhcXVldWUgfHwgQXJyYXkuaXNBcnJheSggZGF0YSApICkge1xuXHRcdFx0XHRcdHF1ZXVlID0gZGF0YVByaXYuYWNjZXNzKCBlbGVtLCB0eXBlLCBqUXVlcnkubWFrZUFycmF5KCBkYXRhICkgKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRxdWV1ZS5wdXNoKCBkYXRhICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiBxdWV1ZSB8fCBbXTtcblx0XHR9XG5cdH0sXG5cblx0ZGVxdWV1ZTogZnVuY3Rpb24oIGVsZW0sIHR5cGUgKSB7XG5cdFx0dHlwZSA9IHR5cGUgfHwgXCJmeFwiO1xuXG5cdFx0dmFyIHF1ZXVlID0galF1ZXJ5LnF1ZXVlKCBlbGVtLCB0eXBlICksXG5cdFx0XHRzdGFydExlbmd0aCA9IHF1ZXVlLmxlbmd0aCxcblx0XHRcdGZuID0gcXVldWUuc2hpZnQoKSxcblx0XHRcdGhvb2tzID0galF1ZXJ5Ll9xdWV1ZUhvb2tzKCBlbGVtLCB0eXBlICksXG5cdFx0XHRuZXh0ID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGpRdWVyeS5kZXF1ZXVlKCBlbGVtLCB0eXBlICk7XG5cdFx0XHR9O1xuXG5cdFx0Ly8gSWYgdGhlIGZ4IHF1ZXVlIGlzIGRlcXVldWVkLCBhbHdheXMgcmVtb3ZlIHRoZSBwcm9ncmVzcyBzZW50aW5lbFxuXHRcdGlmICggZm4gPT09IFwiaW5wcm9ncmVzc1wiICkge1xuXHRcdFx0Zm4gPSBxdWV1ZS5zaGlmdCgpO1xuXHRcdFx0c3RhcnRMZW5ndGgtLTtcblx0XHR9XG5cblx0XHRpZiAoIGZuICkge1xuXG5cdFx0XHQvLyBBZGQgYSBwcm9ncmVzcyBzZW50aW5lbCB0byBwcmV2ZW50IHRoZSBmeCBxdWV1ZSBmcm9tIGJlaW5nXG5cdFx0XHQvLyBhdXRvbWF0aWNhbGx5IGRlcXVldWVkXG5cdFx0XHRpZiAoIHR5cGUgPT09IFwiZnhcIiApIHtcblx0XHRcdFx0cXVldWUudW5zaGlmdCggXCJpbnByb2dyZXNzXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ2xlYXIgdXAgdGhlIGxhc3QgcXVldWUgc3RvcCBmdW5jdGlvblxuXHRcdFx0ZGVsZXRlIGhvb2tzLnN0b3A7XG5cdFx0XHRmbi5jYWxsKCBlbGVtLCBuZXh0LCBob29rcyApO1xuXHRcdH1cblxuXHRcdGlmICggIXN0YXJ0TGVuZ3RoICYmIGhvb2tzICkge1xuXHRcdFx0aG9va3MuZW1wdHkuZmlyZSgpO1xuXHRcdH1cblx0fSxcblxuXHQvLyBOb3QgcHVibGljIC0gZ2VuZXJhdGUgYSBxdWV1ZUhvb2tzIG9iamVjdCwgb3IgcmV0dXJuIHRoZSBjdXJyZW50IG9uZVxuXHRfcXVldWVIb29rczogZnVuY3Rpb24oIGVsZW0sIHR5cGUgKSB7XG5cdFx0dmFyIGtleSA9IHR5cGUgKyBcInF1ZXVlSG9va3NcIjtcblx0XHRyZXR1cm4gZGF0YVByaXYuZ2V0KCBlbGVtLCBrZXkgKSB8fCBkYXRhUHJpdi5hY2Nlc3MoIGVsZW0sIGtleSwge1xuXHRcdFx0ZW1wdHk6IGpRdWVyeS5DYWxsYmFja3MoIFwib25jZSBtZW1vcnlcIiApLmFkZCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGRhdGFQcml2LnJlbW92ZSggZWxlbSwgWyB0eXBlICsgXCJxdWV1ZVwiLCBrZXkgXSApO1xuXHRcdFx0fSApXG5cdFx0fSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0cXVldWU6IGZ1bmN0aW9uKCB0eXBlLCBkYXRhICkge1xuXHRcdHZhciBzZXR0ZXIgPSAyO1xuXG5cdFx0aWYgKCB0eXBlb2YgdHlwZSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdGRhdGEgPSB0eXBlO1xuXHRcdFx0dHlwZSA9IFwiZnhcIjtcblx0XHRcdHNldHRlci0tO1xuXHRcdH1cblxuXHRcdGlmICggYXJndW1lbnRzLmxlbmd0aCA8IHNldHRlciApIHtcblx0XHRcdHJldHVybiBqUXVlcnkucXVldWUoIHRoaXNbIDAgXSwgdHlwZSApO1xuXHRcdH1cblxuXHRcdHJldHVybiBkYXRhID09PSB1bmRlZmluZWQgP1xuXHRcdFx0dGhpcyA6XG5cdFx0XHR0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHR2YXIgcXVldWUgPSBqUXVlcnkucXVldWUoIHRoaXMsIHR5cGUsIGRhdGEgKTtcblxuXHRcdFx0XHQvLyBFbnN1cmUgYSBob29rcyBmb3IgdGhpcyBxdWV1ZVxuXHRcdFx0XHRqUXVlcnkuX3F1ZXVlSG9va3MoIHRoaXMsIHR5cGUgKTtcblxuXHRcdFx0XHRpZiAoIHR5cGUgPT09IFwiZnhcIiAmJiBxdWV1ZVsgMCBdICE9PSBcImlucHJvZ3Jlc3NcIiApIHtcblx0XHRcdFx0XHRqUXVlcnkuZGVxdWV1ZSggdGhpcywgdHlwZSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9ICk7XG5cdH0sXG5cdGRlcXVldWU6IGZ1bmN0aW9uKCB0eXBlICkge1xuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0alF1ZXJ5LmRlcXVldWUoIHRoaXMsIHR5cGUgKTtcblx0XHR9ICk7XG5cdH0sXG5cdGNsZWFyUXVldWU6IGZ1bmN0aW9uKCB0eXBlICkge1xuXHRcdHJldHVybiB0aGlzLnF1ZXVlKCB0eXBlIHx8IFwiZnhcIiwgW10gKTtcblx0fSxcblxuXHQvLyBHZXQgYSBwcm9taXNlIHJlc29sdmVkIHdoZW4gcXVldWVzIG9mIGEgY2VydGFpbiB0eXBlXG5cdC8vIGFyZSBlbXB0aWVkIChmeCBpcyB0aGUgdHlwZSBieSBkZWZhdWx0KVxuXHRwcm9taXNlOiBmdW5jdGlvbiggdHlwZSwgb2JqICkge1xuXHRcdHZhciB0bXAsXG5cdFx0XHRjb3VudCA9IDEsXG5cdFx0XHRkZWZlciA9IGpRdWVyeS5EZWZlcnJlZCgpLFxuXHRcdFx0ZWxlbWVudHMgPSB0aGlzLFxuXHRcdFx0aSA9IHRoaXMubGVuZ3RoLFxuXHRcdFx0cmVzb2x2ZSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoICEoIC0tY291bnQgKSApIHtcblx0XHRcdFx0XHRkZWZlci5yZXNvbHZlV2l0aCggZWxlbWVudHMsIFsgZWxlbWVudHMgXSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXG5cdFx0aWYgKCB0eXBlb2YgdHlwZSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdG9iaiA9IHR5cGU7XG5cdFx0XHR0eXBlID0gdW5kZWZpbmVkO1xuXHRcdH1cblx0XHR0eXBlID0gdHlwZSB8fCBcImZ4XCI7XG5cblx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdHRtcCA9IGRhdGFQcml2LmdldCggZWxlbWVudHNbIGkgXSwgdHlwZSArIFwicXVldWVIb29rc1wiICk7XG5cdFx0XHRpZiAoIHRtcCAmJiB0bXAuZW1wdHkgKSB7XG5cdFx0XHRcdGNvdW50Kys7XG5cdFx0XHRcdHRtcC5lbXB0eS5hZGQoIHJlc29sdmUgKTtcblx0XHRcdH1cblx0XHR9XG5cdFx0cmVzb2x2ZSgpO1xuXHRcdHJldHVybiBkZWZlci5wcm9taXNlKCBvYmogKTtcblx0fVxufSApO1xudmFyIHBudW0gPSAoIC9bKy1dPyg/OlxcZCpcXC58KVxcZCsoPzpbZUVdWystXT9cXGQrfCkvICkuc291cmNlO1xuXG52YXIgcmNzc051bSA9IG5ldyBSZWdFeHAoIFwiXig/OihbKy1dKT18KShcIiArIHBudW0gKyBcIikoW2EteiVdKikkXCIsIFwiaVwiICk7XG5cblxudmFyIGNzc0V4cGFuZCA9IFsgXCJUb3BcIiwgXCJSaWdodFwiLCBcIkJvdHRvbVwiLCBcIkxlZnRcIiBdO1xuXG52YXIgZG9jdW1lbnRFbGVtZW50ID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuXG5cblxuXHR2YXIgaXNBdHRhY2hlZCA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGpRdWVyeS5jb250YWlucyggZWxlbS5vd25lckRvY3VtZW50LCBlbGVtICk7XG5cdFx0fSxcblx0XHRjb21wb3NlZCA9IHsgY29tcG9zZWQ6IHRydWUgfTtcblxuXHQvLyBTdXBwb3J0OiBJRSA5IC0gMTErLCBFZGdlIDEyIC0gMTgrLCBpT1MgMTAuMCAtIDEwLjIgb25seVxuXHQvLyBDaGVjayBhdHRhY2htZW50IGFjcm9zcyBzaGFkb3cgRE9NIGJvdW5kYXJpZXMgd2hlbiBwb3NzaWJsZSAoZ2gtMzUwNClcblx0Ly8gU3VwcG9ydDogaU9TIDEwLjAtMTAuMiBvbmx5XG5cdC8vIEVhcmx5IGlPUyAxMCB2ZXJzaW9ucyBzdXBwb3J0IGBhdHRhY2hTaGFkb3dgIGJ1dCBub3QgYGdldFJvb3ROb2RlYCxcblx0Ly8gbGVhZGluZyB0byBlcnJvcnMuIFdlIG5lZWQgdG8gY2hlY2sgZm9yIGBnZXRSb290Tm9kZWAuXG5cdGlmICggZG9jdW1lbnRFbGVtZW50LmdldFJvb3ROb2RlICkge1xuXHRcdGlzQXR0YWNoZWQgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBqUXVlcnkuY29udGFpbnMoIGVsZW0ub3duZXJEb2N1bWVudCwgZWxlbSApIHx8XG5cdFx0XHRcdGVsZW0uZ2V0Um9vdE5vZGUoIGNvbXBvc2VkICkgPT09IGVsZW0ub3duZXJEb2N1bWVudDtcblx0XHR9O1xuXHR9XG52YXIgaXNIaWRkZW5XaXRoaW5UcmVlID0gZnVuY3Rpb24oIGVsZW0sIGVsICkge1xuXG5cdFx0Ly8gaXNIaWRkZW5XaXRoaW5UcmVlIG1pZ2h0IGJlIGNhbGxlZCBmcm9tIGpRdWVyeSNmaWx0ZXIgZnVuY3Rpb247XG5cdFx0Ly8gaW4gdGhhdCBjYXNlLCBlbGVtZW50IHdpbGwgYmUgc2Vjb25kIGFyZ3VtZW50XG5cdFx0ZWxlbSA9IGVsIHx8IGVsZW07XG5cblx0XHQvLyBJbmxpbmUgc3R5bGUgdHJ1bXBzIGFsbFxuXHRcdHJldHVybiBlbGVtLnN0eWxlLmRpc3BsYXkgPT09IFwibm9uZVwiIHx8XG5cdFx0XHRlbGVtLnN0eWxlLmRpc3BsYXkgPT09IFwiXCIgJiZcblxuXHRcdFx0Ly8gT3RoZXJ3aXNlLCBjaGVjayBjb21wdXRlZCBzdHlsZVxuXHRcdFx0Ly8gU3VwcG9ydDogRmlyZWZveCA8PTQzIC0gNDVcblx0XHRcdC8vIERpc2Nvbm5lY3RlZCBlbGVtZW50cyBjYW4gaGF2ZSBjb21wdXRlZCBkaXNwbGF5OiBub25lLCBzbyBmaXJzdCBjb25maXJtIHRoYXQgZWxlbSBpc1xuXHRcdFx0Ly8gaW4gdGhlIGRvY3VtZW50LlxuXHRcdFx0aXNBdHRhY2hlZCggZWxlbSApICYmXG5cblx0XHRcdGpRdWVyeS5jc3MoIGVsZW0sIFwiZGlzcGxheVwiICkgPT09IFwibm9uZVwiO1xuXHR9O1xuXG52YXIgc3dhcCA9IGZ1bmN0aW9uKCBlbGVtLCBvcHRpb25zLCBjYWxsYmFjaywgYXJncyApIHtcblx0dmFyIHJldCwgbmFtZSxcblx0XHRvbGQgPSB7fTtcblxuXHQvLyBSZW1lbWJlciB0aGUgb2xkIHZhbHVlcywgYW5kIGluc2VydCB0aGUgbmV3IG9uZXNcblx0Zm9yICggbmFtZSBpbiBvcHRpb25zICkge1xuXHRcdG9sZFsgbmFtZSBdID0gZWxlbS5zdHlsZVsgbmFtZSBdO1xuXHRcdGVsZW0uc3R5bGVbIG5hbWUgXSA9IG9wdGlvbnNbIG5hbWUgXTtcblx0fVxuXG5cdHJldCA9IGNhbGxiYWNrLmFwcGx5KCBlbGVtLCBhcmdzIHx8IFtdICk7XG5cblx0Ly8gUmV2ZXJ0IHRoZSBvbGQgdmFsdWVzXG5cdGZvciAoIG5hbWUgaW4gb3B0aW9ucyApIHtcblx0XHRlbGVtLnN0eWxlWyBuYW1lIF0gPSBvbGRbIG5hbWUgXTtcblx0fVxuXG5cdHJldHVybiByZXQ7XG59O1xuXG5cblxuXG5mdW5jdGlvbiBhZGp1c3RDU1MoIGVsZW0sIHByb3AsIHZhbHVlUGFydHMsIHR3ZWVuICkge1xuXHR2YXIgYWRqdXN0ZWQsIHNjYWxlLFxuXHRcdG1heEl0ZXJhdGlvbnMgPSAyMCxcblx0XHRjdXJyZW50VmFsdWUgPSB0d2VlbiA/XG5cdFx0XHRmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuIHR3ZWVuLmN1cigpO1xuXHRcdFx0fSA6XG5cdFx0XHRmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuIGpRdWVyeS5jc3MoIGVsZW0sIHByb3AsIFwiXCIgKTtcblx0XHRcdH0sXG5cdFx0aW5pdGlhbCA9IGN1cnJlbnRWYWx1ZSgpLFxuXHRcdHVuaXQgPSB2YWx1ZVBhcnRzICYmIHZhbHVlUGFydHNbIDMgXSB8fCAoIGpRdWVyeS5jc3NOdW1iZXJbIHByb3AgXSA/IFwiXCIgOiBcInB4XCIgKSxcblxuXHRcdC8vIFN0YXJ0aW5nIHZhbHVlIGNvbXB1dGF0aW9uIGlzIHJlcXVpcmVkIGZvciBwb3RlbnRpYWwgdW5pdCBtaXNtYXRjaGVzXG5cdFx0aW5pdGlhbEluVW5pdCA9IGVsZW0ubm9kZVR5cGUgJiZcblx0XHRcdCggalF1ZXJ5LmNzc051bWJlclsgcHJvcCBdIHx8IHVuaXQgIT09IFwicHhcIiAmJiAraW5pdGlhbCApICYmXG5cdFx0XHRyY3NzTnVtLmV4ZWMoIGpRdWVyeS5jc3MoIGVsZW0sIHByb3AgKSApO1xuXG5cdGlmICggaW5pdGlhbEluVW5pdCAmJiBpbml0aWFsSW5Vbml0WyAzIF0gIT09IHVuaXQgKSB7XG5cblx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDw9NTRcblx0XHQvLyBIYWx2ZSB0aGUgaXRlcmF0aW9uIHRhcmdldCB2YWx1ZSB0byBwcmV2ZW50IGludGVyZmVyZW5jZSBmcm9tIENTUyB1cHBlciBib3VuZHMgKGdoLTIxNDQpXG5cdFx0aW5pdGlhbCA9IGluaXRpYWwgLyAyO1xuXG5cdFx0Ly8gVHJ1c3QgdW5pdHMgcmVwb3J0ZWQgYnkgalF1ZXJ5LmNzc1xuXHRcdHVuaXQgPSB1bml0IHx8IGluaXRpYWxJblVuaXRbIDMgXTtcblxuXHRcdC8vIEl0ZXJhdGl2ZWx5IGFwcHJveGltYXRlIGZyb20gYSBub256ZXJvIHN0YXJ0aW5nIHBvaW50XG5cdFx0aW5pdGlhbEluVW5pdCA9ICtpbml0aWFsIHx8IDE7XG5cblx0XHR3aGlsZSAoIG1heEl0ZXJhdGlvbnMtLSApIHtcblxuXHRcdFx0Ly8gRXZhbHVhdGUgYW5kIHVwZGF0ZSBvdXIgYmVzdCBndWVzcyAoZG91YmxpbmcgZ3Vlc3NlcyB0aGF0IHplcm8gb3V0KS5cblx0XHRcdC8vIEZpbmlzaCBpZiB0aGUgc2NhbGUgZXF1YWxzIG9yIGNyb3NzZXMgMSAobWFraW5nIHRoZSBvbGQqbmV3IHByb2R1Y3Qgbm9uLXBvc2l0aXZlKS5cblx0XHRcdGpRdWVyeS5zdHlsZSggZWxlbSwgcHJvcCwgaW5pdGlhbEluVW5pdCArIHVuaXQgKTtcblx0XHRcdGlmICggKCAxIC0gc2NhbGUgKSAqICggMSAtICggc2NhbGUgPSBjdXJyZW50VmFsdWUoKSAvIGluaXRpYWwgfHwgMC41ICkgKSA8PSAwICkge1xuXHRcdFx0XHRtYXhJdGVyYXRpb25zID0gMDtcblx0XHRcdH1cblx0XHRcdGluaXRpYWxJblVuaXQgPSBpbml0aWFsSW5Vbml0IC8gc2NhbGU7XG5cblx0XHR9XG5cblx0XHRpbml0aWFsSW5Vbml0ID0gaW5pdGlhbEluVW5pdCAqIDI7XG5cdFx0alF1ZXJ5LnN0eWxlKCBlbGVtLCBwcm9wLCBpbml0aWFsSW5Vbml0ICsgdW5pdCApO1xuXG5cdFx0Ly8gTWFrZSBzdXJlIHdlIHVwZGF0ZSB0aGUgdHdlZW4gcHJvcGVydGllcyBsYXRlciBvblxuXHRcdHZhbHVlUGFydHMgPSB2YWx1ZVBhcnRzIHx8IFtdO1xuXHR9XG5cblx0aWYgKCB2YWx1ZVBhcnRzICkge1xuXHRcdGluaXRpYWxJblVuaXQgPSAraW5pdGlhbEluVW5pdCB8fCAraW5pdGlhbCB8fCAwO1xuXG5cdFx0Ly8gQXBwbHkgcmVsYXRpdmUgb2Zmc2V0ICgrPS8tPSkgaWYgc3BlY2lmaWVkXG5cdFx0YWRqdXN0ZWQgPSB2YWx1ZVBhcnRzWyAxIF0gP1xuXHRcdFx0aW5pdGlhbEluVW5pdCArICggdmFsdWVQYXJ0c1sgMSBdICsgMSApICogdmFsdWVQYXJ0c1sgMiBdIDpcblx0XHRcdCt2YWx1ZVBhcnRzWyAyIF07XG5cdFx0aWYgKCB0d2VlbiApIHtcblx0XHRcdHR3ZWVuLnVuaXQgPSB1bml0O1xuXHRcdFx0dHdlZW4uc3RhcnQgPSBpbml0aWFsSW5Vbml0O1xuXHRcdFx0dHdlZW4uZW5kID0gYWRqdXN0ZWQ7XG5cdFx0fVxuXHR9XG5cdHJldHVybiBhZGp1c3RlZDtcbn1cblxuXG52YXIgZGVmYXVsdERpc3BsYXlNYXAgPSB7fTtcblxuZnVuY3Rpb24gZ2V0RGVmYXVsdERpc3BsYXkoIGVsZW0gKSB7XG5cdHZhciB0ZW1wLFxuXHRcdGRvYyA9IGVsZW0ub3duZXJEb2N1bWVudCxcblx0XHRub2RlTmFtZSA9IGVsZW0ubm9kZU5hbWUsXG5cdFx0ZGlzcGxheSA9IGRlZmF1bHREaXNwbGF5TWFwWyBub2RlTmFtZSBdO1xuXG5cdGlmICggZGlzcGxheSApIHtcblx0XHRyZXR1cm4gZGlzcGxheTtcblx0fVxuXG5cdHRlbXAgPSBkb2MuYm9keS5hcHBlbmRDaGlsZCggZG9jLmNyZWF0ZUVsZW1lbnQoIG5vZGVOYW1lICkgKTtcblx0ZGlzcGxheSA9IGpRdWVyeS5jc3MoIHRlbXAsIFwiZGlzcGxheVwiICk7XG5cblx0dGVtcC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKCB0ZW1wICk7XG5cblx0aWYgKCBkaXNwbGF5ID09PSBcIm5vbmVcIiApIHtcblx0XHRkaXNwbGF5ID0gXCJibG9ja1wiO1xuXHR9XG5cdGRlZmF1bHREaXNwbGF5TWFwWyBub2RlTmFtZSBdID0gZGlzcGxheTtcblxuXHRyZXR1cm4gZGlzcGxheTtcbn1cblxuZnVuY3Rpb24gc2hvd0hpZGUoIGVsZW1lbnRzLCBzaG93ICkge1xuXHR2YXIgZGlzcGxheSwgZWxlbSxcblx0XHR2YWx1ZXMgPSBbXSxcblx0XHRpbmRleCA9IDAsXG5cdFx0bGVuZ3RoID0gZWxlbWVudHMubGVuZ3RoO1xuXG5cdC8vIERldGVybWluZSBuZXcgZGlzcGxheSB2YWx1ZSBmb3IgZWxlbWVudHMgdGhhdCBuZWVkIHRvIGNoYW5nZVxuXHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdGVsZW0gPSBlbGVtZW50c1sgaW5kZXggXTtcblx0XHRpZiAoICFlbGVtLnN0eWxlICkge1xuXHRcdFx0Y29udGludWU7XG5cdFx0fVxuXG5cdFx0ZGlzcGxheSA9IGVsZW0uc3R5bGUuZGlzcGxheTtcblx0XHRpZiAoIHNob3cgKSB7XG5cblx0XHRcdC8vIFNpbmNlIHdlIGZvcmNlIHZpc2liaWxpdHkgdXBvbiBjYXNjYWRlLWhpZGRlbiBlbGVtZW50cywgYW4gaW1tZWRpYXRlIChhbmQgc2xvdylcblx0XHRcdC8vIGNoZWNrIGlzIHJlcXVpcmVkIGluIHRoaXMgZmlyc3QgbG9vcCB1bmxlc3Mgd2UgaGF2ZSBhIG5vbmVtcHR5IGRpc3BsYXkgdmFsdWUgKGVpdGhlclxuXHRcdFx0Ly8gaW5saW5lIG9yIGFib3V0LXRvLWJlLXJlc3RvcmVkKVxuXHRcdFx0aWYgKCBkaXNwbGF5ID09PSBcIm5vbmVcIiApIHtcblx0XHRcdFx0dmFsdWVzWyBpbmRleCBdID0gZGF0YVByaXYuZ2V0KCBlbGVtLCBcImRpc3BsYXlcIiApIHx8IG51bGw7XG5cdFx0XHRcdGlmICggIXZhbHVlc1sgaW5kZXggXSApIHtcblx0XHRcdFx0XHRlbGVtLnN0eWxlLmRpc3BsYXkgPSBcIlwiO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRpZiAoIGVsZW0uc3R5bGUuZGlzcGxheSA9PT0gXCJcIiAmJiBpc0hpZGRlbldpdGhpblRyZWUoIGVsZW0gKSApIHtcblx0XHRcdFx0dmFsdWVzWyBpbmRleCBdID0gZ2V0RGVmYXVsdERpc3BsYXkoIGVsZW0gKTtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0aWYgKCBkaXNwbGF5ICE9PSBcIm5vbmVcIiApIHtcblx0XHRcdFx0dmFsdWVzWyBpbmRleCBdID0gXCJub25lXCI7XG5cblx0XHRcdFx0Ly8gUmVtZW1iZXIgd2hhdCB3ZSdyZSBvdmVyd3JpdGluZ1xuXHRcdFx0XHRkYXRhUHJpdi5zZXQoIGVsZW0sIFwiZGlzcGxheVwiLCBkaXNwbGF5ICk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gU2V0IHRoZSBkaXNwbGF5IG9mIHRoZSBlbGVtZW50cyBpbiBhIHNlY29uZCBsb29wIHRvIGF2b2lkIGNvbnN0YW50IHJlZmxvd1xuXHRmb3IgKCBpbmRleCA9IDA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdGlmICggdmFsdWVzWyBpbmRleCBdICE9IG51bGwgKSB7XG5cdFx0XHRlbGVtZW50c1sgaW5kZXggXS5zdHlsZS5kaXNwbGF5ID0gdmFsdWVzWyBpbmRleCBdO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiBlbGVtZW50cztcbn1cblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRzaG93OiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gc2hvd0hpZGUoIHRoaXMsIHRydWUgKTtcblx0fSxcblx0aGlkZTogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHNob3dIaWRlKCB0aGlzICk7XG5cdH0sXG5cdHRvZ2dsZTogZnVuY3Rpb24oIHN0YXRlICkge1xuXHRcdGlmICggdHlwZW9mIHN0YXRlID09PSBcImJvb2xlYW5cIiApIHtcblx0XHRcdHJldHVybiBzdGF0ZSA/IHRoaXMuc2hvdygpIDogdGhpcy5oaWRlKCk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRpZiAoIGlzSGlkZGVuV2l0aGluVHJlZSggdGhpcyApICkge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS5zaG93KCk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS5oaWRlKCk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9XG59ICk7XG52YXIgcmNoZWNrYWJsZVR5cGUgPSAoIC9eKD86Y2hlY2tib3h8cmFkaW8pJC9pICk7XG5cbnZhciBydGFnTmFtZSA9ICggLzwoW2Etel1bXlxcL1xcMD5cXHgyMFxcdFxcclxcblxcZl0qKS9pICk7XG5cbnZhciByc2NyaXB0VHlwZSA9ICggL14kfF5tb2R1bGUkfFxcLyg/OmphdmF8ZWNtYSlzY3JpcHQvaSApO1xuXG5cblxuLy8gV2UgaGF2ZSB0byBjbG9zZSB0aGVzZSB0YWdzIHRvIHN1cHBvcnQgWEhUTUwgKCMxMzIwMClcbnZhciB3cmFwTWFwID0ge1xuXG5cdC8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG5cdG9wdGlvbjogWyAxLCBcIjxzZWxlY3QgbXVsdGlwbGU9J211bHRpcGxlJz5cIiwgXCI8L3NlbGVjdD5cIiBdLFxuXG5cdC8vIFhIVE1MIHBhcnNlcnMgZG8gbm90IG1hZ2ljYWxseSBpbnNlcnQgZWxlbWVudHMgaW4gdGhlXG5cdC8vIHNhbWUgd2F5IHRoYXQgdGFnIHNvdXAgcGFyc2VycyBkby4gU28gd2UgY2Fubm90IHNob3J0ZW5cblx0Ly8gdGhpcyBieSBvbWl0dGluZyA8dGJvZHk+IG9yIG90aGVyIHJlcXVpcmVkIGVsZW1lbnRzLlxuXHR0aGVhZDogWyAxLCBcIjx0YWJsZT5cIiwgXCI8L3RhYmxlPlwiIF0sXG5cdGNvbDogWyAyLCBcIjx0YWJsZT48Y29sZ3JvdXA+XCIsIFwiPC9jb2xncm91cD48L3RhYmxlPlwiIF0sXG5cdHRyOiBbIDIsIFwiPHRhYmxlPjx0Ym9keT5cIiwgXCI8L3Rib2R5PjwvdGFibGU+XCIgXSxcblx0dGQ6IFsgMywgXCI8dGFibGU+PHRib2R5Pjx0cj5cIiwgXCI8L3RyPjwvdGJvZHk+PC90YWJsZT5cIiBdLFxuXG5cdF9kZWZhdWx0OiBbIDAsIFwiXCIsIFwiXCIgXVxufTtcblxuLy8gU3VwcG9ydDogSUUgPD05IG9ubHlcbndyYXBNYXAub3B0Z3JvdXAgPSB3cmFwTWFwLm9wdGlvbjtcblxud3JhcE1hcC50Ym9keSA9IHdyYXBNYXAudGZvb3QgPSB3cmFwTWFwLmNvbGdyb3VwID0gd3JhcE1hcC5jYXB0aW9uID0gd3JhcE1hcC50aGVhZDtcbndyYXBNYXAudGggPSB3cmFwTWFwLnRkO1xuXG5cbmZ1bmN0aW9uIGdldEFsbCggY29udGV4dCwgdGFnICkge1xuXG5cdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExIG9ubHlcblx0Ly8gVXNlIHR5cGVvZiB0byBhdm9pZCB6ZXJvLWFyZ3VtZW50IG1ldGhvZCBpbnZvY2F0aW9uIG9uIGhvc3Qgb2JqZWN0cyAoIzE1MTUxKVxuXHR2YXIgcmV0O1xuXG5cdGlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUgIT09IFwidW5kZWZpbmVkXCIgKSB7XG5cdFx0cmV0ID0gY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSggdGFnIHx8IFwiKlwiICk7XG5cblx0fSBlbHNlIGlmICggdHlwZW9mIGNvbnRleHQucXVlcnlTZWxlY3RvckFsbCAhPT0gXCJ1bmRlZmluZWRcIiApIHtcblx0XHRyZXQgPSBjb250ZXh0LnF1ZXJ5U2VsZWN0b3JBbGwoIHRhZyB8fCBcIipcIiApO1xuXG5cdH0gZWxzZSB7XG5cdFx0cmV0ID0gW107XG5cdH1cblxuXHRpZiAoIHRhZyA9PT0gdW5kZWZpbmVkIHx8IHRhZyAmJiBub2RlTmFtZSggY29udGV4dCwgdGFnICkgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5tZXJnZSggWyBjb250ZXh0IF0sIHJldCApO1xuXHR9XG5cblx0cmV0dXJuIHJldDtcbn1cblxuXG4vLyBNYXJrIHNjcmlwdHMgYXMgaGF2aW5nIGFscmVhZHkgYmVlbiBldmFsdWF0ZWRcbmZ1bmN0aW9uIHNldEdsb2JhbEV2YWwoIGVsZW1zLCByZWZFbGVtZW50cyApIHtcblx0dmFyIGkgPSAwLFxuXHRcdGwgPSBlbGVtcy5sZW5ndGg7XG5cblx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdGRhdGFQcml2LnNldChcblx0XHRcdGVsZW1zWyBpIF0sXG5cdFx0XHRcImdsb2JhbEV2YWxcIixcblx0XHRcdCFyZWZFbGVtZW50cyB8fCBkYXRhUHJpdi5nZXQoIHJlZkVsZW1lbnRzWyBpIF0sIFwiZ2xvYmFsRXZhbFwiIClcblx0XHQpO1xuXHR9XG59XG5cblxudmFyIHJodG1sID0gLzx8JiM/XFx3KzsvO1xuXG5mdW5jdGlvbiBidWlsZEZyYWdtZW50KCBlbGVtcywgY29udGV4dCwgc2NyaXB0cywgc2VsZWN0aW9uLCBpZ25vcmVkICkge1xuXHR2YXIgZWxlbSwgdG1wLCB0YWcsIHdyYXAsIGF0dGFjaGVkLCBqLFxuXHRcdGZyYWdtZW50ID0gY29udGV4dC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksXG5cdFx0bm9kZXMgPSBbXSxcblx0XHRpID0gMCxcblx0XHRsID0gZWxlbXMubGVuZ3RoO1xuXG5cdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRlbGVtID0gZWxlbXNbIGkgXTtcblxuXHRcdGlmICggZWxlbSB8fCBlbGVtID09PSAwICkge1xuXG5cdFx0XHQvLyBBZGQgbm9kZXMgZGlyZWN0bHlcblx0XHRcdGlmICggdG9UeXBlKCBlbGVtICkgPT09IFwib2JqZWN0XCIgKSB7XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5LCBQaGFudG9tSlMgMSBvbmx5XG5cdFx0XHRcdC8vIHB1c2guYXBwbHkoXywgYXJyYXlsaWtlKSB0aHJvd3Mgb24gYW5jaWVudCBXZWJLaXRcblx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCBub2RlcywgZWxlbS5ub2RlVHlwZSA/IFsgZWxlbSBdIDogZWxlbSApO1xuXG5cdFx0XHQvLyBDb252ZXJ0IG5vbi1odG1sIGludG8gYSB0ZXh0IG5vZGVcblx0XHRcdH0gZWxzZSBpZiAoICFyaHRtbC50ZXN0KCBlbGVtICkgKSB7XG5cdFx0XHRcdG5vZGVzLnB1c2goIGNvbnRleHQuY3JlYXRlVGV4dE5vZGUoIGVsZW0gKSApO1xuXG5cdFx0XHQvLyBDb252ZXJ0IGh0bWwgaW50byBET00gbm9kZXNcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHRtcCA9IHRtcCB8fCBmcmFnbWVudC5hcHBlbmRDaGlsZCggY29udGV4dC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICkgKTtcblxuXHRcdFx0XHQvLyBEZXNlcmlhbGl6ZSBhIHN0YW5kYXJkIHJlcHJlc2VudGF0aW9uXG5cdFx0XHRcdHRhZyA9ICggcnRhZ05hbWUuZXhlYyggZWxlbSApIHx8IFsgXCJcIiwgXCJcIiBdIClbIDEgXS50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0XHR3cmFwID0gd3JhcE1hcFsgdGFnIF0gfHwgd3JhcE1hcC5fZGVmYXVsdDtcblx0XHRcdFx0dG1wLmlubmVySFRNTCA9IHdyYXBbIDEgXSArIGpRdWVyeS5odG1sUHJlZmlsdGVyKCBlbGVtICkgKyB3cmFwWyAyIF07XG5cblx0XHRcdFx0Ly8gRGVzY2VuZCB0aHJvdWdoIHdyYXBwZXJzIHRvIHRoZSByaWdodCBjb250ZW50XG5cdFx0XHRcdGogPSB3cmFwWyAwIF07XG5cdFx0XHRcdHdoaWxlICggai0tICkge1xuXHRcdFx0XHRcdHRtcCA9IHRtcC5sYXN0Q2hpbGQ7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4wIG9ubHksIFBoYW50b21KUyAxIG9ubHlcblx0XHRcdFx0Ly8gcHVzaC5hcHBseShfLCBhcnJheWxpa2UpIHRocm93cyBvbiBhbmNpZW50IFdlYktpdFxuXHRcdFx0XHRqUXVlcnkubWVyZ2UoIG5vZGVzLCB0bXAuY2hpbGROb2RlcyApO1xuXG5cdFx0XHRcdC8vIFJlbWVtYmVyIHRoZSB0b3AtbGV2ZWwgY29udGFpbmVyXG5cdFx0XHRcdHRtcCA9IGZyYWdtZW50LmZpcnN0Q2hpbGQ7XG5cblx0XHRcdFx0Ly8gRW5zdXJlIHRoZSBjcmVhdGVkIG5vZGVzIGFyZSBvcnBoYW5lZCAoIzEyMzkyKVxuXHRcdFx0XHR0bXAudGV4dENvbnRlbnQgPSBcIlwiO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIFJlbW92ZSB3cmFwcGVyIGZyb20gZnJhZ21lbnRcblx0ZnJhZ21lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xuXG5cdGkgPSAwO1xuXHR3aGlsZSAoICggZWxlbSA9IG5vZGVzWyBpKysgXSApICkge1xuXG5cdFx0Ly8gU2tpcCBlbGVtZW50cyBhbHJlYWR5IGluIHRoZSBjb250ZXh0IGNvbGxlY3Rpb24gKHRyYWMtNDA4Nylcblx0XHRpZiAoIHNlbGVjdGlvbiAmJiBqUXVlcnkuaW5BcnJheSggZWxlbSwgc2VsZWN0aW9uICkgPiAtMSApIHtcblx0XHRcdGlmICggaWdub3JlZCApIHtcblx0XHRcdFx0aWdub3JlZC5wdXNoKCBlbGVtICk7XG5cdFx0XHR9XG5cdFx0XHRjb250aW51ZTtcblx0XHR9XG5cblx0XHRhdHRhY2hlZCA9IGlzQXR0YWNoZWQoIGVsZW0gKTtcblxuXHRcdC8vIEFwcGVuZCB0byBmcmFnbWVudFxuXHRcdHRtcCA9IGdldEFsbCggZnJhZ21lbnQuYXBwZW5kQ2hpbGQoIGVsZW0gKSwgXCJzY3JpcHRcIiApO1xuXG5cdFx0Ly8gUHJlc2VydmUgc2NyaXB0IGV2YWx1YXRpb24gaGlzdG9yeVxuXHRcdGlmICggYXR0YWNoZWQgKSB7XG5cdFx0XHRzZXRHbG9iYWxFdmFsKCB0bXAgKTtcblx0XHR9XG5cblx0XHQvLyBDYXB0dXJlIGV4ZWN1dGFibGVzXG5cdFx0aWYgKCBzY3JpcHRzICkge1xuXHRcdFx0aiA9IDA7XG5cdFx0XHR3aGlsZSAoICggZWxlbSA9IHRtcFsgaisrIF0gKSApIHtcblx0XHRcdFx0aWYgKCByc2NyaXB0VHlwZS50ZXN0KCBlbGVtLnR5cGUgfHwgXCJcIiApICkge1xuXHRcdFx0XHRcdHNjcmlwdHMucHVzaCggZWxlbSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGZyYWdtZW50O1xufVxuXG5cbiggZnVuY3Rpb24oKSB7XG5cdHZhciBmcmFnbWVudCA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSxcblx0XHRkaXYgPSBmcmFnbWVudC5hcHBlbmRDaGlsZCggZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApICksXG5cdFx0aW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImlucHV0XCIgKTtcblxuXHQvLyBTdXBwb3J0OiBBbmRyb2lkIDQuMCAtIDQuMyBvbmx5XG5cdC8vIENoZWNrIHN0YXRlIGxvc3QgaWYgdGhlIG5hbWUgaXMgc2V0ICgjMTEyMTcpXG5cdC8vIFN1cHBvcnQ6IFdpbmRvd3MgV2ViIEFwcHMgKFdXQSlcblx0Ly8gYG5hbWVgIGFuZCBgdHlwZWAgbXVzdCB1c2UgLnNldEF0dHJpYnV0ZSBmb3IgV1dBICgjMTQ5MDEpXG5cdGlucHV0LnNldEF0dHJpYnV0ZSggXCJ0eXBlXCIsIFwicmFkaW9cIiApO1xuXHRpbnB1dC5zZXRBdHRyaWJ1dGUoIFwiY2hlY2tlZFwiLCBcImNoZWNrZWRcIiApO1xuXHRpbnB1dC5zZXRBdHRyaWJ1dGUoIFwibmFtZVwiLCBcInRcIiApO1xuXG5cdGRpdi5hcHBlbmRDaGlsZCggaW5wdXQgKTtcblxuXHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4xIG9ubHlcblx0Ly8gT2xkZXIgV2ViS2l0IGRvZXNuJ3QgY2xvbmUgY2hlY2tlZCBzdGF0ZSBjb3JyZWN0bHkgaW4gZnJhZ21lbnRzXG5cdHN1cHBvcnQuY2hlY2tDbG9uZSA9IGRpdi5jbG9uZU5vZGUoIHRydWUgKS5jbG9uZU5vZGUoIHRydWUgKS5sYXN0Q2hpbGQuY2hlY2tlZDtcblxuXHQvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHlcblx0Ly8gTWFrZSBzdXJlIHRleHRhcmVhIChhbmQgY2hlY2tib3gpIGRlZmF1bHRWYWx1ZSBpcyBwcm9wZXJseSBjbG9uZWRcblx0ZGl2LmlubmVySFRNTCA9IFwiPHRleHRhcmVhPng8L3RleHRhcmVhPlwiO1xuXHRzdXBwb3J0Lm5vQ2xvbmVDaGVja2VkID0gISFkaXYuY2xvbmVOb2RlKCB0cnVlICkubGFzdENoaWxkLmRlZmF1bHRWYWx1ZTtcbn0gKSgpO1xuXG5cbnZhclxuXHRya2V5RXZlbnQgPSAvXmtleS8sXG5cdHJtb3VzZUV2ZW50ID0gL14oPzptb3VzZXxwb2ludGVyfGNvbnRleHRtZW51fGRyYWd8ZHJvcCl8Y2xpY2svLFxuXHRydHlwZW5hbWVzcGFjZSA9IC9eKFteLl0qKSg/OlxcLiguKyl8KS87XG5cbmZ1bmN0aW9uIHJldHVyblRydWUoKSB7XG5cdHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiByZXR1cm5GYWxzZSgpIHtcblx0cmV0dXJuIGZhbHNlO1xufVxuXG4vLyBTdXBwb3J0OiBJRSA8PTkgLSAxMStcbi8vIGZvY3VzKCkgYW5kIGJsdXIoKSBhcmUgYXN5bmNocm9ub3VzLCBleGNlcHQgd2hlbiB0aGV5IGFyZSBuby1vcC5cbi8vIFNvIGV4cGVjdCBmb2N1cyB0byBiZSBzeW5jaHJvbm91cyB3aGVuIHRoZSBlbGVtZW50IGlzIGFscmVhZHkgYWN0aXZlLFxuLy8gYW5kIGJsdXIgdG8gYmUgc3luY2hyb25vdXMgd2hlbiB0aGUgZWxlbWVudCBpcyBub3QgYWxyZWFkeSBhY3RpdmUuXG4vLyAoZm9jdXMgYW5kIGJsdXIgYXJlIGFsd2F5cyBzeW5jaHJvbm91cyBpbiBvdGhlciBzdXBwb3J0ZWQgYnJvd3NlcnMsXG4vLyB0aGlzIGp1c3QgZGVmaW5lcyB3aGVuIHdlIGNhbiBjb3VudCBvbiBpdCkuXG5mdW5jdGlvbiBleHBlY3RTeW5jKCBlbGVtLCB0eXBlICkge1xuXHRyZXR1cm4gKCBlbGVtID09PSBzYWZlQWN0aXZlRWxlbWVudCgpICkgPT09ICggdHlwZSA9PT0gXCJmb2N1c1wiICk7XG59XG5cbi8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG4vLyBBY2Nlc3NpbmcgZG9jdW1lbnQuYWN0aXZlRWxlbWVudCBjYW4gdGhyb3cgdW5leHBlY3RlZGx5XG4vLyBodHRwczovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvMTMzOTNcbmZ1bmN0aW9uIHNhZmVBY3RpdmVFbGVtZW50KCkge1xuXHR0cnkge1xuXHRcdHJldHVybiBkb2N1bWVudC5hY3RpdmVFbGVtZW50O1xuXHR9IGNhdGNoICggZXJyICkgeyB9XG59XG5cbmZ1bmN0aW9uIG9uKCBlbGVtLCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuLCBvbmUgKSB7XG5cdHZhciBvcmlnRm4sIHR5cGU7XG5cblx0Ly8gVHlwZXMgY2FuIGJlIGEgbWFwIG9mIHR5cGVzL2hhbmRsZXJzXG5cdGlmICggdHlwZW9mIHR5cGVzID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0Ly8gKCB0eXBlcy1PYmplY3QsIHNlbGVjdG9yLCBkYXRhIClcblx0XHRpZiAoIHR5cGVvZiBzZWxlY3RvciAhPT0gXCJzdHJpbmdcIiApIHtcblxuXHRcdFx0Ly8gKCB0eXBlcy1PYmplY3QsIGRhdGEgKVxuXHRcdFx0ZGF0YSA9IGRhdGEgfHwgc2VsZWN0b3I7XG5cdFx0XHRzZWxlY3RvciA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdFx0Zm9yICggdHlwZSBpbiB0eXBlcyApIHtcblx0XHRcdG9uKCBlbGVtLCB0eXBlLCBzZWxlY3RvciwgZGF0YSwgdHlwZXNbIHR5cGUgXSwgb25lICk7XG5cdFx0fVxuXHRcdHJldHVybiBlbGVtO1xuXHR9XG5cblx0aWYgKCBkYXRhID09IG51bGwgJiYgZm4gPT0gbnVsbCApIHtcblxuXHRcdC8vICggdHlwZXMsIGZuIClcblx0XHRmbiA9IHNlbGVjdG9yO1xuXHRcdGRhdGEgPSBzZWxlY3RvciA9IHVuZGVmaW5lZDtcblx0fSBlbHNlIGlmICggZm4gPT0gbnVsbCApIHtcblx0XHRpZiAoIHR5cGVvZiBzZWxlY3RvciA9PT0gXCJzdHJpbmdcIiApIHtcblxuXHRcdFx0Ly8gKCB0eXBlcywgc2VsZWN0b3IsIGZuIClcblx0XHRcdGZuID0gZGF0YTtcblx0XHRcdGRhdGEgPSB1bmRlZmluZWQ7XG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0Ly8gKCB0eXBlcywgZGF0YSwgZm4gKVxuXHRcdFx0Zm4gPSBkYXRhO1xuXHRcdFx0ZGF0YSA9IHNlbGVjdG9yO1xuXHRcdFx0c2VsZWN0b3IgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHR9XG5cdGlmICggZm4gPT09IGZhbHNlICkge1xuXHRcdGZuID0gcmV0dXJuRmFsc2U7XG5cdH0gZWxzZSBpZiAoICFmbiApIHtcblx0XHRyZXR1cm4gZWxlbTtcblx0fVxuXG5cdGlmICggb25lID09PSAxICkge1xuXHRcdG9yaWdGbiA9IGZuO1xuXHRcdGZuID0gZnVuY3Rpb24oIGV2ZW50ICkge1xuXG5cdFx0XHQvLyBDYW4gdXNlIGFuIGVtcHR5IHNldCwgc2luY2UgZXZlbnQgY29udGFpbnMgdGhlIGluZm9cblx0XHRcdGpRdWVyeSgpLm9mZiggZXZlbnQgKTtcblx0XHRcdHJldHVybiBvcmlnRm4uYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdH07XG5cblx0XHQvLyBVc2Ugc2FtZSBndWlkIHNvIGNhbGxlciBjYW4gcmVtb3ZlIHVzaW5nIG9yaWdGblxuXHRcdGZuLmd1aWQgPSBvcmlnRm4uZ3VpZCB8fCAoIG9yaWdGbi5ndWlkID0galF1ZXJ5Lmd1aWQrKyApO1xuXHR9XG5cdHJldHVybiBlbGVtLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdGpRdWVyeS5ldmVudC5hZGQoIHRoaXMsIHR5cGVzLCBmbiwgZGF0YSwgc2VsZWN0b3IgKTtcblx0fSApO1xufVxuXG4vKlxuICogSGVscGVyIGZ1bmN0aW9ucyBmb3IgbWFuYWdpbmcgZXZlbnRzIC0tIG5vdCBwYXJ0IG9mIHRoZSBwdWJsaWMgaW50ZXJmYWNlLlxuICogUHJvcHMgdG8gRGVhbiBFZHdhcmRzJyBhZGRFdmVudCBsaWJyYXJ5IGZvciBtYW55IG9mIHRoZSBpZGVhcy5cbiAqL1xualF1ZXJ5LmV2ZW50ID0ge1xuXG5cdGdsb2JhbDoge30sXG5cblx0YWRkOiBmdW5jdGlvbiggZWxlbSwgdHlwZXMsIGhhbmRsZXIsIGRhdGEsIHNlbGVjdG9yICkge1xuXG5cdFx0dmFyIGhhbmRsZU9iakluLCBldmVudEhhbmRsZSwgdG1wLFxuXHRcdFx0ZXZlbnRzLCB0LCBoYW5kbGVPYmosXG5cdFx0XHRzcGVjaWFsLCBoYW5kbGVycywgdHlwZSwgbmFtZXNwYWNlcywgb3JpZ1R5cGUsXG5cdFx0XHRlbGVtRGF0YSA9IGRhdGFQcml2LmdldCggZWxlbSApO1xuXG5cdFx0Ly8gRG9uJ3QgYXR0YWNoIGV2ZW50cyB0byBub0RhdGEgb3IgdGV4dC9jb21tZW50IG5vZGVzIChidXQgYWxsb3cgcGxhaW4gb2JqZWN0cylcblx0XHRpZiAoICFlbGVtRGF0YSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBDYWxsZXIgY2FuIHBhc3MgaW4gYW4gb2JqZWN0IG9mIGN1c3RvbSBkYXRhIGluIGxpZXUgb2YgdGhlIGhhbmRsZXJcblx0XHRpZiAoIGhhbmRsZXIuaGFuZGxlciApIHtcblx0XHRcdGhhbmRsZU9iakluID0gaGFuZGxlcjtcblx0XHRcdGhhbmRsZXIgPSBoYW5kbGVPYmpJbi5oYW5kbGVyO1xuXHRcdFx0c2VsZWN0b3IgPSBoYW5kbGVPYmpJbi5zZWxlY3Rvcjtcblx0XHR9XG5cblx0XHQvLyBFbnN1cmUgdGhhdCBpbnZhbGlkIHNlbGVjdG9ycyB0aHJvdyBleGNlcHRpb25zIGF0IGF0dGFjaCB0aW1lXG5cdFx0Ly8gRXZhbHVhdGUgYWdhaW5zdCBkb2N1bWVudEVsZW1lbnQgaW4gY2FzZSBlbGVtIGlzIGEgbm9uLWVsZW1lbnQgbm9kZSAoZS5nLiwgZG9jdW1lbnQpXG5cdFx0aWYgKCBzZWxlY3RvciApIHtcblx0XHRcdGpRdWVyeS5maW5kLm1hdGNoZXNTZWxlY3RvciggZG9jdW1lbnRFbGVtZW50LCBzZWxlY3RvciApO1xuXHRcdH1cblxuXHRcdC8vIE1ha2Ugc3VyZSB0aGF0IHRoZSBoYW5kbGVyIGhhcyBhIHVuaXF1ZSBJRCwgdXNlZCB0byBmaW5kL3JlbW92ZSBpdCBsYXRlclxuXHRcdGlmICggIWhhbmRsZXIuZ3VpZCApIHtcblx0XHRcdGhhbmRsZXIuZ3VpZCA9IGpRdWVyeS5ndWlkKys7XG5cdFx0fVxuXG5cdFx0Ly8gSW5pdCB0aGUgZWxlbWVudCdzIGV2ZW50IHN0cnVjdHVyZSBhbmQgbWFpbiBoYW5kbGVyLCBpZiB0aGlzIGlzIHRoZSBmaXJzdFxuXHRcdGlmICggISggZXZlbnRzID0gZWxlbURhdGEuZXZlbnRzICkgKSB7XG5cdFx0XHRldmVudHMgPSBlbGVtRGF0YS5ldmVudHMgPSB7fTtcblx0XHR9XG5cdFx0aWYgKCAhKCBldmVudEhhbmRsZSA9IGVsZW1EYXRhLmhhbmRsZSApICkge1xuXHRcdFx0ZXZlbnRIYW5kbGUgPSBlbGVtRGF0YS5oYW5kbGUgPSBmdW5jdGlvbiggZSApIHtcblxuXHRcdFx0XHQvLyBEaXNjYXJkIHRoZSBzZWNvbmQgZXZlbnQgb2YgYSBqUXVlcnkuZXZlbnQudHJpZ2dlcigpIGFuZFxuXHRcdFx0XHQvLyB3aGVuIGFuIGV2ZW50IGlzIGNhbGxlZCBhZnRlciBhIHBhZ2UgaGFzIHVubG9hZGVkXG5cdFx0XHRcdHJldHVybiB0eXBlb2YgalF1ZXJ5ICE9PSBcInVuZGVmaW5lZFwiICYmIGpRdWVyeS5ldmVudC50cmlnZ2VyZWQgIT09IGUudHlwZSA/XG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LmRpc3BhdGNoLmFwcGx5KCBlbGVtLCBhcmd1bWVudHMgKSA6IHVuZGVmaW5lZDtcblx0XHRcdH07XG5cdFx0fVxuXG5cdFx0Ly8gSGFuZGxlIG11bHRpcGxlIGV2ZW50cyBzZXBhcmF0ZWQgYnkgYSBzcGFjZVxuXHRcdHR5cGVzID0gKCB0eXBlcyB8fCBcIlwiICkubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbIFwiXCIgXTtcblx0XHR0ID0gdHlwZXMubGVuZ3RoO1xuXHRcdHdoaWxlICggdC0tICkge1xuXHRcdFx0dG1wID0gcnR5cGVuYW1lc3BhY2UuZXhlYyggdHlwZXNbIHQgXSApIHx8IFtdO1xuXHRcdFx0dHlwZSA9IG9yaWdUeXBlID0gdG1wWyAxIF07XG5cdFx0XHRuYW1lc3BhY2VzID0gKCB0bXBbIDIgXSB8fCBcIlwiICkuc3BsaXQoIFwiLlwiICkuc29ydCgpO1xuXG5cdFx0XHQvLyBUaGVyZSAqbXVzdCogYmUgYSB0eXBlLCBubyBhdHRhY2hpbmcgbmFtZXNwYWNlLW9ubHkgaGFuZGxlcnNcblx0XHRcdGlmICggIXR5cGUgKSB7XG5cdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiBldmVudCBjaGFuZ2VzIGl0cyB0eXBlLCB1c2UgdGhlIHNwZWNpYWwgZXZlbnQgaGFuZGxlcnMgZm9yIHRoZSBjaGFuZ2VkIHR5cGVcblx0XHRcdHNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgdHlwZSBdIHx8IHt9O1xuXG5cdFx0XHQvLyBJZiBzZWxlY3RvciBkZWZpbmVkLCBkZXRlcm1pbmUgc3BlY2lhbCBldmVudCBhcGkgdHlwZSwgb3RoZXJ3aXNlIGdpdmVuIHR5cGVcblx0XHRcdHR5cGUgPSAoIHNlbGVjdG9yID8gc3BlY2lhbC5kZWxlZ2F0ZVR5cGUgOiBzcGVjaWFsLmJpbmRUeXBlICkgfHwgdHlwZTtcblxuXHRcdFx0Ly8gVXBkYXRlIHNwZWNpYWwgYmFzZWQgb24gbmV3bHkgcmVzZXQgdHlwZVxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge307XG5cblx0XHRcdC8vIGhhbmRsZU9iaiBpcyBwYXNzZWQgdG8gYWxsIGV2ZW50IGhhbmRsZXJzXG5cdFx0XHRoYW5kbGVPYmogPSBqUXVlcnkuZXh0ZW5kKCB7XG5cdFx0XHRcdHR5cGU6IHR5cGUsXG5cdFx0XHRcdG9yaWdUeXBlOiBvcmlnVHlwZSxcblx0XHRcdFx0ZGF0YTogZGF0YSxcblx0XHRcdFx0aGFuZGxlcjogaGFuZGxlcixcblx0XHRcdFx0Z3VpZDogaGFuZGxlci5ndWlkLFxuXHRcdFx0XHRzZWxlY3Rvcjogc2VsZWN0b3IsXG5cdFx0XHRcdG5lZWRzQ29udGV4dDogc2VsZWN0b3IgJiYgalF1ZXJ5LmV4cHIubWF0Y2gubmVlZHNDb250ZXh0LnRlc3QoIHNlbGVjdG9yICksXG5cdFx0XHRcdG5hbWVzcGFjZTogbmFtZXNwYWNlcy5qb2luKCBcIi5cIiApXG5cdFx0XHR9LCBoYW5kbGVPYmpJbiApO1xuXG5cdFx0XHQvLyBJbml0IHRoZSBldmVudCBoYW5kbGVyIHF1ZXVlIGlmIHdlJ3JlIHRoZSBmaXJzdFxuXHRcdFx0aWYgKCAhKCBoYW5kbGVycyA9IGV2ZW50c1sgdHlwZSBdICkgKSB7XG5cdFx0XHRcdGhhbmRsZXJzID0gZXZlbnRzWyB0eXBlIF0gPSBbXTtcblx0XHRcdFx0aGFuZGxlcnMuZGVsZWdhdGVDb3VudCA9IDA7XG5cblx0XHRcdFx0Ly8gT25seSB1c2UgYWRkRXZlbnRMaXN0ZW5lciBpZiB0aGUgc3BlY2lhbCBldmVudHMgaGFuZGxlciByZXR1cm5zIGZhbHNlXG5cdFx0XHRcdGlmICggIXNwZWNpYWwuc2V0dXAgfHxcblx0XHRcdFx0XHRzcGVjaWFsLnNldHVwLmNhbGwoIGVsZW0sIGRhdGEsIG5hbWVzcGFjZXMsIGV2ZW50SGFuZGxlICkgPT09IGZhbHNlICkge1xuXG5cdFx0XHRcdFx0aWYgKCBlbGVtLmFkZEV2ZW50TGlzdGVuZXIgKSB7XG5cdFx0XHRcdFx0XHRlbGVtLmFkZEV2ZW50TGlzdGVuZXIoIHR5cGUsIGV2ZW50SGFuZGxlICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdGlmICggc3BlY2lhbC5hZGQgKSB7XG5cdFx0XHRcdHNwZWNpYWwuYWRkLmNhbGwoIGVsZW0sIGhhbmRsZU9iaiApO1xuXG5cdFx0XHRcdGlmICggIWhhbmRsZU9iai5oYW5kbGVyLmd1aWQgKSB7XG5cdFx0XHRcdFx0aGFuZGxlT2JqLmhhbmRsZXIuZ3VpZCA9IGhhbmRsZXIuZ3VpZDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBBZGQgdG8gdGhlIGVsZW1lbnQncyBoYW5kbGVyIGxpc3QsIGRlbGVnYXRlcyBpbiBmcm9udFxuXHRcdFx0aWYgKCBzZWxlY3RvciApIHtcblx0XHRcdFx0aGFuZGxlcnMuc3BsaWNlKCBoYW5kbGVycy5kZWxlZ2F0ZUNvdW50KyssIDAsIGhhbmRsZU9iaiApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0aGFuZGxlcnMucHVzaCggaGFuZGxlT2JqICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEtlZXAgdHJhY2sgb2Ygd2hpY2ggZXZlbnRzIGhhdmUgZXZlciBiZWVuIHVzZWQsIGZvciBldmVudCBvcHRpbWl6YXRpb25cblx0XHRcdGpRdWVyeS5ldmVudC5nbG9iYWxbIHR5cGUgXSA9IHRydWU7XG5cdFx0fVxuXG5cdH0sXG5cblx0Ly8gRGV0YWNoIGFuIGV2ZW50IG9yIHNldCBvZiBldmVudHMgZnJvbSBhbiBlbGVtZW50XG5cdHJlbW92ZTogZnVuY3Rpb24oIGVsZW0sIHR5cGVzLCBoYW5kbGVyLCBzZWxlY3RvciwgbWFwcGVkVHlwZXMgKSB7XG5cblx0XHR2YXIgaiwgb3JpZ0NvdW50LCB0bXAsXG5cdFx0XHRldmVudHMsIHQsIGhhbmRsZU9iaixcblx0XHRcdHNwZWNpYWwsIGhhbmRsZXJzLCB0eXBlLCBuYW1lc3BhY2VzLCBvcmlnVHlwZSxcblx0XHRcdGVsZW1EYXRhID0gZGF0YVByaXYuaGFzRGF0YSggZWxlbSApICYmIGRhdGFQcml2LmdldCggZWxlbSApO1xuXG5cdFx0aWYgKCAhZWxlbURhdGEgfHwgISggZXZlbnRzID0gZWxlbURhdGEuZXZlbnRzICkgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gT25jZSBmb3IgZWFjaCB0eXBlLm5hbWVzcGFjZSBpbiB0eXBlczsgdHlwZSBtYXkgYmUgb21pdHRlZFxuXHRcdHR5cGVzID0gKCB0eXBlcyB8fCBcIlwiICkubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbIFwiXCIgXTtcblx0XHR0ID0gdHlwZXMubGVuZ3RoO1xuXHRcdHdoaWxlICggdC0tICkge1xuXHRcdFx0dG1wID0gcnR5cGVuYW1lc3BhY2UuZXhlYyggdHlwZXNbIHQgXSApIHx8IFtdO1xuXHRcdFx0dHlwZSA9IG9yaWdUeXBlID0gdG1wWyAxIF07XG5cdFx0XHRuYW1lc3BhY2VzID0gKCB0bXBbIDIgXSB8fCBcIlwiICkuc3BsaXQoIFwiLlwiICkuc29ydCgpO1xuXG5cdFx0XHQvLyBVbmJpbmQgYWxsIGV2ZW50cyAob24gdGhpcyBuYW1lc3BhY2UsIGlmIHByb3ZpZGVkKSBmb3IgdGhlIGVsZW1lbnRcblx0XHRcdGlmICggIXR5cGUgKSB7XG5cdFx0XHRcdGZvciAoIHR5cGUgaW4gZXZlbnRzICkge1xuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC5yZW1vdmUoIGVsZW0sIHR5cGUgKyB0eXBlc1sgdCBdLCBoYW5kbGVyLCBzZWxlY3RvciwgdHJ1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0fVxuXG5cdFx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSB8fCB7fTtcblx0XHRcdHR5cGUgPSAoIHNlbGVjdG9yID8gc3BlY2lhbC5kZWxlZ2F0ZVR5cGUgOiBzcGVjaWFsLmJpbmRUeXBlICkgfHwgdHlwZTtcblx0XHRcdGhhbmRsZXJzID0gZXZlbnRzWyB0eXBlIF0gfHwgW107XG5cdFx0XHR0bXAgPSB0bXBbIDIgXSAmJlxuXHRcdFx0XHRuZXcgUmVnRXhwKCBcIihefFxcXFwuKVwiICsgbmFtZXNwYWNlcy5qb2luKCBcIlxcXFwuKD86LipcXFxcLnwpXCIgKSArIFwiKFxcXFwufCQpXCIgKTtcblxuXHRcdFx0Ly8gUmVtb3ZlIG1hdGNoaW5nIGV2ZW50c1xuXHRcdFx0b3JpZ0NvdW50ID0gaiA9IGhhbmRsZXJzLmxlbmd0aDtcblx0XHRcdHdoaWxlICggai0tICkge1xuXHRcdFx0XHRoYW5kbGVPYmogPSBoYW5kbGVyc1sgaiBdO1xuXG5cdFx0XHRcdGlmICggKCBtYXBwZWRUeXBlcyB8fCBvcmlnVHlwZSA9PT0gaGFuZGxlT2JqLm9yaWdUeXBlICkgJiZcblx0XHRcdFx0XHQoICFoYW5kbGVyIHx8IGhhbmRsZXIuZ3VpZCA9PT0gaGFuZGxlT2JqLmd1aWQgKSAmJlxuXHRcdFx0XHRcdCggIXRtcCB8fCB0bXAudGVzdCggaGFuZGxlT2JqLm5hbWVzcGFjZSApICkgJiZcblx0XHRcdFx0XHQoICFzZWxlY3RvciB8fCBzZWxlY3RvciA9PT0gaGFuZGxlT2JqLnNlbGVjdG9yIHx8XG5cdFx0XHRcdFx0XHRzZWxlY3RvciA9PT0gXCIqKlwiICYmIGhhbmRsZU9iai5zZWxlY3RvciApICkge1xuXHRcdFx0XHRcdGhhbmRsZXJzLnNwbGljZSggaiwgMSApO1xuXG5cdFx0XHRcdFx0aWYgKCBoYW5kbGVPYmouc2VsZWN0b3IgKSB7XG5cdFx0XHRcdFx0XHRoYW5kbGVycy5kZWxlZ2F0ZUNvdW50LS07XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICggc3BlY2lhbC5yZW1vdmUgKSB7XG5cdFx0XHRcdFx0XHRzcGVjaWFsLnJlbW92ZS5jYWxsKCBlbGVtLCBoYW5kbGVPYmogKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gUmVtb3ZlIGdlbmVyaWMgZXZlbnQgaGFuZGxlciBpZiB3ZSByZW1vdmVkIHNvbWV0aGluZyBhbmQgbm8gbW9yZSBoYW5kbGVycyBleGlzdFxuXHRcdFx0Ly8gKGF2b2lkcyBwb3RlbnRpYWwgZm9yIGVuZGxlc3MgcmVjdXJzaW9uIGR1cmluZyByZW1vdmFsIG9mIHNwZWNpYWwgZXZlbnQgaGFuZGxlcnMpXG5cdFx0XHRpZiAoIG9yaWdDb3VudCAmJiAhaGFuZGxlcnMubGVuZ3RoICkge1xuXHRcdFx0XHRpZiAoICFzcGVjaWFsLnRlYXJkb3duIHx8XG5cdFx0XHRcdFx0c3BlY2lhbC50ZWFyZG93bi5jYWxsKCBlbGVtLCBuYW1lc3BhY2VzLCBlbGVtRGF0YS5oYW5kbGUgKSA9PT0gZmFsc2UgKSB7XG5cblx0XHRcdFx0XHRqUXVlcnkucmVtb3ZlRXZlbnQoIGVsZW0sIHR5cGUsIGVsZW1EYXRhLmhhbmRsZSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0ZGVsZXRlIGV2ZW50c1sgdHlwZSBdO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIFJlbW92ZSBkYXRhIGFuZCB0aGUgZXhwYW5kbyBpZiBpdCdzIG5vIGxvbmdlciB1c2VkXG5cdFx0aWYgKCBqUXVlcnkuaXNFbXB0eU9iamVjdCggZXZlbnRzICkgKSB7XG5cdFx0XHRkYXRhUHJpdi5yZW1vdmUoIGVsZW0sIFwiaGFuZGxlIGV2ZW50c1wiICk7XG5cdFx0fVxuXHR9LFxuXG5cdGRpc3BhdGNoOiBmdW5jdGlvbiggbmF0aXZlRXZlbnQgKSB7XG5cblx0XHQvLyBNYWtlIGEgd3JpdGFibGUgalF1ZXJ5LkV2ZW50IGZyb20gdGhlIG5hdGl2ZSBldmVudCBvYmplY3Rcblx0XHR2YXIgZXZlbnQgPSBqUXVlcnkuZXZlbnQuZml4KCBuYXRpdmVFdmVudCApO1xuXG5cdFx0dmFyIGksIGosIHJldCwgbWF0Y2hlZCwgaGFuZGxlT2JqLCBoYW5kbGVyUXVldWUsXG5cdFx0XHRhcmdzID0gbmV3IEFycmF5KCBhcmd1bWVudHMubGVuZ3RoICksXG5cdFx0XHRoYW5kbGVycyA9ICggZGF0YVByaXYuZ2V0KCB0aGlzLCBcImV2ZW50c1wiICkgfHwge30gKVsgZXZlbnQudHlwZSBdIHx8IFtdLFxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyBldmVudC50eXBlIF0gfHwge307XG5cblx0XHQvLyBVc2UgdGhlIGZpeC1lZCBqUXVlcnkuRXZlbnQgcmF0aGVyIHRoYW4gdGhlIChyZWFkLW9ubHkpIG5hdGl2ZSBldmVudFxuXHRcdGFyZ3NbIDAgXSA9IGV2ZW50O1xuXG5cdFx0Zm9yICggaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKysgKSB7XG5cdFx0XHRhcmdzWyBpIF0gPSBhcmd1bWVudHNbIGkgXTtcblx0XHR9XG5cblx0XHRldmVudC5kZWxlZ2F0ZVRhcmdldCA9IHRoaXM7XG5cblx0XHQvLyBDYWxsIHRoZSBwcmVEaXNwYXRjaCBob29rIGZvciB0aGUgbWFwcGVkIHR5cGUsIGFuZCBsZXQgaXQgYmFpbCBpZiBkZXNpcmVkXG5cdFx0aWYgKCBzcGVjaWFsLnByZURpc3BhdGNoICYmIHNwZWNpYWwucHJlRGlzcGF0Y2guY2FsbCggdGhpcywgZXZlbnQgKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZXJtaW5lIGhhbmRsZXJzXG5cdFx0aGFuZGxlclF1ZXVlID0galF1ZXJ5LmV2ZW50LmhhbmRsZXJzLmNhbGwoIHRoaXMsIGV2ZW50LCBoYW5kbGVycyApO1xuXG5cdFx0Ly8gUnVuIGRlbGVnYXRlcyBmaXJzdDsgdGhleSBtYXkgd2FudCB0byBzdG9wIHByb3BhZ2F0aW9uIGJlbmVhdGggdXNcblx0XHRpID0gMDtcblx0XHR3aGlsZSAoICggbWF0Y2hlZCA9IGhhbmRsZXJRdWV1ZVsgaSsrIF0gKSAmJiAhZXZlbnQuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSApIHtcblx0XHRcdGV2ZW50LmN1cnJlbnRUYXJnZXQgPSBtYXRjaGVkLmVsZW07XG5cblx0XHRcdGogPSAwO1xuXHRcdFx0d2hpbGUgKCAoIGhhbmRsZU9iaiA9IG1hdGNoZWQuaGFuZGxlcnNbIGorKyBdICkgJiZcblx0XHRcdFx0IWV2ZW50LmlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkKCkgKSB7XG5cblx0XHRcdFx0Ly8gSWYgdGhlIGV2ZW50IGlzIG5hbWVzcGFjZWQsIHRoZW4gZWFjaCBoYW5kbGVyIGlzIG9ubHkgaW52b2tlZCBpZiBpdCBpc1xuXHRcdFx0XHQvLyBzcGVjaWFsbHkgdW5pdmVyc2FsIG9yIGl0cyBuYW1lc3BhY2VzIGFyZSBhIHN1cGVyc2V0IG9mIHRoZSBldmVudCdzLlxuXHRcdFx0XHRpZiAoICFldmVudC5ybmFtZXNwYWNlIHx8IGhhbmRsZU9iai5uYW1lc3BhY2UgPT09IGZhbHNlIHx8XG5cdFx0XHRcdFx0ZXZlbnQucm5hbWVzcGFjZS50ZXN0KCBoYW5kbGVPYmoubmFtZXNwYWNlICkgKSB7XG5cblx0XHRcdFx0XHRldmVudC5oYW5kbGVPYmogPSBoYW5kbGVPYmo7XG5cdFx0XHRcdFx0ZXZlbnQuZGF0YSA9IGhhbmRsZU9iai5kYXRhO1xuXG5cdFx0XHRcdFx0cmV0ID0gKCAoIGpRdWVyeS5ldmVudC5zcGVjaWFsWyBoYW5kbGVPYmoub3JpZ1R5cGUgXSB8fCB7fSApLmhhbmRsZSB8fFxuXHRcdFx0XHRcdFx0aGFuZGxlT2JqLmhhbmRsZXIgKS5hcHBseSggbWF0Y2hlZC5lbGVtLCBhcmdzICk7XG5cblx0XHRcdFx0XHRpZiAoIHJldCAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdFx0aWYgKCAoIGV2ZW50LnJlc3VsdCA9IHJldCApID09PSBmYWxzZSApIHtcblx0XHRcdFx0XHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0XHRcdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQ2FsbCB0aGUgcG9zdERpc3BhdGNoIGhvb2sgZm9yIHRoZSBtYXBwZWQgdHlwZVxuXHRcdGlmICggc3BlY2lhbC5wb3N0RGlzcGF0Y2ggKSB7XG5cdFx0XHRzcGVjaWFsLnBvc3REaXNwYXRjaC5jYWxsKCB0aGlzLCBldmVudCApO1xuXHRcdH1cblxuXHRcdHJldHVybiBldmVudC5yZXN1bHQ7XG5cdH0sXG5cblx0aGFuZGxlcnM6IGZ1bmN0aW9uKCBldmVudCwgaGFuZGxlcnMgKSB7XG5cdFx0dmFyIGksIGhhbmRsZU9iaiwgc2VsLCBtYXRjaGVkSGFuZGxlcnMsIG1hdGNoZWRTZWxlY3RvcnMsXG5cdFx0XHRoYW5kbGVyUXVldWUgPSBbXSxcblx0XHRcdGRlbGVnYXRlQ291bnQgPSBoYW5kbGVycy5kZWxlZ2F0ZUNvdW50LFxuXHRcdFx0Y3VyID0gZXZlbnQudGFyZ2V0O1xuXG5cdFx0Ly8gRmluZCBkZWxlZ2F0ZSBoYW5kbGVyc1xuXHRcdGlmICggZGVsZWdhdGVDb3VudCAmJlxuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTlcblx0XHRcdC8vIEJsYWNrLWhvbGUgU1ZHIDx1c2U+IGluc3RhbmNlIHRyZWVzICh0cmFjLTEzMTgwKVxuXHRcdFx0Y3VyLm5vZGVUeXBlICYmXG5cblx0XHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3ggPD00MlxuXHRcdFx0Ly8gU3VwcHJlc3Mgc3BlYy12aW9sYXRpbmcgY2xpY2tzIGluZGljYXRpbmcgYSBub24tcHJpbWFyeSBwb2ludGVyIGJ1dHRvbiAodHJhYy0zODYxKVxuXHRcdFx0Ly8gaHR0cHM6Ly93d3cudzMub3JnL1RSL0RPTS1MZXZlbC0zLUV2ZW50cy8jZXZlbnQtdHlwZS1jbGlja1xuXHRcdFx0Ly8gU3VwcG9ydDogSUUgMTEgb25seVxuXHRcdFx0Ly8gLi4uYnV0IG5vdCBhcnJvdyBrZXkgXCJjbGlja3NcIiBvZiByYWRpbyBpbnB1dHMsIHdoaWNoIGNhbiBoYXZlIGBidXR0b25gIC0xIChnaC0yMzQzKVxuXHRcdFx0ISggZXZlbnQudHlwZSA9PT0gXCJjbGlja1wiICYmIGV2ZW50LmJ1dHRvbiA+PSAxICkgKSB7XG5cblx0XHRcdGZvciAoIDsgY3VyICE9PSB0aGlzOyBjdXIgPSBjdXIucGFyZW50Tm9kZSB8fCB0aGlzICkge1xuXG5cdFx0XHRcdC8vIERvbid0IGNoZWNrIG5vbi1lbGVtZW50cyAoIzEzMjA4KVxuXHRcdFx0XHQvLyBEb24ndCBwcm9jZXNzIGNsaWNrcyBvbiBkaXNhYmxlZCBlbGVtZW50cyAoIzY5MTEsICM4MTY1LCAjMTEzODIsICMxMTc2NClcblx0XHRcdFx0aWYgKCBjdXIubm9kZVR5cGUgPT09IDEgJiYgISggZXZlbnQudHlwZSA9PT0gXCJjbGlja1wiICYmIGN1ci5kaXNhYmxlZCA9PT0gdHJ1ZSApICkge1xuXHRcdFx0XHRcdG1hdGNoZWRIYW5kbGVycyA9IFtdO1xuXHRcdFx0XHRcdG1hdGNoZWRTZWxlY3RvcnMgPSB7fTtcblx0XHRcdFx0XHRmb3IgKCBpID0gMDsgaSA8IGRlbGVnYXRlQ291bnQ7IGkrKyApIHtcblx0XHRcdFx0XHRcdGhhbmRsZU9iaiA9IGhhbmRsZXJzWyBpIF07XG5cblx0XHRcdFx0XHRcdC8vIERvbid0IGNvbmZsaWN0IHdpdGggT2JqZWN0LnByb3RvdHlwZSBwcm9wZXJ0aWVzICgjMTMyMDMpXG5cdFx0XHRcdFx0XHRzZWwgPSBoYW5kbGVPYmouc2VsZWN0b3IgKyBcIiBcIjtcblxuXHRcdFx0XHRcdFx0aWYgKCBtYXRjaGVkU2VsZWN0b3JzWyBzZWwgXSA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdFx0XHRtYXRjaGVkU2VsZWN0b3JzWyBzZWwgXSA9IGhhbmRsZU9iai5uZWVkc0NvbnRleHQgP1xuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeSggc2VsLCB0aGlzICkuaW5kZXgoIGN1ciApID4gLTEgOlxuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5maW5kKCBzZWwsIHRoaXMsIG51bGwsIFsgY3VyIF0gKS5sZW5ndGg7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRpZiAoIG1hdGNoZWRTZWxlY3RvcnNbIHNlbCBdICkge1xuXHRcdFx0XHRcdFx0XHRtYXRjaGVkSGFuZGxlcnMucHVzaCggaGFuZGxlT2JqICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICggbWF0Y2hlZEhhbmRsZXJzLmxlbmd0aCApIHtcblx0XHRcdFx0XHRcdGhhbmRsZXJRdWV1ZS5wdXNoKCB7IGVsZW06IGN1ciwgaGFuZGxlcnM6IG1hdGNoZWRIYW5kbGVycyB9ICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQWRkIHRoZSByZW1haW5pbmcgKGRpcmVjdGx5LWJvdW5kKSBoYW5kbGVyc1xuXHRcdGN1ciA9IHRoaXM7XG5cdFx0aWYgKCBkZWxlZ2F0ZUNvdW50IDwgaGFuZGxlcnMubGVuZ3RoICkge1xuXHRcdFx0aGFuZGxlclF1ZXVlLnB1c2goIHsgZWxlbTogY3VyLCBoYW5kbGVyczogaGFuZGxlcnMuc2xpY2UoIGRlbGVnYXRlQ291bnQgKSB9ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGhhbmRsZXJRdWV1ZTtcblx0fSxcblxuXHRhZGRQcm9wOiBmdW5jdGlvbiggbmFtZSwgaG9vayApIHtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoIGpRdWVyeS5FdmVudC5wcm90b3R5cGUsIG5hbWUsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRjb25maWd1cmFibGU6IHRydWUsXG5cblx0XHRcdGdldDogaXNGdW5jdGlvbiggaG9vayApID9cblx0XHRcdFx0ZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0aWYgKCB0aGlzLm9yaWdpbmFsRXZlbnQgKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBob29rKCB0aGlzLm9yaWdpbmFsRXZlbnQgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gOlxuXHRcdFx0XHRmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRpZiAoIHRoaXMub3JpZ2luYWxFdmVudCApIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHRoaXMub3JpZ2luYWxFdmVudFsgbmFtZSBdO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSxcblxuXHRcdFx0c2V0OiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eSggdGhpcywgbmFtZSwge1xuXHRcdFx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlLFxuXHRcdFx0XHRcdHdyaXRhYmxlOiB0cnVlLFxuXHRcdFx0XHRcdHZhbHVlOiB2YWx1ZVxuXHRcdFx0XHR9ICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGZpeDogZnVuY3Rpb24oIG9yaWdpbmFsRXZlbnQgKSB7XG5cdFx0cmV0dXJuIG9yaWdpbmFsRXZlbnRbIGpRdWVyeS5leHBhbmRvIF0gP1xuXHRcdFx0b3JpZ2luYWxFdmVudCA6XG5cdFx0XHRuZXcgalF1ZXJ5LkV2ZW50KCBvcmlnaW5hbEV2ZW50ICk7XG5cdH0sXG5cblx0c3BlY2lhbDoge1xuXHRcdGxvYWQ6IHtcblxuXHRcdFx0Ly8gUHJldmVudCB0cmlnZ2VyZWQgaW1hZ2UubG9hZCBldmVudHMgZnJvbSBidWJibGluZyB0byB3aW5kb3cubG9hZFxuXHRcdFx0bm9CdWJibGU6IHRydWVcblx0XHR9LFxuXHRcdGNsaWNrOiB7XG5cblx0XHRcdC8vIFV0aWxpemUgbmF0aXZlIGV2ZW50IHRvIGVuc3VyZSBjb3JyZWN0IHN0YXRlIGZvciBjaGVja2FibGUgaW5wdXRzXG5cdFx0XHRzZXR1cDogZnVuY3Rpb24oIGRhdGEgKSB7XG5cblx0XHRcdFx0Ly8gRm9yIG11dHVhbCBjb21wcmVzc2liaWxpdHkgd2l0aCBfZGVmYXVsdCwgcmVwbGFjZSBgdGhpc2AgYWNjZXNzIHdpdGggYSBsb2NhbCB2YXIuXG5cdFx0XHRcdC8vIGB8fCBkYXRhYCBpcyBkZWFkIGNvZGUgbWVhbnQgb25seSB0byBwcmVzZXJ2ZSB0aGUgdmFyaWFibGUgdGhyb3VnaCBtaW5pZmljYXRpb24uXG5cdFx0XHRcdHZhciBlbCA9IHRoaXMgfHwgZGF0YTtcblxuXHRcdFx0XHQvLyBDbGFpbSB0aGUgZmlyc3QgaGFuZGxlclxuXHRcdFx0XHRpZiAoIHJjaGVja2FibGVUeXBlLnRlc3QoIGVsLnR5cGUgKSAmJlxuXHRcdFx0XHRcdGVsLmNsaWNrICYmIG5vZGVOYW1lKCBlbCwgXCJpbnB1dFwiICkgKSB7XG5cblx0XHRcdFx0XHQvLyBkYXRhUHJpdi5zZXQoIGVsLCBcImNsaWNrXCIsIC4uLiApXG5cdFx0XHRcdFx0bGV2ZXJhZ2VOYXRpdmUoIGVsLCBcImNsaWNrXCIsIHJldHVyblRydWUgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFJldHVybiBmYWxzZSB0byBhbGxvdyBub3JtYWwgcHJvY2Vzc2luZyBpbiB0aGUgY2FsbGVyXG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH0sXG5cdFx0XHR0cmlnZ2VyOiBmdW5jdGlvbiggZGF0YSApIHtcblxuXHRcdFx0XHQvLyBGb3IgbXV0dWFsIGNvbXByZXNzaWJpbGl0eSB3aXRoIF9kZWZhdWx0LCByZXBsYWNlIGB0aGlzYCBhY2Nlc3Mgd2l0aCBhIGxvY2FsIHZhci5cblx0XHRcdFx0Ly8gYHx8IGRhdGFgIGlzIGRlYWQgY29kZSBtZWFudCBvbmx5IHRvIHByZXNlcnZlIHRoZSB2YXJpYWJsZSB0aHJvdWdoIG1pbmlmaWNhdGlvbi5cblx0XHRcdFx0dmFyIGVsID0gdGhpcyB8fCBkYXRhO1xuXG5cdFx0XHRcdC8vIEZvcmNlIHNldHVwIGJlZm9yZSB0cmlnZ2VyaW5nIGEgY2xpY2tcblx0XHRcdFx0aWYgKCByY2hlY2thYmxlVHlwZS50ZXN0KCBlbC50eXBlICkgJiZcblx0XHRcdFx0XHRlbC5jbGljayAmJiBub2RlTmFtZSggZWwsIFwiaW5wdXRcIiApICkge1xuXG5cdFx0XHRcdFx0bGV2ZXJhZ2VOYXRpdmUoIGVsLCBcImNsaWNrXCIgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFJldHVybiBub24tZmFsc2UgdG8gYWxsb3cgbm9ybWFsIGV2ZW50LXBhdGggcHJvcGFnYXRpb25cblx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBGb3IgY3Jvc3MtYnJvd3NlciBjb25zaXN0ZW5jeSwgc3VwcHJlc3MgbmF0aXZlIC5jbGljaygpIG9uIGxpbmtzXG5cdFx0XHQvLyBBbHNvIHByZXZlbnQgaXQgaWYgd2UncmUgY3VycmVudGx5IGluc2lkZSBhIGxldmVyYWdlZCBuYXRpdmUtZXZlbnQgc3RhY2tcblx0XHRcdF9kZWZhdWx0OiBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0XHRcdHZhciB0YXJnZXQgPSBldmVudC50YXJnZXQ7XG5cdFx0XHRcdHJldHVybiByY2hlY2thYmxlVHlwZS50ZXN0KCB0YXJnZXQudHlwZSApICYmXG5cdFx0XHRcdFx0dGFyZ2V0LmNsaWNrICYmIG5vZGVOYW1lKCB0YXJnZXQsIFwiaW5wdXRcIiApICYmXG5cdFx0XHRcdFx0ZGF0YVByaXYuZ2V0KCB0YXJnZXQsIFwiY2xpY2tcIiApIHx8XG5cdFx0XHRcdFx0bm9kZU5hbWUoIHRhcmdldCwgXCJhXCIgKTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0YmVmb3JldW5sb2FkOiB7XG5cdFx0XHRwb3N0RGlzcGF0Y2g6IGZ1bmN0aW9uKCBldmVudCApIHtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDIwK1xuXHRcdFx0XHQvLyBGaXJlZm94IGRvZXNuJ3QgYWxlcnQgaWYgdGhlIHJldHVyblZhbHVlIGZpZWxkIGlzIG5vdCBzZXQuXG5cdFx0XHRcdGlmICggZXZlbnQucmVzdWx0ICE9PSB1bmRlZmluZWQgJiYgZXZlbnQub3JpZ2luYWxFdmVudCApIHtcblx0XHRcdFx0XHRldmVudC5vcmlnaW5hbEV2ZW50LnJldHVyblZhbHVlID0gZXZlbnQucmVzdWx0O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59O1xuXG4vLyBFbnN1cmUgdGhlIHByZXNlbmNlIG9mIGFuIGV2ZW50IGxpc3RlbmVyIHRoYXQgaGFuZGxlcyBtYW51YWxseS10cmlnZ2VyZWRcbi8vIHN5bnRoZXRpYyBldmVudHMgYnkgaW50ZXJydXB0aW5nIHByb2dyZXNzIHVudGlsIHJlaW52b2tlZCBpbiByZXNwb25zZSB0b1xuLy8gKm5hdGl2ZSogZXZlbnRzIHRoYXQgaXQgZmlyZXMgZGlyZWN0bHksIGVuc3VyaW5nIHRoYXQgc3RhdGUgY2hhbmdlcyBoYXZlXG4vLyBhbHJlYWR5IG9jY3VycmVkIGJlZm9yZSBvdGhlciBsaXN0ZW5lcnMgYXJlIGludm9rZWQuXG5mdW5jdGlvbiBsZXZlcmFnZU5hdGl2ZSggZWwsIHR5cGUsIGV4cGVjdFN5bmMgKSB7XG5cblx0Ly8gTWlzc2luZyBleHBlY3RTeW5jIGluZGljYXRlcyBhIHRyaWdnZXIgY2FsbCwgd2hpY2ggbXVzdCBmb3JjZSBzZXR1cCB0aHJvdWdoIGpRdWVyeS5ldmVudC5hZGRcblx0aWYgKCAhZXhwZWN0U3luYyApIHtcblx0XHRpZiAoIGRhdGFQcml2LmdldCggZWwsIHR5cGUgKSA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0alF1ZXJ5LmV2ZW50LmFkZCggZWwsIHR5cGUsIHJldHVyblRydWUgKTtcblx0XHR9XG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0Ly8gUmVnaXN0ZXIgdGhlIGNvbnRyb2xsZXIgYXMgYSBzcGVjaWFsIHVuaXZlcnNhbCBoYW5kbGVyIGZvciBhbGwgZXZlbnQgbmFtZXNwYWNlc1xuXHRkYXRhUHJpdi5zZXQoIGVsLCB0eXBlLCBmYWxzZSApO1xuXHRqUXVlcnkuZXZlbnQuYWRkKCBlbCwgdHlwZSwge1xuXHRcdG5hbWVzcGFjZTogZmFsc2UsXG5cdFx0aGFuZGxlcjogZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0dmFyIG5vdEFzeW5jLCByZXN1bHQsXG5cdFx0XHRcdHNhdmVkID0gZGF0YVByaXYuZ2V0KCB0aGlzLCB0eXBlICk7XG5cblx0XHRcdGlmICggKCBldmVudC5pc1RyaWdnZXIgJiAxICkgJiYgdGhpc1sgdHlwZSBdICkge1xuXG5cdFx0XHRcdC8vIEludGVycnVwdCBwcm9jZXNzaW5nIG9mIHRoZSBvdXRlciBzeW50aGV0aWMgLnRyaWdnZXIoKWVkIGV2ZW50XG5cdFx0XHRcdC8vIFNhdmVkIGRhdGEgc2hvdWxkIGJlIGZhbHNlIGluIHN1Y2ggY2FzZXMsIGJ1dCBtaWdodCBiZSBhIGxlZnRvdmVyIGNhcHR1cmUgb2JqZWN0XG5cdFx0XHRcdC8vIGZyb20gYW4gYXN5bmMgbmF0aXZlIGhhbmRsZXIgKGdoLTQzNTApXG5cdFx0XHRcdGlmICggIXNhdmVkLmxlbmd0aCApIHtcblxuXHRcdFx0XHRcdC8vIFN0b3JlIGFyZ3VtZW50cyBmb3IgdXNlIHdoZW4gaGFuZGxpbmcgdGhlIGlubmVyIG5hdGl2ZSBldmVudFxuXHRcdFx0XHRcdC8vIFRoZXJlIHdpbGwgYWx3YXlzIGJlIGF0IGxlYXN0IG9uZSBhcmd1bWVudCAoYW4gZXZlbnQgb2JqZWN0KSwgc28gdGhpcyBhcnJheVxuXHRcdFx0XHRcdC8vIHdpbGwgbm90IGJlIGNvbmZ1c2VkIHdpdGggYSBsZWZ0b3ZlciBjYXB0dXJlIG9iamVjdC5cblx0XHRcdFx0XHRzYXZlZCA9IHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApO1xuXHRcdFx0XHRcdGRhdGFQcml2LnNldCggdGhpcywgdHlwZSwgc2F2ZWQgKTtcblxuXHRcdFx0XHRcdC8vIFRyaWdnZXIgdGhlIG5hdGl2ZSBldmVudCBhbmQgY2FwdHVyZSBpdHMgcmVzdWx0XG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05IC0gMTErXG5cdFx0XHRcdFx0Ly8gZm9jdXMoKSBhbmQgYmx1cigpIGFyZSBhc3luY2hyb25vdXNcblx0XHRcdFx0XHRub3RBc3luYyA9IGV4cGVjdFN5bmMoIHRoaXMsIHR5cGUgKTtcblx0XHRcdFx0XHR0aGlzWyB0eXBlIF0oKTtcblx0XHRcdFx0XHRyZXN1bHQgPSBkYXRhUHJpdi5nZXQoIHRoaXMsIHR5cGUgKTtcblx0XHRcdFx0XHRpZiAoIHNhdmVkICE9PSByZXN1bHQgfHwgbm90QXN5bmMgKSB7XG5cdFx0XHRcdFx0XHRkYXRhUHJpdi5zZXQoIHRoaXMsIHR5cGUsIGZhbHNlICk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHJlc3VsdCA9IHt9O1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAoIHNhdmVkICE9PSByZXN1bHQgKSB7XG5cblx0XHRcdFx0XHRcdC8vIENhbmNlbCB0aGUgb3V0ZXIgc3ludGhldGljIGV2ZW50XG5cdFx0XHRcdFx0XHRldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcblx0XHRcdFx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0LnZhbHVlO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBJZiB0aGlzIGlzIGFuIGlubmVyIHN5bnRoZXRpYyBldmVudCBmb3IgYW4gZXZlbnQgd2l0aCBhIGJ1YmJsaW5nIHN1cnJvZ2F0ZVxuXHRcdFx0XHQvLyAoZm9jdXMgb3IgYmx1ciksIGFzc3VtZSB0aGF0IHRoZSBzdXJyb2dhdGUgYWxyZWFkeSBwcm9wYWdhdGVkIGZyb20gdHJpZ2dlcmluZyB0aGVcblx0XHRcdFx0Ly8gbmF0aXZlIGV2ZW50IGFuZCBwcmV2ZW50IHRoYXQgZnJvbSBoYXBwZW5pbmcgYWdhaW4gaGVyZS5cblx0XHRcdFx0Ly8gVGhpcyB0ZWNobmljYWxseSBnZXRzIHRoZSBvcmRlcmluZyB3cm9uZyB3LnIudC4gdG8gYC50cmlnZ2VyKClgIChpbiB3aGljaCB0aGVcblx0XHRcdFx0Ly8gYnViYmxpbmcgc3Vycm9nYXRlIHByb3BhZ2F0ZXMgKmFmdGVyKiB0aGUgbm9uLWJ1YmJsaW5nIGJhc2UpLCBidXQgdGhhdCBzZWVtc1xuXHRcdFx0XHQvLyBsZXNzIGJhZCB0aGFuIGR1cGxpY2F0aW9uLlxuXHRcdFx0XHR9IGVsc2UgaWYgKCAoIGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge30gKS5kZWxlZ2F0ZVR5cGUgKSB7XG5cdFx0XHRcdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0Ly8gSWYgdGhpcyBpcyBhIG5hdGl2ZSBldmVudCB0cmlnZ2VyZWQgYWJvdmUsIGV2ZXJ5dGhpbmcgaXMgbm93IGluIG9yZGVyXG5cdFx0XHQvLyBGaXJlIGFuIGlubmVyIHN5bnRoZXRpYyBldmVudCB3aXRoIHRoZSBvcmlnaW5hbCBhcmd1bWVudHNcblx0XHRcdH0gZWxzZSBpZiAoIHNhdmVkLmxlbmd0aCApIHtcblxuXHRcdFx0XHQvLyAuLi5hbmQgY2FwdHVyZSB0aGUgcmVzdWx0XG5cdFx0XHRcdGRhdGFQcml2LnNldCggdGhpcywgdHlwZSwge1xuXHRcdFx0XHRcdHZhbHVlOiBqUXVlcnkuZXZlbnQudHJpZ2dlcihcblxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05IC0gMTErXG5cdFx0XHRcdFx0XHQvLyBFeHRlbmQgd2l0aCB0aGUgcHJvdG90eXBlIHRvIHJlc2V0IHRoZSBhYm92ZSBzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKVxuXHRcdFx0XHRcdFx0alF1ZXJ5LmV4dGVuZCggc2F2ZWRbIDAgXSwgalF1ZXJ5LkV2ZW50LnByb3RvdHlwZSApLFxuXHRcdFx0XHRcdFx0c2F2ZWQuc2xpY2UoIDEgKSxcblx0XHRcdFx0XHRcdHRoaXNcblx0XHRcdFx0XHQpXG5cdFx0XHRcdH0gKTtcblxuXHRcdFx0XHQvLyBBYm9ydCBoYW5kbGluZyBvZiB0aGUgbmF0aXZlIGV2ZW50XG5cdFx0XHRcdGV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuXHRcdFx0fVxuXHRcdH1cblx0fSApO1xufVxuXG5qUXVlcnkucmVtb3ZlRXZlbnQgPSBmdW5jdGlvbiggZWxlbSwgdHlwZSwgaGFuZGxlICkge1xuXG5cdC8vIFRoaXMgXCJpZlwiIGlzIG5lZWRlZCBmb3IgcGxhaW4gb2JqZWN0c1xuXHRpZiAoIGVsZW0ucmVtb3ZlRXZlbnRMaXN0ZW5lciApIHtcblx0XHRlbGVtLnJlbW92ZUV2ZW50TGlzdGVuZXIoIHR5cGUsIGhhbmRsZSApO1xuXHR9XG59O1xuXG5qUXVlcnkuRXZlbnQgPSBmdW5jdGlvbiggc3JjLCBwcm9wcyApIHtcblxuXHQvLyBBbGxvdyBpbnN0YW50aWF0aW9uIHdpdGhvdXQgdGhlICduZXcnIGtleXdvcmRcblx0aWYgKCAhKCB0aGlzIGluc3RhbmNlb2YgalF1ZXJ5LkV2ZW50ICkgKSB7XG5cdFx0cmV0dXJuIG5ldyBqUXVlcnkuRXZlbnQoIHNyYywgcHJvcHMgKTtcblx0fVxuXG5cdC8vIEV2ZW50IG9iamVjdFxuXHRpZiAoIHNyYyAmJiBzcmMudHlwZSApIHtcblx0XHR0aGlzLm9yaWdpbmFsRXZlbnQgPSBzcmM7XG5cdFx0dGhpcy50eXBlID0gc3JjLnR5cGU7XG5cblx0XHQvLyBFdmVudHMgYnViYmxpbmcgdXAgdGhlIGRvY3VtZW50IG1heSBoYXZlIGJlZW4gbWFya2VkIGFzIHByZXZlbnRlZFxuXHRcdC8vIGJ5IGEgaGFuZGxlciBsb3dlciBkb3duIHRoZSB0cmVlOyByZWZsZWN0IHRoZSBjb3JyZWN0IHZhbHVlLlxuXHRcdHRoaXMuaXNEZWZhdWx0UHJldmVudGVkID0gc3JjLmRlZmF1bHRQcmV2ZW50ZWQgfHxcblx0XHRcdFx0c3JjLmRlZmF1bHRQcmV2ZW50ZWQgPT09IHVuZGVmaW5lZCAmJlxuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD0yLjMgb25seVxuXHRcdFx0XHRzcmMucmV0dXJuVmFsdWUgPT09IGZhbHNlID9cblx0XHRcdHJldHVyblRydWUgOlxuXHRcdFx0cmV0dXJuRmFsc2U7XG5cblx0XHQvLyBDcmVhdGUgdGFyZ2V0IHByb3BlcnRpZXNcblx0XHQvLyBTdXBwb3J0OiBTYWZhcmkgPD02IC0gNyBvbmx5XG5cdFx0Ly8gVGFyZ2V0IHNob3VsZCBub3QgYmUgYSB0ZXh0IG5vZGUgKCM1MDQsICMxMzE0Mylcblx0XHR0aGlzLnRhcmdldCA9ICggc3JjLnRhcmdldCAmJiBzcmMudGFyZ2V0Lm5vZGVUeXBlID09PSAzICkgP1xuXHRcdFx0c3JjLnRhcmdldC5wYXJlbnROb2RlIDpcblx0XHRcdHNyYy50YXJnZXQ7XG5cblx0XHR0aGlzLmN1cnJlbnRUYXJnZXQgPSBzcmMuY3VycmVudFRhcmdldDtcblx0XHR0aGlzLnJlbGF0ZWRUYXJnZXQgPSBzcmMucmVsYXRlZFRhcmdldDtcblxuXHQvLyBFdmVudCB0eXBlXG5cdH0gZWxzZSB7XG5cdFx0dGhpcy50eXBlID0gc3JjO1xuXHR9XG5cblx0Ly8gUHV0IGV4cGxpY2l0bHkgcHJvdmlkZWQgcHJvcGVydGllcyBvbnRvIHRoZSBldmVudCBvYmplY3Rcblx0aWYgKCBwcm9wcyApIHtcblx0XHRqUXVlcnkuZXh0ZW5kKCB0aGlzLCBwcm9wcyApO1xuXHR9XG5cblx0Ly8gQ3JlYXRlIGEgdGltZXN0YW1wIGlmIGluY29taW5nIGV2ZW50IGRvZXNuJ3QgaGF2ZSBvbmVcblx0dGhpcy50aW1lU3RhbXAgPSBzcmMgJiYgc3JjLnRpbWVTdGFtcCB8fCBEYXRlLm5vdygpO1xuXG5cdC8vIE1hcmsgaXQgYXMgZml4ZWRcblx0dGhpc1sgalF1ZXJ5LmV4cGFuZG8gXSA9IHRydWU7XG59O1xuXG4vLyBqUXVlcnkuRXZlbnQgaXMgYmFzZWQgb24gRE9NMyBFdmVudHMgYXMgc3BlY2lmaWVkIGJ5IHRoZSBFQ01BU2NyaXB0IExhbmd1YWdlIEJpbmRpbmdcbi8vIGh0dHBzOi8vd3d3LnczLm9yZy9UUi8yMDAzL1dELURPTS1MZXZlbC0zLUV2ZW50cy0yMDAzMDMzMS9lY21hLXNjcmlwdC1iaW5kaW5nLmh0bWxcbmpRdWVyeS5FdmVudC5wcm90b3R5cGUgPSB7XG5cdGNvbnN0cnVjdG9yOiBqUXVlcnkuRXZlbnQsXG5cdGlzRGVmYXVsdFByZXZlbnRlZDogcmV0dXJuRmFsc2UsXG5cdGlzUHJvcGFnYXRpb25TdG9wcGVkOiByZXR1cm5GYWxzZSxcblx0aXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQ6IHJldHVybkZhbHNlLFxuXHRpc1NpbXVsYXRlZDogZmFsc2UsXG5cblx0cHJldmVudERlZmF1bHQ6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBlID0gdGhpcy5vcmlnaW5hbEV2ZW50O1xuXG5cdFx0dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQgPSByZXR1cm5UcnVlO1xuXG5cdFx0aWYgKCBlICYmICF0aGlzLmlzU2ltdWxhdGVkICkge1xuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdH1cblx0fSxcblx0c3RvcFByb3BhZ2F0aW9uOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgZSA9IHRoaXMub3JpZ2luYWxFdmVudDtcblxuXHRcdHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQgPSByZXR1cm5UcnVlO1xuXG5cdFx0aWYgKCBlICYmICF0aGlzLmlzU2ltdWxhdGVkICkge1xuXHRcdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcblx0XHR9XG5cdH0sXG5cdHN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbjogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGUgPSB0aGlzLm9yaWdpbmFsRXZlbnQ7XG5cblx0XHR0aGlzLmlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkID0gcmV0dXJuVHJ1ZTtcblxuXHRcdGlmICggZSAmJiAhdGhpcy5pc1NpbXVsYXRlZCApIHtcblx0XHRcdGUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG5cdFx0fVxuXG5cdFx0dGhpcy5zdG9wUHJvcGFnYXRpb24oKTtcblx0fVxufTtcblxuLy8gSW5jbHVkZXMgYWxsIGNvbW1vbiBldmVudCBwcm9wcyBpbmNsdWRpbmcgS2V5RXZlbnQgYW5kIE1vdXNlRXZlbnQgc3BlY2lmaWMgcHJvcHNcbmpRdWVyeS5lYWNoKCB7XG5cdGFsdEtleTogdHJ1ZSxcblx0YnViYmxlczogdHJ1ZSxcblx0Y2FuY2VsYWJsZTogdHJ1ZSxcblx0Y2hhbmdlZFRvdWNoZXM6IHRydWUsXG5cdGN0cmxLZXk6IHRydWUsXG5cdGRldGFpbDogdHJ1ZSxcblx0ZXZlbnRQaGFzZTogdHJ1ZSxcblx0bWV0YUtleTogdHJ1ZSxcblx0cGFnZVg6IHRydWUsXG5cdHBhZ2VZOiB0cnVlLFxuXHRzaGlmdEtleTogdHJ1ZSxcblx0dmlldzogdHJ1ZSxcblx0XCJjaGFyXCI6IHRydWUsXG5cdGNvZGU6IHRydWUsXG5cdGNoYXJDb2RlOiB0cnVlLFxuXHRrZXk6IHRydWUsXG5cdGtleUNvZGU6IHRydWUsXG5cdGJ1dHRvbjogdHJ1ZSxcblx0YnV0dG9uczogdHJ1ZSxcblx0Y2xpZW50WDogdHJ1ZSxcblx0Y2xpZW50WTogdHJ1ZSxcblx0b2Zmc2V0WDogdHJ1ZSxcblx0b2Zmc2V0WTogdHJ1ZSxcblx0cG9pbnRlcklkOiB0cnVlLFxuXHRwb2ludGVyVHlwZTogdHJ1ZSxcblx0c2NyZWVuWDogdHJ1ZSxcblx0c2NyZWVuWTogdHJ1ZSxcblx0dGFyZ2V0VG91Y2hlczogdHJ1ZSxcblx0dG9FbGVtZW50OiB0cnVlLFxuXHR0b3VjaGVzOiB0cnVlLFxuXG5cdHdoaWNoOiBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0dmFyIGJ1dHRvbiA9IGV2ZW50LmJ1dHRvbjtcblxuXHRcdC8vIEFkZCB3aGljaCBmb3Iga2V5IGV2ZW50c1xuXHRcdGlmICggZXZlbnQud2hpY2ggPT0gbnVsbCAmJiBya2V5RXZlbnQudGVzdCggZXZlbnQudHlwZSApICkge1xuXHRcdFx0cmV0dXJuIGV2ZW50LmNoYXJDb2RlICE9IG51bGwgPyBldmVudC5jaGFyQ29kZSA6IGV2ZW50LmtleUNvZGU7XG5cdFx0fVxuXG5cdFx0Ly8gQWRkIHdoaWNoIGZvciBjbGljazogMSA9PT0gbGVmdDsgMiA9PT0gbWlkZGxlOyAzID09PSByaWdodFxuXHRcdGlmICggIWV2ZW50LndoaWNoICYmIGJ1dHRvbiAhPT0gdW5kZWZpbmVkICYmIHJtb3VzZUV2ZW50LnRlc3QoIGV2ZW50LnR5cGUgKSApIHtcblx0XHRcdGlmICggYnV0dG9uICYgMSApIHtcblx0XHRcdFx0cmV0dXJuIDE7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggYnV0dG9uICYgMiApIHtcblx0XHRcdFx0cmV0dXJuIDM7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggYnV0dG9uICYgNCApIHtcblx0XHRcdFx0cmV0dXJuIDI7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiAwO1xuXHRcdH1cblxuXHRcdHJldHVybiBldmVudC53aGljaDtcblx0fVxufSwgalF1ZXJ5LmV2ZW50LmFkZFByb3AgKTtcblxualF1ZXJ5LmVhY2goIHsgZm9jdXM6IFwiZm9jdXNpblwiLCBibHVyOiBcImZvY3Vzb3V0XCIgfSwgZnVuY3Rpb24oIHR5cGUsIGRlbGVnYXRlVHlwZSApIHtcblx0alF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSA9IHtcblxuXHRcdC8vIFV0aWxpemUgbmF0aXZlIGV2ZW50IGlmIHBvc3NpYmxlIHNvIGJsdXIvZm9jdXMgc2VxdWVuY2UgaXMgY29ycmVjdFxuXHRcdHNldHVwOiBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gQ2xhaW0gdGhlIGZpcnN0IGhhbmRsZXJcblx0XHRcdC8vIGRhdGFQcml2LnNldCggdGhpcywgXCJmb2N1c1wiLCAuLi4gKVxuXHRcdFx0Ly8gZGF0YVByaXYuc2V0KCB0aGlzLCBcImJsdXJcIiwgLi4uIClcblx0XHRcdGxldmVyYWdlTmF0aXZlKCB0aGlzLCB0eXBlLCBleHBlY3RTeW5jICk7XG5cblx0XHRcdC8vIFJldHVybiBmYWxzZSB0byBhbGxvdyBub3JtYWwgcHJvY2Vzc2luZyBpbiB0aGUgY2FsbGVyXG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fSxcblx0XHR0cmlnZ2VyOiBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gRm9yY2Ugc2V0dXAgYmVmb3JlIHRyaWdnZXJcblx0XHRcdGxldmVyYWdlTmF0aXZlKCB0aGlzLCB0eXBlICk7XG5cblx0XHRcdC8vIFJldHVybiBub24tZmFsc2UgdG8gYWxsb3cgbm9ybWFsIGV2ZW50LXBhdGggcHJvcGFnYXRpb25cblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH0sXG5cblx0XHRkZWxlZ2F0ZVR5cGU6IGRlbGVnYXRlVHlwZVxuXHR9O1xufSApO1xuXG4vLyBDcmVhdGUgbW91c2VlbnRlci9sZWF2ZSBldmVudHMgdXNpbmcgbW91c2VvdmVyL291dCBhbmQgZXZlbnQtdGltZSBjaGVja3Ncbi8vIHNvIHRoYXQgZXZlbnQgZGVsZWdhdGlvbiB3b3JrcyBpbiBqUXVlcnkuXG4vLyBEbyB0aGUgc2FtZSBmb3IgcG9pbnRlcmVudGVyL3BvaW50ZXJsZWF2ZSBhbmQgcG9pbnRlcm92ZXIvcG9pbnRlcm91dFxuLy9cbi8vIFN1cHBvcnQ6IFNhZmFyaSA3IG9ubHlcbi8vIFNhZmFyaSBzZW5kcyBtb3VzZWVudGVyIHRvbyBvZnRlbjsgc2VlOlxuLy8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9NDcwMjU4XG4vLyBmb3IgdGhlIGRlc2NyaXB0aW9uIG9mIHRoZSBidWcgKGl0IGV4aXN0ZWQgaW4gb2xkZXIgQ2hyb21lIHZlcnNpb25zIGFzIHdlbGwpLlxualF1ZXJ5LmVhY2goIHtcblx0bW91c2VlbnRlcjogXCJtb3VzZW92ZXJcIixcblx0bW91c2VsZWF2ZTogXCJtb3VzZW91dFwiLFxuXHRwb2ludGVyZW50ZXI6IFwicG9pbnRlcm92ZXJcIixcblx0cG9pbnRlcmxlYXZlOiBcInBvaW50ZXJvdXRcIlxufSwgZnVuY3Rpb24oIG9yaWcsIGZpeCApIHtcblx0alF1ZXJ5LmV2ZW50LnNwZWNpYWxbIG9yaWcgXSA9IHtcblx0XHRkZWxlZ2F0ZVR5cGU6IGZpeCxcblx0XHRiaW5kVHlwZTogZml4LFxuXG5cdFx0aGFuZGxlOiBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0XHR2YXIgcmV0LFxuXHRcdFx0XHR0YXJnZXQgPSB0aGlzLFxuXHRcdFx0XHRyZWxhdGVkID0gZXZlbnQucmVsYXRlZFRhcmdldCxcblx0XHRcdFx0aGFuZGxlT2JqID0gZXZlbnQuaGFuZGxlT2JqO1xuXG5cdFx0XHQvLyBGb3IgbW91c2VlbnRlci9sZWF2ZSBjYWxsIHRoZSBoYW5kbGVyIGlmIHJlbGF0ZWQgaXMgb3V0c2lkZSB0aGUgdGFyZ2V0LlxuXHRcdFx0Ly8gTkI6IE5vIHJlbGF0ZWRUYXJnZXQgaWYgdGhlIG1vdXNlIGxlZnQvZW50ZXJlZCB0aGUgYnJvd3NlciB3aW5kb3dcblx0XHRcdGlmICggIXJlbGF0ZWQgfHwgKCByZWxhdGVkICE9PSB0YXJnZXQgJiYgIWpRdWVyeS5jb250YWlucyggdGFyZ2V0LCByZWxhdGVkICkgKSApIHtcblx0XHRcdFx0ZXZlbnQudHlwZSA9IGhhbmRsZU9iai5vcmlnVHlwZTtcblx0XHRcdFx0cmV0ID0gaGFuZGxlT2JqLmhhbmRsZXIuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdFx0XHRldmVudC50eXBlID0gZml4O1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHJldDtcblx0XHR9XG5cdH07XG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblxuXHRvbjogZnVuY3Rpb24oIHR5cGVzLCBzZWxlY3RvciwgZGF0YSwgZm4gKSB7XG5cdFx0cmV0dXJuIG9uKCB0aGlzLCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICk7XG5cdH0sXG5cdG9uZTogZnVuY3Rpb24oIHR5cGVzLCBzZWxlY3RvciwgZGF0YSwgZm4gKSB7XG5cdFx0cmV0dXJuIG9uKCB0aGlzLCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuLCAxICk7XG5cdH0sXG5cdG9mZjogZnVuY3Rpb24oIHR5cGVzLCBzZWxlY3RvciwgZm4gKSB7XG5cdFx0dmFyIGhhbmRsZU9iaiwgdHlwZTtcblx0XHRpZiAoIHR5cGVzICYmIHR5cGVzLnByZXZlbnREZWZhdWx0ICYmIHR5cGVzLmhhbmRsZU9iaiApIHtcblxuXHRcdFx0Ly8gKCBldmVudCApICBkaXNwYXRjaGVkIGpRdWVyeS5FdmVudFxuXHRcdFx0aGFuZGxlT2JqID0gdHlwZXMuaGFuZGxlT2JqO1xuXHRcdFx0alF1ZXJ5KCB0eXBlcy5kZWxlZ2F0ZVRhcmdldCApLm9mZihcblx0XHRcdFx0aGFuZGxlT2JqLm5hbWVzcGFjZSA/XG5cdFx0XHRcdFx0aGFuZGxlT2JqLm9yaWdUeXBlICsgXCIuXCIgKyBoYW5kbGVPYmoubmFtZXNwYWNlIDpcblx0XHRcdFx0XHRoYW5kbGVPYmoub3JpZ1R5cGUsXG5cdFx0XHRcdGhhbmRsZU9iai5zZWxlY3Rvcixcblx0XHRcdFx0aGFuZGxlT2JqLmhhbmRsZXJcblx0XHRcdCk7XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9XG5cdFx0aWYgKCB0eXBlb2YgdHlwZXMgPT09IFwib2JqZWN0XCIgKSB7XG5cblx0XHRcdC8vICggdHlwZXMtb2JqZWN0IFssIHNlbGVjdG9yXSApXG5cdFx0XHRmb3IgKCB0eXBlIGluIHR5cGVzICkge1xuXHRcdFx0XHR0aGlzLm9mZiggdHlwZSwgc2VsZWN0b3IsIHR5cGVzWyB0eXBlIF0gKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH1cblx0XHRpZiAoIHNlbGVjdG9yID09PSBmYWxzZSB8fCB0eXBlb2Ygc2VsZWN0b3IgPT09IFwiZnVuY3Rpb25cIiApIHtcblxuXHRcdFx0Ly8gKCB0eXBlcyBbLCBmbl0gKVxuXHRcdFx0Zm4gPSBzZWxlY3Rvcjtcblx0XHRcdHNlbGVjdG9yID0gdW5kZWZpbmVkO1xuXHRcdH1cblx0XHRpZiAoIGZuID09PSBmYWxzZSApIHtcblx0XHRcdGZuID0gcmV0dXJuRmFsc2U7XG5cdFx0fVxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0alF1ZXJ5LmV2ZW50LnJlbW92ZSggdGhpcywgdHlwZXMsIGZuLCBzZWxlY3RvciApO1xuXHRcdH0gKTtcblx0fVxufSApO1xuXG5cbnZhclxuXG5cdC8qIGVzbGludC1kaXNhYmxlIG1heC1sZW4gKi9cblxuXHQvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2VzbGludC9lc2xpbnQvaXNzdWVzLzMyMjlcblx0cnhodG1sVGFnID0gLzwoPyFhcmVhfGJyfGNvbHxlbWJlZHxocnxpbWd8aW5wdXR8bGlua3xtZXRhfHBhcmFtKSgoW2Etel1bXlxcL1xcMD5cXHgyMFxcdFxcclxcblxcZl0qKVtePl0qKVxcLz4vZ2ksXG5cblx0LyogZXNsaW50LWVuYWJsZSAqL1xuXG5cdC8vIFN1cHBvcnQ6IElFIDw9MTAgLSAxMSwgRWRnZSAxMiAtIDEzIG9ubHlcblx0Ly8gSW4gSUUvRWRnZSB1c2luZyByZWdleCBncm91cHMgaGVyZSBjYXVzZXMgc2V2ZXJlIHNsb3dkb3ducy5cblx0Ly8gU2VlIGh0dHBzOi8vY29ubmVjdC5taWNyb3NvZnQuY29tL0lFL2ZlZWRiYWNrL2RldGFpbHMvMTczNjUxMi9cblx0cm5vSW5uZXJodG1sID0gLzxzY3JpcHR8PHN0eWxlfDxsaW5rL2ksXG5cblx0Ly8gY2hlY2tlZD1cImNoZWNrZWRcIiBvciBjaGVja2VkXG5cdHJjaGVja2VkID0gL2NoZWNrZWRcXHMqKD86W149XXw9XFxzKi5jaGVja2VkLikvaSxcblx0cmNsZWFuU2NyaXB0ID0gL15cXHMqPCEoPzpcXFtDREFUQVxcW3wtLSl8KD86XFxdXFxdfC0tKT5cXHMqJC9nO1xuXG4vLyBQcmVmZXIgYSB0Ym9keSBvdmVyIGl0cyBwYXJlbnQgdGFibGUgZm9yIGNvbnRhaW5pbmcgbmV3IHJvd3NcbmZ1bmN0aW9uIG1hbmlwdWxhdGlvblRhcmdldCggZWxlbSwgY29udGVudCApIHtcblx0aWYgKCBub2RlTmFtZSggZWxlbSwgXCJ0YWJsZVwiICkgJiZcblx0XHRub2RlTmFtZSggY29udGVudC5ub2RlVHlwZSAhPT0gMTEgPyBjb250ZW50IDogY29udGVudC5maXJzdENoaWxkLCBcInRyXCIgKSApIHtcblxuXHRcdHJldHVybiBqUXVlcnkoIGVsZW0gKS5jaGlsZHJlbiggXCJ0Ym9keVwiIClbIDAgXSB8fCBlbGVtO1xuXHR9XG5cblx0cmV0dXJuIGVsZW07XG59XG5cbi8vIFJlcGxhY2UvcmVzdG9yZSB0aGUgdHlwZSBhdHRyaWJ1dGUgb2Ygc2NyaXB0IGVsZW1lbnRzIGZvciBzYWZlIERPTSBtYW5pcHVsYXRpb25cbmZ1bmN0aW9uIGRpc2FibGVTY3JpcHQoIGVsZW0gKSB7XG5cdGVsZW0udHlwZSA9ICggZWxlbS5nZXRBdHRyaWJ1dGUoIFwidHlwZVwiICkgIT09IG51bGwgKSArIFwiL1wiICsgZWxlbS50eXBlO1xuXHRyZXR1cm4gZWxlbTtcbn1cbmZ1bmN0aW9uIHJlc3RvcmVTY3JpcHQoIGVsZW0gKSB7XG5cdGlmICggKCBlbGVtLnR5cGUgfHwgXCJcIiApLnNsaWNlKCAwLCA1ICkgPT09IFwidHJ1ZS9cIiApIHtcblx0XHRlbGVtLnR5cGUgPSBlbGVtLnR5cGUuc2xpY2UoIDUgKTtcblx0fSBlbHNlIHtcblx0XHRlbGVtLnJlbW92ZUF0dHJpYnV0ZSggXCJ0eXBlXCIgKTtcblx0fVxuXG5cdHJldHVybiBlbGVtO1xufVxuXG5mdW5jdGlvbiBjbG9uZUNvcHlFdmVudCggc3JjLCBkZXN0ICkge1xuXHR2YXIgaSwgbCwgdHlwZSwgcGRhdGFPbGQsIHBkYXRhQ3VyLCB1ZGF0YU9sZCwgdWRhdGFDdXIsIGV2ZW50cztcblxuXHRpZiAoIGRlc3Qubm9kZVR5cGUgIT09IDEgKSB7XG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0Ly8gMS4gQ29weSBwcml2YXRlIGRhdGE6IGV2ZW50cywgaGFuZGxlcnMsIGV0Yy5cblx0aWYgKCBkYXRhUHJpdi5oYXNEYXRhKCBzcmMgKSApIHtcblx0XHRwZGF0YU9sZCA9IGRhdGFQcml2LmFjY2Vzcyggc3JjICk7XG5cdFx0cGRhdGFDdXIgPSBkYXRhUHJpdi5zZXQoIGRlc3QsIHBkYXRhT2xkICk7XG5cdFx0ZXZlbnRzID0gcGRhdGFPbGQuZXZlbnRzO1xuXG5cdFx0aWYgKCBldmVudHMgKSB7XG5cdFx0XHRkZWxldGUgcGRhdGFDdXIuaGFuZGxlO1xuXHRcdFx0cGRhdGFDdXIuZXZlbnRzID0ge307XG5cblx0XHRcdGZvciAoIHR5cGUgaW4gZXZlbnRzICkge1xuXHRcdFx0XHRmb3IgKCBpID0gMCwgbCA9IGV2ZW50c1sgdHlwZSBdLmxlbmd0aDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQuYWRkKCBkZXN0LCB0eXBlLCBldmVudHNbIHR5cGUgXVsgaSBdICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyAyLiBDb3B5IHVzZXIgZGF0YVxuXHRpZiAoIGRhdGFVc2VyLmhhc0RhdGEoIHNyYyApICkge1xuXHRcdHVkYXRhT2xkID0gZGF0YVVzZXIuYWNjZXNzKCBzcmMgKTtcblx0XHR1ZGF0YUN1ciA9IGpRdWVyeS5leHRlbmQoIHt9LCB1ZGF0YU9sZCApO1xuXG5cdFx0ZGF0YVVzZXIuc2V0KCBkZXN0LCB1ZGF0YUN1ciApO1xuXHR9XG59XG5cbi8vIEZpeCBJRSBidWdzLCBzZWUgc3VwcG9ydCB0ZXN0c1xuZnVuY3Rpb24gZml4SW5wdXQoIHNyYywgZGVzdCApIHtcblx0dmFyIG5vZGVOYW1lID0gZGVzdC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xuXG5cdC8vIEZhaWxzIHRvIHBlcnNpc3QgdGhlIGNoZWNrZWQgc3RhdGUgb2YgYSBjbG9uZWQgY2hlY2tib3ggb3IgcmFkaW8gYnV0dG9uLlxuXHRpZiAoIG5vZGVOYW1lID09PSBcImlucHV0XCIgJiYgcmNoZWNrYWJsZVR5cGUudGVzdCggc3JjLnR5cGUgKSApIHtcblx0XHRkZXN0LmNoZWNrZWQgPSBzcmMuY2hlY2tlZDtcblxuXHQvLyBGYWlscyB0byByZXR1cm4gdGhlIHNlbGVjdGVkIG9wdGlvbiB0byB0aGUgZGVmYXVsdCBzZWxlY3RlZCBzdGF0ZSB3aGVuIGNsb25pbmcgb3B0aW9uc1xuXHR9IGVsc2UgaWYgKCBub2RlTmFtZSA9PT0gXCJpbnB1dFwiIHx8IG5vZGVOYW1lID09PSBcInRleHRhcmVhXCIgKSB7XG5cdFx0ZGVzdC5kZWZhdWx0VmFsdWUgPSBzcmMuZGVmYXVsdFZhbHVlO1xuXHR9XG59XG5cbmZ1bmN0aW9uIGRvbU1hbmlwKCBjb2xsZWN0aW9uLCBhcmdzLCBjYWxsYmFjaywgaWdub3JlZCApIHtcblxuXHQvLyBGbGF0dGVuIGFueSBuZXN0ZWQgYXJyYXlzXG5cdGFyZ3MgPSBjb25jYXQuYXBwbHkoIFtdLCBhcmdzICk7XG5cblx0dmFyIGZyYWdtZW50LCBmaXJzdCwgc2NyaXB0cywgaGFzU2NyaXB0cywgbm9kZSwgZG9jLFxuXHRcdGkgPSAwLFxuXHRcdGwgPSBjb2xsZWN0aW9uLmxlbmd0aCxcblx0XHRpTm9DbG9uZSA9IGwgLSAxLFxuXHRcdHZhbHVlID0gYXJnc1sgMCBdLFxuXHRcdHZhbHVlSXNGdW5jdGlvbiA9IGlzRnVuY3Rpb24oIHZhbHVlICk7XG5cblx0Ly8gV2UgY2FuJ3QgY2xvbmVOb2RlIGZyYWdtZW50cyB0aGF0IGNvbnRhaW4gY2hlY2tlZCwgaW4gV2ViS2l0XG5cdGlmICggdmFsdWVJc0Z1bmN0aW9uIHx8XG5cdFx0XHQoIGwgPiAxICYmIHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiAmJlxuXHRcdFx0XHQhc3VwcG9ydC5jaGVja0Nsb25lICYmIHJjaGVja2VkLnRlc3QoIHZhbHVlICkgKSApIHtcblx0XHRyZXR1cm4gY29sbGVjdGlvbi5lYWNoKCBmdW5jdGlvbiggaW5kZXggKSB7XG5cdFx0XHR2YXIgc2VsZiA9IGNvbGxlY3Rpb24uZXEoIGluZGV4ICk7XG5cdFx0XHRpZiAoIHZhbHVlSXNGdW5jdGlvbiApIHtcblx0XHRcdFx0YXJnc1sgMCBdID0gdmFsdWUuY2FsbCggdGhpcywgaW5kZXgsIHNlbGYuaHRtbCgpICk7XG5cdFx0XHR9XG5cdFx0XHRkb21NYW5pcCggc2VsZiwgYXJncywgY2FsbGJhY2ssIGlnbm9yZWQgKTtcblx0XHR9ICk7XG5cdH1cblxuXHRpZiAoIGwgKSB7XG5cdFx0ZnJhZ21lbnQgPSBidWlsZEZyYWdtZW50KCBhcmdzLCBjb2xsZWN0aW9uWyAwIF0ub3duZXJEb2N1bWVudCwgZmFsc2UsIGNvbGxlY3Rpb24sIGlnbm9yZWQgKTtcblx0XHRmaXJzdCA9IGZyYWdtZW50LmZpcnN0Q2hpbGQ7XG5cblx0XHRpZiAoIGZyYWdtZW50LmNoaWxkTm9kZXMubGVuZ3RoID09PSAxICkge1xuXHRcdFx0ZnJhZ21lbnQgPSBmaXJzdDtcblx0XHR9XG5cblx0XHQvLyBSZXF1aXJlIGVpdGhlciBuZXcgY29udGVudCBvciBhbiBpbnRlcmVzdCBpbiBpZ25vcmVkIGVsZW1lbnRzIHRvIGludm9rZSB0aGUgY2FsbGJhY2tcblx0XHRpZiAoIGZpcnN0IHx8IGlnbm9yZWQgKSB7XG5cdFx0XHRzY3JpcHRzID0galF1ZXJ5Lm1hcCggZ2V0QWxsKCBmcmFnbWVudCwgXCJzY3JpcHRcIiApLCBkaXNhYmxlU2NyaXB0ICk7XG5cdFx0XHRoYXNTY3JpcHRzID0gc2NyaXB0cy5sZW5ndGg7XG5cblx0XHRcdC8vIFVzZSB0aGUgb3JpZ2luYWwgZnJhZ21lbnQgZm9yIHRoZSBsYXN0IGl0ZW1cblx0XHRcdC8vIGluc3RlYWQgb2YgdGhlIGZpcnN0IGJlY2F1c2UgaXQgY2FuIGVuZCB1cFxuXHRcdFx0Ly8gYmVpbmcgZW1wdGllZCBpbmNvcnJlY3RseSBpbiBjZXJ0YWluIHNpdHVhdGlvbnMgKCM4MDcwKS5cblx0XHRcdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0bm9kZSA9IGZyYWdtZW50O1xuXG5cdFx0XHRcdGlmICggaSAhPT0gaU5vQ2xvbmUgKSB7XG5cdFx0XHRcdFx0bm9kZSA9IGpRdWVyeS5jbG9uZSggbm9kZSwgdHJ1ZSwgdHJ1ZSApO1xuXG5cdFx0XHRcdFx0Ly8gS2VlcCByZWZlcmVuY2VzIHRvIGNsb25lZCBzY3JpcHRzIGZvciBsYXRlciByZXN0b3JhdGlvblxuXHRcdFx0XHRcdGlmICggaGFzU2NyaXB0cyApIHtcblxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5LCBQaGFudG9tSlMgMSBvbmx5XG5cdFx0XHRcdFx0XHQvLyBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0XG5cdFx0XHRcdFx0XHRqUXVlcnkubWVyZ2UoIHNjcmlwdHMsIGdldEFsbCggbm9kZSwgXCJzY3JpcHRcIiApICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Y2FsbGJhY2suY2FsbCggY29sbGVjdGlvblsgaSBdLCBub2RlLCBpICk7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggaGFzU2NyaXB0cyApIHtcblx0XHRcdFx0ZG9jID0gc2NyaXB0c1sgc2NyaXB0cy5sZW5ndGggLSAxIF0ub3duZXJEb2N1bWVudDtcblxuXHRcdFx0XHQvLyBSZWVuYWJsZSBzY3JpcHRzXG5cdFx0XHRcdGpRdWVyeS5tYXAoIHNjcmlwdHMsIHJlc3RvcmVTY3JpcHQgKTtcblxuXHRcdFx0XHQvLyBFdmFsdWF0ZSBleGVjdXRhYmxlIHNjcmlwdHMgb24gZmlyc3QgZG9jdW1lbnQgaW5zZXJ0aW9uXG5cdFx0XHRcdGZvciAoIGkgPSAwOyBpIDwgaGFzU2NyaXB0czsgaSsrICkge1xuXHRcdFx0XHRcdG5vZGUgPSBzY3JpcHRzWyBpIF07XG5cdFx0XHRcdFx0aWYgKCByc2NyaXB0VHlwZS50ZXN0KCBub2RlLnR5cGUgfHwgXCJcIiApICYmXG5cdFx0XHRcdFx0XHQhZGF0YVByaXYuYWNjZXNzKCBub2RlLCBcImdsb2JhbEV2YWxcIiApICYmXG5cdFx0XHRcdFx0XHRqUXVlcnkuY29udGFpbnMoIGRvYywgbm9kZSApICkge1xuXG5cdFx0XHRcdFx0XHRpZiAoIG5vZGUuc3JjICYmICggbm9kZS50eXBlIHx8IFwiXCIgKS50b0xvd2VyQ2FzZSgpICAhPT0gXCJtb2R1bGVcIiApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBPcHRpb25hbCBBSkFYIGRlcGVuZGVuY3ksIGJ1dCB3b24ndCBydW4gc2NyaXB0cyBpZiBub3QgcHJlc2VudFxuXHRcdFx0XHRcdFx0XHRpZiAoIGpRdWVyeS5fZXZhbFVybCAmJiAhbm9kZS5ub01vZHVsZSApIHtcblx0XHRcdFx0XHRcdFx0XHRqUXVlcnkuX2V2YWxVcmwoIG5vZGUuc3JjLCB7XG5cdFx0XHRcdFx0XHRcdFx0XHRub25jZTogbm9kZS5ub25jZSB8fCBub2RlLmdldEF0dHJpYnV0ZSggXCJub25jZVwiIClcblx0XHRcdFx0XHRcdFx0XHR9ICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdERPTUV2YWwoIG5vZGUudGV4dENvbnRlbnQucmVwbGFjZSggcmNsZWFuU2NyaXB0LCBcIlwiICksIG5vZGUsIGRvYyApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiBjb2xsZWN0aW9uO1xufVxuXG5mdW5jdGlvbiByZW1vdmUoIGVsZW0sIHNlbGVjdG9yLCBrZWVwRGF0YSApIHtcblx0dmFyIG5vZGUsXG5cdFx0bm9kZXMgPSBzZWxlY3RvciA/IGpRdWVyeS5maWx0ZXIoIHNlbGVjdG9yLCBlbGVtICkgOiBlbGVtLFxuXHRcdGkgPSAwO1xuXG5cdGZvciAoIDsgKCBub2RlID0gbm9kZXNbIGkgXSApICE9IG51bGw7IGkrKyApIHtcblx0XHRpZiAoICFrZWVwRGF0YSAmJiBub2RlLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0alF1ZXJ5LmNsZWFuRGF0YSggZ2V0QWxsKCBub2RlICkgKTtcblx0XHR9XG5cblx0XHRpZiAoIG5vZGUucGFyZW50Tm9kZSApIHtcblx0XHRcdGlmICgga2VlcERhdGEgJiYgaXNBdHRhY2hlZCggbm9kZSApICkge1xuXHRcdFx0XHRzZXRHbG9iYWxFdmFsKCBnZXRBbGwoIG5vZGUsIFwic2NyaXB0XCIgKSApO1xuXHRcdFx0fVxuXHRcdFx0bm9kZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKCBub2RlICk7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGVsZW07XG59XG5cbmpRdWVyeS5leHRlbmQoIHtcblx0aHRtbFByZWZpbHRlcjogZnVuY3Rpb24oIGh0bWwgKSB7XG5cdFx0cmV0dXJuIGh0bWwucmVwbGFjZSggcnhodG1sVGFnLCBcIjwkMT48LyQyPlwiICk7XG5cdH0sXG5cblx0Y2xvbmU6IGZ1bmN0aW9uKCBlbGVtLCBkYXRhQW5kRXZlbnRzLCBkZWVwRGF0YUFuZEV2ZW50cyApIHtcblx0XHR2YXIgaSwgbCwgc3JjRWxlbWVudHMsIGRlc3RFbGVtZW50cyxcblx0XHRcdGNsb25lID0gZWxlbS5jbG9uZU5vZGUoIHRydWUgKSxcblx0XHRcdGluUGFnZSA9IGlzQXR0YWNoZWQoIGVsZW0gKTtcblxuXHRcdC8vIEZpeCBJRSBjbG9uaW5nIGlzc3Vlc1xuXHRcdGlmICggIXN1cHBvcnQubm9DbG9uZUNoZWNrZWQgJiYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGVsZW0ubm9kZVR5cGUgPT09IDExICkgJiZcblx0XHRcdFx0IWpRdWVyeS5pc1hNTERvYyggZWxlbSApICkge1xuXG5cdFx0XHQvLyBXZSBlc2NoZXcgU2l6emxlIGhlcmUgZm9yIHBlcmZvcm1hbmNlIHJlYXNvbnM6IGh0dHBzOi8vanNwZXJmLmNvbS9nZXRhbGwtdnMtc2l6emxlLzJcblx0XHRcdGRlc3RFbGVtZW50cyA9IGdldEFsbCggY2xvbmUgKTtcblx0XHRcdHNyY0VsZW1lbnRzID0gZ2V0QWxsKCBlbGVtICk7XG5cblx0XHRcdGZvciAoIGkgPSAwLCBsID0gc3JjRWxlbWVudHMubGVuZ3RoOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRmaXhJbnB1dCggc3JjRWxlbWVudHNbIGkgXSwgZGVzdEVsZW1lbnRzWyBpIF0gKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBDb3B5IHRoZSBldmVudHMgZnJvbSB0aGUgb3JpZ2luYWwgdG8gdGhlIGNsb25lXG5cdFx0aWYgKCBkYXRhQW5kRXZlbnRzICkge1xuXHRcdFx0aWYgKCBkZWVwRGF0YUFuZEV2ZW50cyApIHtcblx0XHRcdFx0c3JjRWxlbWVudHMgPSBzcmNFbGVtZW50cyB8fCBnZXRBbGwoIGVsZW0gKTtcblx0XHRcdFx0ZGVzdEVsZW1lbnRzID0gZGVzdEVsZW1lbnRzIHx8IGdldEFsbCggY2xvbmUgKTtcblxuXHRcdFx0XHRmb3IgKCBpID0gMCwgbCA9IHNyY0VsZW1lbnRzLmxlbmd0aDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0XHRjbG9uZUNvcHlFdmVudCggc3JjRWxlbWVudHNbIGkgXSwgZGVzdEVsZW1lbnRzWyBpIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Y2xvbmVDb3B5RXZlbnQoIGVsZW0sIGNsb25lICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gUHJlc2VydmUgc2NyaXB0IGV2YWx1YXRpb24gaGlzdG9yeVxuXHRcdGRlc3RFbGVtZW50cyA9IGdldEFsbCggY2xvbmUsIFwic2NyaXB0XCIgKTtcblx0XHRpZiAoIGRlc3RFbGVtZW50cy5sZW5ndGggPiAwICkge1xuXHRcdFx0c2V0R2xvYmFsRXZhbCggZGVzdEVsZW1lbnRzLCAhaW5QYWdlICYmIGdldEFsbCggZWxlbSwgXCJzY3JpcHRcIiApICk7XG5cdFx0fVxuXG5cdFx0Ly8gUmV0dXJuIHRoZSBjbG9uZWQgc2V0XG5cdFx0cmV0dXJuIGNsb25lO1xuXHR9LFxuXG5cdGNsZWFuRGF0YTogZnVuY3Rpb24oIGVsZW1zICkge1xuXHRcdHZhciBkYXRhLCBlbGVtLCB0eXBlLFxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsLFxuXHRcdFx0aSA9IDA7XG5cblx0XHRmb3IgKCA7ICggZWxlbSA9IGVsZW1zWyBpIF0gKSAhPT0gdW5kZWZpbmVkOyBpKysgKSB7XG5cdFx0XHRpZiAoIGFjY2VwdERhdGEoIGVsZW0gKSApIHtcblx0XHRcdFx0aWYgKCAoIGRhdGEgPSBlbGVtWyBkYXRhUHJpdi5leHBhbmRvIF0gKSApIHtcblx0XHRcdFx0XHRpZiAoIGRhdGEuZXZlbnRzICkge1xuXHRcdFx0XHRcdFx0Zm9yICggdHlwZSBpbiBkYXRhLmV2ZW50cyApIHtcblx0XHRcdFx0XHRcdFx0aWYgKCBzcGVjaWFsWyB0eXBlIF0gKSB7XG5cdFx0XHRcdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LnJlbW92ZSggZWxlbSwgdHlwZSApO1xuXG5cdFx0XHRcdFx0XHRcdC8vIFRoaXMgaXMgYSBzaG9ydGN1dCB0byBhdm9pZCBqUXVlcnkuZXZlbnQucmVtb3ZlJ3Mgb3ZlcmhlYWRcblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHRqUXVlcnkucmVtb3ZlRXZlbnQoIGVsZW0sIHR5cGUsIGRhdGEuaGFuZGxlICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBTdXBwb3J0OiBDaHJvbWUgPD0zNSAtIDQ1K1xuXHRcdFx0XHRcdC8vIEFzc2lnbiB1bmRlZmluZWQgaW5zdGVhZCBvZiB1c2luZyBkZWxldGUsIHNlZSBEYXRhI3JlbW92ZVxuXHRcdFx0XHRcdGVsZW1bIGRhdGFQcml2LmV4cGFuZG8gXSA9IHVuZGVmaW5lZDtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoIGVsZW1bIGRhdGFVc2VyLmV4cGFuZG8gXSApIHtcblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IENocm9tZSA8PTM1IC0gNDUrXG5cdFx0XHRcdFx0Ly8gQXNzaWduIHVuZGVmaW5lZCBpbnN0ZWFkIG9mIHVzaW5nIGRlbGV0ZSwgc2VlIERhdGEjcmVtb3ZlXG5cdFx0XHRcdFx0ZWxlbVsgZGF0YVVzZXIuZXhwYW5kbyBdID0gdW5kZWZpbmVkO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0ZGV0YWNoOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0cmV0dXJuIHJlbW92ZSggdGhpcywgc2VsZWN0b3IsIHRydWUgKTtcblx0fSxcblxuXHRyZW1vdmU6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRyZXR1cm4gcmVtb3ZlKCB0aGlzLCBzZWxlY3RvciApO1xuXHR9LFxuXG5cdHRleHQ6IGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHRyZXR1cm4gdmFsdWUgPT09IHVuZGVmaW5lZCA/XG5cdFx0XHRcdGpRdWVyeS50ZXh0KCB0aGlzICkgOlxuXHRcdFx0XHR0aGlzLmVtcHR5KCkuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0aWYgKCB0aGlzLm5vZGVUeXBlID09PSAxIHx8IHRoaXMubm9kZVR5cGUgPT09IDExIHx8IHRoaXMubm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdFx0XHR0aGlzLnRleHRDb250ZW50ID0gdmFsdWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9ICk7XG5cdFx0fSwgbnVsbCwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggKTtcblx0fSxcblxuXHRhcHBlbmQ6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBkb21NYW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdGlmICggdGhpcy5ub2RlVHlwZSA9PT0gMSB8fCB0aGlzLm5vZGVUeXBlID09PSAxMSB8fCB0aGlzLm5vZGVUeXBlID09PSA5ICkge1xuXHRcdFx0XHR2YXIgdGFyZ2V0ID0gbWFuaXB1bGF0aW9uVGFyZ2V0KCB0aGlzLCBlbGVtICk7XG5cdFx0XHRcdHRhcmdldC5hcHBlbmRDaGlsZCggZWxlbSApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHRwcmVwZW5kOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZG9tTWFuaXAoIHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRpZiAoIHRoaXMubm9kZVR5cGUgPT09IDEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gMTEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gOSApIHtcblx0XHRcdFx0dmFyIHRhcmdldCA9IG1hbmlwdWxhdGlvblRhcmdldCggdGhpcywgZWxlbSApO1xuXHRcdFx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKCBlbGVtLCB0YXJnZXQuZmlyc3RDaGlsZCApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHRiZWZvcmU6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBkb21NYW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdGlmICggdGhpcy5wYXJlbnROb2RlICkge1xuXHRcdFx0XHR0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKCBlbGVtLCB0aGlzICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGFmdGVyOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZG9tTWFuaXAoIHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRpZiAoIHRoaXMucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0dGhpcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZSggZWxlbSwgdGhpcy5uZXh0U2libGluZyApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHRlbXB0eTogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGVsZW0sXG5cdFx0XHRpID0gMDtcblxuXHRcdGZvciAoIDsgKCBlbGVtID0gdGhpc1sgaSBdICkgIT0gbnVsbDsgaSsrICkge1xuXHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXG5cdFx0XHRcdC8vIFByZXZlbnQgbWVtb3J5IGxlYWtzXG5cdFx0XHRcdGpRdWVyeS5jbGVhbkRhdGEoIGdldEFsbCggZWxlbSwgZmFsc2UgKSApO1xuXG5cdFx0XHRcdC8vIFJlbW92ZSBhbnkgcmVtYWluaW5nIG5vZGVzXG5cdFx0XHRcdGVsZW0udGV4dENvbnRlbnQgPSBcIlwiO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzO1xuXHR9LFxuXG5cdGNsb25lOiBmdW5jdGlvbiggZGF0YUFuZEV2ZW50cywgZGVlcERhdGFBbmRFdmVudHMgKSB7XG5cdFx0ZGF0YUFuZEV2ZW50cyA9IGRhdGFBbmRFdmVudHMgPT0gbnVsbCA/IGZhbHNlIDogZGF0YUFuZEV2ZW50cztcblx0XHRkZWVwRGF0YUFuZEV2ZW50cyA9IGRlZXBEYXRhQW5kRXZlbnRzID09IG51bGwgPyBkYXRhQW5kRXZlbnRzIDogZGVlcERhdGFBbmRFdmVudHM7XG5cblx0XHRyZXR1cm4gdGhpcy5tYXAoIGZ1bmN0aW9uKCkge1xuXHRcdFx0cmV0dXJuIGpRdWVyeS5jbG9uZSggdGhpcywgZGF0YUFuZEV2ZW50cywgZGVlcERhdGFBbmRFdmVudHMgKTtcblx0XHR9ICk7XG5cdH0sXG5cblx0aHRtbDogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRcdHZhciBlbGVtID0gdGhpc1sgMCBdIHx8IHt9LFxuXHRcdFx0XHRpID0gMCxcblx0XHRcdFx0bCA9IHRoaXMubGVuZ3RoO1xuXG5cdFx0XHRpZiAoIHZhbHVlID09PSB1bmRlZmluZWQgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdFx0cmV0dXJuIGVsZW0uaW5uZXJIVE1MO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTZWUgaWYgd2UgY2FuIHRha2UgYSBzaG9ydGN1dCBhbmQganVzdCB1c2UgaW5uZXJIVE1MXG5cdFx0XHRpZiAoIHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiAmJiAhcm5vSW5uZXJodG1sLnRlc3QoIHZhbHVlICkgJiZcblx0XHRcdFx0IXdyYXBNYXBbICggcnRhZ05hbWUuZXhlYyggdmFsdWUgKSB8fCBbIFwiXCIsIFwiXCIgXSApWyAxIF0udG9Mb3dlckNhc2UoKSBdICkge1xuXG5cdFx0XHRcdHZhbHVlID0galF1ZXJ5Lmh0bWxQcmVmaWx0ZXIoIHZhbHVlICk7XG5cblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRcdFx0XHRlbGVtID0gdGhpc1sgaSBdIHx8IHt9O1xuXG5cdFx0XHRcdFx0XHQvLyBSZW1vdmUgZWxlbWVudCBub2RlcyBhbmQgcHJldmVudCBtZW1vcnkgbGVha3Ncblx0XHRcdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdFx0XHRcdFx0alF1ZXJ5LmNsZWFuRGF0YSggZ2V0QWxsKCBlbGVtLCBmYWxzZSApICk7XG5cdFx0XHRcdFx0XHRcdGVsZW0uaW5uZXJIVE1MID0gdmFsdWU7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0ZWxlbSA9IDA7XG5cblx0XHRcdFx0Ly8gSWYgdXNpbmcgaW5uZXJIVE1MIHRocm93cyBhbiBleGNlcHRpb24sIHVzZSB0aGUgZmFsbGJhY2sgbWV0aG9kXG5cdFx0XHRcdH0gY2F0Y2ggKCBlICkge31cblx0XHRcdH1cblxuXHRcdFx0aWYgKCBlbGVtICkge1xuXHRcdFx0XHR0aGlzLmVtcHR5KCkuYXBwZW5kKCB2YWx1ZSApO1xuXHRcdFx0fVxuXHRcdH0sIG51bGwsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoICk7XG5cdH0sXG5cblx0cmVwbGFjZVdpdGg6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBpZ25vcmVkID0gW107XG5cblx0XHQvLyBNYWtlIHRoZSBjaGFuZ2VzLCByZXBsYWNpbmcgZWFjaCBub24taWdub3JlZCBjb250ZXh0IGVsZW1lbnQgd2l0aCB0aGUgbmV3IGNvbnRlbnRcblx0XHRyZXR1cm4gZG9tTWFuaXAoIHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHR2YXIgcGFyZW50ID0gdGhpcy5wYXJlbnROb2RlO1xuXG5cdFx0XHRpZiAoIGpRdWVyeS5pbkFycmF5KCB0aGlzLCBpZ25vcmVkICkgPCAwICkge1xuXHRcdFx0XHRqUXVlcnkuY2xlYW5EYXRhKCBnZXRBbGwoIHRoaXMgKSApO1xuXHRcdFx0XHRpZiAoIHBhcmVudCApIHtcblx0XHRcdFx0XHRwYXJlbnQucmVwbGFjZUNoaWxkKCBlbGVtLCB0aGlzICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdC8vIEZvcmNlIGNhbGxiYWNrIGludm9jYXRpb25cblx0XHR9LCBpZ25vcmVkICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmVhY2goIHtcblx0YXBwZW5kVG86IFwiYXBwZW5kXCIsXG5cdHByZXBlbmRUbzogXCJwcmVwZW5kXCIsXG5cdGluc2VydEJlZm9yZTogXCJiZWZvcmVcIixcblx0aW5zZXJ0QWZ0ZXI6IFwiYWZ0ZXJcIixcblx0cmVwbGFjZUFsbDogXCJyZXBsYWNlV2l0aFwiXG59LCBmdW5jdGlvbiggbmFtZSwgb3JpZ2luYWwgKSB7XG5cdGpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHZhciBlbGVtcyxcblx0XHRcdHJldCA9IFtdLFxuXHRcdFx0aW5zZXJ0ID0galF1ZXJ5KCBzZWxlY3RvciApLFxuXHRcdFx0bGFzdCA9IGluc2VydC5sZW5ndGggLSAxLFxuXHRcdFx0aSA9IDA7XG5cblx0XHRmb3IgKCA7IGkgPD0gbGFzdDsgaSsrICkge1xuXHRcdFx0ZWxlbXMgPSBpID09PSBsYXN0ID8gdGhpcyA6IHRoaXMuY2xvbmUoIHRydWUgKTtcblx0XHRcdGpRdWVyeSggaW5zZXJ0WyBpIF0gKVsgb3JpZ2luYWwgXSggZWxlbXMgKTtcblxuXHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5LCBQaGFudG9tSlMgMSBvbmx5XG5cdFx0XHQvLyAuZ2V0KCkgYmVjYXVzZSBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0XG5cdFx0XHRwdXNoLmFwcGx5KCByZXQsIGVsZW1zLmdldCgpICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCByZXQgKTtcblx0fTtcbn0gKTtcbnZhciBybnVtbm9ucHggPSBuZXcgUmVnRXhwKCBcIl4oXCIgKyBwbnVtICsgXCIpKD8hcHgpW2EteiVdKyRcIiwgXCJpXCIgKTtcblxudmFyIGdldFN0eWxlcyA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgPD0xMSBvbmx5LCBGaXJlZm94IDw9MzAgKCMxNTA5OCwgIzE0MTUwKVxuXHRcdC8vIElFIHRocm93cyBvbiBlbGVtZW50cyBjcmVhdGVkIGluIHBvcHVwc1xuXHRcdC8vIEZGIG1lYW53aGlsZSB0aHJvd3Mgb24gZnJhbWUgZWxlbWVudHMgdGhyb3VnaCBcImRlZmF1bHRWaWV3LmdldENvbXB1dGVkU3R5bGVcIlxuXHRcdHZhciB2aWV3ID0gZWxlbS5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3O1xuXG5cdFx0aWYgKCAhdmlldyB8fCAhdmlldy5vcGVuZXIgKSB7XG5cdFx0XHR2aWV3ID0gd2luZG93O1xuXHRcdH1cblxuXHRcdHJldHVybiB2aWV3LmdldENvbXB1dGVkU3R5bGUoIGVsZW0gKTtcblx0fTtcblxudmFyIHJib3hTdHlsZSA9IG5ldyBSZWdFeHAoIGNzc0V4cGFuZC5qb2luKCBcInxcIiApLCBcImlcIiApO1xuXG5cblxuKCBmdW5jdGlvbigpIHtcblxuXHQvLyBFeGVjdXRpbmcgYm90aCBwaXhlbFBvc2l0aW9uICYgYm94U2l6aW5nUmVsaWFibGUgdGVzdHMgcmVxdWlyZSBvbmx5IG9uZSBsYXlvdXRcblx0Ly8gc28gdGhleSdyZSBleGVjdXRlZCBhdCB0aGUgc2FtZSB0aW1lIHRvIHNhdmUgdGhlIHNlY29uZCBjb21wdXRhdGlvbi5cblx0ZnVuY3Rpb24gY29tcHV0ZVN0eWxlVGVzdHMoKSB7XG5cblx0XHQvLyBUaGlzIGlzIGEgc2luZ2xldG9uLCB3ZSBuZWVkIHRvIGV4ZWN1dGUgaXQgb25seSBvbmNlXG5cdFx0aWYgKCAhZGl2ICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGNvbnRhaW5lci5zdHlsZS5jc3NUZXh0ID0gXCJwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0Oi0xMTExMXB4O3dpZHRoOjYwcHg7XCIgK1xuXHRcdFx0XCJtYXJnaW4tdG9wOjFweDtwYWRkaW5nOjA7Ym9yZGVyOjBcIjtcblx0XHRkaXYuc3R5bGUuY3NzVGV4dCA9XG5cdFx0XHRcInBvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6YmxvY2s7Ym94LXNpemluZzpib3JkZXItYm94O292ZXJmbG93OnNjcm9sbDtcIiArXG5cdFx0XHRcIm1hcmdpbjphdXRvO2JvcmRlcjoxcHg7cGFkZGluZzoxcHg7XCIgK1xuXHRcdFx0XCJ3aWR0aDo2MCU7dG9wOjElXCI7XG5cdFx0ZG9jdW1lbnRFbGVtZW50LmFwcGVuZENoaWxkKCBjb250YWluZXIgKS5hcHBlbmRDaGlsZCggZGl2ICk7XG5cblx0XHR2YXIgZGl2U3R5bGUgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSggZGl2ICk7XG5cdFx0cGl4ZWxQb3NpdGlvblZhbCA9IGRpdlN0eWxlLnRvcCAhPT0gXCIxJVwiO1xuXG5cdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA0LjAgLSA0LjMgb25seSwgRmlyZWZveCA8PTMgLSA0NFxuXHRcdHJlbGlhYmxlTWFyZ2luTGVmdFZhbCA9IHJvdW5kUGl4ZWxNZWFzdXJlcyggZGl2U3R5bGUubWFyZ2luTGVmdCApID09PSAxMjtcblxuXHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgNC4wIC0gNC4zIG9ubHksIFNhZmFyaSA8PTkuMSAtIDEwLjEsIGlPUyA8PTcuMCAtIDkuM1xuXHRcdC8vIFNvbWUgc3R5bGVzIGNvbWUgYmFjayB3aXRoIHBlcmNlbnRhZ2UgdmFsdWVzLCBldmVuIHRob3VnaCB0aGV5IHNob3VsZG4ndFxuXHRcdGRpdi5zdHlsZS5yaWdodCA9IFwiNjAlXCI7XG5cdFx0cGl4ZWxCb3hTdHlsZXNWYWwgPSByb3VuZFBpeGVsTWVhc3VyZXMoIGRpdlN0eWxlLnJpZ2h0ICkgPT09IDM2O1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgOSAtIDExIG9ubHlcblx0XHQvLyBEZXRlY3QgbWlzcmVwb3J0aW5nIG9mIGNvbnRlbnQgZGltZW5zaW9ucyBmb3IgYm94LXNpemluZzpib3JkZXItYm94IGVsZW1lbnRzXG5cdFx0Ym94U2l6aW5nUmVsaWFibGVWYWwgPSByb3VuZFBpeGVsTWVhc3VyZXMoIGRpdlN0eWxlLndpZHRoICkgPT09IDM2O1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgOSBvbmx5XG5cdFx0Ly8gRGV0ZWN0IG92ZXJmbG93OnNjcm9sbCBzY3Jld2luZXNzIChnaC0zNjk5KVxuXHRcdC8vIFN1cHBvcnQ6IENocm9tZSA8PTY0XG5cdFx0Ly8gRG9uJ3QgZ2V0IHRyaWNrZWQgd2hlbiB6b29tIGFmZmVjdHMgb2Zmc2V0V2lkdGggKGdoLTQwMjkpXG5cdFx0ZGl2LnN0eWxlLnBvc2l0aW9uID0gXCJhYnNvbHV0ZVwiO1xuXHRcdHNjcm9sbGJveFNpemVWYWwgPSByb3VuZFBpeGVsTWVhc3VyZXMoIGRpdi5vZmZzZXRXaWR0aCAvIDMgKSA9PT0gMTI7XG5cblx0XHRkb2N1bWVudEVsZW1lbnQucmVtb3ZlQ2hpbGQoIGNvbnRhaW5lciApO1xuXG5cdFx0Ly8gTnVsbGlmeSB0aGUgZGl2IHNvIGl0IHdvdWxkbid0IGJlIHN0b3JlZCBpbiB0aGUgbWVtb3J5IGFuZFxuXHRcdC8vIGl0IHdpbGwgYWxzbyBiZSBhIHNpZ24gdGhhdCBjaGVja3MgYWxyZWFkeSBwZXJmb3JtZWRcblx0XHRkaXYgPSBudWxsO1xuXHR9XG5cblx0ZnVuY3Rpb24gcm91bmRQaXhlbE1lYXN1cmVzKCBtZWFzdXJlICkge1xuXHRcdHJldHVybiBNYXRoLnJvdW5kKCBwYXJzZUZsb2F0KCBtZWFzdXJlICkgKTtcblx0fVxuXG5cdHZhciBwaXhlbFBvc2l0aW9uVmFsLCBib3hTaXppbmdSZWxpYWJsZVZhbCwgc2Nyb2xsYm94U2l6ZVZhbCwgcGl4ZWxCb3hTdHlsZXNWYWwsXG5cdFx0cmVsaWFibGVNYXJnaW5MZWZ0VmFsLFxuXHRcdGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKSxcblx0XHRkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICk7XG5cblx0Ly8gRmluaXNoIGVhcmx5IGluIGxpbWl0ZWQgKG5vbi1icm93c2VyKSBlbnZpcm9ubWVudHNcblx0aWYgKCAhZGl2LnN0eWxlICkge1xuXHRcdHJldHVybjtcblx0fVxuXG5cdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExIG9ubHlcblx0Ly8gU3R5bGUgb2YgY2xvbmVkIGVsZW1lbnQgYWZmZWN0cyBzb3VyY2UgZWxlbWVudCBjbG9uZWQgKCM4OTA4KVxuXHRkaXYuc3R5bGUuYmFja2dyb3VuZENsaXAgPSBcImNvbnRlbnQtYm94XCI7XG5cdGRpdi5jbG9uZU5vZGUoIHRydWUgKS5zdHlsZS5iYWNrZ3JvdW5kQ2xpcCA9IFwiXCI7XG5cdHN1cHBvcnQuY2xlYXJDbG9uZVN0eWxlID0gZGl2LnN0eWxlLmJhY2tncm91bmRDbGlwID09PSBcImNvbnRlbnQtYm94XCI7XG5cblx0alF1ZXJ5LmV4dGVuZCggc3VwcG9ydCwge1xuXHRcdGJveFNpemluZ1JlbGlhYmxlOiBmdW5jdGlvbigpIHtcblx0XHRcdGNvbXB1dGVTdHlsZVRlc3RzKCk7XG5cdFx0XHRyZXR1cm4gYm94U2l6aW5nUmVsaWFibGVWYWw7XG5cdFx0fSxcblx0XHRwaXhlbEJveFN0eWxlczogZnVuY3Rpb24oKSB7XG5cdFx0XHRjb21wdXRlU3R5bGVUZXN0cygpO1xuXHRcdFx0cmV0dXJuIHBpeGVsQm94U3R5bGVzVmFsO1xuXHRcdH0sXG5cdFx0cGl4ZWxQb3NpdGlvbjogZnVuY3Rpb24oKSB7XG5cdFx0XHRjb21wdXRlU3R5bGVUZXN0cygpO1xuXHRcdFx0cmV0dXJuIHBpeGVsUG9zaXRpb25WYWw7XG5cdFx0fSxcblx0XHRyZWxpYWJsZU1hcmdpbkxlZnQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0Y29tcHV0ZVN0eWxlVGVzdHMoKTtcblx0XHRcdHJldHVybiByZWxpYWJsZU1hcmdpbkxlZnRWYWw7XG5cdFx0fSxcblx0XHRzY3JvbGxib3hTaXplOiBmdW5jdGlvbigpIHtcblx0XHRcdGNvbXB1dGVTdHlsZVRlc3RzKCk7XG5cdFx0XHRyZXR1cm4gc2Nyb2xsYm94U2l6ZVZhbDtcblx0XHR9XG5cdH0gKTtcbn0gKSgpO1xuXG5cbmZ1bmN0aW9uIGN1ckNTUyggZWxlbSwgbmFtZSwgY29tcHV0ZWQgKSB7XG5cdHZhciB3aWR0aCwgbWluV2lkdGgsIG1heFdpZHRoLCByZXQsXG5cblx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDUxK1xuXHRcdC8vIFJldHJpZXZpbmcgc3R5bGUgYmVmb3JlIGNvbXB1dGVkIHNvbWVob3dcblx0XHQvLyBmaXhlcyBhbiBpc3N1ZSB3aXRoIGdldHRpbmcgd3JvbmcgdmFsdWVzXG5cdFx0Ly8gb24gZGV0YWNoZWQgZWxlbWVudHNcblx0XHRzdHlsZSA9IGVsZW0uc3R5bGU7XG5cblx0Y29tcHV0ZWQgPSBjb21wdXRlZCB8fCBnZXRTdHlsZXMoIGVsZW0gKTtcblxuXHQvLyBnZXRQcm9wZXJ0eVZhbHVlIGlzIG5lZWRlZCBmb3I6XG5cdC8vICAgLmNzcygnZmlsdGVyJykgKElFIDkgb25seSwgIzEyNTM3KVxuXHQvLyAgIC5jc3MoJy0tY3VzdG9tUHJvcGVydHkpICgjMzE0NClcblx0aWYgKCBjb21wdXRlZCApIHtcblx0XHRyZXQgPSBjb21wdXRlZC5nZXRQcm9wZXJ0eVZhbHVlKCBuYW1lICkgfHwgY29tcHV0ZWRbIG5hbWUgXTtcblxuXHRcdGlmICggcmV0ID09PSBcIlwiICYmICFpc0F0dGFjaGVkKCBlbGVtICkgKSB7XG5cdFx0XHRyZXQgPSBqUXVlcnkuc3R5bGUoIGVsZW0sIG5hbWUgKTtcblx0XHR9XG5cblx0XHQvLyBBIHRyaWJ1dGUgdG8gdGhlIFwiYXdlc29tZSBoYWNrIGJ5IERlYW4gRWR3YXJkc1wiXG5cdFx0Ly8gQW5kcm9pZCBCcm93c2VyIHJldHVybnMgcGVyY2VudGFnZSBmb3Igc29tZSB2YWx1ZXMsXG5cdFx0Ly8gYnV0IHdpZHRoIHNlZW1zIHRvIGJlIHJlbGlhYmx5IHBpeGVscy5cblx0XHQvLyBUaGlzIGlzIGFnYWluc3QgdGhlIENTU09NIGRyYWZ0IHNwZWM6XG5cdFx0Ly8gaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzc29tLyNyZXNvbHZlZC12YWx1ZXNcblx0XHRpZiAoICFzdXBwb3J0LnBpeGVsQm94U3R5bGVzKCkgJiYgcm51bW5vbnB4LnRlc3QoIHJldCApICYmIHJib3hTdHlsZS50ZXN0KCBuYW1lICkgKSB7XG5cblx0XHRcdC8vIFJlbWVtYmVyIHRoZSBvcmlnaW5hbCB2YWx1ZXNcblx0XHRcdHdpZHRoID0gc3R5bGUud2lkdGg7XG5cdFx0XHRtaW5XaWR0aCA9IHN0eWxlLm1pbldpZHRoO1xuXHRcdFx0bWF4V2lkdGggPSBzdHlsZS5tYXhXaWR0aDtcblxuXHRcdFx0Ly8gUHV0IGluIHRoZSBuZXcgdmFsdWVzIHRvIGdldCBhIGNvbXB1dGVkIHZhbHVlIG91dFxuXHRcdFx0c3R5bGUubWluV2lkdGggPSBzdHlsZS5tYXhXaWR0aCA9IHN0eWxlLndpZHRoID0gcmV0O1xuXHRcdFx0cmV0ID0gY29tcHV0ZWQud2lkdGg7XG5cblx0XHRcdC8vIFJldmVydCB0aGUgY2hhbmdlZCB2YWx1ZXNcblx0XHRcdHN0eWxlLndpZHRoID0gd2lkdGg7XG5cdFx0XHRzdHlsZS5taW5XaWR0aCA9IG1pbldpZHRoO1xuXHRcdFx0c3R5bGUubWF4V2lkdGggPSBtYXhXaWR0aDtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gcmV0ICE9PSB1bmRlZmluZWQgP1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgPD05IC0gMTEgb25seVxuXHRcdC8vIElFIHJldHVybnMgekluZGV4IHZhbHVlIGFzIGFuIGludGVnZXIuXG5cdFx0cmV0ICsgXCJcIiA6XG5cdFx0cmV0O1xufVxuXG5cbmZ1bmN0aW9uIGFkZEdldEhvb2tJZiggY29uZGl0aW9uRm4sIGhvb2tGbiApIHtcblxuXHQvLyBEZWZpbmUgdGhlIGhvb2ssIHdlJ2xsIGNoZWNrIG9uIHRoZSBmaXJzdCBydW4gaWYgaXQncyByZWFsbHkgbmVlZGVkLlxuXHRyZXR1cm4ge1xuXHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRpZiAoIGNvbmRpdGlvbkZuKCkgKSB7XG5cblx0XHRcdFx0Ly8gSG9vayBub3QgbmVlZGVkIChvciBpdCdzIG5vdCBwb3NzaWJsZSB0byB1c2UgaXQgZHVlXG5cdFx0XHRcdC8vIHRvIG1pc3NpbmcgZGVwZW5kZW5jeSksIHJlbW92ZSBpdC5cblx0XHRcdFx0ZGVsZXRlIHRoaXMuZ2V0O1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdC8vIEhvb2sgbmVlZGVkOyByZWRlZmluZSBpdCBzbyB0aGF0IHRoZSBzdXBwb3J0IHRlc3QgaXMgbm90IGV4ZWN1dGVkIGFnYWluLlxuXHRcdFx0cmV0dXJuICggdGhpcy5nZXQgPSBob29rRm4gKS5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0fVxuXHR9O1xufVxuXG5cbnZhciBjc3NQcmVmaXhlcyA9IFsgXCJXZWJraXRcIiwgXCJNb3pcIiwgXCJtc1wiIF0sXG5cdGVtcHR5U3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICkuc3R5bGUsXG5cdHZlbmRvclByb3BzID0ge307XG5cbi8vIFJldHVybiBhIHZlbmRvci1wcmVmaXhlZCBwcm9wZXJ0eSBvciB1bmRlZmluZWRcbmZ1bmN0aW9uIHZlbmRvclByb3BOYW1lKCBuYW1lICkge1xuXG5cdC8vIENoZWNrIGZvciB2ZW5kb3IgcHJlZml4ZWQgbmFtZXNcblx0dmFyIGNhcE5hbWUgPSBuYW1lWyAwIF0udG9VcHBlckNhc2UoKSArIG5hbWUuc2xpY2UoIDEgKSxcblx0XHRpID0gY3NzUHJlZml4ZXMubGVuZ3RoO1xuXG5cdHdoaWxlICggaS0tICkge1xuXHRcdG5hbWUgPSBjc3NQcmVmaXhlc1sgaSBdICsgY2FwTmFtZTtcblx0XHRpZiAoIG5hbWUgaW4gZW1wdHlTdHlsZSApIHtcblx0XHRcdHJldHVybiBuYW1lO1xuXHRcdH1cblx0fVxufVxuXG4vLyBSZXR1cm4gYSBwb3RlbnRpYWxseS1tYXBwZWQgalF1ZXJ5LmNzc1Byb3BzIG9yIHZlbmRvciBwcmVmaXhlZCBwcm9wZXJ0eVxuZnVuY3Rpb24gZmluYWxQcm9wTmFtZSggbmFtZSApIHtcblx0dmFyIGZpbmFsID0galF1ZXJ5LmNzc1Byb3BzWyBuYW1lIF0gfHwgdmVuZG9yUHJvcHNbIG5hbWUgXTtcblxuXHRpZiAoIGZpbmFsICkge1xuXHRcdHJldHVybiBmaW5hbDtcblx0fVxuXHRpZiAoIG5hbWUgaW4gZW1wdHlTdHlsZSApIHtcblx0XHRyZXR1cm4gbmFtZTtcblx0fVxuXHRyZXR1cm4gdmVuZG9yUHJvcHNbIG5hbWUgXSA9IHZlbmRvclByb3BOYW1lKCBuYW1lICkgfHwgbmFtZTtcbn1cblxuXG52YXJcblxuXHQvLyBTd2FwcGFibGUgaWYgZGlzcGxheSBpcyBub25lIG9yIHN0YXJ0cyB3aXRoIHRhYmxlXG5cdC8vIGV4Y2VwdCBcInRhYmxlXCIsIFwidGFibGUtY2VsbFwiLCBvciBcInRhYmxlLWNhcHRpb25cIlxuXHQvLyBTZWUgaGVyZSBmb3IgZGlzcGxheSB2YWx1ZXM6IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvQ1NTL2Rpc3BsYXlcblx0cmRpc3BsYXlzd2FwID0gL14obm9uZXx0YWJsZSg/IS1jW2VhXSkuKykvLFxuXHRyY3VzdG9tUHJvcCA9IC9eLS0vLFxuXHRjc3NTaG93ID0geyBwb3NpdGlvbjogXCJhYnNvbHV0ZVwiLCB2aXNpYmlsaXR5OiBcImhpZGRlblwiLCBkaXNwbGF5OiBcImJsb2NrXCIgfSxcblx0Y3NzTm9ybWFsVHJhbnNmb3JtID0ge1xuXHRcdGxldHRlclNwYWNpbmc6IFwiMFwiLFxuXHRcdGZvbnRXZWlnaHQ6IFwiNDAwXCJcblx0fTtcblxuZnVuY3Rpb24gc2V0UG9zaXRpdmVOdW1iZXIoIGVsZW0sIHZhbHVlLCBzdWJ0cmFjdCApIHtcblxuXHQvLyBBbnkgcmVsYXRpdmUgKCsvLSkgdmFsdWVzIGhhdmUgYWxyZWFkeSBiZWVuXG5cdC8vIG5vcm1hbGl6ZWQgYXQgdGhpcyBwb2ludFxuXHR2YXIgbWF0Y2hlcyA9IHJjc3NOdW0uZXhlYyggdmFsdWUgKTtcblx0cmV0dXJuIG1hdGNoZXMgP1xuXG5cdFx0Ly8gR3VhcmQgYWdhaW5zdCB1bmRlZmluZWQgXCJzdWJ0cmFjdFwiLCBlLmcuLCB3aGVuIHVzZWQgYXMgaW4gY3NzSG9va3Ncblx0XHRNYXRoLm1heCggMCwgbWF0Y2hlc1sgMiBdIC0gKCBzdWJ0cmFjdCB8fCAwICkgKSArICggbWF0Y2hlc1sgMyBdIHx8IFwicHhcIiApIDpcblx0XHR2YWx1ZTtcbn1cblxuZnVuY3Rpb24gYm94TW9kZWxBZGp1c3RtZW50KCBlbGVtLCBkaW1lbnNpb24sIGJveCwgaXNCb3JkZXJCb3gsIHN0eWxlcywgY29tcHV0ZWRWYWwgKSB7XG5cdHZhciBpID0gZGltZW5zaW9uID09PSBcIndpZHRoXCIgPyAxIDogMCxcblx0XHRleHRyYSA9IDAsXG5cdFx0ZGVsdGEgPSAwO1xuXG5cdC8vIEFkanVzdG1lbnQgbWF5IG5vdCBiZSBuZWNlc3Nhcnlcblx0aWYgKCBib3ggPT09ICggaXNCb3JkZXJCb3ggPyBcImJvcmRlclwiIDogXCJjb250ZW50XCIgKSApIHtcblx0XHRyZXR1cm4gMDtcblx0fVxuXG5cdGZvciAoIDsgaSA8IDQ7IGkgKz0gMiApIHtcblxuXHRcdC8vIEJvdGggYm94IG1vZGVscyBleGNsdWRlIG1hcmdpblxuXHRcdGlmICggYm94ID09PSBcIm1hcmdpblwiICkge1xuXHRcdFx0ZGVsdGEgKz0galF1ZXJ5LmNzcyggZWxlbSwgYm94ICsgY3NzRXhwYW5kWyBpIF0sIHRydWUsIHN0eWxlcyApO1xuXHRcdH1cblxuXHRcdC8vIElmIHdlIGdldCBoZXJlIHdpdGggYSBjb250ZW50LWJveCwgd2UncmUgc2Vla2luZyBcInBhZGRpbmdcIiBvciBcImJvcmRlclwiIG9yIFwibWFyZ2luXCJcblx0XHRpZiAoICFpc0JvcmRlckJveCApIHtcblxuXHRcdFx0Ly8gQWRkIHBhZGRpbmdcblx0XHRcdGRlbHRhICs9IGpRdWVyeS5jc3MoIGVsZW0sIFwicGFkZGluZ1wiICsgY3NzRXhwYW5kWyBpIF0sIHRydWUsIHN0eWxlcyApO1xuXG5cdFx0XHQvLyBGb3IgXCJib3JkZXJcIiBvciBcIm1hcmdpblwiLCBhZGQgYm9yZGVyXG5cdFx0XHRpZiAoIGJveCAhPT0gXCJwYWRkaW5nXCIgKSB7XG5cdFx0XHRcdGRlbHRhICs9IGpRdWVyeS5jc3MoIGVsZW0sIFwiYm9yZGVyXCIgKyBjc3NFeHBhbmRbIGkgXSArIFwiV2lkdGhcIiwgdHJ1ZSwgc3R5bGVzICk7XG5cblx0XHRcdC8vIEJ1dCBzdGlsbCBrZWVwIHRyYWNrIG9mIGl0IG90aGVyd2lzZVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZXh0cmEgKz0galF1ZXJ5LmNzcyggZWxlbSwgXCJib3JkZXJcIiArIGNzc0V4cGFuZFsgaSBdICsgXCJXaWR0aFwiLCB0cnVlLCBzdHlsZXMgKTtcblx0XHRcdH1cblxuXHRcdC8vIElmIHdlIGdldCBoZXJlIHdpdGggYSBib3JkZXItYm94IChjb250ZW50ICsgcGFkZGluZyArIGJvcmRlciksIHdlJ3JlIHNlZWtpbmcgXCJjb250ZW50XCIgb3Jcblx0XHQvLyBcInBhZGRpbmdcIiBvciBcIm1hcmdpblwiXG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0Ly8gRm9yIFwiY29udGVudFwiLCBzdWJ0cmFjdCBwYWRkaW5nXG5cdFx0XHRpZiAoIGJveCA9PT0gXCJjb250ZW50XCIgKSB7XG5cdFx0XHRcdGRlbHRhIC09IGpRdWVyeS5jc3MoIGVsZW0sIFwicGFkZGluZ1wiICsgY3NzRXhwYW5kWyBpIF0sIHRydWUsIHN0eWxlcyApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBGb3IgXCJjb250ZW50XCIgb3IgXCJwYWRkaW5nXCIsIHN1YnRyYWN0IGJvcmRlclxuXHRcdFx0aWYgKCBib3ggIT09IFwibWFyZ2luXCIgKSB7XG5cdFx0XHRcdGRlbHRhIC09IGpRdWVyeS5jc3MoIGVsZW0sIFwiYm9yZGVyXCIgKyBjc3NFeHBhbmRbIGkgXSArIFwiV2lkdGhcIiwgdHJ1ZSwgc3R5bGVzICk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gQWNjb3VudCBmb3IgcG9zaXRpdmUgY29udGVudC1ib3ggc2Nyb2xsIGd1dHRlciB3aGVuIHJlcXVlc3RlZCBieSBwcm92aWRpbmcgY29tcHV0ZWRWYWxcblx0aWYgKCAhaXNCb3JkZXJCb3ggJiYgY29tcHV0ZWRWYWwgPj0gMCApIHtcblxuXHRcdC8vIG9mZnNldFdpZHRoL29mZnNldEhlaWdodCBpcyBhIHJvdW5kZWQgc3VtIG9mIGNvbnRlbnQsIHBhZGRpbmcsIHNjcm9sbCBndXR0ZXIsIGFuZCBib3JkZXJcblx0XHQvLyBBc3N1bWluZyBpbnRlZ2VyIHNjcm9sbCBndXR0ZXIsIHN1YnRyYWN0IHRoZSByZXN0IGFuZCByb3VuZCBkb3duXG5cdFx0ZGVsdGEgKz0gTWF0aC5tYXgoIDAsIE1hdGguY2VpbChcblx0XHRcdGVsZW1bIFwib2Zmc2V0XCIgKyBkaW1lbnNpb25bIDAgXS50b1VwcGVyQ2FzZSgpICsgZGltZW5zaW9uLnNsaWNlKCAxICkgXSAtXG5cdFx0XHRjb21wdXRlZFZhbCAtXG5cdFx0XHRkZWx0YSAtXG5cdFx0XHRleHRyYSAtXG5cdFx0XHQwLjVcblxuXHRcdC8vIElmIG9mZnNldFdpZHRoL29mZnNldEhlaWdodCBpcyB1bmtub3duLCB0aGVuIHdlIGNhbid0IGRldGVybWluZSBjb250ZW50LWJveCBzY3JvbGwgZ3V0dGVyXG5cdFx0Ly8gVXNlIGFuIGV4cGxpY2l0IHplcm8gdG8gYXZvaWQgTmFOIChnaC0zOTY0KVxuXHRcdCkgKSB8fCAwO1xuXHR9XG5cblx0cmV0dXJuIGRlbHRhO1xufVxuXG5mdW5jdGlvbiBnZXRXaWR0aE9ySGVpZ2h0KCBlbGVtLCBkaW1lbnNpb24sIGV4dHJhICkge1xuXG5cdC8vIFN0YXJ0IHdpdGggY29tcHV0ZWQgc3R5bGVcblx0dmFyIHN0eWxlcyA9IGdldFN0eWxlcyggZWxlbSApLFxuXG5cdFx0Ly8gVG8gYXZvaWQgZm9yY2luZyBhIHJlZmxvdywgb25seSBmZXRjaCBib3hTaXppbmcgaWYgd2UgbmVlZCBpdCAoZ2gtNDMyMikuXG5cdFx0Ly8gRmFrZSBjb250ZW50LWJveCB1bnRpbCB3ZSBrbm93IGl0J3MgbmVlZGVkIHRvIGtub3cgdGhlIHRydWUgdmFsdWUuXG5cdFx0Ym94U2l6aW5nTmVlZGVkID0gIXN1cHBvcnQuYm94U2l6aW5nUmVsaWFibGUoKSB8fCBleHRyYSxcblx0XHRpc0JvcmRlckJveCA9IGJveFNpemluZ05lZWRlZCAmJlxuXHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgXCJib3hTaXppbmdcIiwgZmFsc2UsIHN0eWxlcyApID09PSBcImJvcmRlci1ib3hcIixcblx0XHR2YWx1ZUlzQm9yZGVyQm94ID0gaXNCb3JkZXJCb3gsXG5cblx0XHR2YWwgPSBjdXJDU1MoIGVsZW0sIGRpbWVuc2lvbiwgc3R5bGVzICksXG5cdFx0b2Zmc2V0UHJvcCA9IFwib2Zmc2V0XCIgKyBkaW1lbnNpb25bIDAgXS50b1VwcGVyQ2FzZSgpICsgZGltZW5zaW9uLnNsaWNlKCAxICk7XG5cblx0Ly8gU3VwcG9ydDogRmlyZWZveCA8PTU0XG5cdC8vIFJldHVybiBhIGNvbmZvdW5kaW5nIG5vbi1waXhlbCB2YWx1ZSBvciBmZWlnbiBpZ25vcmFuY2UsIGFzIGFwcHJvcHJpYXRlLlxuXHRpZiAoIHJudW1ub25weC50ZXN0KCB2YWwgKSApIHtcblx0XHRpZiAoICFleHRyYSApIHtcblx0XHRcdHJldHVybiB2YWw7XG5cdFx0fVxuXHRcdHZhbCA9IFwiYXV0b1wiO1xuXHR9XG5cblxuXHQvLyBGYWxsIGJhY2sgdG8gb2Zmc2V0V2lkdGgvb2Zmc2V0SGVpZ2h0IHdoZW4gdmFsdWUgaXMgXCJhdXRvXCJcblx0Ly8gVGhpcyBoYXBwZW5zIGZvciBpbmxpbmUgZWxlbWVudHMgd2l0aCBubyBleHBsaWNpdCBzZXR0aW5nIChnaC0zNTcxKVxuXHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4xIC0gNC4zIG9ubHlcblx0Ly8gQWxzbyB1c2Ugb2Zmc2V0V2lkdGgvb2Zmc2V0SGVpZ2h0IGZvciBtaXNyZXBvcnRlZCBpbmxpbmUgZGltZW5zaW9ucyAoZ2gtMzYwMilcblx0Ly8gU3VwcG9ydDogSUUgOS0xMSBvbmx5XG5cdC8vIEFsc28gdXNlIG9mZnNldFdpZHRoL29mZnNldEhlaWdodCBmb3Igd2hlbiBib3ggc2l6aW5nIGlzIHVucmVsaWFibGVcblx0Ly8gV2UgdXNlIGdldENsaWVudFJlY3RzKCkgdG8gY2hlY2sgZm9yIGhpZGRlbi9kaXNjb25uZWN0ZWQuXG5cdC8vIEluIHRob3NlIGNhc2VzLCB0aGUgY29tcHV0ZWQgdmFsdWUgY2FuIGJlIHRydXN0ZWQgdG8gYmUgYm9yZGVyLWJveFxuXHRpZiAoICggIXN1cHBvcnQuYm94U2l6aW5nUmVsaWFibGUoKSAmJiBpc0JvcmRlckJveCB8fFxuXHRcdHZhbCA9PT0gXCJhdXRvXCIgfHxcblx0XHQhcGFyc2VGbG9hdCggdmFsICkgJiYgalF1ZXJ5LmNzcyggZWxlbSwgXCJkaXNwbGF5XCIsIGZhbHNlLCBzdHlsZXMgKSA9PT0gXCJpbmxpbmVcIiApICYmXG5cdFx0ZWxlbS5nZXRDbGllbnRSZWN0cygpLmxlbmd0aCApIHtcblxuXHRcdGlzQm9yZGVyQm94ID0galF1ZXJ5LmNzcyggZWxlbSwgXCJib3hTaXppbmdcIiwgZmFsc2UsIHN0eWxlcyApID09PSBcImJvcmRlci1ib3hcIjtcblxuXHRcdC8vIFdoZXJlIGF2YWlsYWJsZSwgb2Zmc2V0V2lkdGgvb2Zmc2V0SGVpZ2h0IGFwcHJveGltYXRlIGJvcmRlciBib3ggZGltZW5zaW9ucy5cblx0XHQvLyBXaGVyZSBub3QgYXZhaWxhYmxlIChlLmcuLCBTVkcpLCBhc3N1bWUgdW5yZWxpYWJsZSBib3gtc2l6aW5nIGFuZCBpbnRlcnByZXQgdGhlXG5cdFx0Ly8gcmV0cmlldmVkIHZhbHVlIGFzIGEgY29udGVudCBib3ggZGltZW5zaW9uLlxuXHRcdHZhbHVlSXNCb3JkZXJCb3ggPSBvZmZzZXRQcm9wIGluIGVsZW07XG5cdFx0aWYgKCB2YWx1ZUlzQm9yZGVyQm94ICkge1xuXHRcdFx0dmFsID0gZWxlbVsgb2Zmc2V0UHJvcCBdO1xuXHRcdH1cblx0fVxuXG5cdC8vIE5vcm1hbGl6ZSBcIlwiIGFuZCBhdXRvXG5cdHZhbCA9IHBhcnNlRmxvYXQoIHZhbCApIHx8IDA7XG5cblx0Ly8gQWRqdXN0IGZvciB0aGUgZWxlbWVudCdzIGJveCBtb2RlbFxuXHRyZXR1cm4gKCB2YWwgK1xuXHRcdGJveE1vZGVsQWRqdXN0bWVudChcblx0XHRcdGVsZW0sXG5cdFx0XHRkaW1lbnNpb24sXG5cdFx0XHRleHRyYSB8fCAoIGlzQm9yZGVyQm94ID8gXCJib3JkZXJcIiA6IFwiY29udGVudFwiICksXG5cdFx0XHR2YWx1ZUlzQm9yZGVyQm94LFxuXHRcdFx0c3R5bGVzLFxuXG5cdFx0XHQvLyBQcm92aWRlIHRoZSBjdXJyZW50IGNvbXB1dGVkIHNpemUgdG8gcmVxdWVzdCBzY3JvbGwgZ3V0dGVyIGNhbGN1bGF0aW9uIChnaC0zNTg5KVxuXHRcdFx0dmFsXG5cdFx0KVxuXHQpICsgXCJweFwiO1xufVxuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cblx0Ly8gQWRkIGluIHN0eWxlIHByb3BlcnR5IGhvb2tzIGZvciBvdmVycmlkaW5nIHRoZSBkZWZhdWx0XG5cdC8vIGJlaGF2aW9yIG9mIGdldHRpbmcgYW5kIHNldHRpbmcgYSBzdHlsZSBwcm9wZXJ0eVxuXHRjc3NIb29rczoge1xuXHRcdG9wYWNpdHk6IHtcblx0XHRcdGdldDogZnVuY3Rpb24oIGVsZW0sIGNvbXB1dGVkICkge1xuXHRcdFx0XHRpZiAoIGNvbXB1dGVkICkge1xuXG5cdFx0XHRcdFx0Ly8gV2Ugc2hvdWxkIGFsd2F5cyBnZXQgYSBudW1iZXIgYmFjayBmcm9tIG9wYWNpdHlcblx0XHRcdFx0XHR2YXIgcmV0ID0gY3VyQ1NTKCBlbGVtLCBcIm9wYWNpdHlcIiApO1xuXHRcdFx0XHRcdHJldHVybiByZXQgPT09IFwiXCIgPyBcIjFcIiA6IHJldDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fSxcblxuXHQvLyBEb24ndCBhdXRvbWF0aWNhbGx5IGFkZCBcInB4XCIgdG8gdGhlc2UgcG9zc2libHktdW5pdGxlc3MgcHJvcGVydGllc1xuXHRjc3NOdW1iZXI6IHtcblx0XHRcImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50XCI6IHRydWUsXG5cdFx0XCJjb2x1bW5Db3VudFwiOiB0cnVlLFxuXHRcdFwiZmlsbE9wYWNpdHlcIjogdHJ1ZSxcblx0XHRcImZsZXhHcm93XCI6IHRydWUsXG5cdFx0XCJmbGV4U2hyaW5rXCI6IHRydWUsXG5cdFx0XCJmb250V2VpZ2h0XCI6IHRydWUsXG5cdFx0XCJncmlkQXJlYVwiOiB0cnVlLFxuXHRcdFwiZ3JpZENvbHVtblwiOiB0cnVlLFxuXHRcdFwiZ3JpZENvbHVtbkVuZFwiOiB0cnVlLFxuXHRcdFwiZ3JpZENvbHVtblN0YXJ0XCI6IHRydWUsXG5cdFx0XCJncmlkUm93XCI6IHRydWUsXG5cdFx0XCJncmlkUm93RW5kXCI6IHRydWUsXG5cdFx0XCJncmlkUm93U3RhcnRcIjogdHJ1ZSxcblx0XHRcImxpbmVIZWlnaHRcIjogdHJ1ZSxcblx0XHRcIm9wYWNpdHlcIjogdHJ1ZSxcblx0XHRcIm9yZGVyXCI6IHRydWUsXG5cdFx0XCJvcnBoYW5zXCI6IHRydWUsXG5cdFx0XCJ3aWRvd3NcIjogdHJ1ZSxcblx0XHRcInpJbmRleFwiOiB0cnVlLFxuXHRcdFwiem9vbVwiOiB0cnVlXG5cdH0sXG5cblx0Ly8gQWRkIGluIHByb3BlcnRpZXMgd2hvc2UgbmFtZXMgeW91IHdpc2ggdG8gZml4IGJlZm9yZVxuXHQvLyBzZXR0aW5nIG9yIGdldHRpbmcgdGhlIHZhbHVlXG5cdGNzc1Byb3BzOiB7fSxcblxuXHQvLyBHZXQgYW5kIHNldCB0aGUgc3R5bGUgcHJvcGVydHkgb24gYSBET00gTm9kZVxuXHRzdHlsZTogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVlLCBleHRyYSApIHtcblxuXHRcdC8vIERvbid0IHNldCBzdHlsZXMgb24gdGV4dCBhbmQgY29tbWVudCBub2Rlc1xuXHRcdGlmICggIWVsZW0gfHwgZWxlbS5ub2RlVHlwZSA9PT0gMyB8fCBlbGVtLm5vZGVUeXBlID09PSA4IHx8ICFlbGVtLnN0eWxlICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIE1ha2Ugc3VyZSB0aGF0IHdlJ3JlIHdvcmtpbmcgd2l0aCB0aGUgcmlnaHQgbmFtZVxuXHRcdHZhciByZXQsIHR5cGUsIGhvb2tzLFxuXHRcdFx0b3JpZ05hbWUgPSBjYW1lbENhc2UoIG5hbWUgKSxcblx0XHRcdGlzQ3VzdG9tUHJvcCA9IHJjdXN0b21Qcm9wLnRlc3QoIG5hbWUgKSxcblx0XHRcdHN0eWxlID0gZWxlbS5zdHlsZTtcblxuXHRcdC8vIE1ha2Ugc3VyZSB0aGF0IHdlJ3JlIHdvcmtpbmcgd2l0aCB0aGUgcmlnaHQgbmFtZS4gV2UgZG9uJ3Rcblx0XHQvLyB3YW50IHRvIHF1ZXJ5IHRoZSB2YWx1ZSBpZiBpdCBpcyBhIENTUyBjdXN0b20gcHJvcGVydHlcblx0XHQvLyBzaW5jZSB0aGV5IGFyZSB1c2VyLWRlZmluZWQuXG5cdFx0aWYgKCAhaXNDdXN0b21Qcm9wICkge1xuXHRcdFx0bmFtZSA9IGZpbmFsUHJvcE5hbWUoIG9yaWdOYW1lICk7XG5cdFx0fVxuXG5cdFx0Ly8gR2V0cyBob29rIGZvciB0aGUgcHJlZml4ZWQgdmVyc2lvbiwgdGhlbiB1bnByZWZpeGVkIHZlcnNpb25cblx0XHRob29rcyA9IGpRdWVyeS5jc3NIb29rc1sgbmFtZSBdIHx8IGpRdWVyeS5jc3NIb29rc1sgb3JpZ05hbWUgXTtcblxuXHRcdC8vIENoZWNrIGlmIHdlJ3JlIHNldHRpbmcgYSB2YWx1ZVxuXHRcdGlmICggdmFsdWUgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdHR5cGUgPSB0eXBlb2YgdmFsdWU7XG5cblx0XHRcdC8vIENvbnZlcnQgXCIrPVwiIG9yIFwiLT1cIiB0byByZWxhdGl2ZSBudW1iZXJzICgjNzM0NSlcblx0XHRcdGlmICggdHlwZSA9PT0gXCJzdHJpbmdcIiAmJiAoIHJldCA9IHJjc3NOdW0uZXhlYyggdmFsdWUgKSApICYmIHJldFsgMSBdICkge1xuXHRcdFx0XHR2YWx1ZSA9IGFkanVzdENTUyggZWxlbSwgbmFtZSwgcmV0ICk7XG5cblx0XHRcdFx0Ly8gRml4ZXMgYnVnICM5MjM3XG5cdFx0XHRcdHR5cGUgPSBcIm51bWJlclwiO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBNYWtlIHN1cmUgdGhhdCBudWxsIGFuZCBOYU4gdmFsdWVzIGFyZW4ndCBzZXQgKCM3MTE2KVxuXHRcdFx0aWYgKCB2YWx1ZSA9PSBudWxsIHx8IHZhbHVlICE9PSB2YWx1ZSApIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiBhIG51bWJlciB3YXMgcGFzc2VkIGluLCBhZGQgdGhlIHVuaXQgKGV4Y2VwdCBmb3IgY2VydGFpbiBDU1MgcHJvcGVydGllcylcblx0XHRcdC8vIFRoZSBpc0N1c3RvbVByb3AgY2hlY2sgY2FuIGJlIHJlbW92ZWQgaW4galF1ZXJ5IDQuMCB3aGVuIHdlIG9ubHkgYXV0by1hcHBlbmRcblx0XHRcdC8vIFwicHhcIiB0byBhIGZldyBoYXJkY29kZWQgdmFsdWVzLlxuXHRcdFx0aWYgKCB0eXBlID09PSBcIm51bWJlclwiICYmICFpc0N1c3RvbVByb3AgKSB7XG5cdFx0XHRcdHZhbHVlICs9IHJldCAmJiByZXRbIDMgXSB8fCAoIGpRdWVyeS5jc3NOdW1iZXJbIG9yaWdOYW1lIF0gPyBcIlwiIDogXCJweFwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIGJhY2tncm91bmQtKiBwcm9wcyBhZmZlY3Qgb3JpZ2luYWwgY2xvbmUncyB2YWx1ZXNcblx0XHRcdGlmICggIXN1cHBvcnQuY2xlYXJDbG9uZVN0eWxlICYmIHZhbHVlID09PSBcIlwiICYmIG5hbWUuaW5kZXhPZiggXCJiYWNrZ3JvdW5kXCIgKSA9PT0gMCApIHtcblx0XHRcdFx0c3R5bGVbIG5hbWUgXSA9IFwiaW5oZXJpdFwiO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiBhIGhvb2sgd2FzIHByb3ZpZGVkLCB1c2UgdGhhdCB2YWx1ZSwgb3RoZXJ3aXNlIGp1c3Qgc2V0IHRoZSBzcGVjaWZpZWQgdmFsdWVcblx0XHRcdGlmICggIWhvb2tzIHx8ICEoIFwic2V0XCIgaW4gaG9va3MgKSB8fFxuXHRcdFx0XHQoIHZhbHVlID0gaG9va3Muc2V0KCBlbGVtLCB2YWx1ZSwgZXh0cmEgKSApICE9PSB1bmRlZmluZWQgKSB7XG5cblx0XHRcdFx0aWYgKCBpc0N1c3RvbVByb3AgKSB7XG5cdFx0XHRcdFx0c3R5bGUuc2V0UHJvcGVydHkoIG5hbWUsIHZhbHVlICk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0c3R5bGVbIG5hbWUgXSA9IHZhbHVlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyBJZiBhIGhvb2sgd2FzIHByb3ZpZGVkIGdldCB0aGUgbm9uLWNvbXB1dGVkIHZhbHVlIGZyb20gdGhlcmVcblx0XHRcdGlmICggaG9va3MgJiYgXCJnZXRcIiBpbiBob29rcyAmJlxuXHRcdFx0XHQoIHJldCA9IGhvb2tzLmdldCggZWxlbSwgZmFsc2UsIGV4dHJhICkgKSAhPT0gdW5kZWZpbmVkICkge1xuXG5cdFx0XHRcdHJldHVybiByZXQ7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE90aGVyd2lzZSBqdXN0IGdldCB0aGUgdmFsdWUgZnJvbSB0aGUgc3R5bGUgb2JqZWN0XG5cdFx0XHRyZXR1cm4gc3R5bGVbIG5hbWUgXTtcblx0XHR9XG5cdH0sXG5cblx0Y3NzOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgZXh0cmEsIHN0eWxlcyApIHtcblx0XHR2YXIgdmFsLCBudW0sIGhvb2tzLFxuXHRcdFx0b3JpZ05hbWUgPSBjYW1lbENhc2UoIG5hbWUgKSxcblx0XHRcdGlzQ3VzdG9tUHJvcCA9IHJjdXN0b21Qcm9wLnRlc3QoIG5hbWUgKTtcblxuXHRcdC8vIE1ha2Ugc3VyZSB0aGF0IHdlJ3JlIHdvcmtpbmcgd2l0aCB0aGUgcmlnaHQgbmFtZS4gV2UgZG9uJ3Rcblx0XHQvLyB3YW50IHRvIG1vZGlmeSB0aGUgdmFsdWUgaWYgaXQgaXMgYSBDU1MgY3VzdG9tIHByb3BlcnR5XG5cdFx0Ly8gc2luY2UgdGhleSBhcmUgdXNlci1kZWZpbmVkLlxuXHRcdGlmICggIWlzQ3VzdG9tUHJvcCApIHtcblx0XHRcdG5hbWUgPSBmaW5hbFByb3BOYW1lKCBvcmlnTmFtZSApO1xuXHRcdH1cblxuXHRcdC8vIFRyeSBwcmVmaXhlZCBuYW1lIGZvbGxvd2VkIGJ5IHRoZSB1bnByZWZpeGVkIG5hbWVcblx0XHRob29rcyA9IGpRdWVyeS5jc3NIb29rc1sgbmFtZSBdIHx8IGpRdWVyeS5jc3NIb29rc1sgb3JpZ05hbWUgXTtcblxuXHRcdC8vIElmIGEgaG9vayB3YXMgcHJvdmlkZWQgZ2V0IHRoZSBjb21wdXRlZCB2YWx1ZSBmcm9tIHRoZXJlXG5cdFx0aWYgKCBob29rcyAmJiBcImdldFwiIGluIGhvb2tzICkge1xuXHRcdFx0dmFsID0gaG9va3MuZ2V0KCBlbGVtLCB0cnVlLCBleHRyYSApO1xuXHRcdH1cblxuXHRcdC8vIE90aGVyd2lzZSwgaWYgYSB3YXkgdG8gZ2V0IHRoZSBjb21wdXRlZCB2YWx1ZSBleGlzdHMsIHVzZSB0aGF0XG5cdFx0aWYgKCB2YWwgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdHZhbCA9IGN1ckNTUyggZWxlbSwgbmFtZSwgc3R5bGVzICk7XG5cdFx0fVxuXG5cdFx0Ly8gQ29udmVydCBcIm5vcm1hbFwiIHRvIGNvbXB1dGVkIHZhbHVlXG5cdFx0aWYgKCB2YWwgPT09IFwibm9ybWFsXCIgJiYgbmFtZSBpbiBjc3NOb3JtYWxUcmFuc2Zvcm0gKSB7XG5cdFx0XHR2YWwgPSBjc3NOb3JtYWxUcmFuc2Zvcm1bIG5hbWUgXTtcblx0XHR9XG5cblx0XHQvLyBNYWtlIG51bWVyaWMgaWYgZm9yY2VkIG9yIGEgcXVhbGlmaWVyIHdhcyBwcm92aWRlZCBhbmQgdmFsIGxvb2tzIG51bWVyaWNcblx0XHRpZiAoIGV4dHJhID09PSBcIlwiIHx8IGV4dHJhICkge1xuXHRcdFx0bnVtID0gcGFyc2VGbG9hdCggdmFsICk7XG5cdFx0XHRyZXR1cm4gZXh0cmEgPT09IHRydWUgfHwgaXNGaW5pdGUoIG51bSApID8gbnVtIHx8IDAgOiB2YWw7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHZhbDtcblx0fVxufSApO1xuXG5qUXVlcnkuZWFjaCggWyBcImhlaWdodFwiLCBcIndpZHRoXCIgXSwgZnVuY3Rpb24oIGksIGRpbWVuc2lvbiApIHtcblx0alF1ZXJ5LmNzc0hvb2tzWyBkaW1lbnNpb24gXSA9IHtcblx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCwgZXh0cmEgKSB7XG5cdFx0XHRpZiAoIGNvbXB1dGVkICkge1xuXG5cdFx0XHRcdC8vIENlcnRhaW4gZWxlbWVudHMgY2FuIGhhdmUgZGltZW5zaW9uIGluZm8gaWYgd2UgaW52aXNpYmx5IHNob3cgdGhlbVxuXHRcdFx0XHQvLyBidXQgaXQgbXVzdCBoYXZlIGEgY3VycmVudCBkaXNwbGF5IHN0eWxlIHRoYXQgd291bGQgYmVuZWZpdFxuXHRcdFx0XHRyZXR1cm4gcmRpc3BsYXlzd2FwLnRlc3QoIGpRdWVyeS5jc3MoIGVsZW0sIFwiZGlzcGxheVwiICkgKSAmJlxuXG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogU2FmYXJpIDgrXG5cdFx0XHRcdFx0Ly8gVGFibGUgY29sdW1ucyBpbiBTYWZhcmkgaGF2ZSBub24temVybyBvZmZzZXRXaWR0aCAmIHplcm9cblx0XHRcdFx0XHQvLyBnZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aCB1bmxlc3MgZGlzcGxheSBpcyBjaGFuZ2VkLlxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9MTEgb25seVxuXHRcdFx0XHRcdC8vIFJ1bm5pbmcgZ2V0Qm91bmRpbmdDbGllbnRSZWN0IG9uIGEgZGlzY29ubmVjdGVkIG5vZGVcblx0XHRcdFx0XHQvLyBpbiBJRSB0aHJvd3MgYW4gZXJyb3IuXG5cdFx0XHRcdFx0KCAhZWxlbS5nZXRDbGllbnRSZWN0cygpLmxlbmd0aCB8fCAhZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aCApID9cblx0XHRcdFx0XHRcdHN3YXAoIGVsZW0sIGNzc1Nob3csIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gZ2V0V2lkdGhPckhlaWdodCggZWxlbSwgZGltZW5zaW9uLCBleHRyYSApO1xuXHRcdFx0XHRcdFx0fSApIDpcblx0XHRcdFx0XHRcdGdldFdpZHRoT3JIZWlnaHQoIGVsZW0sIGRpbWVuc2lvbiwgZXh0cmEgKTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUsIGV4dHJhICkge1xuXHRcdFx0dmFyIG1hdGNoZXMsXG5cdFx0XHRcdHN0eWxlcyA9IGdldFN0eWxlcyggZWxlbSApLFxuXG5cdFx0XHRcdC8vIE9ubHkgcmVhZCBzdHlsZXMucG9zaXRpb24gaWYgdGhlIHRlc3QgaGFzIGEgY2hhbmNlIHRvIGZhaWxcblx0XHRcdFx0Ly8gdG8gYXZvaWQgZm9yY2luZyBhIHJlZmxvdy5cblx0XHRcdFx0c2Nyb2xsYm94U2l6ZUJ1Z2d5ID0gIXN1cHBvcnQuc2Nyb2xsYm94U2l6ZSgpICYmXG5cdFx0XHRcdFx0c3R5bGVzLnBvc2l0aW9uID09PSBcImFic29sdXRlXCIsXG5cblx0XHRcdFx0Ly8gVG8gYXZvaWQgZm9yY2luZyBhIHJlZmxvdywgb25seSBmZXRjaCBib3hTaXppbmcgaWYgd2UgbmVlZCBpdCAoZ2gtMzk5MSlcblx0XHRcdFx0Ym94U2l6aW5nTmVlZGVkID0gc2Nyb2xsYm94U2l6ZUJ1Z2d5IHx8IGV4dHJhLFxuXHRcdFx0XHRpc0JvcmRlckJveCA9IGJveFNpemluZ05lZWRlZCAmJlxuXHRcdFx0XHRcdGpRdWVyeS5jc3MoIGVsZW0sIFwiYm94U2l6aW5nXCIsIGZhbHNlLCBzdHlsZXMgKSA9PT0gXCJib3JkZXItYm94XCIsXG5cdFx0XHRcdHN1YnRyYWN0ID0gZXh0cmEgP1xuXHRcdFx0XHRcdGJveE1vZGVsQWRqdXN0bWVudChcblx0XHRcdFx0XHRcdGVsZW0sXG5cdFx0XHRcdFx0XHRkaW1lbnNpb24sXG5cdFx0XHRcdFx0XHRleHRyYSxcblx0XHRcdFx0XHRcdGlzQm9yZGVyQm94LFxuXHRcdFx0XHRcdFx0c3R5bGVzXG5cdFx0XHRcdFx0KSA6XG5cdFx0XHRcdFx0MDtcblxuXHRcdFx0Ly8gQWNjb3VudCBmb3IgdW5yZWxpYWJsZSBib3JkZXItYm94IGRpbWVuc2lvbnMgYnkgY29tcGFyaW5nIG9mZnNldCogdG8gY29tcHV0ZWQgYW5kXG5cdFx0XHQvLyBmYWtpbmcgYSBjb250ZW50LWJveCB0byBnZXQgYm9yZGVyIGFuZCBwYWRkaW5nIChnaC0zNjk5KVxuXHRcdFx0aWYgKCBpc0JvcmRlckJveCAmJiBzY3JvbGxib3hTaXplQnVnZ3kgKSB7XG5cdFx0XHRcdHN1YnRyYWN0IC09IE1hdGguY2VpbChcblx0XHRcdFx0XHRlbGVtWyBcIm9mZnNldFwiICsgZGltZW5zaW9uWyAwIF0udG9VcHBlckNhc2UoKSArIGRpbWVuc2lvbi5zbGljZSggMSApIF0gLVxuXHRcdFx0XHRcdHBhcnNlRmxvYXQoIHN0eWxlc1sgZGltZW5zaW9uIF0gKSAtXG5cdFx0XHRcdFx0Ym94TW9kZWxBZGp1c3RtZW50KCBlbGVtLCBkaW1lbnNpb24sIFwiYm9yZGVyXCIsIGZhbHNlLCBzdHlsZXMgKSAtXG5cdFx0XHRcdFx0MC41XG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIENvbnZlcnQgdG8gcGl4ZWxzIGlmIHZhbHVlIGFkanVzdG1lbnQgaXMgbmVlZGVkXG5cdFx0XHRpZiAoIHN1YnRyYWN0ICYmICggbWF0Y2hlcyA9IHJjc3NOdW0uZXhlYyggdmFsdWUgKSApICYmXG5cdFx0XHRcdCggbWF0Y2hlc1sgMyBdIHx8IFwicHhcIiApICE9PSBcInB4XCIgKSB7XG5cblx0XHRcdFx0ZWxlbS5zdHlsZVsgZGltZW5zaW9uIF0gPSB2YWx1ZTtcblx0XHRcdFx0dmFsdWUgPSBqUXVlcnkuY3NzKCBlbGVtLCBkaW1lbnNpb24gKTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIHNldFBvc2l0aXZlTnVtYmVyKCBlbGVtLCB2YWx1ZSwgc3VidHJhY3QgKTtcblx0XHR9XG5cdH07XG59ICk7XG5cbmpRdWVyeS5jc3NIb29rcy5tYXJnaW5MZWZ0ID0gYWRkR2V0SG9va0lmKCBzdXBwb3J0LnJlbGlhYmxlTWFyZ2luTGVmdCxcblx0ZnVuY3Rpb24oIGVsZW0sIGNvbXB1dGVkICkge1xuXHRcdGlmICggY29tcHV0ZWQgKSB7XG5cdFx0XHRyZXR1cm4gKCBwYXJzZUZsb2F0KCBjdXJDU1MoIGVsZW0sIFwibWFyZ2luTGVmdFwiICkgKSB8fFxuXHRcdFx0XHRlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQgLVxuXHRcdFx0XHRcdHN3YXAoIGVsZW0sIHsgbWFyZ2luTGVmdDogMCB9LCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdHJldHVybiBlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQ7XG5cdFx0XHRcdFx0fSApXG5cdFx0XHRcdCkgKyBcInB4XCI7XG5cdFx0fVxuXHR9XG4pO1xuXG4vLyBUaGVzZSBob29rcyBhcmUgdXNlZCBieSBhbmltYXRlIHRvIGV4cGFuZCBwcm9wZXJ0aWVzXG5qUXVlcnkuZWFjaCgge1xuXHRtYXJnaW46IFwiXCIsXG5cdHBhZGRpbmc6IFwiXCIsXG5cdGJvcmRlcjogXCJXaWR0aFwiXG59LCBmdW5jdGlvbiggcHJlZml4LCBzdWZmaXggKSB7XG5cdGpRdWVyeS5jc3NIb29rc1sgcHJlZml4ICsgc3VmZml4IF0gPSB7XG5cdFx0ZXhwYW5kOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHR2YXIgaSA9IDAsXG5cdFx0XHRcdGV4cGFuZGVkID0ge30sXG5cblx0XHRcdFx0Ly8gQXNzdW1lcyBhIHNpbmdsZSBudW1iZXIgaWYgbm90IGEgc3RyaW5nXG5cdFx0XHRcdHBhcnRzID0gdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiID8gdmFsdWUuc3BsaXQoIFwiIFwiICkgOiBbIHZhbHVlIF07XG5cblx0XHRcdGZvciAoIDsgaSA8IDQ7IGkrKyApIHtcblx0XHRcdFx0ZXhwYW5kZWRbIHByZWZpeCArIGNzc0V4cGFuZFsgaSBdICsgc3VmZml4IF0gPVxuXHRcdFx0XHRcdHBhcnRzWyBpIF0gfHwgcGFydHNbIGkgLSAyIF0gfHwgcGFydHNbIDAgXTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGV4cGFuZGVkO1xuXHRcdH1cblx0fTtcblxuXHRpZiAoIHByZWZpeCAhPT0gXCJtYXJnaW5cIiApIHtcblx0XHRqUXVlcnkuY3NzSG9va3NbIHByZWZpeCArIHN1ZmZpeCBdLnNldCA9IHNldFBvc2l0aXZlTnVtYmVyO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0Y3NzOiBmdW5jdGlvbiggbmFtZSwgdmFsdWUgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVlICkge1xuXHRcdFx0dmFyIHN0eWxlcywgbGVuLFxuXHRcdFx0XHRtYXAgPSB7fSxcblx0XHRcdFx0aSA9IDA7XG5cblx0XHRcdGlmICggQXJyYXkuaXNBcnJheSggbmFtZSApICkge1xuXHRcdFx0XHRzdHlsZXMgPSBnZXRTdHlsZXMoIGVsZW0gKTtcblx0XHRcdFx0bGVuID0gbmFtZS5sZW5ndGg7XG5cblx0XHRcdFx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0XHRcdFx0bWFwWyBuYW1lWyBpIF0gXSA9IGpRdWVyeS5jc3MoIGVsZW0sIG5hbWVbIGkgXSwgZmFsc2UsIHN0eWxlcyApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIG1hcDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIHZhbHVlICE9PSB1bmRlZmluZWQgP1xuXHRcdFx0XHRqUXVlcnkuc3R5bGUoIGVsZW0sIG5hbWUsIHZhbHVlICkgOlxuXHRcdFx0XHRqUXVlcnkuY3NzKCBlbGVtLCBuYW1lICk7XG5cdFx0fSwgbmFtZSwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxICk7XG5cdH1cbn0gKTtcblxuXG4vLyBCYXNlZCBvZmYgb2YgdGhlIHBsdWdpbiBieSBDbGludCBIZWxmZXJzLCB3aXRoIHBlcm1pc3Npb24uXG4vLyBodHRwczovL3dlYi5hcmNoaXZlLm9yZy93ZWIvMjAxMDAzMjQwMTQ3NDcvaHR0cDovL2JsaW5kc2lnbmFscy5jb20vaW5kZXgucGhwLzIwMDkvMDcvanF1ZXJ5LWRlbGF5L1xualF1ZXJ5LmZuLmRlbGF5ID0gZnVuY3Rpb24oIHRpbWUsIHR5cGUgKSB7XG5cdHRpbWUgPSBqUXVlcnkuZnggPyBqUXVlcnkuZnguc3BlZWRzWyB0aW1lIF0gfHwgdGltZSA6IHRpbWU7XG5cdHR5cGUgPSB0eXBlIHx8IFwiZnhcIjtcblxuXHRyZXR1cm4gdGhpcy5xdWV1ZSggdHlwZSwgZnVuY3Rpb24oIG5leHQsIGhvb2tzICkge1xuXHRcdHZhciB0aW1lb3V0ID0gd2luZG93LnNldFRpbWVvdXQoIG5leHQsIHRpbWUgKTtcblx0XHRob29rcy5zdG9wID0gZnVuY3Rpb24oKSB7XG5cdFx0XHR3aW5kb3cuY2xlYXJUaW1lb3V0KCB0aW1lb3V0ICk7XG5cdFx0fTtcblx0fSApO1xufTtcblxuXG4oIGZ1bmN0aW9uKCkge1xuXHR2YXIgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImlucHV0XCIgKSxcblx0XHRzZWxlY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcInNlbGVjdFwiICksXG5cdFx0b3B0ID0gc2VsZWN0LmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcIm9wdGlvblwiICkgKTtcblxuXHRpbnB1dC50eXBlID0gXCJjaGVja2JveFwiO1xuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjMgb25seVxuXHQvLyBEZWZhdWx0IHZhbHVlIGZvciBhIGNoZWNrYm94IHNob3VsZCBiZSBcIm9uXCJcblx0c3VwcG9ydC5jaGVja09uID0gaW5wdXQudmFsdWUgIT09IFwiXCI7XG5cblx0Ly8gU3VwcG9ydDogSUUgPD0xMSBvbmx5XG5cdC8vIE11c3QgYWNjZXNzIHNlbGVjdGVkSW5kZXggdG8gbWFrZSBkZWZhdWx0IG9wdGlvbnMgc2VsZWN0XG5cdHN1cHBvcnQub3B0U2VsZWN0ZWQgPSBvcHQuc2VsZWN0ZWQ7XG5cblx0Ly8gU3VwcG9ydDogSUUgPD0xMSBvbmx5XG5cdC8vIEFuIGlucHV0IGxvc2VzIGl0cyB2YWx1ZSBhZnRlciBiZWNvbWluZyBhIHJhZGlvXG5cdGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJpbnB1dFwiICk7XG5cdGlucHV0LnZhbHVlID0gXCJ0XCI7XG5cdGlucHV0LnR5cGUgPSBcInJhZGlvXCI7XG5cdHN1cHBvcnQucmFkaW9WYWx1ZSA9IGlucHV0LnZhbHVlID09PSBcInRcIjtcbn0gKSgpO1xuXG5cbnZhciBib29sSG9vayxcblx0YXR0ckhhbmRsZSA9IGpRdWVyeS5leHByLmF0dHJIYW5kbGU7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0YXR0cjogZnVuY3Rpb24oIG5hbWUsIHZhbHVlICkge1xuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGpRdWVyeS5hdHRyLCBuYW1lLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCA+IDEgKTtcblx0fSxcblxuXHRyZW1vdmVBdHRyOiBmdW5jdGlvbiggbmFtZSApIHtcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGpRdWVyeS5yZW1vdmVBdHRyKCB0aGlzLCBuYW1lICk7XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5leHRlbmQoIHtcblx0YXR0cjogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVlICkge1xuXHRcdHZhciByZXQsIGhvb2tzLFxuXHRcdFx0blR5cGUgPSBlbGVtLm5vZGVUeXBlO1xuXG5cdFx0Ly8gRG9uJ3QgZ2V0L3NldCBhdHRyaWJ1dGVzIG9uIHRleHQsIGNvbW1lbnQgYW5kIGF0dHJpYnV0ZSBub2Rlc1xuXHRcdGlmICggblR5cGUgPT09IDMgfHwgblR5cGUgPT09IDggfHwgblR5cGUgPT09IDIgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gRmFsbGJhY2sgdG8gcHJvcCB3aGVuIGF0dHJpYnV0ZXMgYXJlIG5vdCBzdXBwb3J0ZWRcblx0XHRpZiAoIHR5cGVvZiBlbGVtLmdldEF0dHJpYnV0ZSA9PT0gXCJ1bmRlZmluZWRcIiApIHtcblx0XHRcdHJldHVybiBqUXVlcnkucHJvcCggZWxlbSwgbmFtZSwgdmFsdWUgKTtcblx0XHR9XG5cblx0XHQvLyBBdHRyaWJ1dGUgaG9va3MgYXJlIGRldGVybWluZWQgYnkgdGhlIGxvd2VyY2FzZSB2ZXJzaW9uXG5cdFx0Ly8gR3JhYiBuZWNlc3NhcnkgaG9vayBpZiBvbmUgaXMgZGVmaW5lZFxuXHRcdGlmICggblR5cGUgIT09IDEgfHwgIWpRdWVyeS5pc1hNTERvYyggZWxlbSApICkge1xuXHRcdFx0aG9va3MgPSBqUXVlcnkuYXR0ckhvb2tzWyBuYW1lLnRvTG93ZXJDYXNlKCkgXSB8fFxuXHRcdFx0XHQoIGpRdWVyeS5leHByLm1hdGNoLmJvb2wudGVzdCggbmFtZSApID8gYm9vbEhvb2sgOiB1bmRlZmluZWQgKTtcblx0XHR9XG5cblx0XHRpZiAoIHZhbHVlICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRpZiAoIHZhbHVlID09PSBudWxsICkge1xuXHRcdFx0XHRqUXVlcnkucmVtb3ZlQXR0ciggZWxlbSwgbmFtZSApO1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdGlmICggaG9va3MgJiYgXCJzZXRcIiBpbiBob29rcyAmJlxuXHRcdFx0XHQoIHJldCA9IGhvb2tzLnNldCggZWxlbSwgdmFsdWUsIG5hbWUgKSApICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdHJldHVybiByZXQ7XG5cdFx0XHR9XG5cblx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBuYW1lLCB2YWx1ZSArIFwiXCIgKTtcblx0XHRcdHJldHVybiB2YWx1ZTtcblx0XHR9XG5cblx0XHRpZiAoIGhvb2tzICYmIFwiZ2V0XCIgaW4gaG9va3MgJiYgKCByZXQgPSBob29rcy5nZXQoIGVsZW0sIG5hbWUgKSApICE9PSBudWxsICkge1xuXHRcdFx0cmV0dXJuIHJldDtcblx0XHR9XG5cblx0XHRyZXQgPSBqUXVlcnkuZmluZC5hdHRyKCBlbGVtLCBuYW1lICk7XG5cblx0XHQvLyBOb24tZXhpc3RlbnQgYXR0cmlidXRlcyByZXR1cm4gbnVsbCwgd2Ugbm9ybWFsaXplIHRvIHVuZGVmaW5lZFxuXHRcdHJldHVybiByZXQgPT0gbnVsbCA/IHVuZGVmaW5lZCA6IHJldDtcblx0fSxcblxuXHRhdHRySG9va3M6IHtcblx0XHR0eXBlOiB7XG5cdFx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHtcblx0XHRcdFx0aWYgKCAhc3VwcG9ydC5yYWRpb1ZhbHVlICYmIHZhbHVlID09PSBcInJhZGlvXCIgJiZcblx0XHRcdFx0XHRub2RlTmFtZSggZWxlbSwgXCJpbnB1dFwiICkgKSB7XG5cdFx0XHRcdFx0dmFyIHZhbCA9IGVsZW0udmFsdWU7XG5cdFx0XHRcdFx0ZWxlbS5zZXRBdHRyaWJ1dGUoIFwidHlwZVwiLCB2YWx1ZSApO1xuXHRcdFx0XHRcdGlmICggdmFsICkge1xuXHRcdFx0XHRcdFx0ZWxlbS52YWx1ZSA9IHZhbDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIHZhbHVlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9LFxuXG5cdHJlbW92ZUF0dHI6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHtcblx0XHR2YXIgbmFtZSxcblx0XHRcdGkgPSAwLFxuXG5cdFx0XHQvLyBBdHRyaWJ1dGUgbmFtZXMgY2FuIGNvbnRhaW4gbm9uLUhUTUwgd2hpdGVzcGFjZSBjaGFyYWN0ZXJzXG5cdFx0XHQvLyBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9zeW50YXguaHRtbCNhdHRyaWJ1dGVzLTJcblx0XHRcdGF0dHJOYW1lcyA9IHZhbHVlICYmIHZhbHVlLm1hdGNoKCBybm90aHRtbHdoaXRlICk7XG5cblx0XHRpZiAoIGF0dHJOYW1lcyAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0d2hpbGUgKCAoIG5hbWUgPSBhdHRyTmFtZXNbIGkrKyBdICkgKSB7XG5cdFx0XHRcdGVsZW0ucmVtb3ZlQXR0cmlidXRlKCBuYW1lICk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59ICk7XG5cbi8vIEhvb2tzIGZvciBib29sZWFuIGF0dHJpYnV0ZXNcbmJvb2xIb29rID0ge1xuXHRzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSwgbmFtZSApIHtcblx0XHRpZiAoIHZhbHVlID09PSBmYWxzZSApIHtcblxuXHRcdFx0Ly8gUmVtb3ZlIGJvb2xlYW4gYXR0cmlidXRlcyB3aGVuIHNldCB0byBmYWxzZVxuXHRcdFx0alF1ZXJ5LnJlbW92ZUF0dHIoIGVsZW0sIG5hbWUgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0ZWxlbS5zZXRBdHRyaWJ1dGUoIG5hbWUsIG5hbWUgKTtcblx0XHR9XG5cdFx0cmV0dXJuIG5hbWU7XG5cdH1cbn07XG5cbmpRdWVyeS5lYWNoKCBqUXVlcnkuZXhwci5tYXRjaC5ib29sLnNvdXJjZS5tYXRjaCggL1xcdysvZyApLCBmdW5jdGlvbiggaSwgbmFtZSApIHtcblx0dmFyIGdldHRlciA9IGF0dHJIYW5kbGVbIG5hbWUgXSB8fCBqUXVlcnkuZmluZC5hdHRyO1xuXG5cdGF0dHJIYW5kbGVbIG5hbWUgXSA9IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBpc1hNTCApIHtcblx0XHR2YXIgcmV0LCBoYW5kbGUsXG5cdFx0XHRsb3dlcmNhc2VOYW1lID0gbmFtZS50b0xvd2VyQ2FzZSgpO1xuXG5cdFx0aWYgKCAhaXNYTUwgKSB7XG5cblx0XHRcdC8vIEF2b2lkIGFuIGluZmluaXRlIGxvb3AgYnkgdGVtcG9yYXJpbHkgcmVtb3ZpbmcgdGhpcyBmdW5jdGlvbiBmcm9tIHRoZSBnZXR0ZXJcblx0XHRcdGhhbmRsZSA9IGF0dHJIYW5kbGVbIGxvd2VyY2FzZU5hbWUgXTtcblx0XHRcdGF0dHJIYW5kbGVbIGxvd2VyY2FzZU5hbWUgXSA9IHJldDtcblx0XHRcdHJldCA9IGdldHRlciggZWxlbSwgbmFtZSwgaXNYTUwgKSAhPSBudWxsID9cblx0XHRcdFx0bG93ZXJjYXNlTmFtZSA6XG5cdFx0XHRcdG51bGw7XG5cdFx0XHRhdHRySGFuZGxlWyBsb3dlcmNhc2VOYW1lIF0gPSBoYW5kbGU7XG5cdFx0fVxuXHRcdHJldHVybiByZXQ7XG5cdH07XG59ICk7XG5cblxuXG5cbnZhciByZm9jdXNhYmxlID0gL14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8YnV0dG9uKSQvaSxcblx0cmNsaWNrYWJsZSA9IC9eKD86YXxhcmVhKSQvaTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRwcm9wOiBmdW5jdGlvbiggbmFtZSwgdmFsdWUgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgalF1ZXJ5LnByb3AsIG5hbWUsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoID4gMSApO1xuXHR9LFxuXG5cdHJlbW92ZVByb3A6IGZ1bmN0aW9uKCBuYW1lICkge1xuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0ZGVsZXRlIHRoaXNbIGpRdWVyeS5wcm9wRml4WyBuYW1lIF0gfHwgbmFtZSBdO1xuXHRcdH0gKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cdHByb3A6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCB2YWx1ZSApIHtcblx0XHR2YXIgcmV0LCBob29rcyxcblx0XHRcdG5UeXBlID0gZWxlbS5ub2RlVHlwZTtcblxuXHRcdC8vIERvbid0IGdldC9zZXQgcHJvcGVydGllcyBvbiB0ZXh0LCBjb21tZW50IGFuZCBhdHRyaWJ1dGUgbm9kZXNcblx0XHRpZiAoIG5UeXBlID09PSAzIHx8IG5UeXBlID09PSA4IHx8IG5UeXBlID09PSAyICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmICggblR5cGUgIT09IDEgfHwgIWpRdWVyeS5pc1hNTERvYyggZWxlbSApICkge1xuXG5cdFx0XHQvLyBGaXggbmFtZSBhbmQgYXR0YWNoIGhvb2tzXG5cdFx0XHRuYW1lID0galF1ZXJ5LnByb3BGaXhbIG5hbWUgXSB8fCBuYW1lO1xuXHRcdFx0aG9va3MgPSBqUXVlcnkucHJvcEhvb2tzWyBuYW1lIF07XG5cdFx0fVxuXG5cdFx0aWYgKCB2YWx1ZSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0aWYgKCBob29rcyAmJiBcInNldFwiIGluIGhvb2tzICYmXG5cdFx0XHRcdCggcmV0ID0gaG9va3Muc2V0KCBlbGVtLCB2YWx1ZSwgbmFtZSApICkgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuICggZWxlbVsgbmFtZSBdID0gdmFsdWUgKTtcblx0XHR9XG5cblx0XHRpZiAoIGhvb2tzICYmIFwiZ2V0XCIgaW4gaG9va3MgJiYgKCByZXQgPSBob29rcy5nZXQoIGVsZW0sIG5hbWUgKSApICE9PSBudWxsICkge1xuXHRcdFx0cmV0dXJuIHJldDtcblx0XHR9XG5cblx0XHRyZXR1cm4gZWxlbVsgbmFtZSBdO1xuXHR9LFxuXG5cdHByb3BIb29rczoge1xuXHRcdHRhYkluZGV4OiB7XG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExIG9ubHlcblx0XHRcdFx0Ly8gZWxlbS50YWJJbmRleCBkb2Vzbid0IGFsd2F5cyByZXR1cm4gdGhlXG5cdFx0XHRcdC8vIGNvcnJlY3QgdmFsdWUgd2hlbiBpdCBoYXNuJ3QgYmVlbiBleHBsaWNpdGx5IHNldFxuXHRcdFx0XHQvLyBodHRwczovL3dlYi5hcmNoaXZlLm9yZy93ZWIvMjAxNDExMTYyMzMzNDcvaHR0cDovL2ZsdWlkcHJvamVjdC5vcmcvYmxvZy8yMDA4LzAxLzA5L2dldHRpbmctc2V0dGluZy1hbmQtcmVtb3ZpbmctdGFiaW5kZXgtdmFsdWVzLXdpdGgtamF2YXNjcmlwdC9cblx0XHRcdFx0Ly8gVXNlIHByb3BlciBhdHRyaWJ1dGUgcmV0cmlldmFsKCMxMjA3Milcblx0XHRcdFx0dmFyIHRhYmluZGV4ID0galF1ZXJ5LmZpbmQuYXR0ciggZWxlbSwgXCJ0YWJpbmRleFwiICk7XG5cblx0XHRcdFx0aWYgKCB0YWJpbmRleCApIHtcblx0XHRcdFx0XHRyZXR1cm4gcGFyc2VJbnQoIHRhYmluZGV4LCAxMCApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKFxuXHRcdFx0XHRcdHJmb2N1c2FibGUudGVzdCggZWxlbS5ub2RlTmFtZSApIHx8XG5cdFx0XHRcdFx0cmNsaWNrYWJsZS50ZXN0KCBlbGVtLm5vZGVOYW1lICkgJiZcblx0XHRcdFx0XHRlbGVtLmhyZWZcblx0XHRcdFx0KSB7XG5cdFx0XHRcdFx0cmV0dXJuIDA7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gLTE7XG5cdFx0XHR9XG5cdFx0fVxuXHR9LFxuXG5cdHByb3BGaXg6IHtcblx0XHRcImZvclwiOiBcImh0bWxGb3JcIixcblx0XHRcImNsYXNzXCI6IFwiY2xhc3NOYW1lXCJcblx0fVxufSApO1xuXG4vLyBTdXBwb3J0OiBJRSA8PTExIG9ubHlcbi8vIEFjY2Vzc2luZyB0aGUgc2VsZWN0ZWRJbmRleCBwcm9wZXJ0eVxuLy8gZm9yY2VzIHRoZSBicm93c2VyIHRvIHJlc3BlY3Qgc2V0dGluZyBzZWxlY3RlZFxuLy8gb24gdGhlIG9wdGlvblxuLy8gVGhlIGdldHRlciBlbnN1cmVzIGEgZGVmYXVsdCBvcHRpb24gaXMgc2VsZWN0ZWRcbi8vIHdoZW4gaW4gYW4gb3B0Z3JvdXBcbi8vIGVzbGludCBydWxlIFwibm8tdW51c2VkLWV4cHJlc3Npb25zXCIgaXMgZGlzYWJsZWQgZm9yIHRoaXMgY29kZVxuLy8gc2luY2UgaXQgY29uc2lkZXJzIHN1Y2ggYWNjZXNzaW9ucyBub29wXG5pZiAoICFzdXBwb3J0Lm9wdFNlbGVjdGVkICkge1xuXHRqUXVlcnkucHJvcEhvb2tzLnNlbGVjdGVkID0ge1xuXHRcdGdldDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHRcdC8qIGVzbGludCBuby11bnVzZWQtZXhwcmVzc2lvbnM6IFwib2ZmXCIgKi9cblxuXHRcdFx0dmFyIHBhcmVudCA9IGVsZW0ucGFyZW50Tm9kZTtcblx0XHRcdGlmICggcGFyZW50ICYmIHBhcmVudC5wYXJlbnROb2RlICkge1xuXHRcdFx0XHRwYXJlbnQucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4O1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0fSxcblx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0XHQvKiBlc2xpbnQgbm8tdW51c2VkLWV4cHJlc3Npb25zOiBcIm9mZlwiICovXG5cblx0XHRcdHZhciBwYXJlbnQgPSBlbGVtLnBhcmVudE5vZGU7XG5cdFx0XHRpZiAoIHBhcmVudCApIHtcblx0XHRcdFx0cGFyZW50LnNlbGVjdGVkSW5kZXg7XG5cblx0XHRcdFx0aWYgKCBwYXJlbnQucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0XHRwYXJlbnQucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xufVxuXG5qUXVlcnkuZWFjaCggW1xuXHRcInRhYkluZGV4XCIsXG5cdFwicmVhZE9ubHlcIixcblx0XCJtYXhMZW5ndGhcIixcblx0XCJjZWxsU3BhY2luZ1wiLFxuXHRcImNlbGxQYWRkaW5nXCIsXG5cdFwicm93U3BhblwiLFxuXHRcImNvbFNwYW5cIixcblx0XCJ1c2VNYXBcIixcblx0XCJmcmFtZUJvcmRlclwiLFxuXHRcImNvbnRlbnRFZGl0YWJsZVwiXG5dLCBmdW5jdGlvbigpIHtcblx0alF1ZXJ5LnByb3BGaXhbIHRoaXMudG9Mb3dlckNhc2UoKSBdID0gdGhpcztcbn0gKTtcblxuXG5cblxuXHQvLyBTdHJpcCBhbmQgY29sbGFwc2Ugd2hpdGVzcGFjZSBhY2NvcmRpbmcgdG8gSFRNTCBzcGVjXG5cdC8vIGh0dHBzOi8vaW5mcmEuc3BlYy53aGF0d2cub3JnLyNzdHJpcC1hbmQtY29sbGFwc2UtYXNjaWktd2hpdGVzcGFjZVxuXHRmdW5jdGlvbiBzdHJpcEFuZENvbGxhcHNlKCB2YWx1ZSApIHtcblx0XHR2YXIgdG9rZW5zID0gdmFsdWUubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbXTtcblx0XHRyZXR1cm4gdG9rZW5zLmpvaW4oIFwiIFwiICk7XG5cdH1cblxuXG5mdW5jdGlvbiBnZXRDbGFzcyggZWxlbSApIHtcblx0cmV0dXJuIGVsZW0uZ2V0QXR0cmlidXRlICYmIGVsZW0uZ2V0QXR0cmlidXRlKCBcImNsYXNzXCIgKSB8fCBcIlwiO1xufVxuXG5mdW5jdGlvbiBjbGFzc2VzVG9BcnJheSggdmFsdWUgKSB7XG5cdGlmICggQXJyYXkuaXNBcnJheSggdmFsdWUgKSApIHtcblx0XHRyZXR1cm4gdmFsdWU7XG5cdH1cblx0aWYgKCB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0cmV0dXJuIHZhbHVlLm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgW107XG5cdH1cblx0cmV0dXJuIFtdO1xufVxuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGFkZENsYXNzOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0dmFyIGNsYXNzZXMsIGVsZW0sIGN1ciwgY3VyVmFsdWUsIGNsYXp6LCBqLCBmaW5hbFZhbHVlLFxuXHRcdFx0aSA9IDA7XG5cblx0XHRpZiAoIGlzRnVuY3Rpb24oIHZhbHVlICkgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaiApIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkuYWRkQ2xhc3MoIHZhbHVlLmNhbGwoIHRoaXMsIGosIGdldENsYXNzKCB0aGlzICkgKSApO1xuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdGNsYXNzZXMgPSBjbGFzc2VzVG9BcnJheSggdmFsdWUgKTtcblxuXHRcdGlmICggY2xhc3Nlcy5sZW5ndGggKSB7XG5cdFx0XHR3aGlsZSAoICggZWxlbSA9IHRoaXNbIGkrKyBdICkgKSB7XG5cdFx0XHRcdGN1clZhbHVlID0gZ2V0Q2xhc3MoIGVsZW0gKTtcblx0XHRcdFx0Y3VyID0gZWxlbS5ub2RlVHlwZSA9PT0gMSAmJiAoIFwiIFwiICsgc3RyaXBBbmRDb2xsYXBzZSggY3VyVmFsdWUgKSArIFwiIFwiICk7XG5cblx0XHRcdFx0aWYgKCBjdXIgKSB7XG5cdFx0XHRcdFx0aiA9IDA7XG5cdFx0XHRcdFx0d2hpbGUgKCAoIGNsYXp6ID0gY2xhc3Nlc1sgaisrIF0gKSApIHtcblx0XHRcdFx0XHRcdGlmICggY3VyLmluZGV4T2YoIFwiIFwiICsgY2xhenogKyBcIiBcIiApIDwgMCApIHtcblx0XHRcdFx0XHRcdFx0Y3VyICs9IGNsYXp6ICsgXCIgXCI7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gT25seSBhc3NpZ24gaWYgZGlmZmVyZW50IHRvIGF2b2lkIHVubmVlZGVkIHJlbmRlcmluZy5cblx0XHRcdFx0XHRmaW5hbFZhbHVlID0gc3RyaXBBbmRDb2xsYXBzZSggY3VyICk7XG5cdFx0XHRcdFx0aWYgKCBjdXJWYWx1ZSAhPT0gZmluYWxWYWx1ZSApIHtcblx0XHRcdFx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBcImNsYXNzXCIsIGZpbmFsVmFsdWUgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fSxcblxuXHRyZW1vdmVDbGFzczogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHZhciBjbGFzc2VzLCBlbGVtLCBjdXIsIGN1clZhbHVlLCBjbGF6eiwgaiwgZmluYWxWYWx1ZSxcblx0XHRcdGkgPSAwO1xuXG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCB2YWx1ZSApICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oIGogKSB7XG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLnJlbW92ZUNsYXNzKCB2YWx1ZS5jYWxsKCB0aGlzLCBqLCBnZXRDbGFzcyggdGhpcyApICkgKTtcblx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHRpZiAoICFhcmd1bWVudHMubGVuZ3RoICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuYXR0ciggXCJjbGFzc1wiLCBcIlwiICk7XG5cdFx0fVxuXG5cdFx0Y2xhc3NlcyA9IGNsYXNzZXNUb0FycmF5KCB2YWx1ZSApO1xuXG5cdFx0aWYgKCBjbGFzc2VzLmxlbmd0aCApIHtcblx0XHRcdHdoaWxlICggKCBlbGVtID0gdGhpc1sgaSsrIF0gKSApIHtcblx0XHRcdFx0Y3VyVmFsdWUgPSBnZXRDbGFzcyggZWxlbSApO1xuXG5cdFx0XHRcdC8vIFRoaXMgZXhwcmVzc2lvbiBpcyBoZXJlIGZvciBiZXR0ZXIgY29tcHJlc3NpYmlsaXR5IChzZWUgYWRkQ2xhc3MpXG5cdFx0XHRcdGN1ciA9IGVsZW0ubm9kZVR5cGUgPT09IDEgJiYgKCBcIiBcIiArIHN0cmlwQW5kQ29sbGFwc2UoIGN1clZhbHVlICkgKyBcIiBcIiApO1xuXG5cdFx0XHRcdGlmICggY3VyICkge1xuXHRcdFx0XHRcdGogPSAwO1xuXHRcdFx0XHRcdHdoaWxlICggKCBjbGF6eiA9IGNsYXNzZXNbIGorKyBdICkgKSB7XG5cblx0XHRcdFx0XHRcdC8vIFJlbW92ZSAqYWxsKiBpbnN0YW5jZXNcblx0XHRcdFx0XHRcdHdoaWxlICggY3VyLmluZGV4T2YoIFwiIFwiICsgY2xhenogKyBcIiBcIiApID4gLTEgKSB7XG5cdFx0XHRcdFx0XHRcdGN1ciA9IGN1ci5yZXBsYWNlKCBcIiBcIiArIGNsYXp6ICsgXCIgXCIsIFwiIFwiICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gT25seSBhc3NpZ24gaWYgZGlmZmVyZW50IHRvIGF2b2lkIHVubmVlZGVkIHJlbmRlcmluZy5cblx0XHRcdFx0XHRmaW5hbFZhbHVlID0gc3RyaXBBbmRDb2xsYXBzZSggY3VyICk7XG5cdFx0XHRcdFx0aWYgKCBjdXJWYWx1ZSAhPT0gZmluYWxWYWx1ZSApIHtcblx0XHRcdFx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBcImNsYXNzXCIsIGZpbmFsVmFsdWUgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fSxcblxuXHR0b2dnbGVDbGFzczogZnVuY3Rpb24oIHZhbHVlLCBzdGF0ZVZhbCApIHtcblx0XHR2YXIgdHlwZSA9IHR5cGVvZiB2YWx1ZSxcblx0XHRcdGlzVmFsaWRWYWx1ZSA9IHR5cGUgPT09IFwic3RyaW5nXCIgfHwgQXJyYXkuaXNBcnJheSggdmFsdWUgKTtcblxuXHRcdGlmICggdHlwZW9mIHN0YXRlVmFsID09PSBcImJvb2xlYW5cIiAmJiBpc1ZhbGlkVmFsdWUgKSB7XG5cdFx0XHRyZXR1cm4gc3RhdGVWYWwgPyB0aGlzLmFkZENsYXNzKCB2YWx1ZSApIDogdGhpcy5yZW1vdmVDbGFzcyggdmFsdWUgKTtcblx0XHR9XG5cblx0XHRpZiAoIGlzRnVuY3Rpb24oIHZhbHVlICkgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkudG9nZ2xlQ2xhc3MoXG5cdFx0XHRcdFx0dmFsdWUuY2FsbCggdGhpcywgaSwgZ2V0Q2xhc3MoIHRoaXMgKSwgc3RhdGVWYWwgKSxcblx0XHRcdFx0XHRzdGF0ZVZhbFxuXHRcdFx0XHQpO1xuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGNsYXNzTmFtZSwgaSwgc2VsZiwgY2xhc3NOYW1lcztcblxuXHRcdFx0aWYgKCBpc1ZhbGlkVmFsdWUgKSB7XG5cblx0XHRcdFx0Ly8gVG9nZ2xlIGluZGl2aWR1YWwgY2xhc3MgbmFtZXNcblx0XHRcdFx0aSA9IDA7XG5cdFx0XHRcdHNlbGYgPSBqUXVlcnkoIHRoaXMgKTtcblx0XHRcdFx0Y2xhc3NOYW1lcyA9IGNsYXNzZXNUb0FycmF5KCB2YWx1ZSApO1xuXG5cdFx0XHRcdHdoaWxlICggKCBjbGFzc05hbWUgPSBjbGFzc05hbWVzWyBpKysgXSApICkge1xuXG5cdFx0XHRcdFx0Ly8gQ2hlY2sgZWFjaCBjbGFzc05hbWUgZ2l2ZW4sIHNwYWNlIHNlcGFyYXRlZCBsaXN0XG5cdFx0XHRcdFx0aWYgKCBzZWxmLmhhc0NsYXNzKCBjbGFzc05hbWUgKSApIHtcblx0XHRcdFx0XHRcdHNlbGYucmVtb3ZlQ2xhc3MoIGNsYXNzTmFtZSApO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRzZWxmLmFkZENsYXNzKCBjbGFzc05hbWUgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0Ly8gVG9nZ2xlIHdob2xlIGNsYXNzIG5hbWVcblx0XHRcdH0gZWxzZSBpZiAoIHZhbHVlID09PSB1bmRlZmluZWQgfHwgdHlwZSA9PT0gXCJib29sZWFuXCIgKSB7XG5cdFx0XHRcdGNsYXNzTmFtZSA9IGdldENsYXNzKCB0aGlzICk7XG5cdFx0XHRcdGlmICggY2xhc3NOYW1lICkge1xuXG5cdFx0XHRcdFx0Ly8gU3RvcmUgY2xhc3NOYW1lIGlmIHNldFxuXHRcdFx0XHRcdGRhdGFQcml2LnNldCggdGhpcywgXCJfX2NsYXNzTmFtZV9fXCIsIGNsYXNzTmFtZSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gSWYgdGhlIGVsZW1lbnQgaGFzIGEgY2xhc3MgbmFtZSBvciBpZiB3ZSdyZSBwYXNzZWQgYGZhbHNlYCxcblx0XHRcdFx0Ly8gdGhlbiByZW1vdmUgdGhlIHdob2xlIGNsYXNzbmFtZSAoaWYgdGhlcmUgd2FzIG9uZSwgdGhlIGFib3ZlIHNhdmVkIGl0KS5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlIGJyaW5nIGJhY2sgd2hhdGV2ZXIgd2FzIHByZXZpb3VzbHkgc2F2ZWQgKGlmIGFueXRoaW5nKSxcblx0XHRcdFx0Ly8gZmFsbGluZyBiYWNrIHRvIHRoZSBlbXB0eSBzdHJpbmcgaWYgbm90aGluZyB3YXMgc3RvcmVkLlxuXHRcdFx0XHRpZiAoIHRoaXMuc2V0QXR0cmlidXRlICkge1xuXHRcdFx0XHRcdHRoaXMuc2V0QXR0cmlidXRlKCBcImNsYXNzXCIsXG5cdFx0XHRcdFx0XHRjbGFzc05hbWUgfHwgdmFsdWUgPT09IGZhbHNlID9cblx0XHRcdFx0XHRcdFwiXCIgOlxuXHRcdFx0XHRcdFx0ZGF0YVByaXYuZ2V0KCB0aGlzLCBcIl9fY2xhc3NOYW1lX19cIiApIHx8IFwiXCJcblx0XHRcdFx0XHQpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGhhc0NsYXNzOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0dmFyIGNsYXNzTmFtZSwgZWxlbSxcblx0XHRcdGkgPSAwO1xuXG5cdFx0Y2xhc3NOYW1lID0gXCIgXCIgKyBzZWxlY3RvciArIFwiIFwiO1xuXHRcdHdoaWxlICggKCBlbGVtID0gdGhpc1sgaSsrIF0gKSApIHtcblx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSAmJlxuXHRcdFx0XHQoIFwiIFwiICsgc3RyaXBBbmRDb2xsYXBzZSggZ2V0Q2xhc3MoIGVsZW0gKSApICsgXCIgXCIgKS5pbmRleE9mKCBjbGFzc05hbWUgKSA+IC0xICkge1xuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufSApO1xuXG5cblxuXG52YXIgcnJldHVybiA9IC9cXHIvZztcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHR2YWw6IGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHR2YXIgaG9va3MsIHJldCwgdmFsdWVJc0Z1bmN0aW9uLFxuXHRcdFx0ZWxlbSA9IHRoaXNbIDAgXTtcblxuXHRcdGlmICggIWFyZ3VtZW50cy5sZW5ndGggKSB7XG5cdFx0XHRpZiAoIGVsZW0gKSB7XG5cdFx0XHRcdGhvb2tzID0galF1ZXJ5LnZhbEhvb2tzWyBlbGVtLnR5cGUgXSB8fFxuXHRcdFx0XHRcdGpRdWVyeS52YWxIb29rc1sgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpIF07XG5cblx0XHRcdFx0aWYgKCBob29rcyAmJlxuXHRcdFx0XHRcdFwiZ2V0XCIgaW4gaG9va3MgJiZcblx0XHRcdFx0XHQoIHJldCA9IGhvb2tzLmdldCggZWxlbSwgXCJ2YWx1ZVwiICkgKSAhPT0gdW5kZWZpbmVkXG5cdFx0XHRcdCkge1xuXHRcdFx0XHRcdHJldHVybiByZXQ7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXQgPSBlbGVtLnZhbHVlO1xuXG5cdFx0XHRcdC8vIEhhbmRsZSBtb3N0IGNvbW1vbiBzdHJpbmcgY2FzZXNcblx0XHRcdFx0aWYgKCB0eXBlb2YgcmV0ID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0XHRcdHJldHVybiByZXQucmVwbGFjZSggcnJldHVybiwgXCJcIiApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gSGFuZGxlIGNhc2VzIHdoZXJlIHZhbHVlIGlzIG51bGwvdW5kZWYgb3IgbnVtYmVyXG5cdFx0XHRcdHJldHVybiByZXQgPT0gbnVsbCA/IFwiXCIgOiByZXQ7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHR2YWx1ZUlzRnVuY3Rpb24gPSBpc0Z1bmN0aW9uKCB2YWx1ZSApO1xuXG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oIGkgKSB7XG5cdFx0XHR2YXIgdmFsO1xuXG5cdFx0XHRpZiAoIHRoaXMubm9kZVR5cGUgIT09IDEgKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCB2YWx1ZUlzRnVuY3Rpb24gKSB7XG5cdFx0XHRcdHZhbCA9IHZhbHVlLmNhbGwoIHRoaXMsIGksIGpRdWVyeSggdGhpcyApLnZhbCgpICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR2YWwgPSB2YWx1ZTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gVHJlYXQgbnVsbC91bmRlZmluZWQgYXMgXCJcIjsgY29udmVydCBudW1iZXJzIHRvIHN0cmluZ1xuXHRcdFx0aWYgKCB2YWwgPT0gbnVsbCApIHtcblx0XHRcdFx0dmFsID0gXCJcIjtcblxuXHRcdFx0fSBlbHNlIGlmICggdHlwZW9mIHZhbCA9PT0gXCJudW1iZXJcIiApIHtcblx0XHRcdFx0dmFsICs9IFwiXCI7XG5cblx0XHRcdH0gZWxzZSBpZiAoIEFycmF5LmlzQXJyYXkoIHZhbCApICkge1xuXHRcdFx0XHR2YWwgPSBqUXVlcnkubWFwKCB2YWwsIGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRcdFx0XHRyZXR1cm4gdmFsdWUgPT0gbnVsbCA/IFwiXCIgOiB2YWx1ZSArIFwiXCI7XG5cdFx0XHRcdH0gKTtcblx0XHRcdH1cblxuXHRcdFx0aG9va3MgPSBqUXVlcnkudmFsSG9va3NbIHRoaXMudHlwZSBdIHx8IGpRdWVyeS52YWxIb29rc1sgdGhpcy5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpIF07XG5cblx0XHRcdC8vIElmIHNldCByZXR1cm5zIHVuZGVmaW5lZCwgZmFsbCBiYWNrIHRvIG5vcm1hbCBzZXR0aW5nXG5cdFx0XHRpZiAoICFob29rcyB8fCAhKCBcInNldFwiIGluIGhvb2tzICkgfHwgaG9va3Muc2V0KCB0aGlzLCB2YWwsIFwidmFsdWVcIiApID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdHRoaXMudmFsdWUgPSB2YWw7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5leHRlbmQoIHtcblx0dmFsSG9va3M6IHtcblx0XHRvcHRpb246IHtcblx0XHRcdGdldDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHRcdFx0dmFyIHZhbCA9IGpRdWVyeS5maW5kLmF0dHIoIGVsZW0sIFwidmFsdWVcIiApO1xuXHRcdFx0XHRyZXR1cm4gdmFsICE9IG51bGwgP1xuXHRcdFx0XHRcdHZhbCA6XG5cblx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTEwIC0gMTEgb25seVxuXHRcdFx0XHRcdC8vIG9wdGlvbi50ZXh0IHRocm93cyBleGNlcHRpb25zICgjMTQ2ODYsICMxNDg1OClcblx0XHRcdFx0XHQvLyBTdHJpcCBhbmQgY29sbGFwc2Ugd2hpdGVzcGFjZVxuXHRcdFx0XHRcdC8vIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvI3N0cmlwLWFuZC1jb2xsYXBzZS13aGl0ZXNwYWNlXG5cdFx0XHRcdFx0c3RyaXBBbmRDb2xsYXBzZSggalF1ZXJ5LnRleHQoIGVsZW0gKSApO1xuXHRcdFx0fVxuXHRcdH0sXG5cdFx0c2VsZWN0OiB7XG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHR2YXIgdmFsdWUsIG9wdGlvbiwgaSxcblx0XHRcdFx0XHRvcHRpb25zID0gZWxlbS5vcHRpb25zLFxuXHRcdFx0XHRcdGluZGV4ID0gZWxlbS5zZWxlY3RlZEluZGV4LFxuXHRcdFx0XHRcdG9uZSA9IGVsZW0udHlwZSA9PT0gXCJzZWxlY3Qtb25lXCIsXG5cdFx0XHRcdFx0dmFsdWVzID0gb25lID8gbnVsbCA6IFtdLFxuXHRcdFx0XHRcdG1heCA9IG9uZSA/IGluZGV4ICsgMSA6IG9wdGlvbnMubGVuZ3RoO1xuXG5cdFx0XHRcdGlmICggaW5kZXggPCAwICkge1xuXHRcdFx0XHRcdGkgPSBtYXg7XG5cblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRpID0gb25lID8gaW5kZXggOiAwO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gTG9vcCB0aHJvdWdoIGFsbCB0aGUgc2VsZWN0ZWQgb3B0aW9uc1xuXHRcdFx0XHRmb3IgKCA7IGkgPCBtYXg7IGkrKyApIHtcblx0XHRcdFx0XHRvcHRpb24gPSBvcHRpb25zWyBpIF07XG5cblx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTkgb25seVxuXHRcdFx0XHRcdC8vIElFOC05IGRvZXNuJ3QgdXBkYXRlIHNlbGVjdGVkIGFmdGVyIGZvcm0gcmVzZXQgKCMyNTUxKVxuXHRcdFx0XHRcdGlmICggKCBvcHRpb24uc2VsZWN0ZWQgfHwgaSA9PT0gaW5kZXggKSAmJlxuXG5cdFx0XHRcdFx0XHRcdC8vIERvbid0IHJldHVybiBvcHRpb25zIHRoYXQgYXJlIGRpc2FibGVkIG9yIGluIGEgZGlzYWJsZWQgb3B0Z3JvdXBcblx0XHRcdFx0XHRcdFx0IW9wdGlvbi5kaXNhYmxlZCAmJlxuXHRcdFx0XHRcdFx0XHQoICFvcHRpb24ucGFyZW50Tm9kZS5kaXNhYmxlZCB8fFxuXHRcdFx0XHRcdFx0XHRcdCFub2RlTmFtZSggb3B0aW9uLnBhcmVudE5vZGUsIFwib3B0Z3JvdXBcIiApICkgKSB7XG5cblx0XHRcdFx0XHRcdC8vIEdldCB0aGUgc3BlY2lmaWMgdmFsdWUgZm9yIHRoZSBvcHRpb25cblx0XHRcdFx0XHRcdHZhbHVlID0galF1ZXJ5KCBvcHRpb24gKS52YWwoKTtcblxuXHRcdFx0XHRcdFx0Ly8gV2UgZG9uJ3QgbmVlZCBhbiBhcnJheSBmb3Igb25lIHNlbGVjdHNcblx0XHRcdFx0XHRcdGlmICggb25lICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdmFsdWU7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdC8vIE11bHRpLVNlbGVjdHMgcmV0dXJuIGFuIGFycmF5XG5cdFx0XHRcdFx0XHR2YWx1ZXMucHVzaCggdmFsdWUgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gdmFsdWVzO1xuXHRcdFx0fSxcblxuXHRcdFx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XG5cdFx0XHRcdHZhciBvcHRpb25TZXQsIG9wdGlvbixcblx0XHRcdFx0XHRvcHRpb25zID0gZWxlbS5vcHRpb25zLFxuXHRcdFx0XHRcdHZhbHVlcyA9IGpRdWVyeS5tYWtlQXJyYXkoIHZhbHVlICksXG5cdFx0XHRcdFx0aSA9IG9wdGlvbnMubGVuZ3RoO1xuXG5cdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdG9wdGlvbiA9IG9wdGlvbnNbIGkgXTtcblxuXHRcdFx0XHRcdC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbmQtYXNzaWduICovXG5cblx0XHRcdFx0XHRpZiAoIG9wdGlvbi5zZWxlY3RlZCA9XG5cdFx0XHRcdFx0XHRqUXVlcnkuaW5BcnJheSggalF1ZXJ5LnZhbEhvb2tzLm9wdGlvbi5nZXQoIG9wdGlvbiApLCB2YWx1ZXMgKSA+IC0xXG5cdFx0XHRcdFx0KSB7XG5cdFx0XHRcdFx0XHRvcHRpb25TZXQgPSB0cnVlO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8qIGVzbGludC1lbmFibGUgbm8tY29uZC1hc3NpZ24gKi9cblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEZvcmNlIGJyb3dzZXJzIHRvIGJlaGF2ZSBjb25zaXN0ZW50bHkgd2hlbiBub24tbWF0Y2hpbmcgdmFsdWUgaXMgc2V0XG5cdFx0XHRcdGlmICggIW9wdGlvblNldCApIHtcblx0XHRcdFx0XHRlbGVtLnNlbGVjdGVkSW5kZXggPSAtMTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdmFsdWVzO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxufSApO1xuXG4vLyBSYWRpb3MgYW5kIGNoZWNrYm94ZXMgZ2V0dGVyL3NldHRlclxualF1ZXJ5LmVhY2goIFsgXCJyYWRpb1wiLCBcImNoZWNrYm94XCIgXSwgZnVuY3Rpb24oKSB7XG5cdGpRdWVyeS52YWxIb29rc1sgdGhpcyBdID0ge1xuXHRcdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlICkge1xuXHRcdFx0aWYgKCBBcnJheS5pc0FycmF5KCB2YWx1ZSApICkge1xuXHRcdFx0XHRyZXR1cm4gKCBlbGVtLmNoZWNrZWQgPSBqUXVlcnkuaW5BcnJheSggalF1ZXJ5KCBlbGVtICkudmFsKCksIHZhbHVlICkgPiAtMSApO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcblx0aWYgKCAhc3VwcG9ydC5jaGVja09uICkge1xuXHRcdGpRdWVyeS52YWxIb29rc1sgdGhpcyBdLmdldCA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0uZ2V0QXR0cmlidXRlKCBcInZhbHVlXCIgKSA9PT0gbnVsbCA/IFwib25cIiA6IGVsZW0udmFsdWU7XG5cdFx0fTtcblx0fVxufSApO1xuXG5cblxuXG4vLyBSZXR1cm4galF1ZXJ5IGZvciBhdHRyaWJ1dGVzLW9ubHkgaW5jbHVzaW9uXG5cblxuc3VwcG9ydC5mb2N1c2luID0gXCJvbmZvY3VzaW5cIiBpbiB3aW5kb3c7XG5cblxudmFyIHJmb2N1c01vcnBoID0gL14oPzpmb2N1c2luZm9jdXN8Zm9jdXNvdXRibHVyKSQvLFxuXHRzdG9wUHJvcGFnYXRpb25DYWxsYmFjayA9IGZ1bmN0aW9uKCBlICkge1xuXHRcdGUuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdH07XG5cbmpRdWVyeS5leHRlbmQoIGpRdWVyeS5ldmVudCwge1xuXG5cdHRyaWdnZXI6IGZ1bmN0aW9uKCBldmVudCwgZGF0YSwgZWxlbSwgb25seUhhbmRsZXJzICkge1xuXG5cdFx0dmFyIGksIGN1ciwgdG1wLCBidWJibGVUeXBlLCBvbnR5cGUsIGhhbmRsZSwgc3BlY2lhbCwgbGFzdEVsZW1lbnQsXG5cdFx0XHRldmVudFBhdGggPSBbIGVsZW0gfHwgZG9jdW1lbnQgXSxcblx0XHRcdHR5cGUgPSBoYXNPd24uY2FsbCggZXZlbnQsIFwidHlwZVwiICkgPyBldmVudC50eXBlIDogZXZlbnQsXG5cdFx0XHRuYW1lc3BhY2VzID0gaGFzT3duLmNhbGwoIGV2ZW50LCBcIm5hbWVzcGFjZVwiICkgPyBldmVudC5uYW1lc3BhY2Uuc3BsaXQoIFwiLlwiICkgOiBbXTtcblxuXHRcdGN1ciA9IGxhc3RFbGVtZW50ID0gdG1wID0gZWxlbSA9IGVsZW0gfHwgZG9jdW1lbnQ7XG5cblx0XHQvLyBEb24ndCBkbyBldmVudHMgb24gdGV4dCBhbmQgY29tbWVudCBub2Rlc1xuXHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMyB8fCBlbGVtLm5vZGVUeXBlID09PSA4ICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIGZvY3VzL2JsdXIgbW9ycGhzIHRvIGZvY3VzaW4vb3V0OyBlbnN1cmUgd2UncmUgbm90IGZpcmluZyB0aGVtIHJpZ2h0IG5vd1xuXHRcdGlmICggcmZvY3VzTW9ycGgudGVzdCggdHlwZSArIGpRdWVyeS5ldmVudC50cmlnZ2VyZWQgKSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRpZiAoIHR5cGUuaW5kZXhPZiggXCIuXCIgKSA+IC0xICkge1xuXG5cdFx0XHQvLyBOYW1lc3BhY2VkIHRyaWdnZXI7IGNyZWF0ZSBhIHJlZ2V4cCB0byBtYXRjaCBldmVudCB0eXBlIGluIGhhbmRsZSgpXG5cdFx0XHRuYW1lc3BhY2VzID0gdHlwZS5zcGxpdCggXCIuXCIgKTtcblx0XHRcdHR5cGUgPSBuYW1lc3BhY2VzLnNoaWZ0KCk7XG5cdFx0XHRuYW1lc3BhY2VzLnNvcnQoKTtcblx0XHR9XG5cdFx0b250eXBlID0gdHlwZS5pbmRleE9mKCBcIjpcIiApIDwgMCAmJiBcIm9uXCIgKyB0eXBlO1xuXG5cdFx0Ly8gQ2FsbGVyIGNhbiBwYXNzIGluIGEgalF1ZXJ5LkV2ZW50IG9iamVjdCwgT2JqZWN0LCBvciBqdXN0IGFuIGV2ZW50IHR5cGUgc3RyaW5nXG5cdFx0ZXZlbnQgPSBldmVudFsgalF1ZXJ5LmV4cGFuZG8gXSA/XG5cdFx0XHRldmVudCA6XG5cdFx0XHRuZXcgalF1ZXJ5LkV2ZW50KCB0eXBlLCB0eXBlb2YgZXZlbnQgPT09IFwib2JqZWN0XCIgJiYgZXZlbnQgKTtcblxuXHRcdC8vIFRyaWdnZXIgYml0bWFzazogJiAxIGZvciBuYXRpdmUgaGFuZGxlcnM7ICYgMiBmb3IgalF1ZXJ5IChhbHdheXMgdHJ1ZSlcblx0XHRldmVudC5pc1RyaWdnZXIgPSBvbmx5SGFuZGxlcnMgPyAyIDogMztcblx0XHRldmVudC5uYW1lc3BhY2UgPSBuYW1lc3BhY2VzLmpvaW4oIFwiLlwiICk7XG5cdFx0ZXZlbnQucm5hbWVzcGFjZSA9IGV2ZW50Lm5hbWVzcGFjZSA/XG5cdFx0XHRuZXcgUmVnRXhwKCBcIihefFxcXFwuKVwiICsgbmFtZXNwYWNlcy5qb2luKCBcIlxcXFwuKD86LipcXFxcLnwpXCIgKSArIFwiKFxcXFwufCQpXCIgKSA6XG5cdFx0XHRudWxsO1xuXG5cdFx0Ly8gQ2xlYW4gdXAgdGhlIGV2ZW50IGluIGNhc2UgaXQgaXMgYmVpbmcgcmV1c2VkXG5cdFx0ZXZlbnQucmVzdWx0ID0gdW5kZWZpbmVkO1xuXHRcdGlmICggIWV2ZW50LnRhcmdldCApIHtcblx0XHRcdGV2ZW50LnRhcmdldCA9IGVsZW07XG5cdFx0fVxuXG5cdFx0Ly8gQ2xvbmUgYW55IGluY29taW5nIGRhdGEgYW5kIHByZXBlbmQgdGhlIGV2ZW50LCBjcmVhdGluZyB0aGUgaGFuZGxlciBhcmcgbGlzdFxuXHRcdGRhdGEgPSBkYXRhID09IG51bGwgP1xuXHRcdFx0WyBldmVudCBdIDpcblx0XHRcdGpRdWVyeS5tYWtlQXJyYXkoIGRhdGEsIFsgZXZlbnQgXSApO1xuXG5cdFx0Ly8gQWxsb3cgc3BlY2lhbCBldmVudHMgdG8gZHJhdyBvdXRzaWRlIHRoZSBsaW5lc1xuXHRcdHNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgdHlwZSBdIHx8IHt9O1xuXHRcdGlmICggIW9ubHlIYW5kbGVycyAmJiBzcGVjaWFsLnRyaWdnZXIgJiYgc3BlY2lhbC50cmlnZ2VyLmFwcGx5KCBlbGVtLCBkYXRhICkgPT09IGZhbHNlICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIERldGVybWluZSBldmVudCBwcm9wYWdhdGlvbiBwYXRoIGluIGFkdmFuY2UsIHBlciBXM0MgZXZlbnRzIHNwZWMgKCM5OTUxKVxuXHRcdC8vIEJ1YmJsZSB1cCB0byBkb2N1bWVudCwgdGhlbiB0byB3aW5kb3c7IHdhdGNoIGZvciBhIGdsb2JhbCBvd25lckRvY3VtZW50IHZhciAoIzk3MjQpXG5cdFx0aWYgKCAhb25seUhhbmRsZXJzICYmICFzcGVjaWFsLm5vQnViYmxlICYmICFpc1dpbmRvdyggZWxlbSApICkge1xuXG5cdFx0XHRidWJibGVUeXBlID0gc3BlY2lhbC5kZWxlZ2F0ZVR5cGUgfHwgdHlwZTtcblx0XHRcdGlmICggIXJmb2N1c01vcnBoLnRlc3QoIGJ1YmJsZVR5cGUgKyB0eXBlICkgKSB7XG5cdFx0XHRcdGN1ciA9IGN1ci5wYXJlbnROb2RlO1xuXHRcdFx0fVxuXHRcdFx0Zm9yICggOyBjdXI7IGN1ciA9IGN1ci5wYXJlbnROb2RlICkge1xuXHRcdFx0XHRldmVudFBhdGgucHVzaCggY3VyICk7XG5cdFx0XHRcdHRtcCA9IGN1cjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gT25seSBhZGQgd2luZG93IGlmIHdlIGdvdCB0byBkb2N1bWVudCAoZS5nLiwgbm90IHBsYWluIG9iaiBvciBkZXRhY2hlZCBET00pXG5cdFx0XHRpZiAoIHRtcCA9PT0gKCBlbGVtLm93bmVyRG9jdW1lbnQgfHwgZG9jdW1lbnQgKSApIHtcblx0XHRcdFx0ZXZlbnRQYXRoLnB1c2goIHRtcC5kZWZhdWx0VmlldyB8fCB0bXAucGFyZW50V2luZG93IHx8IHdpbmRvdyApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIEZpcmUgaGFuZGxlcnMgb24gdGhlIGV2ZW50IHBhdGhcblx0XHRpID0gMDtcblx0XHR3aGlsZSAoICggY3VyID0gZXZlbnRQYXRoWyBpKysgXSApICYmICFldmVudC5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpICkge1xuXHRcdFx0bGFzdEVsZW1lbnQgPSBjdXI7XG5cdFx0XHRldmVudC50eXBlID0gaSA+IDEgP1xuXHRcdFx0XHRidWJibGVUeXBlIDpcblx0XHRcdFx0c3BlY2lhbC5iaW5kVHlwZSB8fCB0eXBlO1xuXG5cdFx0XHQvLyBqUXVlcnkgaGFuZGxlclxuXHRcdFx0aGFuZGxlID0gKCBkYXRhUHJpdi5nZXQoIGN1ciwgXCJldmVudHNcIiApIHx8IHt9IClbIGV2ZW50LnR5cGUgXSAmJlxuXHRcdFx0XHRkYXRhUHJpdi5nZXQoIGN1ciwgXCJoYW5kbGVcIiApO1xuXHRcdFx0aWYgKCBoYW5kbGUgKSB7XG5cdFx0XHRcdGhhbmRsZS5hcHBseSggY3VyLCBkYXRhICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE5hdGl2ZSBoYW5kbGVyXG5cdFx0XHRoYW5kbGUgPSBvbnR5cGUgJiYgY3VyWyBvbnR5cGUgXTtcblx0XHRcdGlmICggaGFuZGxlICYmIGhhbmRsZS5hcHBseSAmJiBhY2NlcHREYXRhKCBjdXIgKSApIHtcblx0XHRcdFx0ZXZlbnQucmVzdWx0ID0gaGFuZGxlLmFwcGx5KCBjdXIsIGRhdGEgKTtcblx0XHRcdFx0aWYgKCBldmVudC5yZXN1bHQgPT09IGZhbHNlICkge1xuXHRcdFx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdFx0ZXZlbnQudHlwZSA9IHR5cGU7XG5cblx0XHQvLyBJZiBub2JvZHkgcHJldmVudGVkIHRoZSBkZWZhdWx0IGFjdGlvbiwgZG8gaXQgbm93XG5cdFx0aWYgKCAhb25seUhhbmRsZXJzICYmICFldmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSApIHtcblxuXHRcdFx0aWYgKCAoICFzcGVjaWFsLl9kZWZhdWx0IHx8XG5cdFx0XHRcdHNwZWNpYWwuX2RlZmF1bHQuYXBwbHkoIGV2ZW50UGF0aC5wb3AoKSwgZGF0YSApID09PSBmYWxzZSApICYmXG5cdFx0XHRcdGFjY2VwdERhdGEoIGVsZW0gKSApIHtcblxuXHRcdFx0XHQvLyBDYWxsIGEgbmF0aXZlIERPTSBtZXRob2Qgb24gdGhlIHRhcmdldCB3aXRoIHRoZSBzYW1lIG5hbWUgYXMgdGhlIGV2ZW50LlxuXHRcdFx0XHQvLyBEb24ndCBkbyBkZWZhdWx0IGFjdGlvbnMgb24gd2luZG93LCB0aGF0J3Mgd2hlcmUgZ2xvYmFsIHZhcmlhYmxlcyBiZSAoIzYxNzApXG5cdFx0XHRcdGlmICggb250eXBlICYmIGlzRnVuY3Rpb24oIGVsZW1bIHR5cGUgXSApICYmICFpc1dpbmRvdyggZWxlbSApICkge1xuXG5cdFx0XHRcdFx0Ly8gRG9uJ3QgcmUtdHJpZ2dlciBhbiBvbkZPTyBldmVudCB3aGVuIHdlIGNhbGwgaXRzIEZPTygpIG1ldGhvZFxuXHRcdFx0XHRcdHRtcCA9IGVsZW1bIG9udHlwZSBdO1xuXG5cdFx0XHRcdFx0aWYgKCB0bXAgKSB7XG5cdFx0XHRcdFx0XHRlbGVtWyBvbnR5cGUgXSA9IG51bGw7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gUHJldmVudCByZS10cmlnZ2VyaW5nIG9mIHRoZSBzYW1lIGV2ZW50LCBzaW5jZSB3ZSBhbHJlYWR5IGJ1YmJsZWQgaXQgYWJvdmVcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlcmVkID0gdHlwZTtcblxuXHRcdFx0XHRcdGlmICggZXZlbnQuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSApIHtcblx0XHRcdFx0XHRcdGxhc3RFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoIHR5cGUsIHN0b3BQcm9wYWdhdGlvbkNhbGxiYWNrICk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0ZWxlbVsgdHlwZSBdKCk7XG5cblx0XHRcdFx0XHRpZiAoIGV2ZW50LmlzUHJvcGFnYXRpb25TdG9wcGVkKCkgKSB7XG5cdFx0XHRcdFx0XHRsYXN0RWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCB0eXBlLCBzdG9wUHJvcGFnYXRpb25DYWxsYmFjayApO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyZWQgPSB1bmRlZmluZWQ7XG5cblx0XHRcdFx0XHRpZiAoIHRtcCApIHtcblx0XHRcdFx0XHRcdGVsZW1bIG9udHlwZSBdID0gdG1wO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBldmVudC5yZXN1bHQ7XG5cdH0sXG5cblx0Ly8gUGlnZ3liYWNrIG9uIGEgZG9ub3IgZXZlbnQgdG8gc2ltdWxhdGUgYSBkaWZmZXJlbnQgb25lXG5cdC8vIFVzZWQgb25seSBmb3IgYGZvY3VzKGluIHwgb3V0KWAgZXZlbnRzXG5cdHNpbXVsYXRlOiBmdW5jdGlvbiggdHlwZSwgZWxlbSwgZXZlbnQgKSB7XG5cdFx0dmFyIGUgPSBqUXVlcnkuZXh0ZW5kKFxuXHRcdFx0bmV3IGpRdWVyeS5FdmVudCgpLFxuXHRcdFx0ZXZlbnQsXG5cdFx0XHR7XG5cdFx0XHRcdHR5cGU6IHR5cGUsXG5cdFx0XHRcdGlzU2ltdWxhdGVkOiB0cnVlXG5cdFx0XHR9XG5cdFx0KTtcblxuXHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyKCBlLCBudWxsLCBlbGVtICk7XG5cdH1cblxufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cblx0dHJpZ2dlcjogZnVuY3Rpb24oIHR5cGUsIGRhdGEgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlciggdHlwZSwgZGF0YSwgdGhpcyApO1xuXHRcdH0gKTtcblx0fSxcblx0dHJpZ2dlckhhbmRsZXI6IGZ1bmN0aW9uKCB0eXBlLCBkYXRhICkge1xuXHRcdHZhciBlbGVtID0gdGhpc1sgMCBdO1xuXHRcdGlmICggZWxlbSApIHtcblx0XHRcdHJldHVybiBqUXVlcnkuZXZlbnQudHJpZ2dlciggdHlwZSwgZGF0YSwgZWxlbSwgdHJ1ZSApO1xuXHRcdH1cblx0fVxufSApO1xuXG5cbi8vIFN1cHBvcnQ6IEZpcmVmb3ggPD00NFxuLy8gRmlyZWZveCBkb2Vzbid0IGhhdmUgZm9jdXMoaW4gfCBvdXQpIGV2ZW50c1xuLy8gUmVsYXRlZCB0aWNrZXQgLSBodHRwczovL2J1Z3ppbGxhLm1vemlsbGEub3JnL3Nob3dfYnVnLmNnaT9pZD02ODc3ODdcbi8vXG4vLyBTdXBwb3J0OiBDaHJvbWUgPD00OCAtIDQ5LCBTYWZhcmkgPD05LjAgLSA5LjFcbi8vIGZvY3VzKGluIHwgb3V0KSBldmVudHMgZmlyZSBhZnRlciBmb2N1cyAmIGJsdXIgZXZlbnRzLFxuLy8gd2hpY2ggaXMgc3BlYyB2aW9sYXRpb24gLSBodHRwOi8vd3d3LnczLm9yZy9UUi9ET00tTGV2ZWwtMy1FdmVudHMvI2V2ZW50cy1mb2N1c2V2ZW50LWV2ZW50LW9yZGVyXG4vLyBSZWxhdGVkIHRpY2tldCAtIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTQ0OTg1N1xuaWYgKCAhc3VwcG9ydC5mb2N1c2luICkge1xuXHRqUXVlcnkuZWFjaCggeyBmb2N1czogXCJmb2N1c2luXCIsIGJsdXI6IFwiZm9jdXNvdXRcIiB9LCBmdW5jdGlvbiggb3JpZywgZml4ICkge1xuXG5cdFx0Ly8gQXR0YWNoIGEgc2luZ2xlIGNhcHR1cmluZyBoYW5kbGVyIG9uIHRoZSBkb2N1bWVudCB3aGlsZSBzb21lb25lIHdhbnRzIGZvY3VzaW4vZm9jdXNvdXRcblx0XHR2YXIgaGFuZGxlciA9IGZ1bmN0aW9uKCBldmVudCApIHtcblx0XHRcdGpRdWVyeS5ldmVudC5zaW11bGF0ZSggZml4LCBldmVudC50YXJnZXQsIGpRdWVyeS5ldmVudC5maXgoIGV2ZW50ICkgKTtcblx0XHR9O1xuXG5cdFx0alF1ZXJ5LmV2ZW50LnNwZWNpYWxbIGZpeCBdID0ge1xuXHRcdFx0c2V0dXA6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHR2YXIgZG9jID0gdGhpcy5vd25lckRvY3VtZW50IHx8IHRoaXMsXG5cdFx0XHRcdFx0YXR0YWNoZXMgPSBkYXRhUHJpdi5hY2Nlc3MoIGRvYywgZml4ICk7XG5cblx0XHRcdFx0aWYgKCAhYXR0YWNoZXMgKSB7XG5cdFx0XHRcdFx0ZG9jLmFkZEV2ZW50TGlzdGVuZXIoIG9yaWcsIGhhbmRsZXIsIHRydWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRkYXRhUHJpdi5hY2Nlc3MoIGRvYywgZml4LCAoIGF0dGFjaGVzIHx8IDAgKSArIDEgKTtcblx0XHRcdH0sXG5cdFx0XHR0ZWFyZG93bjogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHZhciBkb2MgPSB0aGlzLm93bmVyRG9jdW1lbnQgfHwgdGhpcyxcblx0XHRcdFx0XHRhdHRhY2hlcyA9IGRhdGFQcml2LmFjY2VzcyggZG9jLCBmaXggKSAtIDE7XG5cblx0XHRcdFx0aWYgKCAhYXR0YWNoZXMgKSB7XG5cdFx0XHRcdFx0ZG9jLnJlbW92ZUV2ZW50TGlzdGVuZXIoIG9yaWcsIGhhbmRsZXIsIHRydWUgKTtcblx0XHRcdFx0XHRkYXRhUHJpdi5yZW1vdmUoIGRvYywgZml4ICk7XG5cblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRkYXRhUHJpdi5hY2Nlc3MoIGRvYywgZml4LCBhdHRhY2hlcyApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fTtcblx0fSApO1xufVxuXG5cbnZhclxuXHRyYnJhY2tldCA9IC9cXFtcXF0kLyxcblx0ckNSTEYgPSAvXFxyP1xcbi9nLFxuXHRyc3VibWl0dGVyVHlwZXMgPSAvXig/OnN1Ym1pdHxidXR0b258aW1hZ2V8cmVzZXR8ZmlsZSkkL2ksXG5cdHJzdWJtaXR0YWJsZSA9IC9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhfGtleWdlbikvaTtcblxuZnVuY3Rpb24gYnVpbGRQYXJhbXMoIHByZWZpeCwgb2JqLCB0cmFkaXRpb25hbCwgYWRkICkge1xuXHR2YXIgbmFtZTtcblxuXHRpZiAoIEFycmF5LmlzQXJyYXkoIG9iaiApICkge1xuXG5cdFx0Ly8gU2VyaWFsaXplIGFycmF5IGl0ZW0uXG5cdFx0alF1ZXJ5LmVhY2goIG9iaiwgZnVuY3Rpb24oIGksIHYgKSB7XG5cdFx0XHRpZiAoIHRyYWRpdGlvbmFsIHx8IHJicmFja2V0LnRlc3QoIHByZWZpeCApICkge1xuXG5cdFx0XHRcdC8vIFRyZWF0IGVhY2ggYXJyYXkgaXRlbSBhcyBhIHNjYWxhci5cblx0XHRcdFx0YWRkKCBwcmVmaXgsIHYgKTtcblxuXHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHQvLyBJdGVtIGlzIG5vbi1zY2FsYXIgKGFycmF5IG9yIG9iamVjdCksIGVuY29kZSBpdHMgbnVtZXJpYyBpbmRleC5cblx0XHRcdFx0YnVpbGRQYXJhbXMoXG5cdFx0XHRcdFx0cHJlZml4ICsgXCJbXCIgKyAoIHR5cGVvZiB2ID09PSBcIm9iamVjdFwiICYmIHYgIT0gbnVsbCA/IGkgOiBcIlwiICkgKyBcIl1cIixcblx0XHRcdFx0XHR2LFxuXHRcdFx0XHRcdHRyYWRpdGlvbmFsLFxuXHRcdFx0XHRcdGFkZFxuXHRcdFx0XHQpO1xuXHRcdFx0fVxuXHRcdH0gKTtcblxuXHR9IGVsc2UgaWYgKCAhdHJhZGl0aW9uYWwgJiYgdG9UeXBlKCBvYmogKSA9PT0gXCJvYmplY3RcIiApIHtcblxuXHRcdC8vIFNlcmlhbGl6ZSBvYmplY3QgaXRlbS5cblx0XHRmb3IgKCBuYW1lIGluIG9iaiApIHtcblx0XHRcdGJ1aWxkUGFyYW1zKCBwcmVmaXggKyBcIltcIiArIG5hbWUgKyBcIl1cIiwgb2JqWyBuYW1lIF0sIHRyYWRpdGlvbmFsLCBhZGQgKTtcblx0XHR9XG5cblx0fSBlbHNlIHtcblxuXHRcdC8vIFNlcmlhbGl6ZSBzY2FsYXIgaXRlbS5cblx0XHRhZGQoIHByZWZpeCwgb2JqICk7XG5cdH1cbn1cblxuLy8gU2VyaWFsaXplIGFuIGFycmF5IG9mIGZvcm0gZWxlbWVudHMgb3IgYSBzZXQgb2Zcbi8vIGtleS92YWx1ZXMgaW50byBhIHF1ZXJ5IHN0cmluZ1xualF1ZXJ5LnBhcmFtID0gZnVuY3Rpb24oIGEsIHRyYWRpdGlvbmFsICkge1xuXHR2YXIgcHJlZml4LFxuXHRcdHMgPSBbXSxcblx0XHRhZGQgPSBmdW5jdGlvbigga2V5LCB2YWx1ZU9yRnVuY3Rpb24gKSB7XG5cblx0XHRcdC8vIElmIHZhbHVlIGlzIGEgZnVuY3Rpb24sIGludm9rZSBpdCBhbmQgdXNlIGl0cyByZXR1cm4gdmFsdWVcblx0XHRcdHZhciB2YWx1ZSA9IGlzRnVuY3Rpb24oIHZhbHVlT3JGdW5jdGlvbiApID9cblx0XHRcdFx0dmFsdWVPckZ1bmN0aW9uKCkgOlxuXHRcdFx0XHR2YWx1ZU9yRnVuY3Rpb247XG5cblx0XHRcdHNbIHMubGVuZ3RoIF0gPSBlbmNvZGVVUklDb21wb25lbnQoIGtleSApICsgXCI9XCIgK1xuXHRcdFx0XHRlbmNvZGVVUklDb21wb25lbnQoIHZhbHVlID09IG51bGwgPyBcIlwiIDogdmFsdWUgKTtcblx0XHR9O1xuXG5cdGlmICggYSA9PSBudWxsICkge1xuXHRcdHJldHVybiBcIlwiO1xuXHR9XG5cblx0Ly8gSWYgYW4gYXJyYXkgd2FzIHBhc3NlZCBpbiwgYXNzdW1lIHRoYXQgaXQgaXMgYW4gYXJyYXkgb2YgZm9ybSBlbGVtZW50cy5cblx0aWYgKCBBcnJheS5pc0FycmF5KCBhICkgfHwgKCBhLmpxdWVyeSAmJiAhalF1ZXJ5LmlzUGxhaW5PYmplY3QoIGEgKSApICkge1xuXG5cdFx0Ly8gU2VyaWFsaXplIHRoZSBmb3JtIGVsZW1lbnRzXG5cdFx0alF1ZXJ5LmVhY2goIGEsIGZ1bmN0aW9uKCkge1xuXHRcdFx0YWRkKCB0aGlzLm5hbWUsIHRoaXMudmFsdWUgKTtcblx0XHR9ICk7XG5cblx0fSBlbHNlIHtcblxuXHRcdC8vIElmIHRyYWRpdGlvbmFsLCBlbmNvZGUgdGhlIFwib2xkXCIgd2F5ICh0aGUgd2F5IDEuMy4yIG9yIG9sZGVyXG5cdFx0Ly8gZGlkIGl0KSwgb3RoZXJ3aXNlIGVuY29kZSBwYXJhbXMgcmVjdXJzaXZlbHkuXG5cdFx0Zm9yICggcHJlZml4IGluIGEgKSB7XG5cdFx0XHRidWlsZFBhcmFtcyggcHJlZml4LCBhWyBwcmVmaXggXSwgdHJhZGl0aW9uYWwsIGFkZCApO1xuXHRcdH1cblx0fVxuXG5cdC8vIFJldHVybiB0aGUgcmVzdWx0aW5nIHNlcmlhbGl6YXRpb25cblx0cmV0dXJuIHMuam9pbiggXCImXCIgKTtcbn07XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0c2VyaWFsaXplOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4galF1ZXJ5LnBhcmFtKCB0aGlzLnNlcmlhbGl6ZUFycmF5KCkgKTtcblx0fSxcblx0c2VyaWFsaXplQXJyYXk6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLm1hcCggZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIENhbiBhZGQgcHJvcEhvb2sgZm9yIFwiZWxlbWVudHNcIiB0byBmaWx0ZXIgb3IgYWRkIGZvcm0gZWxlbWVudHNcblx0XHRcdHZhciBlbGVtZW50cyA9IGpRdWVyeS5wcm9wKCB0aGlzLCBcImVsZW1lbnRzXCIgKTtcblx0XHRcdHJldHVybiBlbGVtZW50cyA/IGpRdWVyeS5tYWtlQXJyYXkoIGVsZW1lbnRzICkgOiB0aGlzO1xuXHRcdH0gKVxuXHRcdC5maWx0ZXIoIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHR5cGUgPSB0aGlzLnR5cGU7XG5cblx0XHRcdC8vIFVzZSAuaXMoIFwiOmRpc2FibGVkXCIgKSBzbyB0aGF0IGZpZWxkc2V0W2Rpc2FibGVkXSB3b3Jrc1xuXHRcdFx0cmV0dXJuIHRoaXMubmFtZSAmJiAhalF1ZXJ5KCB0aGlzICkuaXMoIFwiOmRpc2FibGVkXCIgKSAmJlxuXHRcdFx0XHRyc3VibWl0dGFibGUudGVzdCggdGhpcy5ub2RlTmFtZSApICYmICFyc3VibWl0dGVyVHlwZXMudGVzdCggdHlwZSApICYmXG5cdFx0XHRcdCggdGhpcy5jaGVja2VkIHx8ICFyY2hlY2thYmxlVHlwZS50ZXN0KCB0eXBlICkgKTtcblx0XHR9IClcblx0XHQubWFwKCBmdW5jdGlvbiggaSwgZWxlbSApIHtcblx0XHRcdHZhciB2YWwgPSBqUXVlcnkoIHRoaXMgKS52YWwoKTtcblxuXHRcdFx0aWYgKCB2YWwgPT0gbnVsbCApIHtcblx0XHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggQXJyYXkuaXNBcnJheSggdmFsICkgKSB7XG5cdFx0XHRcdHJldHVybiBqUXVlcnkubWFwKCB2YWwsIGZ1bmN0aW9uKCB2YWwgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHsgbmFtZTogZWxlbS5uYW1lLCB2YWx1ZTogdmFsLnJlcGxhY2UoIHJDUkxGLCBcIlxcclxcblwiICkgfTtcblx0XHRcdFx0fSApO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4geyBuYW1lOiBlbGVtLm5hbWUsIHZhbHVlOiB2YWwucmVwbGFjZSggckNSTEYsIFwiXFxyXFxuXCIgKSB9O1xuXHRcdH0gKS5nZXQoKTtcblx0fVxufSApO1xuXG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0d3JhcEFsbDogZnVuY3Rpb24oIGh0bWwgKSB7XG5cdFx0dmFyIHdyYXA7XG5cblx0XHRpZiAoIHRoaXNbIDAgXSApIHtcblx0XHRcdGlmICggaXNGdW5jdGlvbiggaHRtbCApICkge1xuXHRcdFx0XHRodG1sID0gaHRtbC5jYWxsKCB0aGlzWyAwIF0gKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gVGhlIGVsZW1lbnRzIHRvIHdyYXAgdGhlIHRhcmdldCBhcm91bmRcblx0XHRcdHdyYXAgPSBqUXVlcnkoIGh0bWwsIHRoaXNbIDAgXS5vd25lckRvY3VtZW50ICkuZXEoIDAgKS5jbG9uZSggdHJ1ZSApO1xuXG5cdFx0XHRpZiAoIHRoaXNbIDAgXS5wYXJlbnROb2RlICkge1xuXHRcdFx0XHR3cmFwLmluc2VydEJlZm9yZSggdGhpc1sgMCBdICk7XG5cdFx0XHR9XG5cblx0XHRcdHdyYXAubWFwKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0dmFyIGVsZW0gPSB0aGlzO1xuXG5cdFx0XHRcdHdoaWxlICggZWxlbS5maXJzdEVsZW1lbnRDaGlsZCApIHtcblx0XHRcdFx0XHRlbGVtID0gZWxlbS5maXJzdEVsZW1lbnRDaGlsZDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiBlbGVtO1xuXHRcdFx0fSApLmFwcGVuZCggdGhpcyApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzO1xuXHR9LFxuXG5cdHdyYXBJbm5lcjogZnVuY3Rpb24oIGh0bWwgKSB7XG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCBodG1sICkgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkud3JhcElubmVyKCBodG1sLmNhbGwoIHRoaXMsIGkgKSApO1xuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHNlbGYgPSBqUXVlcnkoIHRoaXMgKSxcblx0XHRcdFx0Y29udGVudHMgPSBzZWxmLmNvbnRlbnRzKCk7XG5cblx0XHRcdGlmICggY29udGVudHMubGVuZ3RoICkge1xuXHRcdFx0XHRjb250ZW50cy53cmFwQWxsKCBodG1sICk7XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHNlbGYuYXBwZW5kKCBodG1sICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdHdyYXA6IGZ1bmN0aW9uKCBodG1sICkge1xuXHRcdHZhciBodG1sSXNGdW5jdGlvbiA9IGlzRnVuY3Rpb24oIGh0bWwgKTtcblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0alF1ZXJ5KCB0aGlzICkud3JhcEFsbCggaHRtbElzRnVuY3Rpb24gPyBodG1sLmNhbGwoIHRoaXMsIGkgKSA6IGh0bWwgKTtcblx0XHR9ICk7XG5cdH0sXG5cblx0dW53cmFwOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0dGhpcy5wYXJlbnQoIHNlbGVjdG9yICkubm90KCBcImJvZHlcIiApLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0alF1ZXJ5KCB0aGlzICkucmVwbGFjZVdpdGgoIHRoaXMuY2hpbGROb2RlcyApO1xuXHRcdH0gKTtcblx0XHRyZXR1cm4gdGhpcztcblx0fVxufSApO1xuXG5cbmpRdWVyeS5leHByLnBzZXVkb3MuaGlkZGVuID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdHJldHVybiAhalF1ZXJ5LmV4cHIucHNldWRvcy52aXNpYmxlKCBlbGVtICk7XG59O1xualF1ZXJ5LmV4cHIucHNldWRvcy52aXNpYmxlID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdHJldHVybiAhISggZWxlbS5vZmZzZXRXaWR0aCB8fCBlbGVtLm9mZnNldEhlaWdodCB8fCBlbGVtLmdldENsaWVudFJlY3RzKCkubGVuZ3RoICk7XG59O1xuXG5cblxuXG4vLyBTdXBwb3J0OiBTYWZhcmkgOCBvbmx5XG4vLyBJbiBTYWZhcmkgOCBkb2N1bWVudHMgY3JlYXRlZCB2aWEgZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50XG4vLyBjb2xsYXBzZSBzaWJsaW5nIGZvcm1zOiB0aGUgc2Vjb25kIG9uZSBiZWNvbWVzIGEgY2hpbGQgb2YgdGhlIGZpcnN0IG9uZS5cbi8vIEJlY2F1c2Ugb2YgdGhhdCwgdGhpcyBzZWN1cml0eSBtZWFzdXJlIGhhcyB0byBiZSBkaXNhYmxlZCBpbiBTYWZhcmkgOC5cbi8vIGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0xMzczMzdcbnN1cHBvcnQuY3JlYXRlSFRNTERvY3VtZW50ID0gKCBmdW5jdGlvbigpIHtcblx0dmFyIGJvZHkgPSBkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnQoIFwiXCIgKS5ib2R5O1xuXHRib2R5LmlubmVySFRNTCA9IFwiPGZvcm0+PC9mb3JtPjxmb3JtPjwvZm9ybT5cIjtcblx0cmV0dXJuIGJvZHkuY2hpbGROb2Rlcy5sZW5ndGggPT09IDI7XG59ICkoKTtcblxuXG4vLyBBcmd1bWVudCBcImRhdGFcIiBzaG91bGQgYmUgc3RyaW5nIG9mIGh0bWxcbi8vIGNvbnRleHQgKG9wdGlvbmFsKTogSWYgc3BlY2lmaWVkLCB0aGUgZnJhZ21lbnQgd2lsbCBiZSBjcmVhdGVkIGluIHRoaXMgY29udGV4dCxcbi8vIGRlZmF1bHRzIHRvIGRvY3VtZW50XG4vLyBrZWVwU2NyaXB0cyAob3B0aW9uYWwpOiBJZiB0cnVlLCB3aWxsIGluY2x1ZGUgc2NyaXB0cyBwYXNzZWQgaW4gdGhlIGh0bWwgc3RyaW5nXG5qUXVlcnkucGFyc2VIVE1MID0gZnVuY3Rpb24oIGRhdGEsIGNvbnRleHQsIGtlZXBTY3JpcHRzICkge1xuXHRpZiAoIHR5cGVvZiBkYXRhICE9PSBcInN0cmluZ1wiICkge1xuXHRcdHJldHVybiBbXTtcblx0fVxuXHRpZiAoIHR5cGVvZiBjb250ZXh0ID09PSBcImJvb2xlYW5cIiApIHtcblx0XHRrZWVwU2NyaXB0cyA9IGNvbnRleHQ7XG5cdFx0Y29udGV4dCA9IGZhbHNlO1xuXHR9XG5cblx0dmFyIGJhc2UsIHBhcnNlZCwgc2NyaXB0cztcblxuXHRpZiAoICFjb250ZXh0ICkge1xuXG5cdFx0Ly8gU3RvcCBzY3JpcHRzIG9yIGlubGluZSBldmVudCBoYW5kbGVycyBmcm9tIGJlaW5nIGV4ZWN1dGVkIGltbWVkaWF0ZWx5XG5cdFx0Ly8gYnkgdXNpbmcgZG9jdW1lbnQuaW1wbGVtZW50YXRpb25cblx0XHRpZiAoIHN1cHBvcnQuY3JlYXRlSFRNTERvY3VtZW50ICkge1xuXHRcdFx0Y29udGV4dCA9IGRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudCggXCJcIiApO1xuXG5cdFx0XHQvLyBTZXQgdGhlIGJhc2UgaHJlZiBmb3IgdGhlIGNyZWF0ZWQgZG9jdW1lbnRcblx0XHRcdC8vIHNvIGFueSBwYXJzZWQgZWxlbWVudHMgd2l0aCBVUkxzXG5cdFx0XHQvLyBhcmUgYmFzZWQgb24gdGhlIGRvY3VtZW50J3MgVVJMIChnaC0yOTY1KVxuXHRcdFx0YmFzZSA9IGNvbnRleHQuY3JlYXRlRWxlbWVudCggXCJiYXNlXCIgKTtcblx0XHRcdGJhc2UuaHJlZiA9IGRvY3VtZW50LmxvY2F0aW9uLmhyZWY7XG5cdFx0XHRjb250ZXh0LmhlYWQuYXBwZW5kQ2hpbGQoIGJhc2UgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0Y29udGV4dCA9IGRvY3VtZW50O1xuXHRcdH1cblx0fVxuXG5cdHBhcnNlZCA9IHJzaW5nbGVUYWcuZXhlYyggZGF0YSApO1xuXHRzY3JpcHRzID0gIWtlZXBTY3JpcHRzICYmIFtdO1xuXG5cdC8vIFNpbmdsZSB0YWdcblx0aWYgKCBwYXJzZWQgKSB7XG5cdFx0cmV0dXJuIFsgY29udGV4dC5jcmVhdGVFbGVtZW50KCBwYXJzZWRbIDEgXSApIF07XG5cdH1cblxuXHRwYXJzZWQgPSBidWlsZEZyYWdtZW50KCBbIGRhdGEgXSwgY29udGV4dCwgc2NyaXB0cyApO1xuXG5cdGlmICggc2NyaXB0cyAmJiBzY3JpcHRzLmxlbmd0aCApIHtcblx0XHRqUXVlcnkoIHNjcmlwdHMgKS5yZW1vdmUoKTtcblx0fVxuXG5cdHJldHVybiBqUXVlcnkubWVyZ2UoIFtdLCBwYXJzZWQuY2hpbGROb2RlcyApO1xufTtcblxuXG5qUXVlcnkub2Zmc2V0ID0ge1xuXHRzZXRPZmZzZXQ6IGZ1bmN0aW9uKCBlbGVtLCBvcHRpb25zLCBpICkge1xuXHRcdHZhciBjdXJQb3NpdGlvbiwgY3VyTGVmdCwgY3VyQ1NTVG9wLCBjdXJUb3AsIGN1ck9mZnNldCwgY3VyQ1NTTGVmdCwgY2FsY3VsYXRlUG9zaXRpb24sXG5cdFx0XHRwb3NpdGlvbiA9IGpRdWVyeS5jc3MoIGVsZW0sIFwicG9zaXRpb25cIiApLFxuXHRcdFx0Y3VyRWxlbSA9IGpRdWVyeSggZWxlbSApLFxuXHRcdFx0cHJvcHMgPSB7fTtcblxuXHRcdC8vIFNldCBwb3NpdGlvbiBmaXJzdCwgaW4tY2FzZSB0b3AvbGVmdCBhcmUgc2V0IGV2ZW4gb24gc3RhdGljIGVsZW1cblx0XHRpZiAoIHBvc2l0aW9uID09PSBcInN0YXRpY1wiICkge1xuXHRcdFx0ZWxlbS5zdHlsZS5wb3NpdGlvbiA9IFwicmVsYXRpdmVcIjtcblx0XHR9XG5cblx0XHRjdXJPZmZzZXQgPSBjdXJFbGVtLm9mZnNldCgpO1xuXHRcdGN1ckNTU1RvcCA9IGpRdWVyeS5jc3MoIGVsZW0sIFwidG9wXCIgKTtcblx0XHRjdXJDU1NMZWZ0ID0galF1ZXJ5LmNzcyggZWxlbSwgXCJsZWZ0XCIgKTtcblx0XHRjYWxjdWxhdGVQb3NpdGlvbiA9ICggcG9zaXRpb24gPT09IFwiYWJzb2x1dGVcIiB8fCBwb3NpdGlvbiA9PT0gXCJmaXhlZFwiICkgJiZcblx0XHRcdCggY3VyQ1NTVG9wICsgY3VyQ1NTTGVmdCApLmluZGV4T2YoIFwiYXV0b1wiICkgPiAtMTtcblxuXHRcdC8vIE5lZWQgdG8gYmUgYWJsZSB0byBjYWxjdWxhdGUgcG9zaXRpb24gaWYgZWl0aGVyXG5cdFx0Ly8gdG9wIG9yIGxlZnQgaXMgYXV0byBhbmQgcG9zaXRpb24gaXMgZWl0aGVyIGFic29sdXRlIG9yIGZpeGVkXG5cdFx0aWYgKCBjYWxjdWxhdGVQb3NpdGlvbiApIHtcblx0XHRcdGN1clBvc2l0aW9uID0gY3VyRWxlbS5wb3NpdGlvbigpO1xuXHRcdFx0Y3VyVG9wID0gY3VyUG9zaXRpb24udG9wO1xuXHRcdFx0Y3VyTGVmdCA9IGN1clBvc2l0aW9uLmxlZnQ7XG5cblx0XHR9IGVsc2Uge1xuXHRcdFx0Y3VyVG9wID0gcGFyc2VGbG9hdCggY3VyQ1NTVG9wICkgfHwgMDtcblx0XHRcdGN1ckxlZnQgPSBwYXJzZUZsb2F0KCBjdXJDU1NMZWZ0ICkgfHwgMDtcblx0XHR9XG5cblx0XHRpZiAoIGlzRnVuY3Rpb24oIG9wdGlvbnMgKSApIHtcblxuXHRcdFx0Ly8gVXNlIGpRdWVyeS5leHRlbmQgaGVyZSB0byBhbGxvdyBtb2RpZmljYXRpb24gb2YgY29vcmRpbmF0ZXMgYXJndW1lbnQgKGdoLTE4NDgpXG5cdFx0XHRvcHRpb25zID0gb3B0aW9ucy5jYWxsKCBlbGVtLCBpLCBqUXVlcnkuZXh0ZW5kKCB7fSwgY3VyT2Zmc2V0ICkgKTtcblx0XHR9XG5cblx0XHRpZiAoIG9wdGlvbnMudG9wICE9IG51bGwgKSB7XG5cdFx0XHRwcm9wcy50b3AgPSAoIG9wdGlvbnMudG9wIC0gY3VyT2Zmc2V0LnRvcCApICsgY3VyVG9wO1xuXHRcdH1cblx0XHRpZiAoIG9wdGlvbnMubGVmdCAhPSBudWxsICkge1xuXHRcdFx0cHJvcHMubGVmdCA9ICggb3B0aW9ucy5sZWZ0IC0gY3VyT2Zmc2V0LmxlZnQgKSArIGN1ckxlZnQ7XG5cdFx0fVxuXG5cdFx0aWYgKCBcInVzaW5nXCIgaW4gb3B0aW9ucyApIHtcblx0XHRcdG9wdGlvbnMudXNpbmcuY2FsbCggZWxlbSwgcHJvcHMgKTtcblxuXHRcdH0gZWxzZSB7XG5cdFx0XHRjdXJFbGVtLmNzcyggcHJvcHMgKTtcblx0XHR9XG5cdH1cbn07XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblxuXHQvLyBvZmZzZXQoKSByZWxhdGVzIGFuIGVsZW1lbnQncyBib3JkZXIgYm94IHRvIHRoZSBkb2N1bWVudCBvcmlnaW5cblx0b2Zmc2V0OiBmdW5jdGlvbiggb3B0aW9ucyApIHtcblxuXHRcdC8vIFByZXNlcnZlIGNoYWluaW5nIGZvciBzZXR0ZXJcblx0XHRpZiAoIGFyZ3VtZW50cy5sZW5ndGggKSB7XG5cdFx0XHRyZXR1cm4gb3B0aW9ucyA9PT0gdW5kZWZpbmVkID9cblx0XHRcdFx0dGhpcyA6XG5cdFx0XHRcdHRoaXMuZWFjaCggZnVuY3Rpb24oIGkgKSB7XG5cdFx0XHRcdFx0alF1ZXJ5Lm9mZnNldC5zZXRPZmZzZXQoIHRoaXMsIG9wdGlvbnMsIGkgKTtcblx0XHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdHZhciByZWN0LCB3aW4sXG5cdFx0XHRlbGVtID0gdGhpc1sgMCBdO1xuXG5cdFx0aWYgKCAhZWxlbSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBSZXR1cm4gemVyb3MgZm9yIGRpc2Nvbm5lY3RlZCBhbmQgaGlkZGVuIChkaXNwbGF5OiBub25lKSBlbGVtZW50cyAoZ2gtMjMxMClcblx0XHQvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHlcblx0XHQvLyBSdW5uaW5nIGdldEJvdW5kaW5nQ2xpZW50UmVjdCBvbiBhXG5cdFx0Ly8gZGlzY29ubmVjdGVkIG5vZGUgaW4gSUUgdGhyb3dzIGFuIGVycm9yXG5cdFx0aWYgKCAhZWxlbS5nZXRDbGllbnRSZWN0cygpLmxlbmd0aCApIHtcblx0XHRcdHJldHVybiB7IHRvcDogMCwgbGVmdDogMCB9O1xuXHRcdH1cblxuXHRcdC8vIEdldCBkb2N1bWVudC1yZWxhdGl2ZSBwb3NpdGlvbiBieSBhZGRpbmcgdmlld3BvcnQgc2Nyb2xsIHRvIHZpZXdwb3J0LXJlbGF0aXZlIGdCQ1Jcblx0XHRyZWN0ID0gZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcblx0XHR3aW4gPSBlbGVtLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXc7XG5cdFx0cmV0dXJuIHtcblx0XHRcdHRvcDogcmVjdC50b3AgKyB3aW4ucGFnZVlPZmZzZXQsXG5cdFx0XHRsZWZ0OiByZWN0LmxlZnQgKyB3aW4ucGFnZVhPZmZzZXRcblx0XHR9O1xuXHR9LFxuXG5cdC8vIHBvc2l0aW9uKCkgcmVsYXRlcyBhbiBlbGVtZW50J3MgbWFyZ2luIGJveCB0byBpdHMgb2Zmc2V0IHBhcmVudCdzIHBhZGRpbmcgYm94XG5cdC8vIFRoaXMgY29ycmVzcG9uZHMgdG8gdGhlIGJlaGF2aW9yIG9mIENTUyBhYnNvbHV0ZSBwb3NpdGlvbmluZ1xuXHRwb3NpdGlvbjogZnVuY3Rpb24oKSB7XG5cdFx0aWYgKCAhdGhpc1sgMCBdICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdHZhciBvZmZzZXRQYXJlbnQsIG9mZnNldCwgZG9jLFxuXHRcdFx0ZWxlbSA9IHRoaXNbIDAgXSxcblx0XHRcdHBhcmVudE9mZnNldCA9IHsgdG9wOiAwLCBsZWZ0OiAwIH07XG5cblx0XHQvLyBwb3NpdGlvbjpmaXhlZCBlbGVtZW50cyBhcmUgb2Zmc2V0IGZyb20gdGhlIHZpZXdwb3J0LCB3aGljaCBpdHNlbGYgYWx3YXlzIGhhcyB6ZXJvIG9mZnNldFxuXHRcdGlmICggalF1ZXJ5LmNzcyggZWxlbSwgXCJwb3NpdGlvblwiICkgPT09IFwiZml4ZWRcIiApIHtcblxuXHRcdFx0Ly8gQXNzdW1lIHBvc2l0aW9uOmZpeGVkIGltcGxpZXMgYXZhaWxhYmlsaXR5IG9mIGdldEJvdW5kaW5nQ2xpZW50UmVjdFxuXHRcdFx0b2Zmc2V0ID0gZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcblxuXHRcdH0gZWxzZSB7XG5cdFx0XHRvZmZzZXQgPSB0aGlzLm9mZnNldCgpO1xuXG5cdFx0XHQvLyBBY2NvdW50IGZvciB0aGUgKnJlYWwqIG9mZnNldCBwYXJlbnQsIHdoaWNoIGNhbiBiZSB0aGUgZG9jdW1lbnQgb3IgaXRzIHJvb3QgZWxlbWVudFxuXHRcdFx0Ly8gd2hlbiBhIHN0YXRpY2FsbHkgcG9zaXRpb25lZCBlbGVtZW50IGlzIGlkZW50aWZpZWRcblx0XHRcdGRvYyA9IGVsZW0ub3duZXJEb2N1bWVudDtcblx0XHRcdG9mZnNldFBhcmVudCA9IGVsZW0ub2Zmc2V0UGFyZW50IHx8IGRvYy5kb2N1bWVudEVsZW1lbnQ7XG5cdFx0XHR3aGlsZSAoIG9mZnNldFBhcmVudCAmJlxuXHRcdFx0XHQoIG9mZnNldFBhcmVudCA9PT0gZG9jLmJvZHkgfHwgb2Zmc2V0UGFyZW50ID09PSBkb2MuZG9jdW1lbnRFbGVtZW50ICkgJiZcblx0XHRcdFx0alF1ZXJ5LmNzcyggb2Zmc2V0UGFyZW50LCBcInBvc2l0aW9uXCIgKSA9PT0gXCJzdGF0aWNcIiApIHtcblxuXHRcdFx0XHRvZmZzZXRQYXJlbnQgPSBvZmZzZXRQYXJlbnQucGFyZW50Tm9kZTtcblx0XHRcdH1cblx0XHRcdGlmICggb2Zmc2V0UGFyZW50ICYmIG9mZnNldFBhcmVudCAhPT0gZWxlbSAmJiBvZmZzZXRQYXJlbnQubm9kZVR5cGUgPT09IDEgKSB7XG5cblx0XHRcdFx0Ly8gSW5jb3Jwb3JhdGUgYm9yZGVycyBpbnRvIGl0cyBvZmZzZXQsIHNpbmNlIHRoZXkgYXJlIG91dHNpZGUgaXRzIGNvbnRlbnQgb3JpZ2luXG5cdFx0XHRcdHBhcmVudE9mZnNldCA9IGpRdWVyeSggb2Zmc2V0UGFyZW50ICkub2Zmc2V0KCk7XG5cdFx0XHRcdHBhcmVudE9mZnNldC50b3AgKz0galF1ZXJ5LmNzcyggb2Zmc2V0UGFyZW50LCBcImJvcmRlclRvcFdpZHRoXCIsIHRydWUgKTtcblx0XHRcdFx0cGFyZW50T2Zmc2V0LmxlZnQgKz0galF1ZXJ5LmNzcyggb2Zmc2V0UGFyZW50LCBcImJvcmRlckxlZnRXaWR0aFwiLCB0cnVlICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gU3VidHJhY3QgcGFyZW50IG9mZnNldHMgYW5kIGVsZW1lbnQgbWFyZ2luc1xuXHRcdHJldHVybiB7XG5cdFx0XHR0b3A6IG9mZnNldC50b3AgLSBwYXJlbnRPZmZzZXQudG9wIC0galF1ZXJ5LmNzcyggZWxlbSwgXCJtYXJnaW5Ub3BcIiwgdHJ1ZSApLFxuXHRcdFx0bGVmdDogb2Zmc2V0LmxlZnQgLSBwYXJlbnRPZmZzZXQubGVmdCAtIGpRdWVyeS5jc3MoIGVsZW0sIFwibWFyZ2luTGVmdFwiLCB0cnVlIClcblx0XHR9O1xuXHR9LFxuXG5cdC8vIFRoaXMgbWV0aG9kIHdpbGwgcmV0dXJuIGRvY3VtZW50RWxlbWVudCBpbiB0aGUgZm9sbG93aW5nIGNhc2VzOlxuXHQvLyAxKSBGb3IgdGhlIGVsZW1lbnQgaW5zaWRlIHRoZSBpZnJhbWUgd2l0aG91dCBvZmZzZXRQYXJlbnQsIHRoaXMgbWV0aG9kIHdpbGwgcmV0dXJuXG5cdC8vICAgIGRvY3VtZW50RWxlbWVudCBvZiB0aGUgcGFyZW50IHdpbmRvd1xuXHQvLyAyKSBGb3IgdGhlIGhpZGRlbiBvciBkZXRhY2hlZCBlbGVtZW50XG5cdC8vIDMpIEZvciBib2R5IG9yIGh0bWwgZWxlbWVudCwgaS5lLiBpbiBjYXNlIG9mIHRoZSBodG1sIG5vZGUgLSBpdCB3aWxsIHJldHVybiBpdHNlbGZcblx0Ly9cblx0Ly8gYnV0IHRob3NlIGV4Y2VwdGlvbnMgd2VyZSBuZXZlciBwcmVzZW50ZWQgYXMgYSByZWFsIGxpZmUgdXNlLWNhc2VzXG5cdC8vIGFuZCBtaWdodCBiZSBjb25zaWRlcmVkIGFzIG1vcmUgcHJlZmVyYWJsZSByZXN1bHRzLlxuXHQvL1xuXHQvLyBUaGlzIGxvZ2ljLCBob3dldmVyLCBpcyBub3QgZ3VhcmFudGVlZCBhbmQgY2FuIGNoYW5nZSBhdCBhbnkgcG9pbnQgaW4gdGhlIGZ1dHVyZVxuXHRvZmZzZXRQYXJlbnQ6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLm1hcCggZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgb2Zmc2V0UGFyZW50ID0gdGhpcy5vZmZzZXRQYXJlbnQ7XG5cblx0XHRcdHdoaWxlICggb2Zmc2V0UGFyZW50ICYmIGpRdWVyeS5jc3MoIG9mZnNldFBhcmVudCwgXCJwb3NpdGlvblwiICkgPT09IFwic3RhdGljXCIgKSB7XG5cdFx0XHRcdG9mZnNldFBhcmVudCA9IG9mZnNldFBhcmVudC5vZmZzZXRQYXJlbnQ7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBvZmZzZXRQYXJlbnQgfHwgZG9jdW1lbnRFbGVtZW50O1xuXHRcdH0gKTtcblx0fVxufSApO1xuXG4vLyBDcmVhdGUgc2Nyb2xsTGVmdCBhbmQgc2Nyb2xsVG9wIG1ldGhvZHNcbmpRdWVyeS5lYWNoKCB7IHNjcm9sbExlZnQ6IFwicGFnZVhPZmZzZXRcIiwgc2Nyb2xsVG9wOiBcInBhZ2VZT2Zmc2V0XCIgfSwgZnVuY3Rpb24oIG1ldGhvZCwgcHJvcCApIHtcblx0dmFyIHRvcCA9IFwicGFnZVlPZmZzZXRcIiA9PT0gcHJvcDtcblxuXHRqUXVlcnkuZm5bIG1ldGhvZCBdID0gZnVuY3Rpb24oIHZhbCApIHtcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggZWxlbSwgbWV0aG9kLCB2YWwgKSB7XG5cblx0XHRcdC8vIENvYWxlc2NlIGRvY3VtZW50cyBhbmQgd2luZG93c1xuXHRcdFx0dmFyIHdpbjtcblx0XHRcdGlmICggaXNXaW5kb3coIGVsZW0gKSApIHtcblx0XHRcdFx0d2luID0gZWxlbTtcblx0XHRcdH0gZWxzZSBpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdHdpbiA9IGVsZW0uZGVmYXVsdFZpZXc7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggdmFsID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdHJldHVybiB3aW4gPyB3aW5bIHByb3AgXSA6IGVsZW1bIG1ldGhvZCBdO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIHdpbiApIHtcblx0XHRcdFx0d2luLnNjcm9sbFRvKFxuXHRcdFx0XHRcdCF0b3AgPyB2YWwgOiB3aW4ucGFnZVhPZmZzZXQsXG5cdFx0XHRcdFx0dG9wID8gdmFsIDogd2luLnBhZ2VZT2Zmc2V0XG5cdFx0XHRcdCk7XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGVsZW1bIG1ldGhvZCBdID0gdmFsO1xuXHRcdFx0fVxuXHRcdH0sIG1ldGhvZCwgdmFsLCBhcmd1bWVudHMubGVuZ3RoICk7XG5cdH07XG59ICk7XG5cbi8vIFN1cHBvcnQ6IFNhZmFyaSA8PTcgLSA5LjEsIENocm9tZSA8PTM3IC0gNDlcbi8vIEFkZCB0aGUgdG9wL2xlZnQgY3NzSG9va3MgdXNpbmcgalF1ZXJ5LmZuLnBvc2l0aW9uXG4vLyBXZWJraXQgYnVnOiBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MjkwODRcbi8vIEJsaW5rIGJ1ZzogaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9NTg5MzQ3XG4vLyBnZXRDb21wdXRlZFN0eWxlIHJldHVybnMgcGVyY2VudCB3aGVuIHNwZWNpZmllZCBmb3IgdG9wL2xlZnQvYm90dG9tL3JpZ2h0O1xuLy8gcmF0aGVyIHRoYW4gbWFrZSB0aGUgY3NzIG1vZHVsZSBkZXBlbmQgb24gdGhlIG9mZnNldCBtb2R1bGUsIGp1c3QgY2hlY2sgZm9yIGl0IGhlcmVcbmpRdWVyeS5lYWNoKCBbIFwidG9wXCIsIFwibGVmdFwiIF0sIGZ1bmN0aW9uKCBpLCBwcm9wICkge1xuXHRqUXVlcnkuY3NzSG9va3NbIHByb3AgXSA9IGFkZEdldEhvb2tJZiggc3VwcG9ydC5waXhlbFBvc2l0aW9uLFxuXHRcdGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCApIHtcblx0XHRcdGlmICggY29tcHV0ZWQgKSB7XG5cdFx0XHRcdGNvbXB1dGVkID0gY3VyQ1NTKCBlbGVtLCBwcm9wICk7XG5cblx0XHRcdFx0Ly8gSWYgY3VyQ1NTIHJldHVybnMgcGVyY2VudGFnZSwgZmFsbGJhY2sgdG8gb2Zmc2V0XG5cdFx0XHRcdHJldHVybiBybnVtbm9ucHgudGVzdCggY29tcHV0ZWQgKSA/XG5cdFx0XHRcdFx0alF1ZXJ5KCBlbGVtICkucG9zaXRpb24oKVsgcHJvcCBdICsgXCJweFwiIDpcblx0XHRcdFx0XHRjb21wdXRlZDtcblx0XHRcdH1cblx0XHR9XG5cdCk7XG59ICk7XG5cblxuLy8gQ3JlYXRlIGlubmVySGVpZ2h0LCBpbm5lcldpZHRoLCBoZWlnaHQsIHdpZHRoLCBvdXRlckhlaWdodCBhbmQgb3V0ZXJXaWR0aCBtZXRob2RzXG5qUXVlcnkuZWFjaCggeyBIZWlnaHQ6IFwiaGVpZ2h0XCIsIFdpZHRoOiBcIndpZHRoXCIgfSwgZnVuY3Rpb24oIG5hbWUsIHR5cGUgKSB7XG5cdGpRdWVyeS5lYWNoKCB7IHBhZGRpbmc6IFwiaW5uZXJcIiArIG5hbWUsIGNvbnRlbnQ6IHR5cGUsIFwiXCI6IFwib3V0ZXJcIiArIG5hbWUgfSxcblx0XHRmdW5jdGlvbiggZGVmYXVsdEV4dHJhLCBmdW5jTmFtZSApIHtcblxuXHRcdC8vIE1hcmdpbiBpcyBvbmx5IGZvciBvdXRlckhlaWdodCwgb3V0ZXJXaWR0aFxuXHRcdGpRdWVyeS5mblsgZnVuY05hbWUgXSA9IGZ1bmN0aW9uKCBtYXJnaW4sIHZhbHVlICkge1xuXHRcdFx0dmFyIGNoYWluYWJsZSA9IGFyZ3VtZW50cy5sZW5ndGggJiYgKCBkZWZhdWx0RXh0cmEgfHwgdHlwZW9mIG1hcmdpbiAhPT0gXCJib29sZWFuXCIgKSxcblx0XHRcdFx0ZXh0cmEgPSBkZWZhdWx0RXh0cmEgfHwgKCBtYXJnaW4gPT09IHRydWUgfHwgdmFsdWUgPT09IHRydWUgPyBcIm1hcmdpblwiIDogXCJib3JkZXJcIiApO1xuXG5cdFx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggZWxlbSwgdHlwZSwgdmFsdWUgKSB7XG5cdFx0XHRcdHZhciBkb2M7XG5cblx0XHRcdFx0aWYgKCBpc1dpbmRvdyggZWxlbSApICkge1xuXG5cdFx0XHRcdFx0Ly8gJCggd2luZG93ICkub3V0ZXJXaWR0aC9IZWlnaHQgcmV0dXJuIHcvaCBpbmNsdWRpbmcgc2Nyb2xsYmFycyAoZ2gtMTcyOSlcblx0XHRcdFx0XHRyZXR1cm4gZnVuY05hbWUuaW5kZXhPZiggXCJvdXRlclwiICkgPT09IDAgP1xuXHRcdFx0XHRcdFx0ZWxlbVsgXCJpbm5lclwiICsgbmFtZSBdIDpcblx0XHRcdFx0XHRcdGVsZW0uZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50WyBcImNsaWVudFwiICsgbmFtZSBdO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gR2V0IGRvY3VtZW50IHdpZHRoIG9yIGhlaWdodFxuXHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdFx0ZG9jID0gZWxlbS5kb2N1bWVudEVsZW1lbnQ7XG5cblx0XHRcdFx0XHQvLyBFaXRoZXIgc2Nyb2xsW1dpZHRoL0hlaWdodF0gb3Igb2Zmc2V0W1dpZHRoL0hlaWdodF0gb3IgY2xpZW50W1dpZHRoL0hlaWdodF0sXG5cdFx0XHRcdFx0Ly8gd2hpY2hldmVyIGlzIGdyZWF0ZXN0XG5cdFx0XHRcdFx0cmV0dXJuIE1hdGgubWF4KFxuXHRcdFx0XHRcdFx0ZWxlbS5ib2R5WyBcInNjcm9sbFwiICsgbmFtZSBdLCBkb2NbIFwic2Nyb2xsXCIgKyBuYW1lIF0sXG5cdFx0XHRcdFx0XHRlbGVtLmJvZHlbIFwib2Zmc2V0XCIgKyBuYW1lIF0sIGRvY1sgXCJvZmZzZXRcIiArIG5hbWUgXSxcblx0XHRcdFx0XHRcdGRvY1sgXCJjbGllbnRcIiArIG5hbWUgXVxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gdmFsdWUgPT09IHVuZGVmaW5lZCA/XG5cblx0XHRcdFx0XHQvLyBHZXQgd2lkdGggb3IgaGVpZ2h0IG9uIHRoZSBlbGVtZW50LCByZXF1ZXN0aW5nIGJ1dCBub3QgZm9yY2luZyBwYXJzZUZsb2F0XG5cdFx0XHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgdHlwZSwgZXh0cmEgKSA6XG5cblx0XHRcdFx0XHQvLyBTZXQgd2lkdGggb3IgaGVpZ2h0IG9uIHRoZSBlbGVtZW50XG5cdFx0XHRcdFx0alF1ZXJ5LnN0eWxlKCBlbGVtLCB0eXBlLCB2YWx1ZSwgZXh0cmEgKTtcblx0XHRcdH0sIHR5cGUsIGNoYWluYWJsZSA/IG1hcmdpbiA6IHVuZGVmaW5lZCwgY2hhaW5hYmxlICk7XG5cdFx0fTtcblx0fSApO1xufSApO1xuXG5cbmpRdWVyeS5lYWNoKCAoIFwiYmx1ciBmb2N1cyBmb2N1c2luIGZvY3Vzb3V0IHJlc2l6ZSBzY3JvbGwgY2xpY2sgZGJsY2xpY2sgXCIgK1xuXHRcIm1vdXNlZG93biBtb3VzZXVwIG1vdXNlbW92ZSBtb3VzZW92ZXIgbW91c2VvdXQgbW91c2VlbnRlciBtb3VzZWxlYXZlIFwiICtcblx0XCJjaGFuZ2Ugc2VsZWN0IHN1Ym1pdCBrZXlkb3duIGtleXByZXNzIGtleXVwIGNvbnRleHRtZW51XCIgKS5zcGxpdCggXCIgXCIgKSxcblx0ZnVuY3Rpb24oIGksIG5hbWUgKSB7XG5cblx0Ly8gSGFuZGxlIGV2ZW50IGJpbmRpbmdcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggZGF0YSwgZm4gKSB7XG5cdFx0cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPiAwID9cblx0XHRcdHRoaXMub24oIG5hbWUsIG51bGwsIGRhdGEsIGZuICkgOlxuXHRcdFx0dGhpcy50cmlnZ2VyKCBuYW1lICk7XG5cdH07XG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0aG92ZXI6IGZ1bmN0aW9uKCBmbk92ZXIsIGZuT3V0ICkge1xuXHRcdHJldHVybiB0aGlzLm1vdXNlZW50ZXIoIGZuT3ZlciApLm1vdXNlbGVhdmUoIGZuT3V0IHx8IGZuT3ZlciApO1xuXHR9XG59ICk7XG5cblxuXG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblxuXHRiaW5kOiBmdW5jdGlvbiggdHlwZXMsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9uKCB0eXBlcywgbnVsbCwgZGF0YSwgZm4gKTtcblx0fSxcblx0dW5iaW5kOiBmdW5jdGlvbiggdHlwZXMsIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9mZiggdHlwZXMsIG51bGwsIGZuICk7XG5cdH0sXG5cblx0ZGVsZWdhdGU6IGZ1bmN0aW9uKCBzZWxlY3RvciwgdHlwZXMsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICk7XG5cdH0sXG5cdHVuZGVsZWdhdGU6IGZ1bmN0aW9uKCBzZWxlY3RvciwgdHlwZXMsIGZuICkge1xuXG5cdFx0Ly8gKCBuYW1lc3BhY2UgKSBvciAoIHNlbGVjdG9yLCB0eXBlcyBbLCBmbl0gKVxuXHRcdHJldHVybiBhcmd1bWVudHMubGVuZ3RoID09PSAxID9cblx0XHRcdHRoaXMub2ZmKCBzZWxlY3RvciwgXCIqKlwiICkgOlxuXHRcdFx0dGhpcy5vZmYoIHR5cGVzLCBzZWxlY3RvciB8fCBcIioqXCIsIGZuICk7XG5cdH1cbn0gKTtcblxuLy8gQmluZCBhIGZ1bmN0aW9uIHRvIGEgY29udGV4dCwgb3B0aW9uYWxseSBwYXJ0aWFsbHkgYXBwbHlpbmcgYW55XG4vLyBhcmd1bWVudHMuXG4vLyBqUXVlcnkucHJveHkgaXMgZGVwcmVjYXRlZCB0byBwcm9tb3RlIHN0YW5kYXJkcyAoc3BlY2lmaWNhbGx5IEZ1bmN0aW9uI2JpbmQpXG4vLyBIb3dldmVyLCBpdCBpcyBub3Qgc2xhdGVkIGZvciByZW1vdmFsIGFueSB0aW1lIHNvb25cbmpRdWVyeS5wcm94eSA9IGZ1bmN0aW9uKCBmbiwgY29udGV4dCApIHtcblx0dmFyIHRtcCwgYXJncywgcHJveHk7XG5cblx0aWYgKCB0eXBlb2YgY29udGV4dCA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHR0bXAgPSBmblsgY29udGV4dCBdO1xuXHRcdGNvbnRleHQgPSBmbjtcblx0XHRmbiA9IHRtcDtcblx0fVxuXG5cdC8vIFF1aWNrIGNoZWNrIHRvIGRldGVybWluZSBpZiB0YXJnZXQgaXMgY2FsbGFibGUsIGluIHRoZSBzcGVjXG5cdC8vIHRoaXMgdGhyb3dzIGEgVHlwZUVycm9yLCBidXQgd2Ugd2lsbCBqdXN0IHJldHVybiB1bmRlZmluZWQuXG5cdGlmICggIWlzRnVuY3Rpb24oIGZuICkgKSB7XG5cdFx0cmV0dXJuIHVuZGVmaW5lZDtcblx0fVxuXG5cdC8vIFNpbXVsYXRlZCBiaW5kXG5cdGFyZ3MgPSBzbGljZS5jYWxsKCBhcmd1bWVudHMsIDIgKTtcblx0cHJveHkgPSBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZm4uYXBwbHkoIGNvbnRleHQgfHwgdGhpcywgYXJncy5jb25jYXQoIHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApICkgKTtcblx0fTtcblxuXHQvLyBTZXQgdGhlIGd1aWQgb2YgdW5pcXVlIGhhbmRsZXIgdG8gdGhlIHNhbWUgb2Ygb3JpZ2luYWwgaGFuZGxlciwgc28gaXQgY2FuIGJlIHJlbW92ZWRcblx0cHJveHkuZ3VpZCA9IGZuLmd1aWQgPSBmbi5ndWlkIHx8IGpRdWVyeS5ndWlkKys7XG5cblx0cmV0dXJuIHByb3h5O1xufTtcblxualF1ZXJ5LmhvbGRSZWFkeSA9IGZ1bmN0aW9uKCBob2xkICkge1xuXHRpZiAoIGhvbGQgKSB7XG5cdFx0alF1ZXJ5LnJlYWR5V2FpdCsrO1xuXHR9IGVsc2Uge1xuXHRcdGpRdWVyeS5yZWFkeSggdHJ1ZSApO1xuXHR9XG59O1xualF1ZXJ5LmlzQXJyYXkgPSBBcnJheS5pc0FycmF5O1xualF1ZXJ5LnBhcnNlSlNPTiA9IEpTT04ucGFyc2U7XG5qUXVlcnkubm9kZU5hbWUgPSBub2RlTmFtZTtcbmpRdWVyeS5pc0Z1bmN0aW9uID0gaXNGdW5jdGlvbjtcbmpRdWVyeS5pc1dpbmRvdyA9IGlzV2luZG93O1xualF1ZXJ5LmNhbWVsQ2FzZSA9IGNhbWVsQ2FzZTtcbmpRdWVyeS50eXBlID0gdG9UeXBlO1xuXG5qUXVlcnkubm93ID0gRGF0ZS5ub3c7XG5cbmpRdWVyeS5pc051bWVyaWMgPSBmdW5jdGlvbiggb2JqICkge1xuXG5cdC8vIEFzIG9mIGpRdWVyeSAzLjAsIGlzTnVtZXJpYyBpcyBsaW1pdGVkIHRvXG5cdC8vIHN0cmluZ3MgYW5kIG51bWJlcnMgKHByaW1pdGl2ZXMgb3Igb2JqZWN0cylcblx0Ly8gdGhhdCBjYW4gYmUgY29lcmNlZCB0byBmaW5pdGUgbnVtYmVycyAoZ2gtMjY2Milcblx0dmFyIHR5cGUgPSBqUXVlcnkudHlwZSggb2JqICk7XG5cdHJldHVybiAoIHR5cGUgPT09IFwibnVtYmVyXCIgfHwgdHlwZSA9PT0gXCJzdHJpbmdcIiApICYmXG5cblx0XHQvLyBwYXJzZUZsb2F0IE5hTnMgbnVtZXJpYy1jYXN0IGZhbHNlIHBvc2l0aXZlcyAoXCJcIilcblx0XHQvLyAuLi5idXQgbWlzaW50ZXJwcmV0cyBsZWFkaW5nLW51bWJlciBzdHJpbmdzLCBwYXJ0aWN1bGFybHkgaGV4IGxpdGVyYWxzIChcIjB4Li4uXCIpXG5cdFx0Ly8gc3VidHJhY3Rpb24gZm9yY2VzIGluZmluaXRpZXMgdG8gTmFOXG5cdFx0IWlzTmFOKCBvYmogLSBwYXJzZUZsb2F0KCBvYmogKSApO1xufTtcblxuXG5cblxuLy8gUmVnaXN0ZXIgYXMgYSBuYW1lZCBBTUQgbW9kdWxlLCBzaW5jZSBqUXVlcnkgY2FuIGJlIGNvbmNhdGVuYXRlZCB3aXRoIG90aGVyXG4vLyBmaWxlcyB0aGF0IG1heSB1c2UgZGVmaW5lLCBidXQgbm90IHZpYSBhIHByb3BlciBjb25jYXRlbmF0aW9uIHNjcmlwdCB0aGF0XG4vLyB1bmRlcnN0YW5kcyBhbm9ueW1vdXMgQU1EIG1vZHVsZXMuIEEgbmFtZWQgQU1EIGlzIHNhZmVzdCBhbmQgbW9zdCByb2J1c3Rcbi8vIHdheSB0byByZWdpc3Rlci4gTG93ZXJjYXNlIGpxdWVyeSBpcyB1c2VkIGJlY2F1c2UgQU1EIG1vZHVsZSBuYW1lcyBhcmVcbi8vIGRlcml2ZWQgZnJvbSBmaWxlIG5hbWVzLCBhbmQgalF1ZXJ5IGlzIG5vcm1hbGx5IGRlbGl2ZXJlZCBpbiBhIGxvd2VyY2FzZVxuLy8gZmlsZSBuYW1lLiBEbyB0aGlzIGFmdGVyIGNyZWF0aW5nIHRoZSBnbG9iYWwgc28gdGhhdCBpZiBhbiBBTUQgbW9kdWxlIHdhbnRzXG4vLyB0byBjYWxsIG5vQ29uZmxpY3QgdG8gaGlkZSB0aGlzIHZlcnNpb24gb2YgalF1ZXJ5LCBpdCB3aWxsIHdvcmsuXG5cbi8vIE5vdGUgdGhhdCBmb3IgbWF4aW11bSBwb3J0YWJpbGl0eSwgbGlicmFyaWVzIHRoYXQgYXJlIG5vdCBqUXVlcnkgc2hvdWxkXG4vLyBkZWNsYXJlIHRoZW1zZWx2ZXMgYXMgYW5vbnltb3VzIG1vZHVsZXMsIGFuZCBhdm9pZCBzZXR0aW5nIGEgZ2xvYmFsIGlmIGFuXG4vLyBBTUQgbG9hZGVyIGlzIHByZXNlbnQuIGpRdWVyeSBpcyBhIHNwZWNpYWwgY2FzZS4gRm9yIG1vcmUgaW5mb3JtYXRpb24sIHNlZVxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2pyYnVya2UvcmVxdWlyZWpzL3dpa2kvVXBkYXRpbmctZXhpc3RpbmctbGlicmFyaWVzI3dpa2ktYW5vblxuXG5pZiAoIHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kICkge1xuXHRkZWZpbmUoIFwianF1ZXJ5XCIsIFtdLCBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4galF1ZXJ5O1xuXHR9ICk7XG59XG5cblxuXG5cbnZhclxuXG5cdC8vIE1hcCBvdmVyIGpRdWVyeSBpbiBjYXNlIG9mIG92ZXJ3cml0ZVxuXHRfalF1ZXJ5ID0gd2luZG93LmpRdWVyeSxcblxuXHQvLyBNYXAgb3ZlciB0aGUgJCBpbiBjYXNlIG9mIG92ZXJ3cml0ZVxuXHRfJCA9IHdpbmRvdy4kO1xuXG5qUXVlcnkubm9Db25mbGljdCA9IGZ1bmN0aW9uKCBkZWVwICkge1xuXHRpZiAoIHdpbmRvdy4kID09PSBqUXVlcnkgKSB7XG5cdFx0d2luZG93LiQgPSBfJDtcblx0fVxuXG5cdGlmICggZGVlcCAmJiB3aW5kb3cualF1ZXJ5ID09PSBqUXVlcnkgKSB7XG5cdFx0d2luZG93LmpRdWVyeSA9IF9qUXVlcnk7XG5cdH1cblxuXHRyZXR1cm4galF1ZXJ5O1xufTtcblxuLy8gRXhwb3NlIGpRdWVyeSBhbmQgJCBpZGVudGlmaWVycywgZXZlbiBpbiBBTURcbi8vICgjNzEwMiNjb21tZW50OjEwLCBodHRwczovL2dpdGh1Yi5jb20vanF1ZXJ5L2pxdWVyeS9wdWxsLzU1Nylcbi8vIGFuZCBDb21tb25KUyBmb3IgYnJvd3NlciBlbXVsYXRvcnMgKCMxMzU2NilcbmlmICggIW5vR2xvYmFsICkge1xuXHR3aW5kb3cualF1ZXJ5ID0gd2luZG93LiQgPSBqUXVlcnk7XG59XG5cblxuXG5cbnJldHVybiBqUXVlcnk7XG59ICk7XG4iLCIvKiFcbiAgKiBCb290c3RyYXAgdjQuNC4xIChodHRwczovL2dldGJvb3RzdHJhcC5jb20vKVxuICAqIENvcHlyaWdodCAyMDExLTIwMTkgVGhlIEJvb3RzdHJhcCBBdXRob3JzIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvZ3JhcGhzL2NvbnRyaWJ1dG9ycylcbiAgKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21hc3Rlci9MSUNFTlNFKVxuICAqL1xuIChmdW5jdGlvbiAoZ2xvYmFsLCBmYWN0b3J5KSB7XG4gIHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyA/IGZhY3RvcnkoZXhwb3J0cywgcmVxdWlyZSgnanF1ZXJ5JykpIDpcbiAgdHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kID8gZGVmaW5lKFsnZXhwb3J0cycsICdqcXVlcnknXSwgZmFjdG9yeSkgOlxuICAoZ2xvYmFsID0gZ2xvYmFsIHx8IHNlbGYsIGZhY3RvcnkoZ2xvYmFsLmJvb3RzdHJhcCA9IHt9LCBnbG9iYWwualF1ZXJ5KSk7XG59KHRoaXMsIChmdW5jdGlvbiAoZXhwb3J0cywgJCkgeyAndXNlIHN0cmljdCc7XG5cbiAgJCA9ICQgJiYgJC5oYXNPd25Qcm9wZXJ0eSgnZGVmYXVsdCcpID8gJFsnZGVmYXVsdCddIDogJDtcblxuICBmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTtcbiAgICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTtcbiAgICAgIGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTtcbiAgICAgIGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7XG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICAgIGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpO1xuICAgIGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTtcbiAgICByZXR1cm4gQ29uc3RydWN0b3I7XG4gIH1cblxuICBmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7XG4gICAgaWYgKGtleSBpbiBvYmopIHtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwge1xuICAgICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgd3JpdGFibGU6IHRydWVcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBvYmpba2V5XSA9IHZhbHVlO1xuICAgIH1cblxuICAgIHJldHVybiBvYmo7XG4gIH1cblxuICBmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHtcbiAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7XG5cbiAgICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7XG4gICAgICBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7XG4gICAgICAgIHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlO1xuICAgICAgfSk7XG4gICAgICBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGtleXM7XG4gIH1cblxuICBmdW5jdGlvbiBfb2JqZWN0U3ByZWFkMih0YXJnZXQpIHtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307XG5cbiAgICAgIGlmIChpICUgMikge1xuICAgICAgICBvd25LZXlzKE9iamVjdChzb3VyY2UpLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfVxuXG4gIGZ1bmN0aW9uIF9pbmhlcml0c0xvb3NlKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gICAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7XG4gICAgc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gc3ViQ2xhc3M7XG4gICAgc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzcztcbiAgfVxuXG4gIC8qKlxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKiBCb290c3RyYXAgKHY0LjQuMSk6IHV0aWwuanNcbiAgICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYXN0ZXIvTElDRU5TRSlcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICovXG4gIC8qKlxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICogUHJpdmF0ZSBUcmFuc2l0aW9uRW5kIEhlbHBlcnNcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqL1xuXG4gIHZhciBUUkFOU0lUSU9OX0VORCA9ICd0cmFuc2l0aW9uZW5kJztcbiAgdmFyIE1BWF9VSUQgPSAxMDAwMDAwO1xuICB2YXIgTUlMTElTRUNPTkRTX01VTFRJUExJRVIgPSAxMDAwOyAvLyBTaG91dG91dCBBbmd1c0Nyb2xsIChodHRwczovL2dvby5nbC9weHdRR3ApXG5cbiAgZnVuY3Rpb24gdG9UeXBlKG9iaikge1xuICAgIHJldHVybiB7fS50b1N0cmluZy5jYWxsKG9iaikubWF0Y2goL1xccyhbYS16XSspL2kpWzFdLnRvTG93ZXJDYXNlKCk7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRTcGVjaWFsVHJhbnNpdGlvbkVuZEV2ZW50KCkge1xuICAgIHJldHVybiB7XG4gICAgICBiaW5kVHlwZTogVFJBTlNJVElPTl9FTkQsXG4gICAgICBkZWxlZ2F0ZVR5cGU6IFRSQU5TSVRJT05fRU5ELFxuICAgICAgaGFuZGxlOiBmdW5jdGlvbiBoYW5kbGUoZXZlbnQpIHtcbiAgICAgICAgaWYgKCQoZXZlbnQudGFyZ2V0KS5pcyh0aGlzKSkge1xuICAgICAgICAgIHJldHVybiBldmVudC5oYW5kbGVPYmouaGFuZGxlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIHByZWZlci1yZXN0LXBhcmFtc1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bmRlZmluZWRcbiAgICAgIH1cbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gdHJhbnNpdGlvbkVuZEVtdWxhdG9yKGR1cmF0aW9uKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHZhciBjYWxsZWQgPSBmYWxzZTtcbiAgICAkKHRoaXMpLm9uZShVdGlsLlRSQU5TSVRJT05fRU5ELCBmdW5jdGlvbiAoKSB7XG4gICAgICBjYWxsZWQgPSB0cnVlO1xuICAgIH0pO1xuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKCFjYWxsZWQpIHtcbiAgICAgICAgVXRpbC50cmlnZ2VyVHJhbnNpdGlvbkVuZChfdGhpcyk7XG4gICAgICB9XG4gICAgfSwgZHVyYXRpb24pO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgZnVuY3Rpb24gc2V0VHJhbnNpdGlvbkVuZFN1cHBvcnQoKSB7XG4gICAgJC5mbi5lbXVsYXRlVHJhbnNpdGlvbkVuZCA9IHRyYW5zaXRpb25FbmRFbXVsYXRvcjtcbiAgICAkLmV2ZW50LnNwZWNpYWxbVXRpbC5UUkFOU0lUSU9OX0VORF0gPSBnZXRTcGVjaWFsVHJhbnNpdGlvbkVuZEV2ZW50KCk7XG4gIH1cbiAgLyoqXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqIFB1YmxpYyBVdGlsIEFwaVxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKi9cblxuXG4gIHZhciBVdGlsID0ge1xuICAgIFRSQU5TSVRJT05fRU5EOiAnYnNUcmFuc2l0aW9uRW5kJyxcbiAgICBnZXRVSUQ6IGZ1bmN0aW9uIGdldFVJRChwcmVmaXgpIHtcbiAgICAgIGRvIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWJpdHdpc2VcbiAgICAgICAgcHJlZml4ICs9IH5+KE1hdGgucmFuZG9tKCkgKiBNQVhfVUlEKTsgLy8gXCJ+flwiIGFjdHMgbGlrZSBhIGZhc3RlciBNYXRoLmZsb29yKCkgaGVyZVxuICAgICAgfSB3aGlsZSAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocHJlZml4KSk7XG5cbiAgICAgIHJldHVybiBwcmVmaXg7XG4gICAgfSxcbiAgICBnZXRTZWxlY3RvckZyb21FbGVtZW50OiBmdW5jdGlvbiBnZXRTZWxlY3RvckZyb21FbGVtZW50KGVsZW1lbnQpIHtcbiAgICAgIHZhciBzZWxlY3RvciA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkYXRhLXRhcmdldCcpO1xuXG4gICAgICBpZiAoIXNlbGVjdG9yIHx8IHNlbGVjdG9yID09PSAnIycpIHtcbiAgICAgICAgdmFyIGhyZWZBdHRyID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2hyZWYnKTtcbiAgICAgICAgc2VsZWN0b3IgPSBocmVmQXR0ciAmJiBocmVmQXR0ciAhPT0gJyMnID8gaHJlZkF0dHIudHJpbSgpIDogJyc7XG4gICAgICB9XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKSA/IHNlbGVjdG9yIDogbnVsbDtcbiAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH1cbiAgICB9LFxuICAgIGdldFRyYW5zaXRpb25EdXJhdGlvbkZyb21FbGVtZW50OiBmdW5jdGlvbiBnZXRUcmFuc2l0aW9uRHVyYXRpb25Gcm9tRWxlbWVudChlbGVtZW50KSB7XG4gICAgICBpZiAoIWVsZW1lbnQpIHtcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgICB9IC8vIEdldCB0cmFuc2l0aW9uLWR1cmF0aW9uIG9mIHRoZSBlbGVtZW50XG5cblxuICAgICAgdmFyIHRyYW5zaXRpb25EdXJhdGlvbiA9ICQoZWxlbWVudCkuY3NzKCd0cmFuc2l0aW9uLWR1cmF0aW9uJyk7XG4gICAgICB2YXIgdHJhbnNpdGlvbkRlbGF5ID0gJChlbGVtZW50KS5jc3MoJ3RyYW5zaXRpb24tZGVsYXknKTtcbiAgICAgIHZhciBmbG9hdFRyYW5zaXRpb25EdXJhdGlvbiA9IHBhcnNlRmxvYXQodHJhbnNpdGlvbkR1cmF0aW9uKTtcbiAgICAgIHZhciBmbG9hdFRyYW5zaXRpb25EZWxheSA9IHBhcnNlRmxvYXQodHJhbnNpdGlvbkRlbGF5KTsgLy8gUmV0dXJuIDAgaWYgZWxlbWVudCBvciB0cmFuc2l0aW9uIGR1cmF0aW9uIGlzIG5vdCBmb3VuZFxuXG4gICAgICBpZiAoIWZsb2F0VHJhbnNpdGlvbkR1cmF0aW9uICYmICFmbG9hdFRyYW5zaXRpb25EZWxheSkge1xuICAgICAgICByZXR1cm4gMDtcbiAgICAgIH0gLy8gSWYgbXVsdGlwbGUgZHVyYXRpb25zIGFyZSBkZWZpbmVkLCB0YWtlIHRoZSBmaXJzdFxuXG5cbiAgICAgIHRyYW5zaXRpb25EdXJhdGlvbiA9IHRyYW5zaXRpb25EdXJhdGlvbi5zcGxpdCgnLCcpWzBdO1xuICAgICAgdHJhbnNpdGlvbkRlbGF5ID0gdHJhbnNpdGlvbkRlbGF5LnNwbGl0KCcsJylbMF07XG4gICAgICByZXR1cm4gKHBhcnNlRmxvYXQodHJhbnNpdGlvbkR1cmF0aW9uKSArIHBhcnNlRmxvYXQodHJhbnNpdGlvbkRlbGF5KSkgKiBNSUxMSVNFQ09ORFNfTVVMVElQTElFUjtcbiAgICB9LFxuICAgIHJlZmxvdzogZnVuY3Rpb24gcmVmbG93KGVsZW1lbnQpIHtcbiAgICAgIHJldHVybiBlbGVtZW50Lm9mZnNldEhlaWdodDtcbiAgICB9LFxuICAgIHRyaWdnZXJUcmFuc2l0aW9uRW5kOiBmdW5jdGlvbiB0cmlnZ2VyVHJhbnNpdGlvbkVuZChlbGVtZW50KSB7XG4gICAgICAkKGVsZW1lbnQpLnRyaWdnZXIoVFJBTlNJVElPTl9FTkQpO1xuICAgIH0sXG4gICAgLy8gVE9ETzogUmVtb3ZlIGluIHY1XG4gICAgc3VwcG9ydHNUcmFuc2l0aW9uRW5kOiBmdW5jdGlvbiBzdXBwb3J0c1RyYW5zaXRpb25FbmQoKSB7XG4gICAgICByZXR1cm4gQm9vbGVhbihUUkFOU0lUSU9OX0VORCk7XG4gICAgfSxcbiAgICBpc0VsZW1lbnQ6IGZ1bmN0aW9uIGlzRWxlbWVudChvYmopIHtcbiAgICAgIHJldHVybiAob2JqWzBdIHx8IG9iaikubm9kZVR5cGU7XG4gICAgfSxcbiAgICB0eXBlQ2hlY2tDb25maWc6IGZ1bmN0aW9uIHR5cGVDaGVja0NvbmZpZyhjb21wb25lbnROYW1lLCBjb25maWcsIGNvbmZpZ1R5cGVzKSB7XG4gICAgICBmb3IgKHZhciBwcm9wZXJ0eSBpbiBjb25maWdUeXBlcykge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGNvbmZpZ1R5cGVzLCBwcm9wZXJ0eSkpIHtcbiAgICAgICAgICB2YXIgZXhwZWN0ZWRUeXBlcyA9IGNvbmZpZ1R5cGVzW3Byb3BlcnR5XTtcbiAgICAgICAgICB2YXIgdmFsdWUgPSBjb25maWdbcHJvcGVydHldO1xuICAgICAgICAgIHZhciB2YWx1ZVR5cGUgPSB2YWx1ZSAmJiBVdGlsLmlzRWxlbWVudCh2YWx1ZSkgPyAnZWxlbWVudCcgOiB0b1R5cGUodmFsdWUpO1xuXG4gICAgICAgICAgaWYgKCFuZXcgUmVnRXhwKGV4cGVjdGVkVHlwZXMpLnRlc3QodmFsdWVUeXBlKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGNvbXBvbmVudE5hbWUudG9VcHBlckNhc2UoKSArIFwiOiBcIiArIChcIk9wdGlvbiBcXFwiXCIgKyBwcm9wZXJ0eSArIFwiXFxcIiBwcm92aWRlZCB0eXBlIFxcXCJcIiArIHZhbHVlVHlwZSArIFwiXFxcIiBcIikgKyAoXCJidXQgZXhwZWN0ZWQgdHlwZSBcXFwiXCIgKyBleHBlY3RlZFR5cGVzICsgXCJcXFwiLlwiKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBmaW5kU2hhZG93Um9vdDogZnVuY3Rpb24gZmluZFNoYWRvd1Jvb3QoZWxlbWVudCkge1xuICAgICAgaWYgKCFkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuYXR0YWNoU2hhZG93KSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfSAvLyBDYW4gZmluZCB0aGUgc2hhZG93IHJvb3Qgb3RoZXJ3aXNlIGl0J2xsIHJldHVybiB0aGUgZG9jdW1lbnRcblxuXG4gICAgICBpZiAodHlwZW9mIGVsZW1lbnQuZ2V0Um9vdE5vZGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgdmFyIHJvb3QgPSBlbGVtZW50LmdldFJvb3ROb2RlKCk7XG4gICAgICAgIHJldHVybiByb290IGluc3RhbmNlb2YgU2hhZG93Um9vdCA/IHJvb3QgOiBudWxsO1xuICAgICAgfVxuXG4gICAgICBpZiAoZWxlbWVudCBpbnN0YW5jZW9mIFNoYWRvd1Jvb3QpIHtcbiAgICAgICAgcmV0dXJuIGVsZW1lbnQ7XG4gICAgICB9IC8vIHdoZW4gd2UgZG9uJ3QgZmluZCBhIHNoYWRvdyByb290XG5cblxuICAgICAgaWYgKCFlbGVtZW50LnBhcmVudE5vZGUpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBVdGlsLmZpbmRTaGFkb3dSb290KGVsZW1lbnQucGFyZW50Tm9kZSk7XG4gICAgfSxcbiAgICBqUXVlcnlEZXRlY3Rpb246IGZ1bmN0aW9uIGpRdWVyeURldGVjdGlvbigpIHtcbiAgICAgIGlmICh0eXBlb2YgJCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQm9vdHN0cmFwXFwncyBKYXZhU2NyaXB0IHJlcXVpcmVzIGpRdWVyeS4galF1ZXJ5IG11c3QgYmUgaW5jbHVkZWQgYmVmb3JlIEJvb3RzdHJhcFxcJ3MgSmF2YVNjcmlwdC4nKTtcbiAgICAgIH1cblxuICAgICAgdmFyIHZlcnNpb24gPSAkLmZuLmpxdWVyeS5zcGxpdCgnICcpWzBdLnNwbGl0KCcuJyk7XG4gICAgICB2YXIgbWluTWFqb3IgPSAxO1xuICAgICAgdmFyIGx0TWFqb3IgPSAyO1xuICAgICAgdmFyIG1pbk1pbm9yID0gOTtcbiAgICAgIHZhciBtaW5QYXRjaCA9IDE7XG4gICAgICB2YXIgbWF4TWFqb3IgPSA0O1xuXG4gICAgICBpZiAodmVyc2lvblswXSA8IGx0TWFqb3IgJiYgdmVyc2lvblsxXSA8IG1pbk1pbm9yIHx8IHZlcnNpb25bMF0gPT09IG1pbk1ham9yICYmIHZlcnNpb25bMV0gPT09IG1pbk1pbm9yICYmIHZlcnNpb25bMl0gPCBtaW5QYXRjaCB8fCB2ZXJzaW9uWzBdID49IG1heE1ham9yKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQm9vdHN0cmFwXFwncyBKYXZhU2NyaXB0IHJlcXVpcmVzIGF0IGxlYXN0IGpRdWVyeSB2MS45LjEgYnV0IGxlc3MgdGhhbiB2NC4wLjAnKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG4gIFV0aWwualF1ZXJ5RGV0ZWN0aW9uKCk7XG4gIHNldFRyYW5zaXRpb25FbmRTdXBwb3J0KCk7XG5cbiAgLyoqXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKiBDb25zdGFudHNcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqL1xuXG4gIHZhciBOQU1FID0gJ2FsZXJ0JztcbiAgdmFyIFZFUlNJT04gPSAnNC40LjEnO1xuICB2YXIgREFUQV9LRVkgPSAnYnMuYWxlcnQnO1xuICB2YXIgRVZFTlRfS0VZID0gXCIuXCIgKyBEQVRBX0tFWTtcbiAgdmFyIERBVEFfQVBJX0tFWSA9ICcuZGF0YS1hcGknO1xuICB2YXIgSlFVRVJZX05PX0NPTkZMSUNUID0gJC5mbltOQU1FXTtcbiAgdmFyIFNlbGVjdG9yID0ge1xuICAgIERJU01JU1M6ICdbZGF0YS1kaXNtaXNzPVwiYWxlcnRcIl0nXG4gIH07XG4gIHZhciBFdmVudCA9IHtcbiAgICBDTE9TRTogXCJjbG9zZVwiICsgRVZFTlRfS0VZLFxuICAgIENMT1NFRDogXCJjbG9zZWRcIiArIEVWRU5UX0tFWSxcbiAgICBDTElDS19EQVRBX0FQSTogXCJjbGlja1wiICsgRVZFTlRfS0VZICsgREFUQV9BUElfS0VZXG4gIH07XG4gIHZhciBDbGFzc05hbWUgPSB7XG4gICAgQUxFUlQ6ICdhbGVydCcsXG4gICAgRkFERTogJ2ZhZGUnLFxuICAgIFNIT1c6ICdzaG93J1xuICB9O1xuICAvKipcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqIENsYXNzIERlZmluaXRpb25cbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqL1xuXG4gIHZhciBBbGVydCA9XG4gIC8qI19fUFVSRV9fKi9cbiAgZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEFsZXJ0KGVsZW1lbnQpIHtcbiAgICAgIHRoaXMuX2VsZW1lbnQgPSBlbGVtZW50O1xuICAgIH0gLy8gR2V0dGVyc1xuXG5cbiAgICB2YXIgX3Byb3RvID0gQWxlcnQucHJvdG90eXBlO1xuXG4gICAgLy8gUHVibGljXG4gICAgX3Byb3RvLmNsb3NlID0gZnVuY3Rpb24gY2xvc2UoZWxlbWVudCkge1xuICAgICAgdmFyIHJvb3RFbGVtZW50ID0gdGhpcy5fZWxlbWVudDtcblxuICAgICAgaWYgKGVsZW1lbnQpIHtcbiAgICAgICAgcm9vdEVsZW1lbnQgPSB0aGlzLl9nZXRSb290RWxlbWVudChlbGVtZW50KTtcbiAgICAgIH1cblxuICAgICAgdmFyIGN1c3RvbUV2ZW50ID0gdGhpcy5fdHJpZ2dlckNsb3NlRXZlbnQocm9vdEVsZW1lbnQpO1xuXG4gICAgICBpZiAoY3VzdG9tRXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl9yZW1vdmVFbGVtZW50KHJvb3RFbGVtZW50KTtcbiAgICB9O1xuXG4gICAgX3Byb3RvLmRpc3Bvc2UgPSBmdW5jdGlvbiBkaXNwb3NlKCkge1xuICAgICAgJC5yZW1vdmVEYXRhKHRoaXMuX2VsZW1lbnQsIERBVEFfS0VZKTtcbiAgICAgIHRoaXMuX2VsZW1lbnQgPSBudWxsO1xuICAgIH0gLy8gUHJpdmF0ZVxuICAgIDtcblxuICAgIF9wcm90by5fZ2V0Um9vdEVsZW1lbnQgPSBmdW5jdGlvbiBfZ2V0Um9vdEVsZW1lbnQoZWxlbWVudCkge1xuICAgICAgdmFyIHNlbGVjdG9yID0gVXRpbC5nZXRTZWxlY3RvckZyb21FbGVtZW50KGVsZW1lbnQpO1xuICAgICAgdmFyIHBhcmVudCA9IGZhbHNlO1xuXG4gICAgICBpZiAoc2VsZWN0b3IpIHtcbiAgICAgICAgcGFyZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XG4gICAgICB9XG5cbiAgICAgIGlmICghcGFyZW50KSB7XG4gICAgICAgIHBhcmVudCA9ICQoZWxlbWVudCkuY2xvc2VzdChcIi5cIiArIENsYXNzTmFtZS5BTEVSVClbMF07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBwYXJlbnQ7XG4gICAgfTtcblxuICAgIF9wcm90by5fdHJpZ2dlckNsb3NlRXZlbnQgPSBmdW5jdGlvbiBfdHJpZ2dlckNsb3NlRXZlbnQoZWxlbWVudCkge1xuICAgICAgdmFyIGNsb3NlRXZlbnQgPSAkLkV2ZW50KEV2ZW50LkNMT1NFKTtcbiAgICAgICQoZWxlbWVudCkudHJpZ2dlcihjbG9zZUV2ZW50KTtcbiAgICAgIHJldHVybiBjbG9zZUV2ZW50O1xuICAgIH07XG5cbiAgICBfcHJvdG8uX3JlbW92ZUVsZW1lbnQgPSBmdW5jdGlvbiBfcmVtb3ZlRWxlbWVudChlbGVtZW50KSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICAkKGVsZW1lbnQpLnJlbW92ZUNsYXNzKENsYXNzTmFtZS5TSE9XKTtcblxuICAgICAgaWYgKCEkKGVsZW1lbnQpLmhhc0NsYXNzKENsYXNzTmFtZS5GQURFKSkge1xuICAgICAgICB0aGlzLl9kZXN0cm95RWxlbWVudChlbGVtZW50KTtcblxuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHZhciB0cmFuc2l0aW9uRHVyYXRpb24gPSBVdGlsLmdldFRyYW5zaXRpb25EdXJhdGlvbkZyb21FbGVtZW50KGVsZW1lbnQpO1xuICAgICAgJChlbGVtZW50KS5vbmUoVXRpbC5UUkFOU0lUSU9OX0VORCwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIHJldHVybiBfdGhpcy5fZGVzdHJveUVsZW1lbnQoZWxlbWVudCwgZXZlbnQpO1xuICAgICAgfSkuZW11bGF0ZVRyYW5zaXRpb25FbmQodHJhbnNpdGlvbkR1cmF0aW9uKTtcbiAgICB9O1xuXG4gICAgX3Byb3RvLl9kZXN0cm95RWxlbWVudCA9IGZ1bmN0aW9uIF9kZXN0cm95RWxlbWVudChlbGVtZW50KSB7XG4gICAgICAkKGVsZW1lbnQpLmRldGFjaCgpLnRyaWdnZXIoRXZlbnQuQ0xPU0VEKS5yZW1vdmUoKTtcbiAgICB9IC8vIFN0YXRpY1xuICAgIDtcblxuICAgIEFsZXJ0Ll9qUXVlcnlJbnRlcmZhY2UgPSBmdW5jdGlvbiBfalF1ZXJ5SW50ZXJmYWNlKGNvbmZpZykge1xuICAgICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciAkZWxlbWVudCA9ICQodGhpcyk7XG4gICAgICAgIHZhciBkYXRhID0gJGVsZW1lbnQuZGF0YShEQVRBX0tFWSk7XG5cbiAgICAgICAgaWYgKCFkYXRhKSB7XG4gICAgICAgICAgZGF0YSA9IG5ldyBBbGVydCh0aGlzKTtcbiAgICAgICAgICAkZWxlbWVudC5kYXRhKERBVEFfS0VZLCBkYXRhKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjb25maWcgPT09ICdjbG9zZScpIHtcbiAgICAgICAgICBkYXRhW2NvbmZpZ10odGhpcyk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICBBbGVydC5faGFuZGxlRGlzbWlzcyA9IGZ1bmN0aW9uIF9oYW5kbGVEaXNtaXNzKGFsZXJ0SW5zdGFuY2UpIHtcbiAgICAgIHJldHVybiBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgaWYgKGV2ZW50KSB7XG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGFsZXJ0SW5zdGFuY2UuY2xvc2UodGhpcyk7XG4gICAgICB9O1xuICAgIH07XG5cbiAgICBfY3JlYXRlQ2xhc3MoQWxlcnQsIG51bGwsIFt7XG4gICAgICBrZXk6IFwiVkVSU0lPTlwiLFxuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgIHJldHVybiBWRVJTSU9OO1xuICAgICAgfVxuICAgIH1dKTtcblxuICAgIHJldHVybiBBbGVydDtcbiAgfSgpO1xuICAvKipcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqIERhdGEgQXBpIGltcGxlbWVudGF0aW9uXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKi9cblxuXG4gICQoZG9jdW1lbnQpLm9uKEV2ZW50LkNMSUNLX0RBVEFfQVBJLCBTZWxlY3Rvci5ESVNNSVNTLCBBbGVydC5faGFuZGxlRGlzbWlzcyhuZXcgQWxlcnQoKSkpO1xuICAvKipcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqIGpRdWVyeVxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICovXG5cbiAgJC5mbltOQU1FXSA9IEFsZXJ0Ll9qUXVlcnlJbnRlcmZhY2U7XG4gICQuZm5bTkFNRV0uQ29uc3RydWN0b3IgPSBBbGVydDtcblxuICAkLmZuW05BTUVdLm5vQ29uZmxpY3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgJC5mbltOQU1FXSA9IEpRVUVSWV9OT19DT05GTElDVDtcbiAgICByZXR1cm4gQWxlcnQuX2pRdWVyeUludGVyZmFjZTtcbiAgfTtcblxuICAvKipcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqIENvbnN0YW50c1xuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICovXG5cbiAgdmFyIE5BTUUkMSA9ICdidXR0b24nO1xuICB2YXIgVkVSU0lPTiQxID0gJzQuNC4xJztcbiAgdmFyIERBVEFfS0VZJDEgPSAnYnMuYnV0dG9uJztcbiAgdmFyIEVWRU5UX0tFWSQxID0gXCIuXCIgKyBEQVRBX0tFWSQxO1xuICB2YXIgREFUQV9BUElfS0VZJDEgPSAnLmRhdGEtYXBpJztcbiAgdmFyIEpRVUVSWV9OT19DT05GTElDVCQxID0gJC5mbltOQU1FJDFdO1xuICB2YXIgQ2xhc3NOYW1lJDEgPSB7XG4gICAgQUNUSVZFOiAnYWN0aXZlJyxcbiAgICBCVVRUT046ICdidG4nLFxuICAgIEZPQ1VTOiAnZm9jdXMnXG4gIH07XG4gIHZhciBTZWxlY3RvciQxID0ge1xuICAgIERBVEFfVE9HR0xFX0NBUlJPVDogJ1tkYXRhLXRvZ2dsZV49XCJidXR0b25cIl0nLFxuICAgIERBVEFfVE9HR0xFUzogJ1tkYXRhLXRvZ2dsZT1cImJ1dHRvbnNcIl0nLFxuICAgIERBVEFfVE9HR0xFOiAnW2RhdGEtdG9nZ2xlPVwiYnV0dG9uXCJdJyxcbiAgICBEQVRBX1RPR0dMRVNfQlVUVE9OUzogJ1tkYXRhLXRvZ2dsZT1cImJ1dHRvbnNcIl0gLmJ0bicsXG4gICAgSU5QVVQ6ICdpbnB1dDpub3QoW3R5cGU9XCJoaWRkZW5cIl0pJyxcbiAgICBBQ1RJVkU6ICcuYWN0aXZlJyxcbiAgICBCVVRUT046ICcuYnRuJ1xuICB9O1xuICB2YXIgRXZlbnQkMSA9IHtcbiAgICBDTElDS19EQVRBX0FQSTogXCJjbGlja1wiICsgRVZFTlRfS0VZJDEgKyBEQVRBX0FQSV9LRVkkMSxcbiAgICBGT0NVU19CTFVSX0RBVEFfQVBJOiBcImZvY3VzXCIgKyBFVkVOVF9LRVkkMSArIERBVEFfQVBJX0tFWSQxICsgXCIgXCIgKyAoXCJibHVyXCIgKyBFVkVOVF9LRVkkMSArIERBVEFfQVBJX0tFWSQxKSxcbiAgICBMT0FEX0RBVEFfQVBJOiBcImxvYWRcIiArIEVWRU5UX0tFWSQxICsgREFUQV9BUElfS0VZJDFcbiAgfTtcbiAgLyoqXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKiBDbGFzcyBEZWZpbml0aW9uXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKi9cblxuICB2YXIgQnV0dG9uID1cbiAgLyojX19QVVJFX18qL1xuICBmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQnV0dG9uKGVsZW1lbnQpIHtcbiAgICAgIHRoaXMuX2VsZW1lbnQgPSBlbGVtZW50O1xuICAgIH0gLy8gR2V0dGVyc1xuXG5cbiAgICB2YXIgX3Byb3RvID0gQnV0dG9uLnByb3RvdHlwZTtcblxuICAgIC8vIFB1YmxpY1xuICAgIF9wcm90by50b2dnbGUgPSBmdW5jdGlvbiB0b2dnbGUoKSB7XG4gICAgICB2YXIgdHJpZ2dlckNoYW5nZUV2ZW50ID0gdHJ1ZTtcbiAgICAgIHZhciBhZGRBcmlhUHJlc3NlZCA9IHRydWU7XG4gICAgICB2YXIgcm9vdEVsZW1lbnQgPSAkKHRoaXMuX2VsZW1lbnQpLmNsb3Nlc3QoU2VsZWN0b3IkMS5EQVRBX1RPR0dMRVMpWzBdO1xuXG4gICAgICBpZiAocm9vdEVsZW1lbnQpIHtcbiAgICAgICAgdmFyIGlucHV0ID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFNlbGVjdG9yJDEuSU5QVVQpO1xuXG4gICAgICAgIGlmIChpbnB1dCkge1xuICAgICAgICAgIGlmIChpbnB1dC50eXBlID09PSAncmFkaW8nKSB7XG4gICAgICAgICAgICBpZiAoaW5wdXQuY2hlY2tlZCAmJiB0aGlzLl9lbGVtZW50LmNsYXNzTGlzdC5jb250YWlucyhDbGFzc05hbWUkMS5BQ1RJVkUpKSB7XG4gICAgICAgICAgICAgIHRyaWdnZXJDaGFuZ2VFdmVudCA9IGZhbHNlO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgdmFyIGFjdGl2ZUVsZW1lbnQgPSByb290RWxlbWVudC5xdWVyeVNlbGVjdG9yKFNlbGVjdG9yJDEuQUNUSVZFKTtcblxuICAgICAgICAgICAgICBpZiAoYWN0aXZlRWxlbWVudCkge1xuICAgICAgICAgICAgICAgICQoYWN0aXZlRWxlbWVudCkucmVtb3ZlQ2xhc3MoQ2xhc3NOYW1lJDEuQUNUSVZFKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSBpZiAoaW5wdXQudHlwZSA9PT0gJ2NoZWNrYm94Jykge1xuICAgICAgICAgICAgaWYgKHRoaXMuX2VsZW1lbnQudGFnTmFtZSA9PT0gJ0xBQkVMJyAmJiBpbnB1dC5jaGVja2VkID09PSB0aGlzLl9lbGVtZW50LmNsYXNzTGlzdC5jb250YWlucyhDbGFzc05hbWUkMS5BQ1RJVkUpKSB7XG4gICAgICAgICAgICAgIHRyaWdnZXJDaGFuZ2VFdmVudCA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBpZiBpdCdzIG5vdCBhIHJhZGlvIGJ1dHRvbiBvciBjaGVja2JveCBkb24ndCBhZGQgYSBwb2ludGxlc3MvaW52YWxpZCBjaGVja2VkIHByb3BlcnR5IHRvIHRoZSBpbnB1dFxuICAgICAgICAgICAgdHJpZ2dlckNoYW5nZUV2ZW50ID0gZmFsc2U7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHRyaWdnZXJDaGFuZ2VFdmVudCkge1xuICAgICAgICAgICAgaW5wdXQuY2hlY2tlZCA9ICF0aGlzLl9lbGVtZW50LmNsYXNzTGlzdC5jb250YWlucyhDbGFzc05hbWUkMS5BQ1RJVkUpO1xuICAgICAgICAgICAgJChpbnB1dCkudHJpZ2dlcignY2hhbmdlJyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaW5wdXQuZm9jdXMoKTtcbiAgICAgICAgICBhZGRBcmlhUHJlc3NlZCA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmICghKHRoaXMuX2VsZW1lbnQuaGFzQXR0cmlidXRlKCdkaXNhYmxlZCcpIHx8IHRoaXMuX2VsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCdkaXNhYmxlZCcpKSkge1xuICAgICAgICBpZiAoYWRkQXJpYVByZXNzZWQpIHtcbiAgICAgICAgICB0aGlzLl9lbGVtZW50LnNldEF0dHJpYnV0ZSgnYXJpYS1wcmVzc2VkJywgIXRoaXMuX2VsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKENsYXNzTmFtZSQxLkFDVElWRSkpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRyaWdnZXJDaGFuZ2VFdmVudCkge1xuICAgICAgICAgICQodGhpcy5fZWxlbWVudCkudG9nZ2xlQ2xhc3MoQ2xhc3NOYW1lJDEuQUNUSVZFKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG5cbiAgICBfcHJvdG8uZGlzcG9zZSA9IGZ1bmN0aW9uIGRpc3Bvc2UoKSB7XG4gICAgICAkLnJlbW92ZURhdGEodGhpcy5fZWxlbWVudCwgREFUQV9LRVkkMSk7XG4gICAgICB0aGlzLl9lbGVtZW50ID0gbnVsbDtcbiAgICB9IC8vIFN0YXRpY1xuICAgIDtcblxuICAgIEJ1dHRvbi5falF1ZXJ5SW50ZXJmYWNlID0gZnVuY3Rpb24gX2pRdWVyeUludGVyZmFjZShjb25maWcpIHtcbiAgICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZGF0YSA9ICQodGhpcykuZGF0YShEQVRBX0tFWSQxKTtcblxuICAgICAgICBpZiAoIWRhdGEpIHtcbiAgICAgICAgICBkYXRhID0gbmV3IEJ1dHRvbih0aGlzKTtcbiAgICAgICAgICAkKHRoaXMpLmRhdGEoREFUQV9LRVkkMSwgZGF0YSk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY29uZmlnID09PSAndG9nZ2xlJykge1xuICAgICAgICAgIGRhdGFbY29uZmlnXSgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgX2NyZWF0ZUNsYXNzKEJ1dHRvbiwgbnVsbCwgW3tcbiAgICAgIGtleTogXCJWRVJTSU9OXCIsXG4gICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgcmV0dXJuIFZFUlNJT04kMTtcbiAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gQnV0dG9uO1xuICB9KCk7XG4gIC8qKlxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICogRGF0YSBBcGkgaW1wbGVtZW50YXRpb25cbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqL1xuXG5cbiAgJChkb2N1bWVudCkub24oRXZlbnQkMS5DTElDS19EQVRBX0FQSSwgU2VsZWN0b3IkMS5EQVRBX1RPR0dMRV9DQVJST1QsIGZ1bmN0aW9uIChldmVudCkge1xuICAgIHZhciBidXR0b24gPSBldmVudC50YXJnZXQ7XG5cbiAgICBpZiAoISQoYnV0dG9uKS5oYXNDbGFzcyhDbGFzc05hbWUkMS5CVVRUT04pKSB7XG4gICAgICBidXR0b24gPSAkKGJ1dHRvbikuY2xvc2VzdChTZWxlY3RvciQxLkJVVFRPTilbMF07XG4gICAgfVxuXG4gICAgaWYgKCFidXR0b24gfHwgYnV0dG9uLmhhc0F0dHJpYnV0ZSgnZGlzYWJsZWQnKSB8fCBidXR0b24uY2xhc3NMaXN0LmNvbnRhaW5zKCdkaXNhYmxlZCcpKSB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOyAvLyB3b3JrIGFyb3VuZCBGaXJlZm94IGJ1ZyAjMTU0MDk5NVxuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgaW5wdXRCdG4gPSBidXR0b24ucXVlcnlTZWxlY3RvcihTZWxlY3RvciQxLklOUFVUKTtcblxuICAgICAgaWYgKGlucHV0QnRuICYmIChpbnB1dEJ0bi5oYXNBdHRyaWJ1dGUoJ2Rpc2FibGVkJykgfHwgaW5wdXRCdG4uY2xhc3NMaXN0LmNvbnRhaW5zKCdkaXNhYmxlZCcpKSkge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOyAvLyB3b3JrIGFyb3VuZCBGaXJlZm94IGJ1ZyAjMTU0MDk5NVxuXG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgQnV0dG9uLl9qUXVlcnlJbnRlcmZhY2UuY2FsbCgkKGJ1dHRvbiksICd0b2dnbGUnKTtcbiAgICB9XG4gIH0pLm9uKEV2ZW50JDEuRk9DVVNfQkxVUl9EQVRBX0FQSSwgU2VsZWN0b3IkMS5EQVRBX1RPR0dMRV9DQVJST1QsIGZ1bmN0aW9uIChldmVudCkge1xuICAgIHZhciBidXR0b24gPSAkKGV2ZW50LnRhcmdldCkuY2xvc2VzdChTZWxlY3RvciQxLkJVVFRPTilbMF07XG4gICAgJChidXR0b24pLnRvZ2dsZUNsYXNzKENsYXNzTmFtZSQxLkZPQ1VTLCAvXmZvY3VzKGluKT8kLy50ZXN0KGV2ZW50LnR5cGUpKTtcbiAgfSk7XG4gICQod2luZG93KS5vbihFdmVudCQxLkxPQURfREFUQV9BUEksIGZ1bmN0aW9uICgpIHtcbiAgICAvLyBlbnN1cmUgY29ycmVjdCBhY3RpdmUgY2xhc3MgaXMgc2V0IHRvIG1hdGNoIHRoZSBjb250cm9scycgYWN0dWFsIHZhbHVlcy9zdGF0ZXNcbiAgICAvLyBmaW5kIGFsbCBjaGVja2JveGVzL3JlYWRpbyBidXR0b25zIGluc2lkZSBkYXRhLXRvZ2dsZSBncm91cHNcbiAgICB2YXIgYnV0dG9ucyA9IFtdLnNsaWNlLmNhbGwoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChTZWxlY3RvciQxLkRBVEFfVE9HR0xFU19CVVRUT05TKSk7XG5cbiAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gYnV0dG9ucy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgdmFyIGJ1dHRvbiA9IGJ1dHRvbnNbaV07XG4gICAgICB2YXIgaW5wdXQgPSBidXR0b24ucXVlcnlTZWxlY3RvcihTZWxlY3RvciQxLklOUFVUKTtcblxuICAgICAgaWYgKGlucHV0LmNoZWNrZWQgfHwgaW5wdXQuaGFzQXR0cmlidXRlKCdjaGVja2VkJykpIHtcbiAgICAgICAgYnV0dG9uLmNsYXNzTGlzdC5hZGQoQ2xhc3NOYW1lJDEuQUNUSVZFKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKENsYXNzTmFtZSQxLkFDVElWRSk7XG4gICAgICB9XG4gICAgfSAvLyBmaW5kIGFsbCBidXR0b24gdG9nZ2xlc1xuXG5cbiAgICBidXR0b25zID0gW10uc2xpY2UuY2FsbChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFNlbGVjdG9yJDEuREFUQV9UT0dHTEUpKTtcblxuICAgIGZvciAodmFyIF9pID0gMCwgX2xlbiA9IGJ1dHRvbnMubGVuZ3RoOyBfaSA8IF9sZW47IF9pKyspIHtcbiAgICAgIHZhciBfYnV0dG9uID0gYnV0dG9uc1tfaV07XG5cbiAgICAgIGlmIChfYnV0dG9uLmdldEF0dHJpYnV0ZSgnYXJpYS1wcmVzc2VkJykgPT09ICd0cnVlJykge1xuICAgICAgICBfYnV0dG9uLmNsYXNzTGlzdC5hZGQoQ2xhc3NOYW1lJDEuQUNUSVZFKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIF9idXR0b24uY2xhc3NMaXN0LnJlbW92ZShDbGFzc05hbWUkMS5BQ1RJVkUpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG4gIC8qKlxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICogalF1ZXJ5XG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKi9cblxuICAkLmZuW05BTUUkMV0gPSBCdXR0b24uX2pRdWVyeUludGVyZmFjZTtcbiAgJC5mbltOQU1FJDFdLkNvbnN0cnVjdG9yID0gQnV0dG9uO1xuXG4gICQuZm5bTkFNRSQxXS5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xuICAgICQuZm5bTkFNRSQxXSA9IEpRVUVSWV9OT19DT05GTElDVCQxO1xuICAgIHJldHVybiBCdXR0b24uX2pRdWVyeUludGVyZmFjZTtcbiAgfTtcblxuICAvKipcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqIENvbnN0YW50c1xuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICovXG5cbiAgdmFyIE5BTUUkMiA9ICdjYXJvdXNlbCc7XG4gIHZhciBWRVJTSU9OJDIgPSAnNC40LjEnO1xuICB2YXIgREFUQV9LRVkkMiA9ICdicy5jYXJvdXNlbCc7XG4gIHZhciBFVkVOVF9LRVkkMiA9IFwiLlwiICsgREFUQV9LRVkkMjtcbiAgdmFyIERBVEFfQVBJX0tFWSQyID0gJy5kYXRhLWFwaSc7XG4gIHZhciBKUVVFUllfTk9fQ09ORkxJQ1QkMiA9ICQuZm5bTkFNRSQyXTtcbiAgdmFyIEFSUk9XX0xFRlRfS0VZQ09ERSA9IDM3OyAvLyBLZXlib2FyZEV2ZW50LndoaWNoIHZhbHVlIGZvciBsZWZ0IGFycm93IGtleVxuXG4gIHZhciBBUlJPV19SSUdIVF9LRVlDT0RFID0gMzk7IC8vIEtleWJvYXJkRXZlbnQud2hpY2ggdmFsdWUgZm9yIHJpZ2h0IGFycm93IGtleVxuXG4gIHZhciBUT1VDSEVWRU5UX0NPTVBBVF9XQUlUID0gNTAwOyAvLyBUaW1lIGZvciBtb3VzZSBjb21wYXQgZXZlbnRzIHRvIGZpcmUgYWZ0ZXIgdG91Y2hcblxuICB2YXIgU1dJUEVfVEhSRVNIT0xEID0gNDA7XG4gIHZhciBEZWZhdWx0ID0ge1xuICAgIGludGVydmFsOiA1MDAwLFxuICAgIGtleWJvYXJkOiB0cnVlLFxuICAgIHNsaWRlOiBmYWxzZSxcbiAgICBwYXVzZTogJ2hvdmVyJyxcbiAgICB3cmFwOiB0cnVlLFxuICAgIHRvdWNoOiB0cnVlXG4gIH07XG4gIHZhciBEZWZhdWx0VHlwZSA9IHtcbiAgICBpbnRlcnZhbDogJyhudW1iZXJ8Ym9vbGVhbiknLFxuICAgIGtleWJvYXJkOiAnYm9vbGVhbicsXG4gICAgc2xpZGU6ICcoYm9vbGVhbnxzdHJpbmcpJyxcbiAgICBwYXVzZTogJyhzdHJpbmd8Ym9vbGVhbiknLFxuICAgIHdyYXA6ICdib29sZWFuJyxcbiAgICB0b3VjaDogJ2Jvb2xlYW4nXG4gIH07XG4gIHZhciBEaXJlY3Rpb24gPSB7XG4gICAgTkVYVDogJ25leHQnLFxuICAgIFBSRVY6ICdwcmV2JyxcbiAgICBMRUZUOiAnbGVmdCcsXG4gICAgUklHSFQ6ICdyaWdodCdcbiAgfTtcbiAgdmFyIEV2ZW50JDIgPSB7XG4gICAgU0xJREU6IFwic2xpZGVcIiArIEVWRU5UX0tFWSQyLFxuICAgIFNMSUQ6IFwic2xpZFwiICsgRVZFTlRfS0VZJDIsXG4gICAgS0VZRE9XTjogXCJrZXlkb3duXCIgKyBFVkVOVF9LRVkkMixcbiAgICBNT1VTRUVOVEVSOiBcIm1vdXNlZW50ZXJcIiArIEVWRU5UX0tFWSQyLFxuICAgIE1PVVNFTEVBVkU6IFwibW91c2VsZWF2ZVwiICsgRVZFTlRfS0VZJDIsXG4gICAgVE9VQ0hTVEFSVDogXCJ0b3VjaHN0YXJ0XCIgKyBFVkVOVF9LRVkkMixcbiAgICBUT1VDSE1PVkU6IFwidG91Y2htb3ZlXCIgKyBFVkVOVF9LRVkkMixcbiAgICBUT1VDSEVORDogXCJ0b3VjaGVuZFwiICsgRVZFTlRfS0VZJDIsXG4gICAgUE9JTlRFUkRPV046IFwicG9pbnRlcmRvd25cIiArIEVWRU5UX0tFWSQyLFxuICAgIFBPSU5URVJVUDogXCJwb2ludGVydXBcIiArIEVWRU5UX0tFWSQyLFxuICAgIERSQUdfU1RBUlQ6IFwiZHJhZ3N0YXJ0XCIgKyBFVkVOVF9LRVkkMixcbiAgICBMT0FEX0RBVEFfQVBJOiBcImxvYWRcIiArIEVWRU5UX0tFWSQyICsgREFUQV9BUElfS0VZJDIsXG4gICAgQ0xJQ0tfREFUQV9BUEk6IFwiY2xpY2tcIiArIEVWRU5UX0tFWSQyICsgREFUQV9BUElfS0VZJDJcbiAgfTtcbiAgdmFyIENsYXNzTmFtZSQyID0ge1xuICAgIENBUk9VU0VMOiAnY2Fyb3VzZWwnLFxuICAgIEFDVElWRTogJ2FjdGl2ZScsXG4gICAgU0xJREU6ICdzbGlkZScsXG4gICAgUklHSFQ6ICdjYXJvdXNlbC1pdGVtLXJpZ2h0JyxcbiAgICBMRUZUOiAnY2Fyb3VzZWwtaXRlbS1sZWZ0JyxcbiAgICBORVhUOiAnY2Fyb3VzZWwtaXRlbS1uZXh0JyxcbiAgICBQUkVWOiAnY2Fyb3VzZWwtaXRlbS1wcmV2JyxcbiAgICBJVEVNOiAnY2Fyb3VzZWwtaXRlbScsXG4gICAgUE9JTlRFUl9FVkVOVDogJ3BvaW50ZXItZXZlbnQnXG4gIH07XG4gIHZhciBTZWxlY3RvciQyID0ge1xuICAgIEFDVElWRTogJy5hY3RpdmUnLFxuICAgIEFDVElWRV9JVEVNOiAnLmFjdGl2ZS5jYXJvdXNlbC1pdGVtJyxcbiAgICBJVEVNOiAnLmNhcm91c2VsLWl0ZW0nLFxuICAgIElURU1fSU1HOiAnLmNhcm91c2VsLWl0ZW0gaW1nJyxcbiAgICBORVhUX1BSRVY6ICcuY2Fyb3VzZWwtaXRlbS1uZXh0LCAuY2Fyb3VzZWwtaXRlbS1wcmV2JyxcbiAgICBJTkRJQ0FUT1JTOiAnLmNhcm91c2VsLWluZGljYXRvcnMnLFxuICAgIERBVEFfU0xJREU6ICdbZGF0YS1zbGlkZV0sIFtkYXRhLXNsaWRlLXRvXScsXG4gICAgREFUQV9SSURFOiAnW2RhdGEtcmlkZT1cImNhcm91c2VsXCJdJ1xuICB9O1xuICB2YXIgUG9pbnRlclR5cGUgPSB7XG4gICAgVE9VQ0g6ICd0b3VjaCcsXG4gICAgUEVOOiAncGVuJ1xuICB9O1xuICAvKipcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqIENsYXNzIERlZmluaXRpb25cbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqL1xuXG4gIHZhciBDYXJvdXNlbCA9XG4gIC8qI19fUFVSRV9fKi9cbiAgZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIENhcm91c2VsKGVsZW1lbnQsIGNvbmZpZykge1xuICAgICAgdGhpcy5faXRlbXMgPSBudWxsO1xuICAgICAgdGhpcy5faW50ZXJ2YWwgPSBudWxsO1xuICAgICAgdGhpcy5fYWN0aXZlRWxlbWVudCA9IG51bGw7XG4gICAgICB0aGlzLl9pc1BhdXNlZCA9IGZhbHNlO1xuICAgICAgdGhpcy5faXNTbGlkaW5nID0gZmFsc2U7XG4gICAgICB0aGlzLnRvdWNoVGltZW91dCA9IG51bGw7XG4gICAgICB0aGlzLnRvdWNoU3RhcnRYID0gMDtcbiAgICAgIHRoaXMudG91Y2hEZWx0YVggPSAwO1xuICAgICAgdGhpcy5fY29uZmlnID0gdGhpcy5fZ2V0Q29uZmlnKGNvbmZpZyk7XG4gICAgICB0aGlzLl9lbGVtZW50ID0gZWxlbWVudDtcbiAgICAgIHRoaXMuX2luZGljYXRvcnNFbGVtZW50ID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFNlbGVjdG9yJDIuSU5ESUNBVE9SUyk7XG4gICAgICB0aGlzLl90b3VjaFN1cHBvcnRlZCA9ICdvbnRvdWNoc3RhcnQnIGluIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCB8fCBuYXZpZ2F0b3IubWF4VG91Y2hQb2ludHMgPiAwO1xuICAgICAgdGhpcy5fcG9pbnRlckV2ZW50ID0gQm9vbGVhbih3aW5kb3cuUG9pbnRlckV2ZW50IHx8IHdpbmRvdy5NU1BvaW50ZXJFdmVudCk7XG5cbiAgICAgIHRoaXMuX2FkZEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgfSAvLyBHZXR0ZXJzXG5cblxuICAgIHZhciBfcHJvdG8gPSBDYXJvdXNlbC5wcm90b3R5cGU7XG5cbiAgICAvLyBQdWJsaWNcbiAgICBfcHJvdG8ubmV4dCA9IGZ1bmN0aW9uIG5leHQoKSB7XG4gICAgICBpZiAoIXRoaXMuX2lzU2xpZGluZykge1xuICAgICAgICB0aGlzLl9zbGlkZShEaXJlY3Rpb24uTkVYVCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90by5uZXh0V2hlblZpc2libGUgPSBmdW5jdGlvbiBuZXh0V2hlblZpc2libGUoKSB7XG4gICAgICAvLyBEb24ndCBjYWxsIG5leHQgd2hlbiB0aGUgcGFnZSBpc24ndCB2aXNpYmxlXG4gICAgICAvLyBvciB0aGUgY2Fyb3VzZWwgb3IgaXRzIHBhcmVudCBpc24ndCB2aXNpYmxlXG4gICAgICBpZiAoIWRvY3VtZW50LmhpZGRlbiAmJiAkKHRoaXMuX2VsZW1lbnQpLmlzKCc6dmlzaWJsZScpICYmICQodGhpcy5fZWxlbWVudCkuY3NzKCd2aXNpYmlsaXR5JykgIT09ICdoaWRkZW4nKSB7XG4gICAgICAgIHRoaXMubmV4dCgpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfcHJvdG8ucHJldiA9IGZ1bmN0aW9uIHByZXYoKSB7XG4gICAgICBpZiAoIXRoaXMuX2lzU2xpZGluZykge1xuICAgICAgICB0aGlzLl9zbGlkZShEaXJlY3Rpb24uUFJFVik7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90by5wYXVzZSA9IGZ1bmN0aW9uIHBhdXNlKGV2ZW50KSB7XG4gICAgICBpZiAoIWV2ZW50KSB7XG4gICAgICAgIHRoaXMuX2lzUGF1c2VkID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihTZWxlY3RvciQyLk5FWFRfUFJFVikpIHtcbiAgICAgICAgVXRpbC50cmlnZ2VyVHJhbnNpdGlvbkVuZCh0aGlzLl9lbGVtZW50KTtcbiAgICAgICAgdGhpcy5jeWNsZSh0cnVlKTtcbiAgICAgIH1cblxuICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLl9pbnRlcnZhbCk7XG4gICAgICB0aGlzLl9pbnRlcnZhbCA9IG51bGw7XG4gICAgfTtcblxuICAgIF9wcm90by5jeWNsZSA9IGZ1bmN0aW9uIGN5Y2xlKGV2ZW50KSB7XG4gICAgICBpZiAoIWV2ZW50KSB7XG4gICAgICAgIHRoaXMuX2lzUGF1c2VkID0gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLl9pbnRlcnZhbCkge1xuICAgICAgICBjbGVhckludGVydmFsKHRoaXMuX2ludGVydmFsKTtcbiAgICAgICAgdGhpcy5faW50ZXJ2YWwgPSBudWxsO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5fY29uZmlnLmludGVydmFsICYmICF0aGlzLl9pc1BhdXNlZCkge1xuICAgICAgICB0aGlzLl9pbnRlcnZhbCA9IHNldEludGVydmFsKChkb2N1bWVudC52aXNpYmlsaXR5U3RhdGUgPyB0aGlzLm5leHRXaGVuVmlzaWJsZSA6IHRoaXMubmV4dCkuYmluZCh0aGlzKSwgdGhpcy5fY29uZmlnLmludGVydmFsKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3Byb3RvLnRvID0gZnVuY3Rpb24gdG8oaW5kZXgpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIHRoaXMuX2FjdGl2ZUVsZW1lbnQgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoU2VsZWN0b3IkMi5BQ1RJVkVfSVRFTSk7XG5cbiAgICAgIHZhciBhY3RpdmVJbmRleCA9IHRoaXMuX2dldEl0ZW1JbmRleCh0aGlzLl9hY3RpdmVFbGVtZW50KTtcblxuICAgICAgaWYgKGluZGV4ID4gdGhpcy5faXRlbXMubGVuZ3RoIC0gMSB8fCBpbmRleCA8IDApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5faXNTbGlkaW5nKSB7XG4gICAgICAgICQodGhpcy5fZWxlbWVudCkub25lKEV2ZW50JDIuU0xJRCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHJldHVybiBfdGhpcy50byhpbmRleCk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChhY3RpdmVJbmRleCA9PT0gaW5kZXgpIHtcbiAgICAgICAgdGhpcy5wYXVzZSgpO1xuICAgICAgICB0aGlzLmN5Y2xlKCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIGRpcmVjdGlvbiA9IGluZGV4ID4gYWN0aXZlSW5kZXggPyBEaXJlY3Rpb24uTkVYVCA6IERpcmVjdGlvbi5QUkVWO1xuXG4gICAgICB0aGlzLl9zbGlkZShkaXJlY3Rpb24sIHRoaXMuX2l0ZW1zW2luZGV4XSk7XG4gICAgfTtcblxuICAgIF9wcm90by5kaXNwb3NlID0gZnVuY3Rpb24gZGlzcG9zZSgpIHtcbiAgICAgICQodGhpcy5fZWxlbWVudCkub2ZmKEVWRU5UX0tFWSQyKTtcbiAgICAgICQucmVtb3ZlRGF0YSh0aGlzLl9lbGVtZW50LCBEQVRBX0tFWSQyKTtcbiAgICAgIHRoaXMuX2l0ZW1zID0gbnVsbDtcbiAgICAgIHRoaXMuX2NvbmZpZyA9IG51bGw7XG4gICAgICB0aGlzLl9lbGVtZW50ID0gbnVsbDtcbiAgICAgIHRoaXMuX2ludGVydmFsID0gbnVsbDtcbiAgICAgIHRoaXMuX2lzUGF1c2VkID0gbnVsbDtcbiAgICAgIHRoaXMuX2lzU2xpZGluZyA9IG51bGw7XG4gICAgICB0aGlzLl9hY3RpdmVFbGVtZW50ID0gbnVsbDtcbiAgICAgIHRoaXMuX2luZGljYXRvcnNFbGVtZW50ID0gbnVsbDtcbiAgICB9IC8vIFByaXZhdGVcbiAgICA7XG5cbiAgICBfcHJvdG8uX2dldENvbmZpZyA9IGZ1bmN0aW9uIF9nZXRDb25maWcoY29uZmlnKSB7XG4gICAgICBjb25maWcgPSBfb2JqZWN0U3ByZWFkMih7fSwgRGVmYXVsdCwge30sIGNvbmZpZyk7XG4gICAgICBVdGlsLnR5cGVDaGVja0NvbmZpZyhOQU1FJDIsIGNvbmZpZywgRGVmYXVsdFR5cGUpO1xuICAgICAgcmV0dXJuIGNvbmZpZztcbiAgICB9O1xuXG4gICAgX3Byb3RvLl9oYW5kbGVTd2lwZSA9IGZ1bmN0aW9uIF9oYW5kbGVTd2lwZSgpIHtcbiAgICAgIHZhciBhYnNEZWx0YXggPSBNYXRoLmFicyh0aGlzLnRvdWNoRGVsdGFYKTtcblxuICAgICAgaWYgKGFic0RlbHRheCA8PSBTV0lQRV9USFJFU0hPTEQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB2YXIgZGlyZWN0aW9uID0gYWJzRGVsdGF4IC8gdGhpcy50b3VjaERlbHRhWDtcbiAgICAgIHRoaXMudG91Y2hEZWx0YVggPSAwOyAvLyBzd2lwZSBsZWZ0XG5cbiAgICAgIGlmIChkaXJlY3Rpb24gPiAwKSB7XG4gICAgICAgIHRoaXMucHJldigpO1xuICAgICAgfSAvLyBzd2lwZSByaWdodFxuXG5cbiAgICAgIGlmIChkaXJlY3Rpb24gPCAwKSB7XG4gICAgICAgIHRoaXMubmV4dCgpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfcHJvdG8uX2FkZEV2ZW50TGlzdGVuZXJzID0gZnVuY3Rpb24gX2FkZEV2ZW50TGlzdGVuZXJzKCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIGlmICh0aGlzLl9jb25maWcua2V5Ym9hcmQpIHtcbiAgICAgICAgJCh0aGlzLl9lbGVtZW50KS5vbihFdmVudCQyLktFWURPV04sIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgIHJldHVybiBfdGhpczIuX2tleWRvd24oZXZlbnQpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMuX2NvbmZpZy5wYXVzZSA9PT0gJ2hvdmVyJykge1xuICAgICAgICAkKHRoaXMuX2VsZW1lbnQpLm9uKEV2ZW50JDIuTU9VU0VFTlRFUiwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzMi5wYXVzZShldmVudCk7XG4gICAgICAgIH0pLm9uKEV2ZW50JDIuTU9VU0VMRUFWRSwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzMi5jeWNsZShldmVudCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5fY29uZmlnLnRvdWNoKSB7XG4gICAgICAgIHRoaXMuX2FkZFRvdWNoRXZlbnRMaXN0ZW5lcnMoKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3Byb3RvLl9hZGRUb3VjaEV2ZW50TGlzdGVuZXJzID0gZnVuY3Rpb24gX2FkZFRvdWNoRXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgICB2YXIgX3RoaXMzID0gdGhpcztcblxuICAgICAgaWYgKCF0aGlzLl90b3VjaFN1cHBvcnRlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHZhciBzdGFydCA9IGZ1bmN0aW9uIHN0YXJ0KGV2ZW50KSB7XG4gICAgICAgIGlmIChfdGhpczMuX3BvaW50ZXJFdmVudCAmJiBQb2ludGVyVHlwZVtldmVudC5vcmlnaW5hbEV2ZW50LnBvaW50ZXJUeXBlLnRvVXBwZXJDYXNlKCldKSB7XG4gICAgICAgICAgX3RoaXMzLnRvdWNoU3RhcnRYID0gZXZlbnQub3JpZ2luYWxFdmVudC5jbGllbnRYO1xuICAgICAgICB9IGVsc2UgaWYgKCFfdGhpczMuX3BvaW50ZXJFdmVudCkge1xuICAgICAgICAgIF90aGlzMy50b3VjaFN0YXJ0WCA9IGV2ZW50Lm9yaWdpbmFsRXZlbnQudG91Y2hlc1swXS5jbGllbnRYO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICB2YXIgbW92ZSA9IGZ1bmN0aW9uIG1vdmUoZXZlbnQpIHtcbiAgICAgICAgLy8gZW5zdXJlIHN3aXBpbmcgd2l0aCBvbmUgdG91Y2ggYW5kIG5vdCBwaW5jaGluZ1xuICAgICAgICBpZiAoZXZlbnQub3JpZ2luYWxFdmVudC50b3VjaGVzICYmIGV2ZW50Lm9yaWdpbmFsRXZlbnQudG91Y2hlcy5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgX3RoaXMzLnRvdWNoRGVsdGFYID0gMDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBfdGhpczMudG91Y2hEZWx0YVggPSBldmVudC5vcmlnaW5hbEV2ZW50LnRvdWNoZXNbMF0uY2xpZW50WCAtIF90aGlzMy50b3VjaFN0YXJ0WDtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgdmFyIGVuZCA9IGZ1bmN0aW9uIGVuZChldmVudCkge1xuICAgICAgICBpZiAoX3RoaXMzLl9wb2ludGVyRXZlbnQgJiYgUG9pbnRlclR5cGVbZXZlbnQub3JpZ2luYWxFdmVudC5wb2ludGVyVHlwZS50b1VwcGVyQ2FzZSgpXSkge1xuICAgICAgICAgIF90aGlzMy50b3VjaERlbHRhWCA9IGV2ZW50Lm9yaWdpbmFsRXZlbnQuY2xpZW50WCAtIF90aGlzMy50b3VjaFN0YXJ0WDtcbiAgICAgICAgfVxuXG4gICAgICAgIF90aGlzMy5faGFuZGxlU3dpcGUoKTtcblxuICAgICAgICBpZiAoX3RoaXMzLl9jb25maWcucGF1c2UgPT09ICdob3ZlcicpIHtcbiAgICAgICAgICAvLyBJZiBpdCdzIGEgdG91Y2gtZW5hYmxlZCBkZXZpY2UsIG1vdXNlZW50ZXIvbGVhdmUgYXJlIGZpcmVkIGFzXG4gICAgICAgICAgLy8gcGFydCBvZiB0aGUgbW91c2UgY29tcGF0aWJpbGl0eSBldmVudHMgb24gZmlyc3QgdGFwIC0gdGhlIGNhcm91c2VsXG4gICAgICAgICAgLy8gd291bGQgc3RvcCBjeWNsaW5nIHVudGlsIHVzZXIgdGFwcGVkIG91dCBvZiBpdDtcbiAgICAgICAgICAvLyBoZXJlLCB3ZSBsaXN0ZW4gZm9yIHRvdWNoZW5kLCBleHBsaWNpdGx5IHBhdXNlIHRoZSBjYXJvdXNlbFxuICAgICAgICAgIC8vIChhcyBpZiBpdCdzIHRoZSBzZWNvbmQgdGltZSB3ZSB0YXAgb24gaXQsIG1vdXNlZW50ZXIgY29tcGF0IGV2ZW50XG4gICAgICAgICAgLy8gaXMgTk9UIGZpcmVkKSBhbmQgYWZ0ZXIgYSB0aW1lb3V0ICh0byBhbGxvdyBmb3IgbW91c2UgY29tcGF0aWJpbGl0eVxuICAgICAgICAgIC8vIGV2ZW50cyB0byBmaXJlKSB3ZSBleHBsaWNpdGx5IHJlc3RhcnQgY3ljbGluZ1xuICAgICAgICAgIF90aGlzMy5wYXVzZSgpO1xuXG4gICAgICAgICAgaWYgKF90aGlzMy50b3VjaFRpbWVvdXQpIHtcbiAgICAgICAgICAgIGNsZWFyVGltZW91dChfdGhpczMudG91Y2hUaW1lb3V0KTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBfdGhpczMudG91Y2hUaW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpczMuY3ljbGUoZXZlbnQpO1xuICAgICAgICAgIH0sIFRPVUNIRVZFTlRfQ09NUEFUX1dBSVQgKyBfdGhpczMuX2NvbmZpZy5pbnRlcnZhbCk7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgICQodGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKFNlbGVjdG9yJDIuSVRFTV9JTUcpKS5vbihFdmVudCQyLkRSQUdfU1RBUlQsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIHJldHVybiBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB9KTtcblxuICAgICAgaWYgKHRoaXMuX3BvaW50ZXJFdmVudCkge1xuICAgICAgICAkKHRoaXMuX2VsZW1lbnQpLm9uKEV2ZW50JDIuUE9JTlRFUkRPV04sIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgIHJldHVybiBzdGFydChldmVudCk7XG4gICAgICAgIH0pO1xuICAgICAgICAkKHRoaXMuX2VsZW1lbnQpLm9uKEV2ZW50JDIuUE9JTlRFUlVQLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICByZXR1cm4gZW5kKGV2ZW50KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy5fZWxlbWVudC5jbGFzc0xpc3QuYWRkKENsYXNzTmFtZSQyLlBPSU5URVJfRVZFTlQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgJCh0aGlzLl9lbGVtZW50KS5vbihFdmVudCQyLlRPVUNIU1RBUlQsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgIHJldHVybiBzdGFydChldmVudCk7XG4gICAgICAgIH0pO1xuICAgICAgICAkKHRoaXMuX2VsZW1lbnQpLm9uKEV2ZW50JDIuVE9VQ0hNT1ZFLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICByZXR1cm4gbW92ZShldmVudCk7XG4gICAgICAgIH0pO1xuICAgICAgICAkKHRoaXMuX2VsZW1lbnQpLm9uKEV2ZW50JDIuVE9VQ0hFTkQsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgIHJldHVybiBlbmQoZXZlbnQpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3Byb3RvLl9rZXlkb3duID0gZnVuY3Rpb24gX2tleWRvd24oZXZlbnQpIHtcbiAgICAgIGlmICgvaW5wdXR8dGV4dGFyZWEvaS50ZXN0KGV2ZW50LnRhcmdldC50YWdOYW1lKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHN3aXRjaCAoZXZlbnQud2hpY2gpIHtcbiAgICAgICAgY2FzZSBBUlJPV19MRUZUX0tFWUNPREU6XG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICB0aGlzLnByZXYoKTtcbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlIEFSUk9XX1JJR0hUX0tFWUNPREU6XG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICB0aGlzLm5leHQoKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3Byb3RvLl9nZXRJdGVtSW5kZXggPSBmdW5jdGlvbiBfZ2V0SXRlbUluZGV4KGVsZW1lbnQpIHtcbiAgICAgIHRoaXMuX2l0ZW1zID0gZWxlbWVudCAmJiBlbGVtZW50LnBhcmVudE5vZGUgPyBbXS5zbGljZS5jYWxsKGVsZW1lbnQucGFyZW50Tm9kZS5xdWVyeVNlbGVjdG9yQWxsKFNlbGVjdG9yJDIuSVRFTSkpIDogW107XG4gICAgICByZXR1cm4gdGhpcy5faXRlbXMuaW5kZXhPZihlbGVtZW50KTtcbiAgICB9O1xuXG4gICAgX3Byb3RvLl9nZXRJdGVtQnlEaXJlY3Rpb24gPSBmdW5jdGlvbiBfZ2V0SXRlbUJ5RGlyZWN0aW9uKGRpcmVjdGlvbiwgYWN0aXZlRWxlbWVudCkge1xuICAgICAgdmFyIGlzTmV4dERpcmVjdGlvbiA9IGRpcmVjdGlvbiA9PT0gRGlyZWN0aW9uLk5FWFQ7XG4gICAgICB2YXIgaXNQcmV2RGlyZWN0aW9uID0gZGlyZWN0aW9uID09PSBEaXJlY3Rpb24uUFJFVjtcblxuICAgICAgdmFyIGFjdGl2ZUluZGV4ID0gdGhpcy5fZ2V0SXRlbUluZGV4KGFjdGl2ZUVsZW1lbnQpO1xuXG4gICAgICB2YXIgbGFzdEl0ZW1JbmRleCA9IHRoaXMuX2l0ZW1zLmxlbmd0aCAtIDE7XG4gICAgICB2YXIgaXNHb2luZ1RvV3JhcCA9IGlzUHJldkRpcmVjdGlvbiAmJiBhY3RpdmVJbmRleCA9PT0gMCB8fCBpc05leHREaXJlY3Rpb24gJiYgYWN0aXZlSW5kZXggPT09IGxhc3RJdGVtSW5kZXg7XG5cbiAgICAgIGlmIChpc0dvaW5nVG9XcmFwICYmICF0aGlzLl9jb25maWcud3JhcCkge1xuICAgICAgICByZXR1cm4gYWN0aXZlRWxlbWVudDtcbiAgICAgIH1cblxuICAgICAgdmFyIGRlbHRhID0gZGlyZWN0aW9uID09PSBEaXJlY3Rpb24uUFJFViA/IC0xIDogMTtcbiAgICAgIHZhciBpdGVtSW5kZXggPSAoYWN0aXZlSW5kZXggKyBkZWx0YSkgJSB0aGlzLl9pdGVtcy5sZW5ndGg7XG4gICAgICByZXR1cm4gaXRlbUluZGV4ID09PSAtMSA/IHRoaXMuX2l0ZW1zW3RoaXMuX2l0ZW1zLmxlbmd0aCAtIDFdIDogdGhpcy5faXRlbXNbaXRlbUluZGV4XTtcbiAgICB9O1xuXG4gICAgX3Byb3RvLl90cmlnZ2VyU2xpZGVFdmVudCA9IGZ1bmN0aW9uIF90cmlnZ2VyU2xpZGVFdmVudChyZWxhdGVkVGFyZ2V0LCBldmVudERpcmVjdGlvbk5hbWUpIHtcbiAgICAgIHZhciB0YXJnZXRJbmRleCA9IHRoaXMuX2dldEl0ZW1JbmRleChyZWxhdGVkVGFyZ2V0KTtcblxuICAgICAgdmFyIGZyb21JbmRleCA9IHRoaXMuX2dldEl0ZW1JbmRleCh0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoU2VsZWN0b3IkMi5BQ1RJVkVfSVRFTSkpO1xuXG4gICAgICB2YXIgc2xpZGVFdmVudCA9ICQuRXZlbnQoRXZlbnQkMi5TTElERSwge1xuICAgICAgICByZWxhdGVkVGFyZ2V0OiByZWxhdGVkVGFyZ2V0LFxuICAgICAgICBkaXJlY3Rpb246IGV2ZW50RGlyZWN0aW9uTmFtZSxcbiAgICAgICAgZnJvbTogZnJvbUluZGV4LFxuICAgICAgICB0bzogdGFyZ2V0SW5kZXhcbiAgICAgIH0pO1xuICAgICAgJCh0aGlzLl9lbGVtZW50KS50cmlnZ2VyKHNsaWRlRXZlbnQpO1xuICAgICAgcmV0dXJuIHNsaWRlRXZlbnQ7XG4gICAgfTtcblxuICAgIF9wcm90by5fc2V0QWN0aXZlSW5kaWNhdG9yRWxlbWVudCA9IGZ1bmN0aW9uIF9zZXRBY3RpdmVJbmRpY2F0b3JFbGVtZW50KGVsZW1lbnQpIHtcbiAgICAgIGlmICh0aGlzLl9pbmRpY2F0b3JzRWxlbWVudCkge1xuICAgICAgICB2YXIgaW5kaWNhdG9ycyA9IFtdLnNsaWNlLmNhbGwodGhpcy5faW5kaWNhdG9yc0VsZW1lbnQucXVlcnlTZWxlY3RvckFsbChTZWxlY3RvciQyLkFDVElWRSkpO1xuICAgICAgICAkKGluZGljYXRvcnMpLnJlbW92ZUNsYXNzKENsYXNzTmFtZSQyLkFDVElWRSk7XG5cbiAgICAgICAgdmFyIG5leHRJbmRpY2F0b3IgPSB0aGlzLl9pbmRpY2F0b3JzRWxlbWVudC5jaGlsZHJlblt0aGlzLl9nZXRJdGVtSW5kZXgoZWxlbWVudCldO1xuXG4gICAgICAgIGlmIChuZXh0SW5kaWNhdG9yKSB7XG4gICAgICAgICAgJChuZXh0SW5kaWNhdG9yKS5hZGRDbGFzcyhDbGFzc05hbWUkMi5BQ1RJVkUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90by5fc2xpZGUgPSBmdW5jdGlvbiBfc2xpZGUoZGlyZWN0aW9uLCBlbGVtZW50KSB7XG4gICAgICB2YXIgX3RoaXM0ID0gdGhpcztcblxuICAgICAgdmFyIGFjdGl2ZUVsZW1lbnQgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoU2VsZWN0b3IkMi5BQ1RJVkVfSVRFTSk7XG5cbiAgICAgIHZhciBhY3RpdmVFbGVtZW50SW5kZXggPSB0aGlzLl9nZXRJdGVtSW5kZXgoYWN0aXZlRWxlbWVudCk7XG5cbiAgICAgIHZhciBuZXh0RWxlbWVudCA9IGVsZW1lbnQgfHwgYWN0aXZlRWxlbWVudCAmJiB0aGlzLl9nZXRJdGVtQnlEaXJlY3Rpb24oZGlyZWN0aW9uLCBhY3RpdmVFbGVtZW50KTtcblxuICAgICAgdmFyIG5leHRFbGVtZW50SW5kZXggPSB0aGlzLl9nZXRJdGVtSW5kZXgobmV4dEVsZW1lbnQpO1xuXG4gICAgICB2YXIgaXNDeWNsaW5nID0gQm9vbGVhbih0aGlzLl9pbnRlcnZhbCk7XG4gICAgICB2YXIgZGlyZWN0aW9uYWxDbGFzc05hbWU7XG4gICAgICB2YXIgb3JkZXJDbGFzc05hbWU7XG4gICAgICB2YXIgZXZlbnREaXJlY3Rpb25OYW1lO1xuXG4gICAgICBpZiAoZGlyZWN0aW9uID09PSBEaXJlY3Rpb24uTkVYVCkge1xuICAgICAgICBkaXJlY3Rpb25hbENsYXNzTmFtZSA9IENsYXNzTmFtZSQyLkxFRlQ7XG4gICAgICAgIG9yZGVyQ2xhc3NOYW1lID0gQ2xhc3NOYW1lJDIuTkVYVDtcbiAgICAgICAgZXZlbnREaXJlY3Rpb25OYW1lID0gRGlyZWN0aW9uLkxFRlQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBkaXJlY3Rpb25hbENsYXNzTmFtZSA9IENsYXNzTmFtZSQyLlJJR0hUO1xuICAgICAgICBvcmRlckNsYXNzTmFtZSA9IENsYXNzTmFtZSQyLlBSRVY7XG4gICAgICAgIGV2ZW50RGlyZWN0aW9uTmFtZSA9IERpcmVjdGlvbi5SSUdIVDtcbiAgICAgIH1cblxuICAgICAgaWYgKG5leHRFbGVtZW50ICYmICQobmV4dEVsZW1lbnQpLmhhc0NsYXNzKENsYXNzTmFtZSQyLkFDVElWRSkpIHtcbiAgICAgICAgdGhpcy5faXNTbGlkaW5nID0gZmFsc2U7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIHNsaWRlRXZlbnQgPSB0aGlzLl90cmlnZ2VyU2xpZGVFdmVudChuZXh0RWxlbWVudCwgZXZlbnREaXJlY3Rpb25OYW1lKTtcblxuICAgICAgaWYgKHNsaWRlRXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAoIWFjdGl2ZUVsZW1lbnQgfHwgIW5leHRFbGVtZW50KSB7XG4gICAgICAgIC8vIFNvbWUgd2VpcmRuZXNzIGlzIGhhcHBlbmluZywgc28gd2UgYmFpbFxuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHRoaXMuX2lzU2xpZGluZyA9IHRydWU7XG5cbiAgICAgIGlmIChpc0N5Y2xpbmcpIHtcbiAgICAgICAgdGhpcy5wYXVzZSgpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl9zZXRBY3RpdmVJbmRpY2F0b3JFbGVtZW50KG5leHRFbGVtZW50KTtcblxuICAgICAgdmFyIHNsaWRFdmVudCA9ICQuRXZlbnQoRXZlbnQkMi5TTElELCB7XG4gICAgICAgIHJlbGF0ZWRUYXJnZXQ6IG5leHRFbGVtZW50LFxuICAgICAgICBkaXJlY3Rpb246IGV2ZW50RGlyZWN0aW9uTmFtZSxcbiAgICAgICAgZnJvbTogYWN0aXZlRWxlbWVudEluZGV4LFxuICAgICAgICB0bzogbmV4dEVsZW1lbnRJbmRleFxuICAgICAgfSk7XG5cbiAgICAgIGlmICgkKHRoaXMuX2VsZW1lbnQpLmhhc0NsYXNzKENsYXNzTmFtZSQyLlNMSURFKSkge1xuICAgICAgICAkKG5leHRFbGVtZW50KS5hZGRDbGFzcyhvcmRlckNsYXNzTmFtZSk7XG4gICAgICAgIFV0aWwucmVmbG93KG5leHRFbGVtZW50KTtcbiAgICAgICAgJChhY3RpdmVFbGVtZW50KS5hZGRDbGFzcyhkaXJlY3Rpb25hbENsYXNzTmFtZSk7XG4gICAgICAgICQobmV4dEVsZW1lbnQpLmFkZENsYXNzKGRpcmVjdGlvbmFsQ2xhc3NOYW1lKTtcbiAgICAgICAgdmFyIG5leHRFbGVtZW50SW50ZXJ2YWwgPSBwYXJzZUludChuZXh0RWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtaW50ZXJ2YWwnKSwgMTApO1xuXG4gICAgICAgIGlmIChuZXh0RWxlbWVudEludGVydmFsKSB7XG4gICAgICAgICAgdGhpcy5fY29uZmlnLmRlZmF1bHRJbnRlcnZhbCA9IHRoaXMuX2NvbmZpZy5kZWZhdWx0SW50ZXJ2YWwgfHwgdGhpcy5fY29uZmlnLmludGVydmFsO1xuICAgICAgICAgIHRoaXMuX2NvbmZpZy5pbnRlcnZhbCA9IG5leHRFbGVtZW50SW50ZXJ2YWw7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5fY29uZmlnLmludGVydmFsID0gdGhpcy5fY29uZmlnLmRlZmF1bHRJbnRlcnZhbCB8fCB0aGlzLl9jb25maWcuaW50ZXJ2YWw7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgdHJhbnNpdGlvbkR1cmF0aW9uID0gVXRpbC5nZXRUcmFuc2l0aW9uRHVyYXRpb25Gcm9tRWxlbWVudChhY3RpdmVFbGVtZW50KTtcbiAgICAgICAgJChhY3RpdmVFbGVtZW50KS5vbmUoVXRpbC5UUkFOU0lUSU9OX0VORCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICQobmV4dEVsZW1lbnQpLnJlbW92ZUNsYXNzKGRpcmVjdGlvbmFsQ2xhc3NOYW1lICsgXCIgXCIgKyBvcmRlckNsYXNzTmFtZSkuYWRkQ2xhc3MoQ2xhc3NOYW1lJDIuQUNUSVZFKTtcbiAgICAgICAgICAkKGFjdGl2ZUVsZW1lbnQpLnJlbW92ZUNsYXNzKENsYXNzTmFtZSQyLkFDVElWRSArIFwiIFwiICsgb3JkZXJDbGFzc05hbWUgKyBcIiBcIiArIGRpcmVjdGlvbmFsQ2xhc3NOYW1lKTtcbiAgICAgICAgICBfdGhpczQuX2lzU2xpZGluZyA9IGZhbHNlO1xuICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuICQoX3RoaXM0Ll9lbGVtZW50KS50cmlnZ2VyKHNsaWRFdmVudCk7XG4gICAgICAgICAgfSwgMCk7XG4gICAgICAgIH0pLmVtdWxhdGVUcmFuc2l0aW9uRW5kKHRyYW5zaXRpb25EdXJhdGlvbik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAkKGFjdGl2ZUVsZW1lbnQpLnJlbW92ZUNsYXNzKENsYXNzTmFtZSQyLkFDVElWRSk7XG4gICAgICAgICQobmV4dEVsZW1lbnQpLmFkZENsYXNzKENsYXNzTmFtZSQyLkFDVElWRSk7XG4gICAgICAgIHRoaXMuX2lzU2xpZGluZyA9IGZhbHNlO1xuICAgICAgICAkKHRoaXMuX2VsZW1lbnQpLnRyaWdnZXIoc2xpZEV2ZW50KTtcbiAgICAgIH1cblxuICAgICAgaWYgKGlzQ3ljbGluZykge1xuICAgICAgICB0aGlzLmN5Y2xlKCk7XG4gICAgICB9XG4gICAgfSAvLyBTdGF0aWNcbiAgICA7XG5cbiAgICBDYXJvdXNlbC5falF1ZXJ5SW50ZXJmYWNlID0gZnVuY3Rpb24gX2pRdWVyeUludGVyZmFjZShjb25maWcpIHtcbiAgICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZGF0YSA9ICQodGhpcykuZGF0YShEQVRBX0tFWSQyKTtcblxuICAgICAgICB2YXIgX2NvbmZpZyA9IF9vYmplY3RTcHJlYWQyKHt9LCBEZWZhdWx0LCB7fSwgJCh0aGlzKS5kYXRhKCkpO1xuXG4gICAgICAgIGlmICh0eXBlb2YgY29uZmlnID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgIF9jb25maWcgPSBfb2JqZWN0U3ByZWFkMih7fSwgX2NvbmZpZywge30sIGNvbmZpZyk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgYWN0aW9uID0gdHlwZW9mIGNvbmZpZyA9PT0gJ3N0cmluZycgPyBjb25maWcgOiBfY29uZmlnLnNsaWRlO1xuXG4gICAgICAgIGlmICghZGF0YSkge1xuICAgICAgICAgIGRhdGEgPSBuZXcgQ2Fyb3VzZWwodGhpcywgX2NvbmZpZyk7XG4gICAgICAgICAgJCh0aGlzKS5kYXRhKERBVEFfS0VZJDIsIGRhdGEpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHR5cGVvZiBjb25maWcgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgZGF0YS50byhjb25maWcpO1xuICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiBhY3Rpb24gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgaWYgKHR5cGVvZiBkYXRhW2FjdGlvbl0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiTm8gbWV0aG9kIG5hbWVkIFxcXCJcIiArIGFjdGlvbiArIFwiXFxcIlwiKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBkYXRhW2FjdGlvbl0oKTtcbiAgICAgICAgfSBlbHNlIGlmIChfY29uZmlnLmludGVydmFsICYmIF9jb25maWcucmlkZSkge1xuICAgICAgICAgIGRhdGEucGF1c2UoKTtcbiAgICAgICAgICBkYXRhLmN5Y2xlKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICBDYXJvdXNlbC5fZGF0YUFwaUNsaWNrSGFuZGxlciA9IGZ1bmN0aW9uIF9kYXRhQXBpQ2xpY2tIYW5kbGVyKGV2ZW50KSB7XG4gICAgICB2YXIgc2VsZWN0b3IgPSBVdGlsLmdldFNlbGVjdG9yRnJvbUVsZW1lbnQodGhpcyk7XG5cbiAgICAgIGlmICghc2VsZWN0b3IpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB2YXIgdGFyZ2V0ID0gJChzZWxlY3RvcilbMF07XG5cbiAgICAgIGlmICghdGFyZ2V0IHx8ICEkKHRhcmdldCkuaGFzQ2xhc3MoQ2xhc3NOYW1lJDIuQ0FST1VTRUwpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIGNvbmZpZyA9IF9vYmplY3RTcHJlYWQyKHt9LCAkKHRhcmdldCkuZGF0YSgpLCB7fSwgJCh0aGlzKS5kYXRhKCkpO1xuXG4gICAgICB2YXIgc2xpZGVJbmRleCA9IHRoaXMuZ2V0QXR0cmlidXRlKCdkYXRhLXNsaWRlLXRvJyk7XG5cbiAgICAgIGlmIChzbGlkZUluZGV4KSB7XG4gICAgICAgIGNvbmZpZy5pbnRlcnZhbCA9IGZhbHNlO1xuICAgICAgfVxuXG4gICAgICBDYXJvdXNlbC5falF1ZXJ5SW50ZXJmYWNlLmNhbGwoJCh0YXJnZXQpLCBjb25maWcpO1xuXG4gICAgICBpZiAoc2xpZGVJbmRleCkge1xuICAgICAgICAkKHRhcmdldCkuZGF0YShEQVRBX0tFWSQyKS50byhzbGlkZUluZGV4KTtcbiAgICAgIH1cblxuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB9O1xuXG4gICAgX2NyZWF0ZUNsYXNzKENhcm91c2VsLCBudWxsLCBbe1xuICAgICAga2V5OiBcIlZFUlNJT05cIixcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICByZXR1cm4gVkVSU0lPTiQyO1xuICAgICAgfVxuICAgIH0sIHtcbiAgICAgIGtleTogXCJEZWZhdWx0XCIsXG4gICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgcmV0dXJuIERlZmF1bHQ7XG4gICAgICB9XG4gICAgfV0pO1xuXG4gICAgcmV0dXJuIENhcm91c2VsO1xuICB9KCk7XG4gIC8qKlxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICogRGF0YSBBcGkgaW1wbGVtZW50YXRpb25cbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqL1xuXG5cbiAgJChkb2N1bWVudCkub24oRXZlbnQkMi5DTElDS19EQVRBX0FQSSwgU2VsZWN0b3IkMi5EQVRBX1NMSURFLCBDYXJvdXNlbC5fZGF0YUFwaUNsaWNrSGFuZGxlcik7XG4gICQod2luZG93KS5vbihFdmVudCQyLkxPQURfREFUQV9BUEksIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgY2Fyb3VzZWxzID0gW10uc2xpY2UuY2FsbChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFNlbGVjdG9yJDIuREFUQV9SSURFKSk7XG5cbiAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gY2Fyb3VzZWxzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICB2YXIgJGNhcm91c2VsID0gJChjYXJvdXNlbHNbaV0pO1xuXG4gICAgICBDYXJvdXNlbC5falF1ZXJ5SW50ZXJmYWNlLmNhbGwoJGNhcm91c2VsLCAkY2Fyb3VzZWwuZGF0YSgpKTtcbiAgICB9XG4gIH0pO1xuICAvKipcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqIGpRdWVyeVxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICovXG5cbiAgJC5mbltOQU1FJDJdID0gQ2Fyb3VzZWwuX2pRdWVyeUludGVyZmFjZTtcbiAgJC5mbltOQU1FJDJdLkNvbnN0cnVjdG9yID0gQ2Fyb3VzZWw7XG5cbiAgJC5mbltOQU1FJDJdLm5vQ29uZmxpY3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgJC5mbltOQU1FJDJdID0gSlFVRVJZX05PX0NPTkZMSUNUJDI7XG4gICAgcmV0dXJuIENhcm91c2VsLl9qUXVlcnlJbnRlcmZhY2U7XG4gIH07XG5cbiAgLyoqXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKiBDb25zdGFudHNcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqL1xuXG4gIHZhciBOQU1FJDMgPSAnY29sbGFwc2UnO1xuICB2YXIgVkVSU0lPTiQzID0gJzQuNC4xJztcbiAgdmFyIERBVEFfS0VZJDMgPSAnYnMuY29sbGFwc2UnO1xuICB2YXIgRVZFTlRfS0VZJDMgPSBcIi5cIiArIERBVEFfS0VZJDM7XG4gIHZhciBEQVRBX0FQSV9LRVkkMyA9ICcuZGF0YS1hcGknO1xuICB2YXIgSlFVRVJZX05PX0NPTkZMSUNUJDMgPSAkLmZuW05BTUUkM107XG4gIHZhciBEZWZhdWx0JDEgPSB7XG4gICAgdG9nZ2xlOiB0cnVlLFxuICAgIHBhcmVudDogJydcbiAgfTtcbiAgdmFyIERlZmF1bHRUeXBlJDEgPSB7XG4gICAgdG9nZ2xlOiAnYm9vbGVhbicsXG4gICAgcGFyZW50OiAnKHN0cmluZ3xlbGVtZW50KSdcbiAgfTtcbiAgdmFyIEV2ZW50JDMgPSB7XG4gICAgU0hPVzogXCJzaG93XCIgKyBFVkVOVF9LRVkkMyxcbiAgICBTSE9XTjogXCJzaG93blwiICsgRVZFTlRfS0VZJDMsXG4gICAgSElERTogXCJoaWRlXCIgKyBFVkVOVF9LRVkkMyxcbiAgICBISURERU46IFwiaGlkZGVuXCIgKyBFVkVOVF9LRVkkMyxcbiAgICBDTElDS19EQVRBX0FQSTogXCJjbGlja1wiICsgRVZFTlRfS0VZJDMgKyBEQVRBX0FQSV9LRVkkM1xuICB9O1xuICB2YXIgQ2xhc3NOYW1lJDMgPSB7XG4gICAgU0hPVzogJ3Nob3cnLFxuICAgIENPTExBUFNFOiAnY29sbGFwc2UnLFxuICAgIENPTExBUFNJTkc6ICdjb2xsYXBzaW5nJyxcbiAgICBDT0xMQVBTRUQ6ICdjb2xsYXBzZWQnXG4gIH07XG4gIHZhciBEaW1lbnNpb24gPSB7XG4gICAgV0lEVEg6ICd3aWR0aCcsXG4gICAgSEVJR0hUOiAnaGVpZ2h0J1xuICB9O1xuICB2YXIgU2VsZWN0b3IkMyA9IHtcbiAgICBBQ1RJVkVTOiAnLnNob3csIC5jb2xsYXBzaW5nJyxcbiAgICBEQVRBX1RPR0dMRTogJ1tkYXRhLXRvZ2dsZT1cImNvbGxhcHNlXCJdJ1xuICB9O1xuICAvKipcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqIENsYXNzIERlZmluaXRpb25cbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqL1xuXG4gIHZhciBDb2xsYXBzZSA9XG4gIC8qI19fUFVSRV9fKi9cbiAgZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIENvbGxhcHNlKGVsZW1lbnQsIGNvbmZpZykge1xuICAgICAgdGhpcy5faXNUcmFuc2l0aW9uaW5nID0gZmFsc2U7XG4gICAgICB0aGlzLl9lbGVtZW50ID0gZWxlbWVudDtcbiAgICAgIHRoaXMuX2NvbmZpZyA9IHRoaXMuX2dldENvbmZpZyhjb25maWcpO1xuICAgICAgdGhpcy5fdHJpZ2dlckFycmF5ID0gW10uc2xpY2UuY2FsbChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtdG9nZ2xlPVxcXCJjb2xsYXBzZVxcXCJdW2hyZWY9XFxcIiNcIiArIGVsZW1lbnQuaWQgKyBcIlxcXCJdLFwiICsgKFwiW2RhdGEtdG9nZ2xlPVxcXCJjb2xsYXBzZVxcXCJdW2RhdGEtdGFyZ2V0PVxcXCIjXCIgKyBlbGVtZW50LmlkICsgXCJcXFwiXVwiKSkpO1xuICAgICAgdmFyIHRvZ2dsZUxpc3QgPSBbXS5zbGljZS5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoU2VsZWN0b3IkMy5EQVRBX1RPR0dMRSkpO1xuXG4gICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gdG9nZ2xlTGlzdC5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgICB2YXIgZWxlbSA9IHRvZ2dsZUxpc3RbaV07XG4gICAgICAgIHZhciBzZWxlY3RvciA9IFV0aWwuZ2V0U2VsZWN0b3JGcm9tRWxlbWVudChlbGVtKTtcbiAgICAgICAgdmFyIGZpbHRlckVsZW1lbnQgPSBbXS5zbGljZS5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpKS5maWx0ZXIoZnVuY3Rpb24gKGZvdW5kRWxlbSkge1xuICAgICAgICAgIHJldHVybiBmb3VuZEVsZW0gPT09IGVsZW1lbnQ7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmIChzZWxlY3RvciAhPT0gbnVsbCAmJiBmaWx0ZXJFbGVtZW50Lmxlbmd0aCA+IDApIHtcbiAgICAgICAgICB0aGlzLl9zZWxlY3RvciA9IHNlbGVjdG9yO1xuXG4gICAgICAgICAgdGhpcy5fdHJpZ2dlckFycmF5LnB1c2goZWxlbSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdGhpcy5fcGFyZW50ID0gdGhpcy5fY29uZmlnLnBhcmVudCA/IHRoaXMuX2dldFBhcmVudCgpIDogbnVsbDtcblxuICAgICAgaWYgKCF0aGlzLl9jb25maWcucGFyZW50KSB7XG4gICAgICAgIHRoaXMuX2FkZEFyaWFBbmRDb2xsYXBzZWRDbGFzcyh0aGlzLl9lbGVtZW50LCB0aGlzLl90cmlnZ2VyQXJyYXkpO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5fY29uZmlnLnRvZ2dsZSkge1xuICAgICAgICB0aGlzLnRvZ2dsZSgpO1xuICAgICAgfVxuICAgIH0gLy8gR2V0dGVyc1xuXG5cbiAgICB2YXIgX3Byb3RvID0gQ29sbGFwc2UucHJvdG90eXBlO1xuXG4gICAgLy8gUHVibGljXG4gICAgX3Byb3RvLnRvZ2dsZSA9IGZ1bmN0aW9uIHRvZ2dsZSgpIHtcbiAgICAgIGlmICgkKHRoaXMuX2VsZW1lbnQpLmhhc0NsYXNzKENsYXNzTmFtZSQzLlNIT1cpKSB7XG4gICAgICAgIHRoaXMuaGlkZSgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5zaG93KCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90by5zaG93ID0gZnVuY3Rpb24gc2hvdygpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIGlmICh0aGlzLl9pc1RyYW5zaXRpb25pbmcgfHwgJCh0aGlzLl9lbGVtZW50KS5oYXNDbGFzcyhDbGFzc05hbWUkMy5TSE9XKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHZhciBhY3RpdmVzO1xuICAgICAgdmFyIGFjdGl2ZXNEYXRhO1xuXG4gICAgICBpZiAodGhpcy5fcGFyZW50KSB7XG4gICAgICAgIGFjdGl2ZXMgPSBbXS5zbGljZS5jYWxsKHRoaXMuX3BhcmVudC5xdWVyeVNlbGVjdG9yQWxsKFNlbGVjdG9yJDMuQUNUSVZFUykpLmZpbHRlcihmdW5jdGlvbiAoZWxlbSkge1xuICAgICAgICAgIGlmICh0eXBlb2YgX3RoaXMuX2NvbmZpZy5wYXJlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICByZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoJ2RhdGEtcGFyZW50JykgPT09IF90aGlzLl9jb25maWcucGFyZW50O1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiBlbGVtLmNsYXNzTGlzdC5jb250YWlucyhDbGFzc05hbWUkMy5DT0xMQVBTRSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmIChhY3RpdmVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgIGFjdGl2ZXMgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChhY3RpdmVzKSB7XG4gICAgICAgIGFjdGl2ZXNEYXRhID0gJChhY3RpdmVzKS5ub3QodGhpcy5fc2VsZWN0b3IpLmRhdGEoREFUQV9LRVkkMyk7XG5cbiAgICAgICAgaWYgKGFjdGl2ZXNEYXRhICYmIGFjdGl2ZXNEYXRhLl9pc1RyYW5zaXRpb25pbmcpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdmFyIHN0YXJ0RXZlbnQgPSAkLkV2ZW50KEV2ZW50JDMuU0hPVyk7XG4gICAgICAkKHRoaXMuX2VsZW1lbnQpLnRyaWdnZXIoc3RhcnRFdmVudCk7XG5cbiAgICAgIGlmIChzdGFydEV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKGFjdGl2ZXMpIHtcbiAgICAgICAgQ29sbGFwc2UuX2pRdWVyeUludGVyZmFjZS5jYWxsKCQoYWN0aXZlcykubm90KHRoaXMuX3NlbGVjdG9yKSwgJ2hpZGUnKTtcblxuICAgICAgICBpZiAoIWFjdGl2ZXNEYXRhKSB7XG4gICAgICAgICAgJChhY3RpdmVzKS5kYXRhKERBVEFfS0VZJDMsIG51bGwpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHZhciBkaW1lbnNpb24gPSB0aGlzLl9nZXREaW1lbnNpb24oKTtcblxuICAgICAgJCh0aGlzLl9lbGVtZW50KS5yZW1vdmVDbGFzcyhDbGFzc05hbWUkMy5DT0xMQVBTRSkuYWRkQ2xhc3MoQ2xhc3NOYW1lJDMuQ09MTEFQU0lORyk7XG4gICAgICB0aGlzLl9lbGVtZW50LnN0eWxlW2RpbWVuc2lvbl0gPSAwO1xuXG4gICAgICBpZiAodGhpcy5fdHJpZ2dlckFycmF5Lmxlbmd0aCkge1xuICAgICAgICAkKHRoaXMuX3RyaWdnZXJBcnJheSkucmVtb3ZlQ2xhc3MoQ2xhc3NOYW1lJDMuQ09MTEFQU0VEKS5hdHRyKCdhcmlhLWV4cGFuZGVkJywgdHJ1ZSk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuc2V0VHJhbnNpdGlvbmluZyh0cnVlKTtcblxuICAgICAgdmFyIGNvbXBsZXRlID0gZnVuY3Rpb24gY29tcGxldGUoKSB7XG4gICAgICAgICQoX3RoaXMuX2VsZW1lbnQpLnJlbW92ZUNsYXNzKENsYXNzTmFtZSQzLkNPTExBUFNJTkcpLmFkZENsYXNzKENsYXNzTmFtZSQzLkNPTExBUFNFKS5hZGRDbGFzcyhDbGFzc05hbWUkMy5TSE9XKTtcbiAgICAgICAgX3RoaXMuX2VsZW1lbnQuc3R5bGVbZGltZW5zaW9uXSA9ICcnO1xuXG4gICAgICAgIF90aGlzLnNldFRyYW5zaXRpb25pbmcoZmFsc2UpO1xuXG4gICAgICAgICQoX3RoaXMuX2VsZW1lbnQpLnRyaWdnZXIoRXZlbnQkMy5TSE9XTik7XG4gICAgICB9O1xuXG4gICAgICB2YXIgY2FwaXRhbGl6ZWREaW1lbnNpb24gPSBkaW1lbnNpb25bMF0udG9VcHBlckNhc2UoKSArIGRpbWVuc2lvbi5zbGljZSgxKTtcbiAgICAgIHZhciBzY3JvbGxTaXplID0gXCJzY3JvbGxcIiArIGNhcGl0YWxpemVkRGltZW5zaW9uO1xuICAgICAgdmFyIHRyYW5zaXRpb25EdXJhdGlvbiA9IFV0aWwuZ2V0VHJhbnNpdGlvbkR1cmF0aW9uRnJvbUVsZW1lbnQodGhpcy5fZWxlbWVudCk7XG4gICAgICAkKHRoaXMuX2VsZW1lbnQpLm9uZShVdGlsLlRSQU5TSVRJT05fRU5ELCBjb21wbGV0ZSkuZW11bGF0ZVRyYW5zaXRpb25FbmQodHJhbnNpdGlvbkR1cmF0aW9uKTtcbiAgICAgIHRoaXMuX2VsZW1lbnQuc3R5bGVbZGltZW5zaW9uXSA9IHRoaXMuX2VsZW1lbnRbc2Nyb2xsU2l6ZV0gKyBcInB4XCI7XG4gICAgfTtcblxuICAgIF9wcm90by5oaWRlID0gZnVuY3Rpb24gaGlkZSgpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICBpZiAodGhpcy5faXNUcmFuc2l0aW9uaW5nIHx8ICEkKHRoaXMuX2VsZW1lbnQpLmhhc0NsYXNzKENsYXNzTmFtZSQzLlNIT1cpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIHN0YXJ0RXZlbnQgPSAkLkV2ZW50KEV2ZW50JDMuSElERSk7XG4gICAgICAkKHRoaXMuX2VsZW1lbnQpLnRyaWdnZXIoc3RhcnRFdmVudCk7XG5cbiAgICAgIGlmIChzdGFydEV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIGRpbWVuc2lvbiA9IHRoaXMuX2dldERpbWVuc2lvbigpO1xuXG4gICAgICB0aGlzLl9lbGVtZW50LnN0eWxlW2RpbWVuc2lvbl0gPSB0aGlzLl9lbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpW2RpbWVuc2lvbl0gKyBcInB4XCI7XG4gICAgICBVdGlsLnJlZmxvdyh0aGlzLl9lbGVtZW50KTtcbiAgICAgICQodGhpcy5fZWxlbWVudCkuYWRkQ2xhc3MoQ2xhc3NOYW1lJDMuQ09MTEFQU0lORykucmVtb3ZlQ2xhc3MoQ2xhc3NOYW1lJDMuQ09MTEFQU0UpLnJlbW92ZUNsYXNzKENsYXNzTmFtZSQzLlNIT1cpO1xuICAgICAgdmFyIHRyaWdnZXJBcnJheUxlbmd0aCA9IHRoaXMuX3RyaWdnZXJBcnJheS5sZW5ndGg7XG5cbiAgICAgIGlmICh0cmlnZ2VyQXJyYXlMZW5ndGggPiAwKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdHJpZ2dlckFycmF5TGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICB2YXIgdHJpZ2dlciA9IHRoaXMuX3RyaWdnZXJBcnJheVtpXTtcbiAgICAgICAgICB2YXIgc2VsZWN0b3IgPSBVdGlsLmdldFNlbGVjdG9yRnJvbUVsZW1lbnQodHJpZ2dlcik7XG5cbiAgICAgICAgICBpZiAoc2VsZWN0b3IgIT09IG51bGwpIHtcbiAgICAgICAgICAgIHZhciAkZWxlbSA9ICQoW10uc2xpY2UuY2FsbChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKSkpO1xuXG4gICAgICAgICAgICBpZiAoISRlbGVtLmhhc0NsYXNzKENsYXNzTmFtZSQzLlNIT1cpKSB7XG4gICAgICAgICAgICAgICQodHJpZ2dlcikuYWRkQ2xhc3MoQ2xhc3NOYW1lJDMuQ09MTEFQU0VEKS5hdHRyKCdhcmlhLWV4cGFuZGVkJywgZmFsc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB0aGlzLnNldFRyYW5zaXRpb25pbmcodHJ1ZSk7XG5cbiAgICAgIHZhciBjb21wbGV0ZSA9IGZ1bmN0aW9uIGNvbXBsZXRlKCkge1xuICAgICAgICBfdGhpczIuc2V0VHJhbnNpdGlvbmluZyhmYWxzZSk7XG5cbiAgICAgICAgJChfdGhpczIuX2VsZW1lbnQpLnJlbW92ZUNsYXNzKENsYXNzTmFtZSQzLkNPTExBUFNJTkcpLmFkZENsYXNzKENsYXNzTmFtZSQzLkNPTExBUFNFKS50cmlnZ2VyKEV2ZW50JDMuSElEREVOKTtcbiAgICAgIH07XG5cbiAgICAgIHRoaXMuX2VsZW1lbnQuc3R5bGVbZGltZW5zaW9uXSA9ICcnO1xuICAgICAgdmFyIHRyYW5zaXRpb25EdXJhdGlvbiA9IFV0aWwuZ2V0VHJhbnNpdGlvbkR1cmF0aW9uRnJvbUVsZW1lbnQodGhpcy5fZWxlbWVudCk7XG4gICAgICAkKHRoaXMuX2VsZW1lbnQpLm9uZShVdGlsLlRSQU5TSVRJT05fRU5ELCBjb21wbGV0ZSkuZW11bGF0ZVRyYW5zaXRpb25FbmQodHJhbnNpdGlvbkR1cmF0aW9uKTtcbiAgICB9O1xuXG4gICAgX3Byb3RvLnNldFRyYW5zaXRpb25pbmcgPSBmdW5jdGlvbiBzZXRUcmFuc2l0aW9uaW5nKGlzVHJhbnNpdGlvbmluZykge1xuICAgICAgdGhpcy5faXNUcmFuc2l0aW9uaW5nID0gaXNUcmFuc2l0aW9uaW5nO1xuICAgIH07XG5cbiAgICBfcHJvdG8uZGlzcG9zZSA9IGZ1bmN0aW9uIGRpc3Bvc2UoKSB7XG4gICAgICAkLnJlbW92ZURhdGEodGhpcy5fZWxlbWVudCwgREFUQV9LRVkkMyk7XG4gICAgICB0aGlzLl9jb25maWcgPSBudWxsO1xuICAgICAgdGhpcy5fcGFyZW50ID0gbnVsbDtcbiAgICAgIHRoaXMuX2VsZW1lbnQgPSBudWxsO1xuICAgICAgdGhpcy5fdHJpZ2dlckFycmF5ID0gbnVsbDtcbiAgICAgIHRoaXMuX2lzVHJhbnNpdGlvbmluZyA9IG51bGw7XG4gICAgfSAvLyBQcml2YXRlXG4gICAgO1xuXG4gICAgX3Byb3RvLl9nZXRDb25maWcgPSBmdW5jdGlvbiBfZ2V0Q29uZmlnKGNvbmZpZykge1xuICAgICAgY29uZmlnID0gX29iamVjdFNwcmVhZDIoe30sIERlZmF1bHQkMSwge30sIGNvbmZpZyk7XG4gICAgICBjb25maWcudG9nZ2xlID0gQm9vbGVhbihjb25maWcudG9nZ2xlKTsgLy8gQ29lcmNlIHN0cmluZyB2YWx1ZXNcblxuICAgICAgVXRpbC50eXBlQ2hlY2tDb25maWcoTkFNRSQzLCBjb25maWcsIERlZmF1bHRUeXBlJDEpO1xuICAgICAgcmV0dXJuIGNvbmZpZztcbiAgICB9O1xuXG4gICAgX3Byb3RvLl9nZXREaW1lbnNpb24gPSBmdW5jdGlvbiBfZ2V0RGltZW5zaW9uKCkge1xuICAgICAgdmFyIGhhc1dpZHRoID0gJCh0aGlzLl9lbGVtZW50KS5oYXNDbGFzcyhEaW1lbnNpb24uV0lEVEgpO1xuICAgICAgcmV0dXJuIGhhc1dpZHRoID8gRGltZW5zaW9uLldJRFRIIDogRGltZW5zaW9uLkhFSUdIVDtcbiAgICB9O1xuXG4gICAgX3Byb3RvLl9nZXRQYXJlbnQgPSBmdW5jdGlvbiBfZ2V0UGFyZW50KCkge1xuICAgICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICAgIHZhciBwYXJlbnQ7XG5cbiAgICAgIGlmIChVdGlsLmlzRWxlbWVudCh0aGlzLl9jb25maWcucGFyZW50KSkge1xuICAgICAgICBwYXJlbnQgPSB0aGlzLl9jb25maWcucGFyZW50OyAvLyBJdCdzIGEgalF1ZXJ5IG9iamVjdFxuXG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5fY29uZmlnLnBhcmVudC5qcXVlcnkgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgcGFyZW50ID0gdGhpcy5fY29uZmlnLnBhcmVudFswXTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGFyZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9jb25maWcucGFyZW50KTtcbiAgICAgIH1cblxuICAgICAgdmFyIHNlbGVjdG9yID0gXCJbZGF0YS10b2dnbGU9XFxcImNvbGxhcHNlXFxcIl1bZGF0YS1wYXJlbnQ9XFxcIlwiICsgdGhpcy5fY29uZmlnLnBhcmVudCArIFwiXFxcIl1cIjtcbiAgICAgIHZhciBjaGlsZHJlbiA9IFtdLnNsaWNlLmNhbGwocGFyZW50LnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpKTtcbiAgICAgICQoY2hpbGRyZW4pLmVhY2goZnVuY3Rpb24gKGksIGVsZW1lbnQpIHtcbiAgICAgICAgX3RoaXMzLl9hZGRBcmlhQW5kQ29sbGFwc2VkQ2xhc3MoQ29sbGFwc2UuX2dldFRhcmdldEZyb21FbGVtZW50KGVsZW1lbnQpLCBbZWxlbWVudF0pO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gcGFyZW50O1xuICAgIH07XG5cbiAgICBfcHJvdG8uX2FkZEFyaWFBbmRDb2xsYXBzZWRDbGFzcyA9IGZ1bmN0aW9uIF9hZGRBcmlhQW5kQ29sbGFwc2VkQ2xhc3MoZWxlbWVudCwgdHJpZ2dlckFycmF5KSB7XG4gICAgICB2YXIgaXNPcGVuID0gJChlbGVtZW50KS5oYXNDbGFzcyhDbGFzc05hbWUkMy5TSE9XKTtcblxuICAgICAgaWYgKHRyaWdnZXJBcnJheS5sZW5ndGgpIHtcbiAgICAgICAgJCh0cmlnZ2VyQXJyYXkpLnRvZ2dsZUNsYXNzKENsYXNzTmFtZSQzLkNPTExBUFNFRCwgIWlzT3BlbikuYXR0cignYXJpYS1leHBhbmRlZCcsIGlzT3Blbik7XG4gICAgICB9XG4gICAgfSAvLyBTdGF0aWNcbiAgICA7XG5cbiAgICBDb2xsYXBzZS5fZ2V0VGFyZ2V0RnJvbUVsZW1lbnQgPSBmdW5jdGlvbiBfZ2V0VGFyZ2V0RnJvbUVsZW1lbnQoZWxlbWVudCkge1xuICAgICAgdmFyIHNlbGVjdG9yID0gVXRpbC5nZXRTZWxlY3RvckZyb21FbGVtZW50KGVsZW1lbnQpO1xuICAgICAgcmV0dXJuIHNlbGVjdG9yID8gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3RvcikgOiBudWxsO1xuICAgIH07XG5cbiAgICBDb2xsYXBzZS5falF1ZXJ5SW50ZXJmYWNlID0gZnVuY3Rpb24gX2pRdWVyeUludGVyZmFjZShjb25maWcpIHtcbiAgICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgJHRoaXMgPSAkKHRoaXMpO1xuICAgICAgICB2YXIgZGF0YSA9ICR0aGlzLmRhdGEoREFUQV9LRVkkMyk7XG5cbiAgICAgICAgdmFyIF9jb25maWcgPSBfb2JqZWN0U3ByZWFkMih7fSwgRGVmYXVsdCQxLCB7fSwgJHRoaXMuZGF0YSgpLCB7fSwgdHlwZW9mIGNvbmZpZyA9PT0gJ29iamVjdCcgJiYgY29uZmlnID8gY29uZmlnIDoge30pO1xuXG4gICAgICAgIGlmICghZGF0YSAmJiBfY29uZmlnLnRvZ2dsZSAmJiAvc2hvd3xoaWRlLy50ZXN0KGNvbmZpZykpIHtcbiAgICAgICAgICBfY29uZmlnLnRvZ2dsZSA9IGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCFkYXRhKSB7XG4gICAgICAgICAgZGF0YSA9IG5ldyBDb2xsYXBzZSh0aGlzLCBfY29uZmlnKTtcbiAgICAgICAgICAkdGhpcy5kYXRhKERBVEFfS0VZJDMsIGRhdGEpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHR5cGVvZiBjb25maWcgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgaWYgKHR5cGVvZiBkYXRhW2NvbmZpZ10gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiTm8gbWV0aG9kIG5hbWVkIFxcXCJcIiArIGNvbmZpZyArIFwiXFxcIlwiKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBkYXRhW2NvbmZpZ10oKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfTtcblxuICAgIF9jcmVhdGVDbGFzcyhDb2xsYXBzZSwgbnVsbCwgW3tcbiAgICAgIGtleTogXCJWRVJTSU9OXCIsXG4gICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgcmV0dXJuIFZFUlNJT04kMztcbiAgICAgIH1cbiAgICB9LCB7XG4gICAgICBrZXk6IFwiRGVmYXVsdFwiLFxuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgIHJldHVybiBEZWZhdWx0JDE7XG4gICAgICB9XG4gICAgfV0pO1xuXG4gICAgcmV0dXJuIENvbGxhcHNlO1xuICB9KCk7XG4gIC8qKlxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICogRGF0YSBBcGkgaW1wbGVtZW50YXRpb25cbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqL1xuXG5cbiAgJChkb2N1bWVudCkub24oRXZlbnQkMy5DTElDS19EQVRBX0FQSSwgU2VsZWN0b3IkMy5EQVRBX1RPR0dMRSwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgLy8gcHJldmVudERlZmF1bHQgb25seSBmb3IgPGE+IGVsZW1lbnRzICh3aGljaCBjaGFuZ2UgdGhlIFVSTCkgbm90IGluc2lkZSB0aGUgY29sbGFwc2libGUgZWxlbWVudFxuICAgIGlmIChldmVudC5jdXJyZW50VGFyZ2V0LnRhZ05hbWUgPT09ICdBJykge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG5cbiAgICB2YXIgJHRyaWdnZXIgPSAkKHRoaXMpO1xuICAgIHZhciBzZWxlY3RvciA9IFV0aWwuZ2V0U2VsZWN0b3JGcm9tRWxlbWVudCh0aGlzKTtcbiAgICB2YXIgc2VsZWN0b3JzID0gW10uc2xpY2UuY2FsbChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKSk7XG4gICAgJChzZWxlY3RvcnMpLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgdmFyICR0YXJnZXQgPSAkKHRoaXMpO1xuICAgICAgdmFyIGRhdGEgPSAkdGFyZ2V0LmRhdGEoREFUQV9LRVkkMyk7XG4gICAgICB2YXIgY29uZmlnID0gZGF0YSA/ICd0b2dnbGUnIDogJHRyaWdnZXIuZGF0YSgpO1xuXG4gICAgICBDb2xsYXBzZS5falF1ZXJ5SW50ZXJmYWNlLmNhbGwoJHRhcmdldCwgY29uZmlnKTtcbiAgICB9KTtcbiAgfSk7XG4gIC8qKlxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICogalF1ZXJ5XG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKi9cblxuICAkLmZuW05BTUUkM10gPSBDb2xsYXBzZS5falF1ZXJ5SW50ZXJmYWNlO1xuICAkLmZuW05BTUUkM10uQ29uc3RydWN0b3IgPSBDb2xsYXBzZTtcblxuICAkLmZuW05BTUUkM10ubm9Db25mbGljdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAkLmZuW05BTUUkM10gPSBKUVVFUllfTk9fQ09ORkxJQ1QkMztcbiAgICByZXR1cm4gQ29sbGFwc2UuX2pRdWVyeUludGVyZmFjZTtcbiAgfTtcblxuICAvKiohXG4gICAqIEBmaWxlT3ZlcnZpZXcgS2lja2FzcyBsaWJyYXJ5IHRvIGNyZWF0ZSBhbmQgcGxhY2UgcG9wcGVycyBuZWFyIHRoZWlyIHJlZmVyZW5jZSBlbGVtZW50cy5cbiAgICogQHZlcnNpb24gMS4xNi4wXG4gICAqIEBsaWNlbnNlXG4gICAqIENvcHlyaWdodCAoYykgMjAxNiBGZWRlcmljbyBaaXZvbG8gYW5kIGNvbnRyaWJ1dG9yc1xuICAgKlxuICAgKiBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4gICAqIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbiAgICogaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuICAgKiB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4gICAqIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuICAgKiBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuICAgKlxuICAgKiBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGxcbiAgICogY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbiAgICpcbiAgICogVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuICAgKiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbiAgICogRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4gICAqIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbiAgICogTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbiAgICogT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEVcbiAgICogU09GVFdBUkUuXG4gICAqL1xuICB2YXIgaXNCcm93c2VyID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJztcblxuICB2YXIgdGltZW91dER1cmF0aW9uID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBsb25nZXJUaW1lb3V0QnJvd3NlcnMgPSBbJ0VkZ2UnLCAnVHJpZGVudCcsICdGaXJlZm94J107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsb25nZXJUaW1lb3V0QnJvd3NlcnMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIGlmIChpc0Jyb3dzZXIgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKGxvbmdlclRpbWVvdXRCcm93c2Vyc1tpXSkgPj0gMCkge1xuICAgICAgICByZXR1cm4gMTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIDA7XG4gIH0oKTtcblxuICBmdW5jdGlvbiBtaWNyb3Rhc2tEZWJvdW5jZShmbikge1xuICAgIHZhciBjYWxsZWQgPSBmYWxzZTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGNhbGxlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjYWxsZWQgPSB0cnVlO1xuICAgICAgd2luZG93LlByb21pc2UucmVzb2x2ZSgpLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgICBjYWxsZWQgPSBmYWxzZTtcbiAgICAgICAgZm4oKTtcbiAgICAgIH0pO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiB0YXNrRGVib3VuY2UoZm4pIHtcbiAgICB2YXIgc2NoZWR1bGVkID0gZmFsc2U7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmICghc2NoZWR1bGVkKSB7XG4gICAgICAgIHNjaGVkdWxlZCA9IHRydWU7XG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHNjaGVkdWxlZCA9IGZhbHNlO1xuICAgICAgICAgIGZuKCk7XG4gICAgICAgIH0sIHRpbWVvdXREdXJhdGlvbik7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuXG4gIHZhciBzdXBwb3J0c01pY3JvVGFza3MgPSBpc0Jyb3dzZXIgJiYgd2luZG93LlByb21pc2U7XG5cbiAgLyoqXG4gICogQ3JlYXRlIGEgZGVib3VuY2VkIHZlcnNpb24gb2YgYSBtZXRob2QsIHRoYXQncyBhc3luY2hyb25vdXNseSBkZWZlcnJlZFxuICAqIGJ1dCBjYWxsZWQgaW4gdGhlIG1pbmltdW0gdGltZSBwb3NzaWJsZS5cbiAgKlxuICAqIEBtZXRob2RcbiAgKiBAbWVtYmVyb2YgUG9wcGVyLlV0aWxzXG4gICogQGFyZ3VtZW50IHtGdW5jdGlvbn0gZm5cbiAgKiBAcmV0dXJucyB7RnVuY3Rpb259XG4gICovXG4gIHZhciBkZWJvdW5jZSA9IHN1cHBvcnRzTWljcm9UYXNrcyA/IG1pY3JvdGFza0RlYm91bmNlIDogdGFza0RlYm91bmNlO1xuXG4gIC8qKlxuICAgKiBDaGVjayBpZiB0aGUgZ2l2ZW4gdmFyaWFibGUgaXMgYSBmdW5jdGlvblxuICAgKiBAbWV0aG9kXG4gICAqIEBtZW1iZXJvZiBQb3BwZXIuVXRpbHNcbiAgICogQGFyZ3VtZW50IHtBbnl9IGZ1bmN0aW9uVG9DaGVjayAtIHZhcmlhYmxlIHRvIGNoZWNrXG4gICAqIEByZXR1cm5zIHtCb29sZWFufSBhbnN3ZXIgdG86IGlzIGEgZnVuY3Rpb24/XG4gICAqL1xuICBmdW5jdGlvbiBpc0Z1bmN0aW9uKGZ1bmN0aW9uVG9DaGVjaykge1xuICAgIHZhciBnZXRUeXBlID0ge307XG4gICAgcmV0dXJuIGZ1bmN0aW9uVG9DaGVjayAmJiBnZXRUeXBlLnRvU3RyaW5nLmNhbGwoZnVuY3Rpb25Ub0NoZWNrKSA9PT0gJ1tvYmplY3QgRnVuY3Rpb25dJztcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgQ1NTIGNvbXB1dGVkIHByb3BlcnR5IG9mIHRoZSBnaXZlbiBlbGVtZW50XG4gICAqIEBtZXRob2RcbiAgICogQG1lbWJlcm9mIFBvcHBlci5VdGlsc1xuICAgKiBAYXJndW1lbnQge0VlbWVudH0gZWxlbWVudFxuICAgKiBAYXJndW1lbnQge1N0cmluZ30gcHJvcGVydHlcbiAgICovXG4gIGZ1bmN0aW9uIGdldFN0eWxlQ29tcHV0ZWRQcm9wZXJ0eShlbGVtZW50LCBwcm9wZXJ0eSkge1xuICAgIGlmIChlbGVtZW50Lm5vZGVUeXBlICE9PSAxKSB7XG4gICAgICByZXR1cm4gW107XG4gICAgfVxuICAgIC8vIE5PVEU6IDEgRE9NIGFjY2VzcyBoZXJlXG4gICAgdmFyIHdpbmRvdyA9IGVsZW1lbnQub3duZXJEb2N1bWVudC5kZWZhdWx0VmlldztcbiAgICB2YXIgY3NzID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoZWxlbWVudCwgbnVsbCk7XG4gICAgcmV0dXJuIHByb3BlcnR5ID8gY3NzW3Byb3BlcnR5XSA6IGNzcztcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBwYXJlbnROb2RlIG9yIHRoZSBob3N0IG9mIHRoZSBlbGVtZW50XG4gICAqIEBtZXRob2RcbiAgICogQG1lbWJlcm9mIFBvcHBlci5VdGlsc1xuICAgKiBAYXJndW1lbnQge0VsZW1lbnR9IGVsZW1lbnRcbiAgICogQHJldHVybnMge0VsZW1lbnR9IHBhcmVudFxuICAgKi9cbiAgZnVuY3Rpb24gZ2V0UGFyZW50Tm9kZShlbGVtZW50KSB7XG4gICAgaWYgKGVsZW1lbnQubm9kZU5hbWUgPT09ICdIVE1MJykge1xuICAgICAgcmV0dXJuIGVsZW1lbnQ7XG4gICAgfVxuICAgIHJldHVybiBlbGVtZW50LnBhcmVudE5vZGUgfHwgZWxlbWVudC5ob3N0O1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIHNjcm9sbGluZyBwYXJlbnQgb2YgdGhlIGdpdmVuIGVsZW1lbnRcbiAgICogQG1ldGhvZFxuICAgKiBAbWVtYmVyb2YgUG9wcGVyLlV0aWxzXG4gICAqIEBhcmd1bWVudCB7RWxlbWVudH0gZWxlbWVudFxuICAgKiBAcmV0dXJucyB7RWxlbWVudH0gc2Nyb2xsIHBhcmVudFxuICAgKi9cbiAgZnVuY3Rpb24gZ2V0U2Nyb2xsUGFyZW50KGVsZW1lbnQpIHtcbiAgICAvLyBSZXR1cm4gYm9keSwgYGdldFNjcm9sbGAgd2lsbCB0YWtlIGNhcmUgdG8gZ2V0IHRoZSBjb3JyZWN0IGBzY3JvbGxUb3BgIGZyb20gaXRcbiAgICBpZiAoIWVsZW1lbnQpIHtcbiAgICAgIHJldHVybiBkb2N1bWVudC5ib2R5O1xuICAgIH1cblxuICAgIHN3aXRjaCAoZWxlbWVudC5ub2RlTmFtZSkge1xuICAgICAgY2FzZSAnSFRNTCc6XG4gICAgICBjYXNlICdCT0RZJzpcbiAgICAgICAgcmV0dXJuIGVsZW1lbnQub3duZXJEb2N1bWVudC5ib2R5O1xuICAgICAgY2FzZSAnI2RvY3VtZW50JzpcbiAgICAgICAgcmV0dXJuIGVsZW1lbnQuYm9keTtcbiAgICB9XG5cbiAgICAvLyBGaXJlZm94IHdhbnQgdXMgdG8gY2hlY2sgYC14YCBhbmQgYC15YCB2YXJpYXRpb25zIGFzIHdlbGxcblxuICAgIHZhciBfZ2V0U3R5bGVDb21wdXRlZFByb3AgPSBnZXRTdHlsZUNvbXB1dGVkUHJvcGVydHkoZWxlbWVudCksXG4gICAgICAgIG92ZXJmbG93ID0gX2dldFN0eWxlQ29tcHV0ZWRQcm9wLm92ZXJmbG93LFxuICAgICAgICBvdmVyZmxvd1ggPSBfZ2V0U3R5bGVDb21wdXRlZFByb3Aub3ZlcmZsb3dYLFxuICAgICAgICBvdmVyZmxvd1kgPSBfZ2V0U3R5bGVDb21wdXRlZFByb3Aub3ZlcmZsb3dZO1xuXG4gICAgaWYgKC8oYXV0b3xzY3JvbGx8b3ZlcmxheSkvLnRlc3Qob3ZlcmZsb3cgKyBvdmVyZmxvd1kgKyBvdmVyZmxvd1gpKSB7XG4gICAgICByZXR1cm4gZWxlbWVudDtcbiAgICB9XG5cbiAgICByZXR1cm4gZ2V0U2Nyb2xsUGFyZW50KGdldFBhcmVudE5vZGUoZWxlbWVudCkpO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIHJlZmVyZW5jZSBub2RlIG9mIHRoZSByZWZlcmVuY2Ugb2JqZWN0LCBvciB0aGUgcmVmZXJlbmNlIG9iamVjdCBpdHNlbGYuXG4gICAqIEBtZXRob2RcbiAgICogQG1lbWJlcm9mIFBvcHBlci5VdGlsc1xuICAgKiBAcGFyYW0ge0VsZW1lbnR8T2JqZWN0fSByZWZlcmVuY2UgLSB0aGUgcmVmZXJlbmNlIGVsZW1lbnQgKHRoZSBwb3BwZXIgd2lsbCBiZSByZWxhdGl2ZSB0byB0aGlzKVxuICAgKiBAcmV0dXJucyB7RWxlbWVudH0gcGFyZW50XG4gICAqL1xuICBmdW5jdGlvbiBnZXRSZWZlcmVuY2VOb2RlKHJlZmVyZW5jZSkge1xuICAgIHJldHVybiByZWZlcmVuY2UgJiYgcmVmZXJlbmNlLnJlZmVyZW5jZU5vZGUgPyByZWZlcmVuY2UucmVmZXJlbmNlTm9kZSA6IHJlZmVyZW5jZTtcbiAgfVxuXG4gIHZhciBpc0lFMTEgPSBpc0Jyb3dzZXIgJiYgISEod2luZG93Lk1TSW5wdXRNZXRob2RDb250ZXh0ICYmIGRvY3VtZW50LmRvY3VtZW50TW9kZSk7XG4gIHZhciBpc0lFMTAgPSBpc0Jyb3dzZXIgJiYgL01TSUUgMTAvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7XG5cbiAgLyoqXG4gICAqIERldGVybWluZXMgaWYgdGhlIGJyb3dzZXIgaXMgSW50ZXJuZXQgRXhwbG9yZXJcbiAgICogQG1ldGhvZFxuICAgKiBAbWVtYmVyb2YgUG9wcGVyLlV0aWxzXG4gICAqIEBwYXJhbSB7TnVtYmVyfSB2ZXJzaW9uIHRvIGNoZWNrXG4gICAqIEByZXR1cm5zIHtCb29sZWFufSBpc0lFXG4gICAqL1xuICBmdW5jdGlvbiBpc0lFKHZlcnNpb24pIHtcbiAgICBpZiAodmVyc2lvbiA9PT0gMTEpIHtcbiAgICAgIHJldHVybiBpc0lFMTE7XG4gICAgfVxuICAgIGlmICh2ZXJzaW9uID09PSAxMCkge1xuICAgICAgcmV0dXJuIGlzSUUxMDtcbiAgICB9XG4gICAgcmV0dXJuIGlzSUUxMSB8fCBpc0lFMTA7XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyB0aGUgb2Zmc2V0IHBhcmVudCBvZiB0aGUgZ2l2ZW4gZWxlbWVudFxuICAgKiBAbWV0aG9kXG4gICAqIEBtZW1iZXJvZiBQb3BwZXIuVXRpbHNcbiAgICogQGFyZ3VtZW50IHtFbGVtZW50fSBlbGVtZW50XG4gICAqIEByZXR1cm5zIHtFbGVtZW50fSBvZmZzZXQgcGFyZW50XG4gICAqL1xuICBmdW5jdGlvbiBnZXRPZmZzZXRQYXJlbnQoZWxlbWVudCkge1xuICAgIGlmICghZWxlbWVudCkge1xuICAgICAgcmV0dXJuIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcbiAgICB9XG5cbiAgICB2YXIgbm9PZmZzZXRQYXJlbnQgPSBpc0lFKDEwKSA/IGRvY3VtZW50LmJvZHkgOiBudWxsO1xuXG4gICAgLy8gTk9URTogMSBET00gYWNjZXNzIGhlcmVcbiAgICB2YXIgb2Zmc2V0UGFyZW50ID0gZWxlbWVudC5vZmZzZXRQYXJlbnQgfHwgbnVsbDtcbiAgICAvLyBTa2lwIGhpZGRlbiBlbGVtZW50cyB3aGljaCBkb24ndCBoYXZlIGFuIG9mZnNldFBhcmVudFxuICAgIHdoaWxlIChvZmZzZXRQYXJlbnQgPT09IG5vT2Zmc2V0UGFyZW50ICYmIGVsZW1lbnQubmV4dEVsZW1lbnRTaWJsaW5nKSB7XG4gICAgICBvZmZzZXRQYXJlbnQgPSAoZWxlbWVudCA9IGVsZW1lbnQubmV4dEVsZW1lbnRTaWJsaW5nKS5vZmZzZXRQYXJlbnQ7XG4gICAgfVxuXG4gICAgdmFyIG5vZGVOYW1lID0gb2Zmc2V0UGFyZW50ICYmIG9mZnNldFBhcmVudC5ub2RlTmFtZTtcblxuICAgIGlmICghbm9kZU5hbWUgfHwgbm9kZU5hbWUgPT09ICdCT0RZJyB8fCBub2RlTmFtZSA9PT0gJ0hUTUwnKSB7XG4gICAgICByZXR1cm4gZWxlbWVudCA/IGVsZW1lbnQub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQgOiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG4gICAgfVxuXG4gICAgLy8gLm9mZnNldFBhcmVudCB3aWxsIHJldHVybiB0aGUgY2xvc2VzdCBUSCwgVEQgb3IgVEFCTEUgaW4gY2FzZVxuICAgIC8vIG5vIG9mZnNldFBhcmVudCBpcyBwcmVzZW50LCBJIGhhdGUgdGhpcyBqb2IuLi5cbiAgICBpZiAoWydUSCcsICdURCcsICdUQUJMRSddLmluZGV4T2Yob2Zmc2V0UGFyZW50Lm5vZGVOYW1lKSAhPT0gLTEgJiYgZ2V0U3R5bGVDb21wdXRlZFByb3BlcnR5KG9mZnNldFBhcmVudCwgJ3Bvc2l0aW9uJykgPT09ICdzdGF0aWMnKSB7XG4gICAgICByZXR1cm4gZ2V0T2Zmc2V0UGFyZW50KG9mZnNldFBhcmVudCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG9mZnNldFBhcmVudDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGlzT2Zmc2V0Q29udGFpbmVyKGVsZW1lbnQpIHtcbiAgICB2YXIgbm9kZU5hbWUgPSBlbGVtZW50Lm5vZGVOYW1lO1xuXG4gICAgaWYgKG5vZGVOYW1lID09PSAnQk9EWScpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIG5vZGVOYW1lID09PSAnSFRNTCcgfHwgZ2V0T2Zmc2V0UGFyZW50KGVsZW1lbnQuZmlyc3RFbGVtZW50Q2hpbGQpID09PSBlbGVtZW50O1xuICB9XG5cbiAgLyoqXG4gICAqIEZpbmRzIHRoZSByb290IG5vZGUgKGRvY3VtZW50LCBzaGFkb3dET00gcm9vdCkgb2YgdGhlIGdpdmVuIGVsZW1lbnRcbiAgICogQG1ldGhvZFxuICAgKiBAbWVtYmVyb2YgUG9wcGVyLlV0aWxzXG4gICAqIEBhcmd1bWVudCB7RWxlbWVudH0gbm9kZVxuICAgKiBAcmV0dXJucyB7RWxlbWVudH0gcm9vdCBub2RlXG4gICAqL1xuICBmdW5jdGlvbiBnZXRSb290KG5vZGUpIHtcbiAgICBpZiAobm9kZS5wYXJlbnROb2RlICE9PSBudWxsKSB7XG4gICAgICByZXR1cm4gZ2V0Um9vdChub2RlLnBhcmVudE5vZGUpO1xuICAgIH1cblxuICAgIHJldHVybiBub2RlO1xuICB9XG5cbiAgLyoqXG4gICAqIEZpbmRzIHRoZSBvZmZzZXQgcGFyZW50IGNvbW1vbiB0byB0aGUgdHdvIHByb3ZpZGVkIG5vZGVzXG4gICAqIEBtZXRob2RcbiAgICogQG1lbWJlcm9mIFBvcHBlci5VdGlsc1xuICAgKiBAYXJndW1lbnQge0VsZW1lbnR9IGVsZW1lbnQxXG4gICAqIEBhcmd1bWVudCB7RWxlbWVudH0gZWxlbWVudDJcbiAgICogQHJldHVybnMge0VsZW1lbnR9IGNvbW1vbiBvZmZzZXQgcGFyZW50XG4gICAqL1xuICBmdW5jdGlvbiBmaW5kQ29tbW9uT2Zmc2V0UGFyZW50KGVsZW1lbnQxLCBlbGVtZW50Mikge1xuICAgIC8vIFRoaXMgY2hlY2sgaXMgbmVlZGVkIHRvIGF2b2lkIGVycm9ycyBpbiBjYXNlIG9uZSBvZiB0aGUgZWxlbWVudHMgaXNuJ3QgZGVmaW5lZCBmb3IgYW55IHJlYXNvblxuICAgIGlmICghZWxlbWVudDEgfHwgIWVsZW1lbnQxLm5vZGVUeXBlIHx8ICFlbGVtZW50MiB8fCAhZWxlbWVudDIubm9kZVR5cGUpIHtcbiAgICAgIHJldHVybiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG4gICAgfVxuXG4gICAgLy8gSGVyZSB3ZSBtYWtlIHN1cmUgdG8gZ2l2ZSBhcyBcInN0YXJ0XCIgdGhlIGVsZW1lbnQgdGhhdCBjb21lcyBmaXJzdCBpbiB0aGUgRE9NXG4gICAgdmFyIG9yZGVyID0gZWxlbWVudDEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oZWxlbWVudDIpICYgTm9kZS5ET0NVTUVOVF9QT1NJVElPTl9GT0xMT1dJTkc7XG4gICAgdmFyIHN0YXJ0ID0gb3JkZXIgPyBlbGVtZW50MSA6IGVsZW1lbnQyO1xuICAgIHZhciBlbmQgPSBvcmRlciA/IGVsZW1lbnQyIDogZWxlbWVudDE7XG5cbiAgICAvLyBHZXQgY29tbW9uIGFuY2VzdG9yIGNvbnRhaW5lclxuICAgIHZhciByYW5nZSA9IGRvY3VtZW50LmNyZWF0ZVJhbmdlKCk7XG4gICAgcmFuZ2Uuc2V0U3RhcnQoc3RhcnQsIDApO1xuICAgIHJhbmdlLnNldEVuZChlbmQsIDApO1xuICAgIHZhciBjb21tb25BbmNlc3RvckNvbnRhaW5lciA9IHJhbmdlLmNvbW1vbkFuY2VzdG9yQ29udGFpbmVyO1xuXG4gICAgLy8gQm90aCBub2RlcyBhcmUgaW5zaWRlICNkb2N1bWVudFxuXG4gICAgaWYgKGVsZW1lbnQxICE9PSBjb21tb25BbmNlc3RvckNvbnRhaW5lciAmJiBlbGVtZW50MiAhPT0gY29tbW9uQW5jZXN0b3JDb250YWluZXIgfHwgc3RhcnQuY29udGFpbnMoZW5kKSkge1xuICAgICAgaWYgKGlzT2Zmc2V0Q29udGFpbmVyKGNvbW1vbkFuY2VzdG9yQ29udGFpbmVyKSkge1xuICAgICAgICByZXR1cm4gY29tbW9uQW5jZXN0b3JDb250YWluZXI7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBnZXRPZmZzZXRQYXJlbnQoY29tbW9uQW5jZXN0b3JDb250YWluZXIpO1xuICAgIH1cblxuICAgIC8vIG9uZSBvZiB0aGUgbm9kZXMgaXMgaW5zaWRlIHNoYWRvd0RPTSwgZmluZCB3aGljaCBvbmVcbiAgICB2YXIgZWxlbWVudDFyb290ID0gZ2V0Um9vdChlbGVtZW50MSk7XG4gICAgaWYgKGVsZW1lbnQxcm9vdC5ob3N0KSB7XG4gICAgICByZXR1cm4gZmluZENvbW1vbk9mZnNldFBhcmVudChlbGVtZW50MXJvb3QuaG9zdCwgZWxlbWVudDIpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gZmluZENvbW1vbk9mZnNldFBhcmVudChlbGVtZW50MSwgZ2V0Um9vdChlbGVtZW50MikuaG9zdCk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEdldHMgdGhlIHNjcm9sbCB2YWx1ZSBvZiB0aGUgZ2l2ZW4gZWxlbWVudCBpbiB0aGUgZ2l2ZW4gc2lkZSAodG9wIGFuZCBsZWZ0KVxuICAgKiBAbWV0aG9kXG4gICAqIEBtZW1iZXJvZiBQb3BwZXIuVXRpbHNcbiAgICogQGFyZ3VtZW50IHtFbGVtZW50fSBlbGVtZW50XG4gICAqIEBhcmd1bWVudCB7U3RyaW5nfSBzaWRlIGB0b3BgIG9yIGBsZWZ0YFxuICAgKiBAcmV0dXJucyB7bnVtYmVyfSBhbW91bnQgb2Ygc2Nyb2xsZWQgcGl4ZWxzXG4gICAqL1xuICBmdW5jdGlvbiBnZXRTY3JvbGwoZWxlbWVudCkge1xuICAgIHZhciBzaWRlID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAndG9wJztcblxuICAgIHZhciB1cHBlclNpZGUgPSBzaWRlID09PSAndG9wJyA/ICdzY3JvbGxUb3AnIDogJ3Njcm9sbExlZnQnO1xuICAgIHZhciBub2RlTmFtZSA9IGVsZW1lbnQubm9kZU5hbWU7XG5cbiAgICBpZiAobm9kZU5hbWUgPT09ICdCT0RZJyB8fCBub2RlTmFtZSA9PT0gJ0hUTUwnKSB7XG4gICAgICB2YXIgaHRtbCA9IGVsZW1lbnQub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG4gICAgICB2YXIgc2Nyb2xsaW5nRWxlbWVudCA9IGVsZW1lbnQub3duZXJEb2N1bWVudC5zY3JvbGxpbmdFbGVtZW50IHx8IGh0bWw7XG4gICAgICByZXR1cm4gc2Nyb2xsaW5nRWxlbWVudFt1cHBlclNpZGVdO1xuICAgIH1cblxuICAgIHJldHVybiBlbGVtZW50W3VwcGVyU2lkZV07XG4gIH1cblxuICAvKlxuICAgKiBTdW0gb3Igc3VidHJhY3QgdGhlIGVsZW1lbnQgc2Nyb2xsIHZhbHVlcyAobGVmdCBhbmQgdG9wKSBmcm9tIGEgZ2l2ZW4gcmVjdCBvYmplY3RcbiAgICogQG1ldGhvZFxuICAgKiBAbWVtYmVyb2YgUG9wcGVyLlV0aWxzXG4gICAqIEBwYXJhbSB7T2JqZWN0fSByZWN0IC0gUmVjdCBvYmplY3QgeW91IHdhbnQgdG8gY2hhbmdlXG4gICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsZW1lbnQgLSBUaGUgZWxlbWVudCBmcm9tIHRoZSBmdW5jdGlvbiByZWFkcyB0aGUgc2Nyb2xsIHZhbHVlc1xuICAgKiBAcGFyYW0ge0Jvb2xlYW59IHN1YnRyYWN0IC0gc2V0IHRvIHRydWUgaWYgeW91IHdhbnQgdG8gc3VidHJhY3QgdGhlIHNjcm9sbCB2YWx1ZXNcbiAgICogQHJldHVybiB7T2JqZWN0fSByZWN0IC0gVGhlIG1vZGlmaWVyIHJlY3Qgb2JqZWN0XG4gICAqL1xuICBmdW5jdGlvbiBpbmNsdWRlU2Nyb2xsKHJlY3QsIGVsZW1lbnQpIHtcbiAgICB2YXIgc3VidHJhY3QgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IGZhbHNlO1xuXG4gICAgdmFyIHNjcm9sbFRvcCA9IGdldFNjcm9sbChlbGVtZW50LCAndG9wJyk7XG4gICAgdmFyIHNjcm9sbExlZnQgPSBnZXRTY3JvbGwoZWxlbWVudCwgJ2xlZnQnKTtcbiAgICB2YXIgbW9kaWZpZXIgPSBzdWJ0cmFjdCA/IC0xIDogMTtcbiAgICByZWN0LnRvcCArPSBzY3JvbGxUb3AgKiBtb2RpZmllcjtcbiAgICByZWN0LmJvdHRvbSArPSBzY3JvbGxUb3AgKiBtb2RpZmllcjtcbiAgICByZWN0LmxlZnQgKz0gc2Nyb2xsTGVmdCAqIG1vZGlmaWVyO1xuICAgIHJlY3QucmlnaHQgKz0gc2Nyb2xsTGVmdCAqIG1vZGlmaWVyO1xuICAgIHJldHVybiByZWN0O1xuICB9XG5cbiAgLypcbiAgICogSGVscGVyIHRvIGRldGVjdCBib3JkZXJzIG9mIGEgZ2l2ZW4gZWxlbWVudFxuICAgKiBAbWV0aG9kXG4gICAqIEBtZW1iZXJvZiBQb3BwZXIuVXRpbHNcbiAgICogQHBhcmFtIHtDU1NTdHlsZURlY2xhcmF0aW9ufSBzdHlsZXNcbiAgICogUmVzdWx0IG9mIGBnZXRTdHlsZUNvbXB1dGVkUHJvcGVydHlgIG9uIHRoZSBnaXZlbiBlbGVtZW50XG4gICAqIEBwYXJhbSB7U3RyaW5nfSBheGlzIC0gYHhgIG9yIGB5YFxuICAgKiBAcmV0dXJuIHtudW1iZXJ9IGJvcmRlcnMgLSBUaGUgYm9yZGVycyBzaXplIG9mIHRoZSBnaXZlbiBheGlzXG4gICAqL1xuXG4gIGZ1bmN0aW9uIGdldEJvcmRlcnNTaXplKHN0eWxlcywgYXhpcykge1xuICAgIHZhciBzaWRlQSA9IGF4aXMgPT09ICd4JyA/ICdMZWZ0JyA6ICdUb3AnO1xuICAgIHZhciBzaWRlQiA9IHNpZGVBID09PSAnTGVmdCcgPyAnUmlnaHQnIDogJ0JvdHRvbSc7XG5cbiAgICByZXR1cm4gcGFyc2VGbG9hdChzdHlsZXNbJ2JvcmRlcicgKyBzaWRlQSArICdXaWR0aCddLCAxMCkgKyBwYXJzZUZsb2F0KHN0eWxlc1snYm9yZGVyJyArIHNpZGVCICsgJ1dpZHRoJ10sIDEwKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldFNpemUoYXhpcywgYm9keSwgaHRtbCwgY29tcHV0ZWRTdHlsZSkge1xuICAgIHJldHVybiBNYXRoLm1heChib2R5WydvZmZzZXQnICsgYXhpc10sIGJvZHlbJ3Njcm9sbCcgKyBheGlzXSwgaHRtbFsnY2xpZW50JyArIGF4aXNdLCBodG1sWydvZmZzZXQnICsgYXhpc10sIGh0bWxbJ3Njcm9sbCcgKyBheGlzXSwgaXNJRSgxMCkgPyBwYXJzZUludChodG1sWydvZmZzZXQnICsgYXhpc10pICsgcGFyc2VJbnQoY29tcHV0ZWRTdHlsZVsnbWFyZ2luJyArIChheGlzID09PSAnSGVpZ2h0JyA/ICdUb3AnIDogJ0xlZnQnKV0pICsgcGFyc2VJbnQoY29tcHV0ZWRTdHlsZVsnbWFyZ2luJyArIChheGlzID09PSAnSGVpZ2h0JyA/ICdCb3R0b20nIDogJ1JpZ2h0JyldKSA6IDApO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0V2luZG93U2l6ZXMoZG9jdW1lbnQpIHtcbiAgICB2YXIgYm9keSA9IGRvY3VtZW50LmJvZHk7XG4gICAgdmFyIGh0bWwgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG4gICAgdmFyIGNvbXB1dGVkU3R5bGUgPSBpc0lFKDEwKSAmJiBnZXRDb21wdXRlZFN0eWxlKGh0bWwpO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGhlaWdodDogZ2V0U2l6ZSgnSGVpZ2h0JywgYm9keSwgaHRtbCwgY29tcHV0ZWRTdHlsZSksXG4gICAgICB3aWR0aDogZ2V0U2l6ZSgnV2lkdGgnLCBib2R5LCBodG1sLCBjb21wdXRlZFN0eWxlKVxuICAgIH07XG4gIH1cblxuICB2YXIgY2xhc3NDYWxsQ2hlY2sgPSBmdW5jdGlvbiAoaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gICAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7XG4gICAgfVxuICB9O1xuXG4gIHZhciBjcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTtcbiAgICAgICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlO1xuICAgICAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgICAgIGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICAgICAgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgICAgIGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICAgICAgcmV0dXJuIENvbnN0cnVjdG9yO1xuICAgIH07XG4gIH0oKTtcblxuXG5cblxuXG4gIHZhciBkZWZpbmVQcm9wZXJ0eSA9IGZ1bmN0aW9uIChvYmosIGtleSwgdmFsdWUpIHtcbiAgICBpZiAoa2V5IGluIG9iaikge1xuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICB3cml0YWJsZTogdHJ1ZVxuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG9ialtrZXldID0gdmFsdWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIG9iajtcbiAgfTtcblxuICB2YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcblxuICAgICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9O1xuXG4gIC8qKlxuICAgKiBHaXZlbiBlbGVtZW50IG9mZnNldHMsIGdlbmVyYXRlIGFuIG91dHB1dCBzaW1pbGFyIHRvIGdldEJvdW5kaW5nQ2xpZW50UmVjdFxuICAgKiBAbWV0aG9kXG4gICAqIEBtZW1iZXJvZiBQb3BwZXIuVXRpbHNcbiAgICogQGFyZ3VtZW50IHtPYmplY3R9IG9mZnNldHNcbiAgICogQHJldHVybnMge09iamVjdH0gQ2xpZW50UmVjdCBsaWtlIG91dHB1dFxuICAgKi9cbiAgZnVuY3Rpb24gZ2V0Q2xpZW50UmVjdChvZmZzZXRzKSB7XG4gICAgcmV0dXJuIF9leHRlbmRzKHt9LCBvZmZzZXRzLCB7XG4gICAgICByaWdodDogb2Zmc2V0cy5sZWZ0ICsgb2Zmc2V0cy53aWR0aCxcbiAgICAgIGJvdHRvbTogb2Zmc2V0cy50b3AgKyBvZmZzZXRzLmhlaWdodFxuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBib3VuZGluZyBjbGllbnQgcmVjdCBvZiBnaXZlbiBlbGVtZW50XG4gICAqIEBtZXRob2RcbiAgICogQG1lbWJlcm9mIFBvcHBlci5VdGlsc1xuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbGVtZW50XG4gICAqIEByZXR1cm4ge09iamVjdH0gY2xpZW50IHJlY3RcbiAgICovXG4gIGZ1bmN0aW9uIGdldEJvdW5kaW5nQ2xpZW50UmVjdChlbGVtZW50KSB7XG4gICAgdmFyIHJlY3QgPSB7fTtcblxuICAgIC8vIElFMTAgMTAgRklYOiBQbGVhc2UsIGRvbid0IGFzaywgdGhlIGVsZW1lbnQgaXNuJ3RcbiAgICAvLyBjb25zaWRlcmVkIGluIERPTSBpbiBzb21lIGNpcmN1bXN0YW5jZXMuLi5cbiAgICAvLyBUaGlzIGlzbid0IHJlcHJvZHVjaWJsZSBpbiBJRTEwIGNvbXBhdGliaWxpdHkgbW9kZSBvZiBJRTExXG4gICAgdHJ5IHtcbiAgICAgIGlmIChpc0lFKDEwKSkge1xuICAgICAgICByZWN0ID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgdmFyIHNjcm9sbFRvcCA9IGdldFNjcm9sbChlbGVtZW50LCAndG9wJyk7XG4gICAgICAgIHZhciBzY3JvbGxMZWZ0ID0gZ2V0U2Nyb2xsKGVsZW1lbnQsICdsZWZ0Jyk7XG4gICAgICAgIHJlY3QudG9wICs9IHNjcm9sbFRvcDtcbiAgICAgICAgcmVjdC5sZWZ0ICs9IHNjcm9sbExlZnQ7XG4gICAgICAgIHJlY3QuYm90dG9tICs9IHNjcm9sbFRvcDtcbiAgICAgICAgcmVjdC5yaWdodCArPSBzY3JvbGxMZWZ0O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVjdCA9IGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZSkge31cblxuICAgIHZhciByZXN1bHQgPSB7XG4gICAgICBsZWZ0OiByZWN0LmxlZnQsXG4gICAgICB0b3A6IHJlY3QudG9wLFxuICAgICAgd2lkdGg6IHJlY3QucmlnaHQgLSByZWN0LmxlZnQsXG4gICAgICBoZWlnaHQ6IHJlY3QuYm90dG9tIC0gcmVjdC50b3BcbiAgICB9O1xuXG4gICAgLy8gc3VidHJhY3Qgc2Nyb2xsYmFyIHNpemUgZnJvbSBzaXplc1xuICAgIHZhciBzaXplcyA9IGVsZW1lbnQubm9kZU5hbWUgPT09ICdIVE1MJyA/IGdldFdpbmRvd1NpemVzKGVsZW1lbnQub3duZXJEb2N1bWVudCkgOiB7fTtcbiAgICB2YXIgd2lkdGggPSBzaXplcy53aWR0aCB8fCBlbGVtZW50LmNsaWVudFdpZHRoIHx8IHJlc3VsdC53aWR0aDtcbiAgICB2YXIgaGVpZ2h0ID0gc2l6ZXMuaGVpZ2h0IHx8IGVsZW1lbnQuY2xpZW50SGVpZ2h0IHx8IHJlc3VsdC5oZWlnaHQ7XG5cbiAgICB2YXIgaG9yaXpTY3JvbGxiYXIgPSBlbGVtZW50Lm9mZnNldFdpZHRoIC0gd2lkdGg7XG4gICAgdmFyIHZlcnRTY3JvbGxiYXIgPSBlbGVtZW50Lm9mZnNldEhlaWdodCAtIGhlaWdodDtcblxuICAgIC8vIGlmIGFuIGh5cG90aGV0aWNhbCBzY3JvbGxiYXIgaXMgZGV0ZWN0ZWQsIHdlIG11c3QgYmUgc3VyZSBpdCdzIG5vdCBhIGBib3JkZXJgXG4gICAgLy8gd2UgbWFrZSB0aGlzIGNoZWNrIGNvbmRpdGlvbmFsIGZvciBwZXJmb3JtYW5jZSByZWFzb25zXG4gICAgaWYgKGhvcml6U2Nyb2xsYmFyIHx8IHZlcnRTY3JvbGxiYXIpIHtcbiAgICAgIHZhciBzdHlsZXMgPSBnZXRTdHlsZUNvbXB1dGVkUHJvcGVydHkoZWxlbWVudCk7XG4gICAgICBob3JpelNjcm9sbGJhciAtPSBnZXRCb3JkZXJzU2l6ZShzdHlsZXMsICd4Jyk7XG4gICAgICB2ZXJ0U2Nyb2xsYmFyIC09IGdldEJvcmRlcnNTaXplKHN0eWxlcywgJ3knKTtcblxuICAgICAgcmVzdWx0LndpZHRoIC09IGhvcml6U2Nyb2xsYmFyO1xuICAgICAgcmVzdWx0LmhlaWdodCAtPSB2ZXJ0U2Nyb2xsYmFyO1xuICAgIH1cblxuICAgIHJldHVybiBnZXRDbGllbnRSZWN0KHJlc3VsdCk7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRPZmZzZXRSZWN0UmVsYXRpdmVUb0FyYml0cmFyeU5vZGUoY2hpbGRyZW4sIHBhcmVudCkge1xuICAgIHZhciBmaXhlZFBvc2l0aW9uID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBmYWxzZTtcblxuICAgIHZhciBpc0lFMTAgPSBpc0lFKDEwKTtcbiAgICB2YXIgaXNIVE1MID0gcGFyZW50Lm5vZGVOYW1lID09PSAnSFRNTCc7XG4gICAgdmFyIGNoaWxkcmVuUmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChjaGlsZHJlbik7XG4gICAgdmFyIHBhcmVudFJlY3QgPSBnZXRCb3VuZGluZ0NsaWVudFJlY3QocGFyZW50KTtcbiAgICB2YXIgc2Nyb2xsUGFyZW50ID0gZ2V0U2Nyb2xsUGFyZW50KGNoaWxkcmVuKTtcblxuICAgIHZhciBzdHlsZXMgPSBnZXRTdHlsZUNvbXB1dGVkUHJvcGVydHkocGFyZW50KTtcbiAgICB2YXIgYm9yZGVyVG9wV2lkdGggPSBwYXJzZUZsb2F0KHN0eWxlcy5ib3JkZXJUb3BXaWR0aCwgMTApO1xuICAgIHZhciBib3JkZXJMZWZ0V2lkdGggPSBwYXJzZUZsb2F0KHN0eWxlcy5ib3JkZXJMZWZ0V2lkdGgsIDEwKTtcblxuICAgIC8vIEluIGNhc2VzIHdoZXJlIHRoZSBwYXJlbnQgaXMgZml4ZWQsIHdlIG11c3QgaWdub3JlIG5lZ2F0aXZlIHNjcm9sbCBpbiBvZmZzZXQgY2FsY1xuICAgIGlmIChmaXhlZFBvc2l0aW9uICYmIGlzSFRNTCkge1xuICAgICAgcGFyZW50UmVjdC50b3AgPSBNYXRoLm1heChwYXJlbnRSZWN0LnRvcCwgMCk7XG4gICAgICBwYXJlbnRSZWN0LmxlZnQgPSBNYXRoLm1heChwYXJlbnRSZWN0LmxlZnQsIDApO1xuICAgIH1cbiAgICB2YXIgb2Zmc2V0cyA9IGdldENsaWVudFJlY3Qoe1xuICAgICAgdG9wOiBjaGlsZHJlblJlY3QudG9wIC0gcGFyZW50UmVjdC50b3AgLSBib3JkZXJUb3BXaWR0aCxcbiAgICAgIGxlZnQ6IGNoaWxkcmVuUmVjdC5sZWZ0IC0gcGFyZW50UmVjdC5sZWZ0IC0gYm9yZGVyTGVmdFdpZHRoLFxuICAgICAgd2lkdGg6IGNoaWxkcmVuUmVjdC53aWR0aCxcbiAgICAgIGhlaWdodDogY2hpbGRyZW5SZWN0LmhlaWdodFxuICAgIH0pO1xuICAgIG9mZnNldHMubWFyZ2luVG9wID0gMDtcbiAgICBvZmZzZXRzLm1hcmdpbkxlZnQgPSAwO1xuXG4gICAgLy8gU3VidHJhY3QgbWFyZ2lucyBvZiBkb2N1bWVudEVsZW1lbnQgaW4gY2FzZSBpdCdzIGJlaW5nIHVzZWQgYXMgcGFyZW50XG4gICAgLy8gd2UgZG8gdGhpcyBvbmx5IG9uIEhUTUwgYmVjYXVzZSBpdCdzIHRoZSBvbmx5IGVsZW1lbnQgdGhhdCBiZWhhdmVzXG4gICAgLy8gZGlmZmVyZW50bHkgd2hlbiBtYXJnaW5zIGFyZSBhcHBsaWVkIHRvIGl0LiBUaGUgbWFyZ2lucyBhcmUgaW5jbHVkZWQgaW5cbiAgICAvLyB0aGUgYm94IG9mIHRoZSBkb2N1bWVudEVsZW1lbnQsIGluIHRoZSBvdGhlciBjYXNlcyBub3QuXG4gICAgaWYgKCFpc0lFMTAgJiYgaXNIVE1MKSB7XG4gICAgICB2YXIgbWFyZ2luVG9wID0gcGFyc2VGbG9hdChzdHlsZXMubWFyZ2luVG9wLCAxMCk7XG4gICAgICB2YXIgbWFyZ2luTGVmdCA9IHBhcnNlRmxvYXQoc3R5bGVzLm1hcmdpbkxlZnQsIDEwKTtcblxuICAgICAgb2Zmc2V0cy50b3AgLT0gYm9yZGVyVG9wV2lkdGggLSBtYXJnaW5Ub3A7XG4gICAgICBvZmZzZXRzLmJvdHRvbSAtPSBib3JkZXJUb3BXaWR0aCAtIG1hcmdpblRvcDtcbiAgICAgIG9mZnNldHMubGVmdCAtPSBib3JkZXJMZWZ0V2lkdGggLSBtYXJnaW5MZWZ0O1xuICAgICAgb2Zmc2V0cy5yaWdodCAtPSBib3JkZXJMZWZ0V2lkdGggLSBtYXJnaW5MZWZ0O1xuXG4gICAgICAvLyBBdHRhY2ggbWFyZ2luVG9wIGFuZCBtYXJnaW5MZWZ0IGJlY2F1c2UgaW4gc29tZSBjaXJjdW1zdGFuY2VzIHdlIG1heSBuZWVkIHRoZW1cbiAgICAgIG9mZnNldHMubWFyZ2luVG9wID0gbWFyZ2luVG9wO1xuICAgICAgb2Zmc2V0cy5tYXJnaW5MZWZ0ID0gbWFyZ2luTGVmdDtcbiAgICB9XG5cbiAgICBpZiAoaXNJRTEwICYmICFmaXhlZFBvc2l0aW9uID8gcGFyZW50LmNvbnRhaW5zKHNjcm9sbFBhcmVudCkgOiBwYXJlbnQgPT09IHNjcm9sbFBhcmVudCAmJiBzY3JvbGxQYXJlbnQubm9kZU5hbWUgIT09ICdCT0RZJykge1xuICAgICAgb2Zmc2V0cyA9IGluY2x1ZGVTY3JvbGwob2Zmc2V0cywgcGFyZW50KTtcbiAgICB9XG5cbiAgICByZXR1cm4gb2Zmc2V0cztcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldFZpZXdwb3J0T2Zmc2V0UmVjdFJlbGF0aXZlVG9BcnRiaXRyYXJ5Tm9kZShlbGVtZW50KSB7XG4gICAgdmFyIGV4Y2x1ZGVTY3JvbGwgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IGZhbHNlO1xuXG4gICAgdmFyIGh0bWwgPSBlbGVtZW50Lm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuICAgIHZhciByZWxhdGl2ZU9mZnNldCA9IGdldE9mZnNldFJlY3RSZWxhdGl2ZVRvQXJiaXRyYXJ5Tm9kZShlbGVtZW50LCBodG1sKTtcbiAgICB2YXIgd2lkdGggPSBNYXRoLm1heChodG1sLmNsaWVudFdpZHRoLCB3aW5kb3cuaW5uZXJXaWR0aCB8fCAwKTtcbiAgICB2YXIgaGVpZ2h0ID0gTWF0aC5tYXgoaHRtbC5jbGllbnRIZWlnaHQsIHdpbmRvdy5pbm5lckhlaWdodCB8fCAwKTtcblxuICAgIHZhciBzY3JvbGxUb3AgPSAhZXhjbHVkZVNjcm9sbCA/IGdldFNjcm9sbChodG1sKSA6IDA7XG4gICAgdmFyIHNjcm9sbExlZnQgPSAhZXhjbHVkZVNjcm9sbCA/IGdldFNjcm9sbChodG1sLCAnbGVmdCcpIDogMDtcblxuICAgIHZhciBvZmZzZXQgPSB7XG4gICAgICB0b3A6IHNjcm9sbFRvcCAtIHJlbGF0aXZlT2Zmc2V0LnRvcCArIHJlbGF0aXZlT2Zmc2V0Lm1hcmdpblRvcCxcbiAgICAgIGxlZnQ6IHNjcm9sbExlZnQgLSByZWxhdGl2ZU9mZnNldC5sZWZ0ICsgcmVsYXRpdmVPZmZzZXQubWFyZ2luTGVmdCxcbiAgICAgIHdpZHRoOiB3aWR0aCxcbiAgICAgIGhlaWdodDogaGVpZ2h0XG4gICAgfTtcblxuICAgIHJldHVybiBnZXRDbGllbnRSZWN0KG9mZnNldCk7XG4gIH1cblxuICAvKipcbiAgICogQ2hlY2sgaWYgdGhlIGdpdmVuIGVsZW1lbnQgaXMgZml4ZWQgb3IgaXMgaW5zaWRlIGEgZml4ZWQgcGFyZW50XG4gICAqIEBtZXRob2RcbiAgICogQG1lbWJlcm9mIFBvcHBlci5VdGlsc1xuICAgKiBAYXJndW1lbnQge0VsZW1lbnR9IGVsZW1lbnRcbiAgICogQGFyZ3VtZW50IHtFbGVtZW50fSBjdXN0b21Db250YWluZXJcbiAgICogQHJldHVybnMge0Jvb2xlYW59IGFuc3dlciB0byBcImlzRml4ZWQ/XCJcbiAgICovXG4gIGZ1bmN0aW9uIGlzRml4ZWQoZWxlbWVudCkge1xuICAgIHZhciBub2RlTmFtZSA9IGVsZW1lbnQubm9kZU5hbWU7XG4gICAgaWYgKG5vZGVOYW1lID09PSAnQk9EWScgfHwgbm9kZU5hbWUgPT09ICdIVE1MJykge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAoZ2V0U3R5bGVDb21wdXRlZFByb3BlcnR5KGVsZW1lbnQsICdwb3NpdGlvbicpID09PSAnZml4ZWQnKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgdmFyIHBhcmVudE5vZGUgPSBnZXRQYXJlbnROb2RlKGVsZW1lbnQpO1xuICAgIGlmICghcGFyZW50Tm9kZSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gaXNGaXhlZChwYXJlbnROb2RlKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBGaW5kcyB0aGUgZmlyc3QgcGFyZW50IG9mIGFuIGVsZW1lbnQgdGhhdCBoYXMgYSB0cmFuc2Zvcm1lZCBwcm9wZXJ0eSBkZWZpbmVkXG4gICAqIEBtZXRob2RcbiAgICogQG1lbWJlcm9mIFBvcHBlci5VdGlsc1xuICAgKiBAYXJndW1lbnQge0VsZW1lbnR9IGVsZW1lbnRcbiAgICogQHJldHVybnMge0VsZW1lbnR9IGZpcnN0IHRyYW5zZm9ybWVkIHBhcmVudCBvciBkb2N1bWVudEVsZW1lbnRcbiAgICovXG5cbiAgZnVuY3Rpb24gZ2V0Rml4ZWRQb3NpdGlvbk9mZnNldFBhcmVudChlbGVtZW50KSB7XG4gICAgLy8gVGhpcyBjaGVjayBpcyBuZWVkZWQgdG8gYXZvaWQgZXJyb3JzIGluIGNhc2Ugb25lIG9mIHRoZSBlbGVtZW50cyBpc24ndCBkZWZpbmVkIGZvciBhbnkgcmVhc29uXG4gICAgaWYgKCFlbGVtZW50IHx8ICFlbGVtZW50LnBhcmVudEVsZW1lbnQgfHwgaXNJRSgpKSB7XG4gICAgICByZXR1cm4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuICAgIH1cbiAgICB2YXIgZWwgPSBlbGVtZW50LnBhcmVudEVsZW1lbnQ7XG4gICAgd2hpbGUgKGVsICYmIGdldFN0eWxlQ29tcHV0ZWRQcm9wZXJ0eShlbCwgJ3RyYW5zZm9ybScpID09PSAnbm9uZScpIHtcbiAgICAgIGVsID0gZWwucGFyZW50RWxlbWVudDtcbiAgICB9XG4gICAgcmV0dXJuIGVsIHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcbiAgfVxuXG4gIC8qKlxuICAgKiBDb21wdXRlZCB0aGUgYm91bmRhcmllcyBsaW1pdHMgYW5kIHJldHVybiB0aGVtXG4gICAqIEBtZXRob2RcbiAgICogQG1lbWJlcm9mIFBvcHBlci5VdGlsc1xuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBwb3BwZXJcbiAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gcmVmZXJlbmNlXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBwYWRkaW5nXG4gICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGJvdW5kYXJpZXNFbGVtZW50IC0gRWxlbWVudCB1c2VkIHRvIGRlZmluZSB0aGUgYm91bmRhcmllc1xuICAgKiBAcGFyYW0ge0Jvb2xlYW59IGZpeGVkUG9zaXRpb24gLSBJcyBpbiBmaXhlZCBwb3NpdGlvbiBtb2RlXG4gICAqIEByZXR1cm5zIHtPYmplY3R9IENvb3JkaW5hdGVzIG9mIHRoZSBib3VuZGFyaWVzXG4gICAqL1xuICBmdW5jdGlvbiBnZXRCb3VuZGFyaWVzKHBvcHBlciwgcmVmZXJlbmNlLCBwYWRkaW5nLCBib3VuZGFyaWVzRWxlbWVudCkge1xuICAgIHZhciBmaXhlZFBvc2l0aW9uID0gYXJndW1lbnRzLmxlbmd0aCA+IDQgJiYgYXJndW1lbnRzWzRdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbNF0gOiBmYWxzZTtcblxuICAgIC8vIE5PVEU6IDEgRE9NIGFjY2VzcyBoZXJlXG5cbiAgICB2YXIgYm91bmRhcmllcyA9IHsgdG9wOiAwLCBsZWZ0OiAwIH07XG4gICAgdmFyIG9mZnNldFBhcmVudCA9IGZpeGVkUG9zaXRpb24gPyBnZXRGaXhlZFBvc2l0aW9uT2Zmc2V0UGFyZW50KHBvcHBlcikgOiBmaW5kQ29tbW9uT2Zmc2V0UGFyZW50KHBvcHBlciwgZ2V0UmVmZXJlbmNlTm9kZShyZWZlcmVuY2UpKTtcblxuICAgIC8vIEhhbmRsZSB2aWV3cG9ydCBjYXNlXG4gICAgaWYgKGJvdW5kYXJpZXNFbGVtZW50ID09PSAndmlld3BvcnQnKSB7XG4gICAgICBib3VuZGFyaWVzID0gZ2V0Vmlld3BvcnRPZmZzZXRSZWN0UmVsYXRpdmVUb0FydGJpdHJhcnlOb2RlKG9mZnNldFBhcmVudCwgZml4ZWRQb3NpdGlvbik7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIEhhbmRsZSBvdGhlciBjYXNlcyBiYXNlZCBvbiBET00gZWxlbWVudCB1c2VkIGFzIGJvdW5kYXJpZXNcbiAgICAgIHZhciBib3VuZGFyaWVzTm9kZSA9IHZvaWQgMDtcbiAgICAgIGlmIChib3VuZGFyaWVzRWxlbWVudCA9PT0gJ3Njcm9sbFBhcmVudCcpIHtcbiAgICAgICAgYm91bmRhcmllc05vZGUgPSBnZXRTY3JvbGxQYXJlbnQoZ2V0UGFyZW50Tm9kZShyZWZlcmVuY2UpKTtcbiAgICAgICAgaWYgKGJvdW5kYXJpZXNOb2RlLm5vZGVOYW1lID09PSAnQk9EWScpIHtcbiAgICAgICAgICBib3VuZGFyaWVzTm9kZSA9IHBvcHBlci5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChib3VuZGFyaWVzRWxlbWVudCA9PT0gJ3dpbmRvdycpIHtcbiAgICAgICAgYm91bmRhcmllc05vZGUgPSBwb3BwZXIub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBib3VuZGFyaWVzTm9kZSA9IGJvdW5kYXJpZXNFbGVtZW50O1xuICAgICAgfVxuXG4gICAgICB2YXIgb2Zmc2V0cyA9IGdldE9mZnNldFJlY3RSZWxhdGl2ZVRvQXJiaXRyYXJ5Tm9kZShib3VuZGFyaWVzTm9kZSwgb2Zmc2V0UGFyZW50LCBmaXhlZFBvc2l0aW9uKTtcblxuICAgICAgLy8gSW4gY2FzZSBvZiBIVE1MLCB3ZSBuZWVkIGEgZGlmZmVyZW50IGNvbXB1dGF0aW9uXG4gICAgICBpZiAoYm91bmRhcmllc05vZGUubm9kZU5hbWUgPT09ICdIVE1MJyAmJiAhaXNGaXhlZChvZmZzZXRQYXJlbnQpKSB7XG4gICAgICAgIHZhciBfZ2V0V2luZG93U2l6ZXMgPSBnZXRXaW5kb3dTaXplcyhwb3BwZXIub3duZXJEb2N1bWVudCksXG4gICAgICAgICAgICBoZWlnaHQgPSBfZ2V0V2luZG93U2l6ZXMuaGVpZ2h0LFxuICAgICAgICAgICAgd2lkdGggPSBfZ2V0V2luZG93U2l6ZXMud2lkdGg7XG5cbiAgICAgICAgYm91bmRhcmllcy50b3AgKz0gb2Zmc2V0cy50b3AgLSBvZmZzZXRzLm1hcmdpblRvcDtcbiAgICAgICAgYm91bmRhcmllcy5ib3R0b20gPSBoZWlnaHQgKyBvZmZzZXRzLnRvcDtcbiAgICAgICAgYm91bmRhcmllcy5sZWZ0ICs9IG9mZnNldHMubGVmdCAtIG9mZnNldHMubWFyZ2luTGVmdDtcbiAgICAgICAgYm91bmRhcmllcy5yaWdodCA9IHdpZHRoICsgb2Zmc2V0cy5sZWZ0O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gZm9yIGFsbCB0aGUgb3RoZXIgRE9NIGVsZW1lbnRzLCB0aGlzIG9uZSBpcyBnb29kXG4gICAgICAgIGJvdW5kYXJpZXMgPSBvZmZzZXRzO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEFkZCBwYWRkaW5nc1xuICAgIHBhZGRpbmcgPSBwYWRkaW5nIHx8IDA7XG4gICAgdmFyIGlzUGFkZGluZ051bWJlciA9IHR5cGVvZiBwYWRkaW5nID09PSAnbnVtYmVyJztcbiAgICBib3VuZGFyaWVzLmxlZnQgKz0gaXNQYWRkaW5nTnVtYmVyID8gcGFkZGluZyA6IHBhZGRpbmcubGVmdCB8fCAwO1xuICAgIGJvdW5kYXJpZXMudG9wICs9IGlzUGFkZGluZ051bWJlciA/IHBhZGRpbmcgOiBwYWRkaW5nLnRvcCB8fCAwO1xuICAgIGJvdW5kYXJpZXMucmlnaHQgLT0gaXNQYWRkaW5nTnVtYmVyID8gcGFkZGluZyA6IHBhZGRpbmcucmlnaHQgfHwgMDtcbiAgICBib3VuZGFyaWVzLmJvdHRvbSAtPSBpc1BhZGRpbmdOdW1iZXIgPyBwYWRkaW5nIDogcGFkZGluZy5ib3R0b20gfHwgMDtcblxuICAgIHJldHVybiBib3VuZGFyaWVzO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0QXJlYShfcmVmKSB7XG4gICAgdmFyIHdpZHRoID0gX3JlZi53aWR0aCxcbiAgICAgICAgaGVpZ2h0ID0gX3JlZi5oZWlnaHQ7XG5cbiAgICByZXR1cm4gd2lkdGggKiBoZWlnaHQ7XG4gIH1cblxuICAvKipcbiAgICogVXRpbGl0eSB1c2VkIHRvIHRyYW5zZm9ybSB0aGUgYGF1dG9gIHBsYWNlbWVudCB0byB0aGUgcGxhY2VtZW50IHdpdGggbW9yZVxuICAgKiBhdmFpbGFibGUgc3BhY2UuXG4gICAqIEBtZXRob2RcbiAgICogQG1lbWJlcm9mIFBvcHBlci5VdGlsc1xuICAgKiBAYXJndW1lbnQge09iamVjdH0gZGF0YSAtIFRoZSBkYXRhIG9iamVjdCBnZW5lcmF0ZWQgYnkgdXBkYXRlIG1ldGhvZFxuICAgKiBAYXJndW1lbnQge09iamVjdH0gb3B0aW9ucyAtIE1vZGlmaWVycyBjb25maWd1cmF0aW9uIGFuZCBvcHRpb25zXG4gICAqIEByZXR1cm5zIHtPYmplY3R9IFRoZSBkYXRhIG9iamVjdCwgcHJvcGVybHkgbW9kaWZpZWRcbiAgICovXG4gIGZ1bmN0aW9uIGNvbXB1dGVBdXRvUGxhY2VtZW50KHBsYWNlbWVudCwgcmVmUmVjdCwgcG9wcGVyLCByZWZlcmVuY2UsIGJvdW5kYXJpZXNFbGVtZW50KSB7XG4gICAgdmFyIHBhZGRpbmcgPSBhcmd1bWVudHMubGVuZ3RoID4gNSAmJiBhcmd1bWVudHNbNV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s1XSA6IDA7XG5cbiAgICBpZiAocGxhY2VtZW50LmluZGV4T2YoJ2F1dG8nKSA9PT0gLTEpIHtcbiAgICAgIHJldHVybiBwbGFjZW1lbnQ7XG4gICAgfVxuXG4gICAgdmFyIGJvdW5kYXJpZXMgPSBnZXRCb3VuZGFyaWVzKHBvcHBlciwgcmVmZXJlbmNlLCBwYWRkaW5nLCBib3VuZGFyaWVzRWxlbWVudCk7XG5cbiAgICB2YXIgcmVjdHMgPSB7XG4gICAgICB0b3A6IHtcbiAgICAgICAgd2lkdGg6IGJvdW5kYXJpZXMud2lkdGgsXG4gICAgICAgIGhlaWdodDogcmVmUmVjdC50b3AgLSBib3VuZGFyaWVzLnRvcFxuICAgICAgfSxcbiAgICAgIHJpZ2h0OiB7XG4gICAgICAgIHdpZHRoOiBib3VuZGFyaWVzLnJpZ2h0IC0gcmVmUmVjdC5yaWdodCxcbiAgICAgICAgaGVpZ2h0OiBib3VuZGFyaWVzLmhlaWdodFxuICAgICAgfSxcbiAgICAgIGJvdHRvbToge1xuICAgICAgICB3aWR0aDogYm91bmRhcmllcy53aWR0aCxcbiAgICAgICAgaGVpZ2h0OiBib3VuZGFyaWVzLmJvdHRvbSAtIHJlZlJlY3QuYm90dG9tXG4gICAgICB9LFxuICAgICAgbGVmdDoge1xuICAgICAgICB3aWR0aDogcmVmUmVjdC5sZWZ0IC0gYm91bmRhcmllcy5sZWZ0LFxuICAgICAgICBoZWlnaHQ6IGJvdW5kYXJpZXMuaGVpZ2h0XG4gICAgICB9XG4gICAgfTtcblxuICAgIHZhciBzb3J0ZWRBcmVhcyA9IE9iamVjdC5rZXlzKHJlY3RzKS5tYXAoZnVuY3Rpb24gKGtleSkge1xuICAgICAgcmV0dXJuIF9leHRlbmRzKHtcbiAgICAgICAga2V5OiBrZXlcbiAgICAgIH0sIHJlY3RzW2tleV0sIHtcbiAgICAgICAgYXJlYTogZ2V0QXJlYShyZWN0c1trZXldKVxuICAgICAgfSk7XG4gICAgfSkuc29ydChmdW5jdGlvbiAoYSwgYikge1xuICAgICAgcmV0dXJuIGIuYXJlYSAtIGEuYXJlYTtcbiAgICB9KTtcblxuICAgIHZhciBmaWx0ZXJlZEFyZWFzID0gc29ydGVkQXJlYXMuZmlsdGVyKGZ1bmN0aW9uIChfcmVmMikge1xuICAgICAgdmFyIHdpZHRoID0gX3JlZjIud2lkdGgsXG4gICAgICAgICAgaGVpZ2h0ID0gX3JlZjIuaGVpZ2h0O1xuICAgICAgcmV0dXJuIHdpZHRoID49IHBvcHBlci5jbGllbnRXaWR0aCAmJiBoZWlnaHQgPj0gcG9wcGVyLmNsaWVudEhlaWdodDtcbiAgICB9KTtcblxuICAgIHZhciBjb21wdXRlZFBsYWNlbWVudCA9IGZpbHRlcmVkQXJlYXMubGVuZ3RoID4gMCA/IGZpbHRlcmVkQXJlYXNbMF0ua2V5IDogc29ydGVkQXJlYXNbMF0ua2V5O1xuXG4gICAgdmFyIHZhcmlhdGlvbiA9IHBsYWNlbWVudC5zcGxpdCgnLScpWzFdO1xuXG4gICAgcmV0dXJuIGNvbXB1dGVkUGxhY2VtZW50ICsgKHZhcmlhdGlvbiA/ICctJyArIHZhcmlhdGlvbiA6ICcnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgb2Zmc2V0cyB0byB0aGUgcmVmZXJlbmNlIGVsZW1lbnRcbiAgICogQG1ldGhvZFxuICAgKiBAbWVtYmVyb2YgUG9wcGVyLlV0aWxzXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBzdGF0ZVxuICAgKiBAcGFyYW0ge0VsZW1lbnR9IHBvcHBlciAtIHRoZSBwb3BwZXIgZWxlbWVudFxuICAgKiBAcGFyYW0ge0VsZW1lbnR9IHJlZmVyZW5jZSAtIHRoZSByZWZlcmVuY2UgZWxlbWVudCAodGhlIHBvcHBlciB3aWxsIGJlIHJlbGF0aXZlIHRvIHRoaXMpXG4gICAqIEBwYXJhbSB7RWxlbWVudH0gZml4ZWRQb3NpdGlvbiAtIGlzIGluIGZpeGVkIHBvc2l0aW9uIG1vZGVcbiAgICogQHJldHVybnMge09iamVjdH0gQW4gb2JqZWN0IGNvbnRhaW5pbmcgdGhlIG9mZnNldHMgd2hpY2ggd2lsbCBiZSBhcHBsaWVkIHRvIHRoZSBwb3BwZXJcbiAgICovXG4gIGZ1bmN0aW9uIGdldFJlZmVyZW5jZU9mZnNldHMoc3RhdGUsIHBvcHBlciwgcmVmZXJlbmNlKSB7XG4gICAgdmFyIGZpeGVkUG9zaXRpb24gPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6IG51bGw7XG5cbiAgICB2YXIgY29tbW9uT2Zmc2V0UGFyZW50ID0gZml4ZWRQb3NpdGlvbiA/IGdldEZpeGVkUG9zaXRpb25PZmZzZXRQYXJlbnQocG9wcGVyKSA6IGZpbmRDb21tb25PZmZzZXRQYXJlbnQocG9wcGVyLCBnZXRSZWZlcmVuY2VOb2RlKHJlZmVyZW5jZSkpO1xuICAgIHJldHVybiBnZXRPZmZzZXRSZWN0UmVsYXRpdmVUb0FyYml0cmFyeU5vZGUocmVmZXJlbmNlLCBjb21tb25PZmZzZXRQYXJlbnQsIGZpeGVkUG9zaXRpb24pO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCB0aGUgb3V0ZXIgc2l6ZXMgb2YgdGhlIGdpdmVuIGVsZW1lbnQgKG9mZnNldCBzaXplICsgbWFyZ2lucylcbiAgICogQG1ldGhvZFxuICAgKiBAbWVtYmVyb2YgUG9wcGVyLlV0aWxzXG4gICAqIEBhcmd1bWVudCB7RWxlbWVudH0gZWxlbWVudFxuICAgKiBAcmV0dXJucyB7T2JqZWN0fSBvYmplY3QgY29udGFpbmluZyB3aWR0aCBhbmQgaGVpZ2h0IHByb3BlcnRpZXNcbiAgICovXG4gIGZ1bmN0aW9uIGdldE91dGVyU2l6ZXMoZWxlbWVudCkge1xuICAgIHZhciB3aW5kb3cgPSBlbGVtZW50Lm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXc7XG4gICAgdmFyIHN0eWxlcyA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGVsZW1lbnQpO1xuICAgIHZhciB4ID0gcGFyc2VGbG9hdChzdHlsZXMubWFyZ2luVG9wIHx8IDApICsgcGFyc2VGbG9hdChzdHlsZXMubWFyZ2luQm90dG9tIHx8IDApO1xuICAgIHZhciB5ID0gcGFyc2VGbG9hdChzdHlsZXMubWFyZ2luTGVmdCB8fCAwKSArIHBhcnNlRmxvYXQoc3R5bGVzLm1hcmdpblJpZ2h0IHx8IDApO1xuICAgIHZhciByZXN1bHQgPSB7XG4gICAgICB3aWR0aDogZWxlbWVudC5vZmZzZXRXaWR0aCArIHksXG4gICAgICBoZWlnaHQ6IGVsZW1lbnQub2Zmc2V0SGVpZ2h0ICsgeFxuICAgIH07XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgdGhlIG9wcG9zaXRlIHBsYWNlbWVudCBvZiB0aGUgZ2l2ZW4gb25lXG4gICAqIEBtZXRob2RcbiAgICogQG1lbWJlcm9mIFBvcHBlci5VdGlsc1xuICAgKiBAYXJndW1lbnQge1N0cmluZ30gcGxhY2VtZW50XG4gICAqIEByZXR1cm5zIHtTdHJpbmd9IGZsaXBwZWQgcGxhY2VtZW50XG4gICAqL1xuICBmdW5jdGlvbiBnZXRPcHBvc2l0ZVBsYWNlbWVudChwbGFjZW1lbnQpIHtcbiAgICB2YXIgaGFzaCA9IHsgbGVmdDogJ3JpZ2h0JywgcmlnaHQ6ICdsZWZ0JywgYm90dG9tOiAndG9wJywgdG9wOiAnYm90dG9tJyB9O1xuICAgIHJldHVybiBwbGFjZW1lbnQucmVwbGFjZSgvbGVmdHxyaWdodHxib3R0b218dG9wL2csIGZ1bmN0aW9uIChtYXRjaGVkKSB7XG4gICAgICByZXR1cm4gaGFzaFttYXRjaGVkXTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgb2Zmc2V0cyB0byB0aGUgcG9wcGVyXG4gICAqIEBtZXRob2RcbiAgICogQG1lbWJlcm9mIFBvcHBlci5VdGlsc1xuICAgKiBAcGFyYW0ge09iamVjdH0gcG9zaXRpb24gLSBDU1MgcG9zaXRpb24gdGhlIFBvcHBlciB3aWxsIGdldCBhcHBsaWVkXG4gICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IHBvcHBlciAtIHRoZSBwb3BwZXIgZWxlbWVudFxuICAgKiBAcGFyYW0ge09iamVjdH0gcmVmZXJlbmNlT2Zmc2V0cyAtIHRoZSByZWZlcmVuY2Ugb2Zmc2V0cyAodGhlIHBvcHBlciB3aWxsIGJlIHJlbGF0aXZlIHRvIHRoaXMpXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBwbGFjZW1lbnQgLSBvbmUgb2YgdGhlIHZhbGlkIHBsYWNlbWVudCBvcHRpb25zXG4gICAqIEByZXR1cm5zIHtPYmplY3R9IHBvcHBlck9mZnNldHMgLSBBbiBvYmplY3QgY29udGFpbmluZyB0aGUgb2Zmc2V0cyB3aGljaCB3aWxsIGJlIGFwcGxpZWQgdG8gdGhlIHBvcHBlclxuICAgKi9cbiAgZnVuY3Rpb24gZ2V0UG9wcGVyT2Zmc2V0cyhwb3BwZXIsIHJlZmVyZW5jZU9mZnNldHMsIHBsYWNlbWVudCkge1xuICAgIHBsYWNlbWVudCA9IHBsYWNlbWVudC5zcGxpdCgnLScpWzBdO1xuXG4gICAgLy8gR2V0IHBvcHBlciBub2RlIHNpemVzXG4gICAgdmFyIHBvcHBlclJlY3QgPSBnZXRPdXRlclNpemVzKHBvcHBlcik7XG5cbiAgICAvLyBBZGQgcG9zaXRpb24sIHdpZHRoIGFuZCBoZWlnaHQgdG8gb3VyIG9mZnNldHMgb2JqZWN0XG4gICAgdmFyIHBvcHBlck9mZnNldHMgPSB7XG4gICAgICB3aWR0aDogcG9wcGVyUmVjdC53aWR0aCxcbiAgICAgIGhlaWdodDogcG9wcGVyUmVjdC5oZWlnaHRcbiAgICB9O1xuXG4gICAgLy8gZGVwZW5kaW5nIGJ5IHRoZSBwb3BwZXIgcGxhY2VtZW50IHdlIGhhdmUgdG8gY29tcHV0ZSBpdHMgb2Zmc2V0cyBzbGlnaHRseSBkaWZmZXJlbnRseVxuICAgIHZhciBpc0hvcml6ID0gWydyaWdodCcsICdsZWZ0J10uaW5kZXhPZihwbGFjZW1lbnQpICE9PSAtMTtcbiAgICB2YXIgbWFpblNpZGUgPSBpc0hvcml6ID8gJ3RvcCcgOiAnbGVmdCc7XG4gICAgdmFyIHNlY29uZGFyeVNpZGUgPSBpc0hvcml6ID8gJ2xlZnQnIDogJ3RvcCc7XG4gICAgdmFyIG1lYXN1cmVtZW50ID0gaXNIb3JpeiA/ICdoZWlnaHQnIDogJ3dpZHRoJztcbiAgICB2YXIgc2Vjb25kYXJ5TWVhc3VyZW1lbnQgPSAhaXNIb3JpeiA/ICdoZWlnaHQnIDogJ3dpZHRoJztcblxuICAgIHBvcHBlck9mZnNldHNbbWFpblNpZGVdID0gcmVmZXJlbmNlT2Zmc2V0c1ttYWluU2lkZV0gKyByZWZlcmVuY2VPZmZzZXRzW21lYXN1cmVtZW50XSAvIDIgLSBwb3BwZXJSZWN0W21lYXN1cmVtZW50XSAvIDI7XG4gICAgaWYgKHBsYWNlbWVudCA9PT0gc2Vjb25kYXJ5U2lkZSkge1xuICAgICAgcG9wcGVyT2Zmc2V0c1tzZWNvbmRhcnlTaWRlXSA9IHJlZmVyZW5jZU9mZnNldHNbc2Vjb25kYXJ5U2lkZV0gLSBwb3BwZXJSZWN0W3NlY29uZGFyeU1lYXN1cmVtZW50XTtcbiAgICB9IGVsc2Uge1xuICAgICAgcG9wcGVyT2Zmc2V0c1tzZWNvbmRhcnlTaWRlXSA9IHJlZmVyZW5jZU9mZnNldHNbZ2V0T3Bwb3NpdGVQbGFjZW1lbnQoc2Vjb25kYXJ5U2lkZSldO1xuICAgIH1cblxuICAgIHJldHVybiBwb3BwZXJPZmZzZXRzO1xuICB9XG5cbiAgLyoqXG4gICAqIE1pbWljcyB0aGUgYGZpbmRgIG1ldGhvZCBvZiBBcnJheVxuICAgKiBAbWV0aG9kXG4gICAqIEBtZW1iZXJvZiBQb3BwZXIuVXRpbHNcbiAgICogQGFyZ3VtZW50IHtBcnJheX0gYXJyXG4gICAqIEBhcmd1bWVudCBwcm9wXG4gICAqIEBhcmd1bWVudCB2YWx1ZVxuICAgKiBAcmV0dXJucyBpbmRleCBvciAtMVxuICAgKi9cbiAgZnVuY3Rpb24gZmluZChhcnIsIGNoZWNrKSB7XG4gICAgLy8gdXNlIG5hdGl2ZSBmaW5kIGlmIHN1cHBvcnRlZFxuICAgIGlmIChBcnJheS5wcm90b3R5cGUuZmluZCkge1xuICAgICAgcmV0dXJuIGFyci5maW5kKGNoZWNrKTtcbiAgICB9XG5cbiAgICAvLyB1c2UgYGZpbHRlcmAgdG8gb2J0YWluIHRoZSBzYW1lIGJlaGF2aW9yIG9mIGBmaW5kYFxuICAgIHJldHVybiBhcnIuZmlsdGVyKGNoZWNrKVswXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gdGhlIGluZGV4IG9mIHRoZSBtYXRjaGluZyBvYmplY3RcbiAgICogQG1ldGhvZFxuICAgKiBAbWVtYmVyb2YgUG9wcGVyLlV0aWxzXG4gICAqIEBhcmd1bWVudCB7QXJyYXl9IGFyclxuICAgKiBAYXJndW1lbnQgcHJvcFxuICAgKiBAYXJndW1lbnQgdmFsdWVcbiAgICogQHJldHVybnMgaW5kZXggb3IgLTFcbiAgICovXG4gIGZ1bmN0aW9uIGZpbmRJbmRleChhcnIsIHByb3AsIHZhbHVlKSB7XG4gICAgLy8gdXNlIG5hdGl2ZSBmaW5kSW5kZXggaWYgc3VwcG9ydGVkXG4gICAgaWYgKEFycmF5LnByb3RvdHlwZS5maW5kSW5kZXgpIHtcbiAgICAgIHJldHVybiBhcnIuZmluZEluZGV4KGZ1bmN0aW9uIChjdXIpIHtcbiAgICAgICAgcmV0dXJuIGN1cltwcm9wXSA9PT0gdmFsdWU7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvLyB1c2UgYGZpbmRgICsgYGluZGV4T2ZgIGlmIGBmaW5kSW5kZXhgIGlzbid0IHN1cHBvcnRlZFxuICAgIHZhciBtYXRjaCA9IGZpbmQoYXJyLCBmdW5jdGlvbiAob2JqKSB7XG4gICAgICByZXR1cm4gb2JqW3Byb3BdID09PSB2YWx1ZTtcbiAgICB9KTtcbiAgICByZXR1cm4gYXJyLmluZGV4T2YobWF0Y2gpO1xuICB9XG5cbiAgLyoqXG4gICAqIExvb3AgdHJvdWdoIHRoZSBsaXN0IG9mIG1vZGlmaWVycyBhbmQgcnVuIHRoZW0gaW4gb3JkZXIsXG4gICAqIGVhY2ggb2YgdGhlbSB3aWxsIHRoZW4gZWRpdCB0aGUgZGF0YSBvYmplY3QuXG4gICAqIEBtZXRob2RcbiAgICogQG1lbWJlcm9mIFBvcHBlci5VdGlsc1xuICAgKiBAcGFyYW0ge2RhdGFPYmplY3R9IGRhdGFcbiAgICogQHBhcmFtIHtBcnJheX0gbW9kaWZpZXJzXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBlbmRzIC0gT3B0aW9uYWwgbW9kaWZpZXIgbmFtZSB1c2VkIGFzIHN0b3BwZXJcbiAgICogQHJldHVybnMge2RhdGFPYmplY3R9XG4gICAqL1xuICBmdW5jdGlvbiBydW5Nb2RpZmllcnMobW9kaWZpZXJzLCBkYXRhLCBlbmRzKSB7XG4gICAgdmFyIG1vZGlmaWVyc1RvUnVuID0gZW5kcyA9PT0gdW5kZWZpbmVkID8gbW9kaWZpZXJzIDogbW9kaWZpZXJzLnNsaWNlKDAsIGZpbmRJbmRleChtb2RpZmllcnMsICduYW1lJywgZW5kcykpO1xuXG4gICAgbW9kaWZpZXJzVG9SdW4uZm9yRWFjaChmdW5jdGlvbiAobW9kaWZpZXIpIHtcbiAgICAgIGlmIChtb2RpZmllclsnZnVuY3Rpb24nXSkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGRvdC1ub3RhdGlvblxuICAgICAgICBjb25zb2xlLndhcm4oJ2Btb2RpZmllci5mdW5jdGlvbmAgaXMgZGVwcmVjYXRlZCwgdXNlIGBtb2RpZmllci5mbmAhJyk7XG4gICAgICB9XG4gICAgICB2YXIgZm4gPSBtb2RpZmllclsnZnVuY3Rpb24nXSB8fCBtb2RpZmllci5mbjsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBkb3Qtbm90YXRpb25cbiAgICAgIGlmIChtb2RpZmllci5lbmFibGVkICYmIGlzRnVuY3Rpb24oZm4pKSB7XG4gICAgICAgIC8vIEFkZCBwcm9wZXJ0aWVzIHRvIG9mZnNldHMgdG8gbWFrZSB0aGVtIGEgY29tcGxldGUgY2xpZW50UmVjdCBvYmplY3RcbiAgICAgICAgLy8gd2UgZG8gdGhpcyBiZWZvcmUgZWFjaCBtb2RpZmllciB0byBtYWtlIHN1cmUgdGhlIHByZXZpb3VzIG9uZSBkb2Vzbid0XG4gICAgICAgIC8vIG1lc3Mgd2l0aCB0aGVzZSB2YWx1ZXNcbiAgICAgICAgZGF0YS5vZmZzZXRzLnBvcHBlciA9IGdldENsaWVudFJlY3QoZGF0YS5vZmZzZXRzLnBvcHBlcik7XG4gICAgICAgIGRhdGEub2Zmc2V0cy5yZWZlcmVuY2UgPSBnZXRDbGllbnRSZWN0KGRhdGEub2Zmc2V0cy5yZWZlcmVuY2UpO1xuXG4gICAgICAgIGRhdGEgPSBmbihkYXRhLCBtb2RpZmllcik7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gZGF0YTtcbiAgfVxuXG4gIC8qKlxuICAgKiBVcGRhdGVzIHRoZSBwb3NpdGlvbiBvZiB0aGUgcG9wcGVyLCBjb21wdXRpbmcgdGhlIG5ldyBvZmZzZXRzIGFuZCBhcHBseWluZ1xuICAgKiB0aGUgbmV3IHN0eWxlLjxiciAvPlxuICAgKiBQcmVmZXIgYHNjaGVkdWxlVXBkYXRlYCBvdmVyIGB1cGRhdGVgIGJlY2F1c2Ugb2YgcGVyZm9ybWFuY2UgcmVhc29ucy5cbiAgICogQG1ldGhvZFxuICAgKiBAbWVtYmVyb2YgUG9wcGVyXG4gICAqL1xuICBmdW5jdGlvbiB1cGRhdGUoKSB7XG4gICAgLy8gaWYgcG9wcGVyIGlzIGRlc3Ryb3llZCwgZG9uJ3QgcGVyZm9ybSBhbnkgZnVydGhlciB1cGRhdGVcbiAgICBpZiAodGhpcy5zdGF0ZS5pc0Rlc3Ryb3llZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBkYXRhID0ge1xuICAgICAgaW5zdGFuY2U6IHRoaXMsXG4gICAgICBzdHlsZXM6IHt9LFxuICAgICAgYXJyb3dTdHlsZXM6IHt9LFxuICAgICAgYXR0cmlidXRlczoge30sXG4gICAgICBmbGlwcGVkOiBmYWxzZSxcbiAgICAgIG9mZnNldHM6IHt9XG4gICAgfTtcblxuICAgIC8vIGNvbXB1dGUgcmVmZXJlbmNlIGVsZW1lbnQgb2Zmc2V0c1xuICAgIGRhdGEub2Zmc2V0cy5yZWZlcmVuY2UgPSBnZXRSZWZlcmVuY2VPZmZzZXRzKHRoaXMuc3RhdGUsIHRoaXMucG9wcGVyLCB0aGlzLnJlZmVyZW5jZSwgdGhpcy5vcHRpb25zLnBvc2l0aW9uRml4ZWQpO1xuXG4gICAgLy8gY29tcHV0ZSBhdXRvIHBsYWNlbWVudCwgc3RvcmUgcGxhY2VtZW50IGluc2lkZSB0aGUgZGF0YSBvYmplY3QsXG4gICAgLy8gbW9kaWZpZXJzIHdpbGwgYmUgYWJsZSB0byBlZGl0IGBwbGFjZW1lbnRgIGlmIG5lZWRlZFxuICAgIC8vIGFuZCByZWZlciB0byBvcmlnaW5hbFBsYWNlbWVudCB0byBrbm93IHRoZSBvcmlnaW5hbCB2YWx1ZVxuICAgIGRhdGEucGxhY2VtZW50ID0gY29tcHV0ZUF1dG9QbGFjZW1lbnQodGhpcy5vcHRpb25zLnBsYWNlbWVudCwgZGF0YS5vZmZzZXRzLnJlZmVyZW5jZSwgdGhpcy5wb3BwZXIsIHRoaXMucmVmZXJlbmNlLCB0aGlzLm9wdGlvbnMubW9kaWZpZXJzLmZsaXAuYm91bmRhcmllc0VsZW1lbnQsIHRoaXMub3B0aW9ucy5tb2RpZmllcnMuZmxpcC5wYWRkaW5nKTtcblxuICAgIC8vIHN0b3JlIHRoZSBjb21wdXRlZCBwbGFjZW1lbnQgaW5zaWRlIGBvcmlnaW5hbFBsYWNlbWVudGBcbiAgICBkYXRhLm9yaWdpbmFsUGxhY2VtZW50ID0gZGF0YS5wbGFjZW1lbnQ7XG5cbiAgICBkYXRhLnBvc2l0aW9uRml4ZWQgPSB0aGlzLm9wdGlvbnMucG9zaXRpb25GaXhlZDtcblxuICAgIC8vIGNvbXB1dGUgdGhlIHBvcHBlciBvZmZzZXRzXG4gICAgZGF0YS5vZmZzZXRzLnBvcHBlciA9IGdldFBvcHBlck9mZnNldHModGhpcy5wb3BwZXIsIGRhdGEub2Zmc2V0cy5yZWZlcmVuY2UsIGRhdGEucGxhY2VtZW50KTtcblxuICAgIGRhdGEub2Zmc2V0cy5wb3BwZXIucG9zaXRpb24gPSB0aGlzLm9wdGlvbnMucG9zaXRpb25GaXhlZCA/ICdmaXhlZCcgOiAnYWJzb2x1dGUnO1xuXG4gICAgLy8gcnVuIHRoZSBtb2RpZmllcnNcbiAgICBkYXRhID0gcnVuTW9kaWZpZXJzKHRoaXMubW9kaWZpZXJzLCBkYXRhKTtcblxuICAgIC8vIHRoZSBmaXJzdCBgdXBkYXRlYCB3aWxsIGNhbGwgYG9uQ3JlYXRlYCBjYWxsYmFja1xuICAgIC8vIHRoZSBvdGhlciBvbmVzIHdpbGwgY2FsbCBgb25VcGRhdGVgIGNhbGxiYWNrXG4gICAgaWYgKCF0aGlzLnN0YXRlLmlzQ3JlYXRlZCkge1xuICAgICAgdGhpcy5zdGF0ZS5pc0NyZWF0ZWQgPSB0cnVlO1xuICAgICAgdGhpcy5vcHRpb25zLm9uQ3JlYXRlKGRhdGEpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLm9wdGlvbnMub25VcGRhdGUoZGF0YSk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEhlbHBlciB1c2VkIHRvIGtub3cgaWYgdGhlIGdpdmVuIG1vZGlmaWVyIGlzIGVuYWJsZWQuXG4gICAqIEBtZXRob2RcbiAgICogQG1lbWJlcm9mIFBvcHBlci5VdGlsc1xuICAgKiBAcmV0dXJucyB7Qm9vbGVhbn1cbiAgICovXG4gIGZ1bmN0aW9uIGlzTW9kaWZpZXJFbmFibGVkKG1vZGlmaWVycywgbW9kaWZpZXJOYW1lKSB7XG4gICAgcmV0dXJuIG1vZGlmaWVycy5zb21lKGZ1bmN0aW9uIChfcmVmKSB7XG4gICAgICB2YXIgbmFtZSA9IF9yZWYubmFtZSxcbiAgICAgICAgICBlbmFibGVkID0gX3JlZi5lbmFibGVkO1xuICAgICAgcmV0dXJuIGVuYWJsZWQgJiYgbmFtZSA9PT0gbW9kaWZpZXJOYW1lO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCB0aGUgcHJlZml4ZWQgc3VwcG9ydGVkIHByb3BlcnR5IG5hbWVcbiAgICogQG1ldGhvZFxuICAgKiBAbWVtYmVyb2YgUG9wcGVyLlV0aWxzXG4gICAqIEBhcmd1bWVudCB7U3RyaW5nfSBwcm9wZXJ0eSAoY2FtZWxDYXNlKVxuICAgKiBAcmV0dXJucyB7U3RyaW5nfSBwcmVmaXhlZCBwcm9wZXJ0eSAoY2FtZWxDYXNlIG9yIFBhc2NhbENhc2UsIGRlcGVuZGluZyBvbiB0aGUgdmVuZG9yIHByZWZpeClcbiAgICovXG4gIGZ1bmN0aW9uIGdldFN1cHBvcnRlZFByb3BlcnR5TmFtZShwcm9wZXJ0eSkge1xuICAgIHZhciBwcmVmaXhlcyA9IFtmYWxzZSwgJ21zJywgJ1dlYmtpdCcsICdNb3onLCAnTyddO1xuICAgIHZhciB1cHBlclByb3AgPSBwcm9wZXJ0eS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHByb3BlcnR5LnNsaWNlKDEpO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcmVmaXhlcy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHByZWZpeCA9IHByZWZpeGVzW2ldO1xuICAgICAgdmFyIHRvQ2hlY2sgPSBwcmVmaXggPyAnJyArIHByZWZpeCArIHVwcGVyUHJvcCA6IHByb3BlcnR5O1xuICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5ib2R5LnN0eWxlW3RvQ2hlY2tdICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gdG9DaGVjaztcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICAvKipcbiAgICogRGVzdHJveXMgdGhlIHBvcHBlci5cbiAgICogQG1ldGhvZFxuICAgKiBAbWVtYmVyb2YgUG9wcGVyXG4gICAqL1xuICBmdW5jdGlvbiBkZXN0cm95KCkge1xuICAgIHRoaXMuc3RhdGUuaXNEZXN0cm95ZWQgPSB0cnVlO1xuXG4gICAgLy8gdG91Y2ggRE9NIG9ubHkgaWYgYGFwcGx5U3R5bGVgIG1vZGlmaWVyIGlzIGVuYWJsZWRcbiAgICBpZiAoaXNNb2RpZmllckVuYWJsZWQodGhpcy5tb2RpZmllcnMsICdhcHBseVN0eWxlJykpIHtcbiAgICAgIHRoaXMucG9wcGVyLnJlbW92ZUF0dHJpYnV0ZSgneC1wbGFjZW1lbnQnKTtcbiAgICAgIHRoaXMucG9wcGVyLnN0eWxlLnBvc2l0aW9uID0gJyc7XG4gICAgICB0aGlzLnBvcHBlci5zdHlsZS50b3AgPSAnJztcbiAgICAgIHRoaXMucG9wcGVyLnN0eWxlLmxlZnQgPSAnJztcbiAgICAgIHRoaXMucG9wcGVyLnN0eWxlLnJpZ2h0ID0gJyc7XG4gICAgICB0aGlzLnBvcHBlci5zdHlsZS5ib3R0b20gPSAnJztcbiAgICAgIHRoaXMucG9wcGVyLnN0eWxlLndpbGxDaGFuZ2UgPSAnJztcbiAgICAgIHRoaXMucG9wcGVyLnN0eWxlW2dldFN1cHBvcnRlZFByb3BlcnR5TmFtZSgndHJhbnNmb3JtJyldID0gJyc7XG4gICAgfVxuXG4gICAgdGhpcy5kaXNhYmxlRXZlbnRMaXN0ZW5lcnMoKTtcblxuICAgIC8vIHJlbW92ZSB0aGUgcG9wcGVyIGlmIHVzZXIgZXhwbGljaXRseSBhc2tlZCBmb3IgdGhlIGRlbGV0aW9uIG9uIGRlc3Ryb3lcbiAgICAvLyBkbyBub3QgdXNlIGByZW1vdmVgIGJlY2F1c2UgSUUxMSBkb2Vzbid0IHN1cHBvcnQgaXRcbiAgICBpZiAodGhpcy5vcHRpb25zLnJlbW92ZU9uRGVzdHJveSkge1xuICAgICAgdGhpcy5wb3BwZXIucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzLnBvcHBlcik7XG4gICAgfVxuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCB0aGUgd2luZG93IGFzc29jaWF0ZWQgd2l0aCB0aGUgZWxlbWVudFxuICAgKiBAYXJndW1lbnQge0VsZW1lbnR9IGVsZW1lbnRcbiAgICogQHJldHVybnMge1dpbmRvd31cbiAgICovXG4gIGZ1bmN0aW9uIGdldFdpbmRvdyhlbGVtZW50KSB7XG4gICAgdmFyIG93bmVyRG9jdW1lbnQgPSBlbGVtZW50Lm93bmVyRG9jdW1lbnQ7XG4gICAgcmV0dXJuIG93bmVyRG9jdW1lbnQgPyBvd25lckRvY3VtZW50LmRlZmF1bHRWaWV3IDogd2luZG93O1xuICB9XG5cbiAgZnVuY3Rpb24gYXR0YWNoVG9TY3JvbGxQYXJlbnRzKHNjcm9sbFBhcmVudCwgZXZlbnQsIGNhbGxiYWNrLCBzY3JvbGxQYXJlbnRzKSB7XG4gICAgdmFyIGlzQm9keSA9IHNjcm9sbFBhcmVudC5ub2RlTmFtZSA9PT0gJ0JPRFknO1xuICAgIHZhciB0YXJnZXQgPSBpc0JvZHkgPyBzY3JvbGxQYXJlbnQub3duZXJEb2N1bWVudC5kZWZhdWx0VmlldyA6IHNjcm9sbFBhcmVudDtcbiAgICB0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcihldmVudCwgY2FsbGJhY2ssIHsgcGFzc2l2ZTogdHJ1ZSB9KTtcblxuICAgIGlmICghaXNCb2R5KSB7XG4gICAgICBhdHRhY2hUb1Njcm9sbFBhcmVudHMoZ2V0U2Nyb2xsUGFyZW50KHRhcmdldC5wYXJlbnROb2RlKSwgZXZlbnQsIGNhbGxiYWNrLCBzY3JvbGxQYXJlbnRzKTtcbiAgICB9XG4gICAgc2Nyb2xsUGFyZW50cy5wdXNoKHRhcmdldCk7XG4gIH1cblxuICAvKipcbiAgICogU2V0dXAgbmVlZGVkIGV2ZW50IGxpc3RlbmVycyB1c2VkIHRvIHVwZGF0ZSB0aGUgcG9wcGVyIHBvc2l0aW9uXG4gICAqIEBtZXRob2RcbiAgICogQG1lbWJlcm9mIFBvcHBlci5VdGlsc1xuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgZnVuY3Rpb24gc2V0dXBFdmVudExpc3RlbmVycyhyZWZlcmVuY2UsIG9wdGlvbnMsIHN0YXRlLCB1cGRhdGVCb3VuZCkge1xuICAgIC8vIFJlc2l6ZSBldmVudCBsaXN0ZW5lciBvbiB3aW5kb3dcbiAgICBzdGF0ZS51cGRhdGVCb3VuZCA9IHVwZGF0ZUJvdW5kO1xuICAgIGdldFdpbmRvdyhyZWZlcmVuY2UpLmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHN0YXRlLnVwZGF0ZUJvdW5kLCB7IHBhc3NpdmU6IHRydWUgfSk7XG5cbiAgICAvLyBTY3JvbGwgZXZlbnQgbGlzdGVuZXIgb24gc2Nyb2xsIHBhcmVudHNcbiAgICB2YXIgc2Nyb2xsRWxlbWVudCA9IGdldFNjcm9sbFBhcmVudChyZWZlcmVuY2UpO1xuICAgIGF0dGFjaFRvU2Nyb2xsUGFyZW50cyhzY3JvbGxFbGVtZW50LCAnc2Nyb2xsJywgc3RhdGUudXBkYXRlQm91bmQsIHN0YXRlLnNjcm9sbFBhcmVudHMpO1xuICAgIHN0YXRlLnNjcm9sbEVsZW1lbnQgPSBzY3JvbGxFbGVtZW50O1xuICAgIHN0YXRlLmV2ZW50c0VuYWJsZWQgPSB0cnVlO1xuXG4gICAgcmV0dXJuIHN0YXRlO1xuICB9XG5cbiAgLyoqXG4gICAqIEl0IHdpbGwgYWRkIHJlc2l6ZS9zY3JvbGwgZXZlbnRzIGFuZCBzdGFydCByZWNhbGN1bGF0aW5nXG4gICAqIHBvc2l0aW9uIG9mIHRoZSBwb3BwZXIgZWxlbWVudCB3aGVuIHRoZXkgYXJlIHRyaWdnZXJlZC5cbiAgICogQG1ldGhvZFxuICAgKiBAbWVtYmVyb2YgUG9wcGVyXG4gICAqL1xuICBmdW5jdGlvbiBlbmFibGVFdmVudExpc3RlbmVycygpIHtcbiAgICBpZiAoIXRoaXMuc3RhdGUuZXZlbnRzRW5hYmxlZCkge1xuICAgICAgdGhpcy5zdGF0ZSA9IHNldHVwRXZlbnRMaXN0ZW5lcnModGhpcy5yZWZlcmVuY2UsIHRoaXMub3B0aW9ucywgdGhpcy5zdGF0ZSwgdGhpcy5zY2hlZHVsZVVwZGF0ZSk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFJlbW92ZSBldmVudCBsaXN0ZW5lcnMgdXNlZCB0byB1cGRhdGUgdGhlIHBvcHBlciBwb3NpdGlvblxuICAgKiBAbWV0aG9kXG4gICAqIEBtZW1iZXJvZiBQb3BwZXIuVXRpbHNcbiAgICogQHByaXZhdGVcbiAgICovXG4gIGZ1bmN0aW9uIHJlbW92ZUV2ZW50TGlzdGVuZXJzKHJlZmVyZW5jZSwgc3RhdGUpIHtcbiAgICAvLyBSZW1vdmUgcmVzaXplIGV2ZW50IGxpc3RlbmVyIG9uIHdpbmRvd1xuICAgIGdldFdpbmRvdyhyZWZlcmVuY2UpLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHN0YXRlLnVwZGF0ZUJvdW5kKTtcblxuICAgIC8vIFJlbW92ZSBzY3JvbGwgZXZlbnQgbGlzdGVuZXIgb24gc2Nyb2xsIHBhcmVudHNcbiAgICBzdGF0ZS5zY3JvbGxQYXJlbnRzLmZvckVhY2goZnVuY3Rpb24gKHRhcmdldCkge1xuICAgICAgdGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHN0YXRlLnVwZGF0ZUJvdW5kKTtcbiAgICB9KTtcblxuICAgIC8vIFJlc2V0IHN0YXRlXG4gICAgc3RhdGUudXBkYXRlQm91bmQgPSBudWxsO1xuICAgIHN0YXRlLnNjcm9sbFBhcmVudHMgPSBbXTtcbiAgICBzdGF0ZS5zY3JvbGxFbGVtZW50ID0gbnVsbDtcbiAgICBzdGF0ZS5ldmVudHNFbmFibGVkID0gZmFsc2U7XG4gICAgcmV0dXJuIHN0YXRlO1xuICB9XG5cbiAgLyoqXG4gICAqIEl0IHdpbGwgcmVtb3ZlIHJlc2l6ZS9zY3JvbGwgZXZlbnRzIGFuZCB3b24ndCByZWNhbGN1bGF0ZSBwb3BwZXIgcG9zaXRpb25cbiAgICogd2hlbiB0aGV5IGFyZSB0cmlnZ2VyZWQuIEl0IGFsc28gd29uJ3QgdHJpZ2dlciBgb25VcGRhdGVgIGNhbGxiYWNrIGFueW1vcmUsXG4gICAqIHVubGVzcyB5b3UgY2FsbCBgdXBkYXRlYCBtZXRob2QgbWFudWFsbHkuXG4gICAqIEBtZXRob2RcbiAgICogQG1lbWJlcm9mIFBvcHBlclxuICAgKi9cbiAgZnVuY3Rpb24gZGlzYWJsZUV2ZW50TGlzdGVuZXJzKCkge1xuICAgIGlmICh0aGlzLnN0YXRlLmV2ZW50c0VuYWJsZWQpIHtcbiAgICAgIGNhbmNlbEFuaW1hdGlvbkZyYW1lKHRoaXMuc2NoZWR1bGVVcGRhdGUpO1xuICAgICAgdGhpcy5zdGF0ZSA9IHJlbW92ZUV2ZW50TGlzdGVuZXJzKHRoaXMucmVmZXJlbmNlLCB0aGlzLnN0YXRlKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogVGVsbHMgaWYgYSBnaXZlbiBpbnB1dCBpcyBhIG51bWJlclxuICAgKiBAbWV0aG9kXG4gICAqIEBtZW1iZXJvZiBQb3BwZXIuVXRpbHNcbiAgICogQHBhcmFtIHsqfSBpbnB1dCB0byBjaGVja1xuICAgKiBAcmV0dXJuIHtCb29sZWFufVxuICAgKi9cbiAgZnVuY3Rpb24gaXNOdW1lcmljKG4pIHtcbiAgICByZXR1cm4gbiAhPT0gJycgJiYgIWlzTmFOKHBhcnNlRmxvYXQobikpICYmIGlzRmluaXRlKG4pO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldCB0aGUgc3R5bGUgdG8gdGhlIGdpdmVuIHBvcHBlclxuICAgKiBAbWV0aG9kXG4gICAqIEBtZW1iZXJvZiBQb3BwZXIuVXRpbHNcbiAgICogQGFyZ3VtZW50IHtFbGVtZW50fSBlbGVtZW50IC0gRWxlbWVudCB0byBhcHBseSB0aGUgc3R5bGUgdG9cbiAgICogQGFyZ3VtZW50IHtPYmplY3R9IHN0eWxlc1xuICAgKiBPYmplY3Qgd2l0aCBhIGxpc3Qgb2YgcHJvcGVydGllcyBhbmQgdmFsdWVzIHdoaWNoIHdpbGwgYmUgYXBwbGllZCB0byB0aGUgZWxlbWVudFxuICAgKi9cbiAgZnVuY3Rpb24gc2V0U3R5bGVzKGVsZW1lbnQsIHN0eWxlcykge1xuICAgIE9iamVjdC5rZXlzKHN0eWxlcykuZm9yRWFjaChmdW5jdGlvbiAocHJvcCkge1xuICAgICAgdmFyIHVuaXQgPSAnJztcbiAgICAgIC8vIGFkZCB1bml0IGlmIHRoZSB2YWx1ZSBpcyBudW1lcmljIGFuZCBpcyBvbmUgb2YgdGhlIGZvbGxvd2luZ1xuICAgICAgaWYgKFsnd2lkdGgnLCAnaGVpZ2h0JywgJ3RvcCcsICdyaWdodCcsICdib3R0b20nLCAnbGVmdCddLmluZGV4T2YocHJvcCkgIT09IC0xICYmIGlzTnVtZXJpYyhzdHlsZXNbcHJvcF0pKSB7XG4gICAgICAgIHVuaXQgPSAncHgnO1xuICAgICAgfVxuICAgICAgZWxlbWVudC5zdHlsZVtwcm9wXSA9IHN0eWxlc1twcm9wXSArIHVuaXQ7XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogU2V0IHRoZSBhdHRyaWJ1dGVzIHRvIHRoZSBnaXZlbiBwb3BwZXJcbiAgICogQG1ldGhvZFxuICAgKiBAbWVtYmVyb2YgUG9wcGVyLlV0aWxzXG4gICAqIEBhcmd1bWVudCB7RWxlbWVudH0gZWxlbWVudCAtIEVsZW1lbnQgdG8gYXBwbHkgdGhlIGF0dHJpYnV0ZXMgdG9cbiAgICogQGFyZ3VtZW50IHtPYmplY3R9IHN0eWxlc1xuICAgKiBPYmplY3Qgd2l0aCBhIGxpc3Qgb2YgcHJvcGVydGllcyBhbmQgdmFsdWVzIHdoaWNoIHdpbGwgYmUgYXBwbGllZCB0byB0aGUgZWxlbWVudFxuICAgKi9cbiAgZnVuY3Rpb24gc2V0QXR0cmlidXRlcyhlbGVtZW50LCBhdHRyaWJ1dGVzKSB7XG4gICAgT2JqZWN0LmtleXMoYXR0cmlidXRlcykuZm9yRWFjaChmdW5jdGlvbiAocHJvcCkge1xuICAgICAgdmFyIHZhbHVlID0gYXR0cmlidXRlc1twcm9wXTtcbiAgICAgIGlmICh2YWx1ZSAhPT0gZmFsc2UpIHtcbiAgICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUocHJvcCwgYXR0cmlidXRlc1twcm9wXSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBlbGVtZW50LnJlbW92ZUF0dHJpYnV0ZShwcm9wKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAZnVuY3Rpb25cbiAgICogQG1lbWJlcm9mIE1vZGlmaWVyc1xuICAgKiBAYXJndW1lbnQge09iamVjdH0gZGF0YSAtIFRoZSBkYXRhIG9iamVjdCBnZW5lcmF0ZWQgYnkgYHVwZGF0ZWAgbWV0aG9kXG4gICAqIEBhcmd1bWVudCB7T2JqZWN0fSBkYXRhLnN0eWxlcyAtIExpc3Qgb2Ygc3R5bGUgcHJvcGVydGllcyAtIHZhbHVlcyB0byBhcHBseSB0byBwb3BwZXIgZWxlbWVudFxuICAgKiBAYXJndW1lbnQge09iamVjdH0gZGF0YS5hdHRyaWJ1dGVzIC0gTGlzdCBvZiBhdHRyaWJ1dGUgcHJvcGVydGllcyAtIHZhbHVlcyB0byBhcHBseSB0byBwb3BwZXIgZWxlbWVudFxuICAgKiBAYXJndW1lbnQge09iamVjdH0gb3B0aW9ucyAtIE1vZGlmaWVycyBjb25maWd1cmF0aW9uIGFuZCBvcHRpb25zXG4gICAqIEByZXR1cm5zIHtPYmplY3R9IFRoZSBzYW1lIGRhdGEgb2JqZWN0XG4gICAqL1xuICBmdW5jdGlvbiBhcHBseVN0eWxlKGRhdGEpIHtcbiAgICAvLyBhbnkgcHJvcGVydHkgcHJlc2VudCBpbiBgZGF0YS5zdHlsZXNgIHdpbGwgYmUgYXBwbGllZCB0byB0aGUgcG9wcGVyLFxuICAgIC8vIGluIHRoaXMgd2F5IHdlIGNhbiBtYWtlIHRoZSAzcmQgcGFydHkgbW9kaWZpZXJzIGFkZCBjdXN0b20gc3R5bGVzIHRvIGl0XG4gICAgLy8gQmUgYXdhcmUsIG1vZGlmaWVycyBjb3VsZCBvdmVycmlkZSB0aGUgcHJvcGVydGllcyBkZWZpbmVkIGluIHRoZSBwcmV2aW91c1xuICAgIC8vIGxpbmVzIG9mIHRoaXMgbW9kaWZpZXIhXG4gICAgc2V0U3R5bGVzKGRhdGEuaW5zdGFuY2UucG9wcGVyLCBkYXRhLnN0eWxlcyk7XG5cbiAgICAvLyBhbnkgcHJvcGVydHkgcHJlc2VudCBpbiBgZGF0YS5hdHRyaWJ1dGVzYCB3aWxsIGJlIGFwcGxpZWQgdG8gdGhlIHBvcHBlcixcbiAgICAvLyB0aGV5IHdpbGwgYmUgc2V0IGFzIEhUTUwgYXR0cmlidXRlcyBvZiB0aGUgZWxlbWVudFxuICAgIHNldEF0dHJpYnV0ZXMoZGF0YS5pbnN0YW5jZS5wb3BwZXIsIGRhdGEuYXR0cmlidXRlcyk7XG5cbiAgICAvLyBpZiBhcnJvd0VsZW1lbnQgaXMgZGVmaW5lZCBhbmQgYXJyb3dTdHlsZXMgaGFzIHNvbWUgcHJvcGVydGllc1xuICAgIGlmIChkYXRhLmFycm93RWxlbWVudCAmJiBPYmplY3Qua2V5cyhkYXRhLmFycm93U3R5bGVzKS5sZW5ndGgpIHtcbiAgICAgIHNldFN0eWxlcyhkYXRhLmFycm93RWxlbWVudCwgZGF0YS5hcnJvd1N0eWxlcyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGRhdGE7XG4gIH1cblxuICAvKipcbiAgICogU2V0IHRoZSB4LXBsYWNlbWVudCBhdHRyaWJ1dGUgYmVmb3JlIGV2ZXJ5dGhpbmcgZWxzZSBiZWNhdXNlIGl0IGNvdWxkIGJlIHVzZWRcbiAgICogdG8gYWRkIG1hcmdpbnMgdG8gdGhlIHBvcHBlciBtYXJnaW5zIG5lZWRzIHRvIGJlIGNhbGN1bGF0ZWQgdG8gZ2V0IHRoZVxuICAgKiBjb3JyZWN0IHBvcHBlciBvZmZzZXRzLlxuICAgKiBAbWV0aG9kXG4gICAqIEBtZW1iZXJvZiBQb3BwZXIubW9kaWZpZXJzXG4gICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IHJlZmVyZW5jZSAtIFRoZSByZWZlcmVuY2UgZWxlbWVudCB1c2VkIHRvIHBvc2l0aW9uIHRoZSBwb3BwZXJcbiAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gcG9wcGVyIC0gVGhlIEhUTUwgZWxlbWVudCB1c2VkIGFzIHBvcHBlclxuICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyAtIFBvcHBlci5qcyBvcHRpb25zXG4gICAqL1xuICBmdW5jdGlvbiBhcHBseVN0eWxlT25Mb2FkKHJlZmVyZW5jZSwgcG9wcGVyLCBvcHRpb25zLCBtb2RpZmllck9wdGlvbnMsIHN0YXRlKSB7XG4gICAgLy8gY29tcHV0ZSByZWZlcmVuY2UgZWxlbWVudCBvZmZzZXRzXG4gICAgdmFyIHJlZmVyZW5jZU9mZnNldHMgPSBnZXRSZWZlcmVuY2VPZmZzZXRzKHN0YXRlLCBwb3BwZXIsIHJlZmVyZW5jZSwgb3B0aW9ucy5wb3NpdGlvbkZpeGVkKTtcblxuICAgIC8vIGNvbXB1dGUgYXV0byBwbGFjZW1lbnQsIHN0b3JlIHBsYWNlbWVudCBpbnNpZGUgdGhlIGRhdGEgb2JqZWN0LFxuICAgIC8vIG1vZGlmaWVycyB3aWxsIGJlIGFibGUgdG8gZWRpdCBgcGxhY2VtZW50YCBpZiBuZWVkZWRcbiAgICAvLyBhbmQgcmVmZXIgdG8gb3JpZ2luYWxQbGFjZW1lbnQgdG8ga25vdyB0aGUgb3JpZ2luYWwgdmFsdWVcbiAgICB2YXIgcGxhY2VtZW50ID0gY29tcHV0ZUF1dG9QbGFjZW1lbnQob3B0aW9ucy5wbGFjZW1lbnQsIHJlZmVyZW5jZU9mZnNldHMsIHBvcHBlciwgcmVmZXJlbmNlLCBvcHRpb25zLm1vZGlmaWVycy5mbGlwLmJvdW5kYXJpZXNFbGVtZW50LCBvcHRpb25zLm1vZGlmaWVycy5mbGlwLnBhZGRpbmcpO1xuXG4gICAgcG9wcGVyLnNldEF0dHJpYnV0ZSgneC1wbGFjZW1lbnQnLCBwbGFjZW1lbnQpO1xuXG4gICAgLy8gQXBwbHkgYHBvc2l0aW9uYCB0byBwb3BwZXIgYmVmb3JlIGFueXRoaW5nIGVsc2UgYmVjYXVzZVxuICAgIC8vIHdpdGhvdXQgdGhlIHBvc2l0aW9uIGFwcGxpZWQgd2UgY2FuJ3QgZ3VhcmFudGVlIGNvcnJlY3QgY29tcHV0YXRpb25zXG4gICAgc2V0U3R5bGVzKHBvcHBlciwgeyBwb3NpdGlvbjogb3B0aW9ucy5wb3NpdGlvbkZpeGVkID8gJ2ZpeGVkJyA6ICdhYnNvbHV0ZScgfSk7XG5cbiAgICByZXR1cm4gb3B0aW9ucztcbiAgfVxuXG4gIC8qKlxuICAgKiBAZnVuY3Rpb25cbiAgICogQG1lbWJlcm9mIFBvcHBlci5VdGlsc1xuICAgKiBAYXJndW1lbnQge09iamVjdH0gZGF0YSAtIFRoZSBkYXRhIG9iamVjdCBnZW5lcmF0ZWQgYnkgYHVwZGF0ZWAgbWV0aG9kXG4gICAqIEBhcmd1bWVudCB7Qm9vbGVhbn0gc2hvdWxkUm91bmQgLSBJZiB0aGUgb2Zmc2V0cyBzaG91bGQgYmUgcm91bmRlZCBhdCBhbGxcbiAgICogQHJldHVybnMge09iamVjdH0gVGhlIHBvcHBlcidzIHBvc2l0aW9uIG9mZnNldHMgcm91bmRlZFxuICAgKlxuICAgKiBUaGUgdGFsZSBvZiBwaXhlbC1wZXJmZWN0IHBvc2l0aW9uaW5nLiBJdCdzIHN0aWxsIG5vdCAxMDAlIHBlcmZlY3QsIGJ1dCBhc1xuICAgKiBnb29kIGFzIGl0IGNhbiBiZSB3aXRoaW4gcmVhc29uLlxuICAgKiBEaXNjdXNzaW9uIGhlcmU6IGh0dHBzOi8vZ2l0aHViLmNvbS9GZXpWcmFzdGEvcG9wcGVyLmpzL3B1bGwvNzE1XG4gICAqXG4gICAqIExvdyBEUEkgc2NyZWVucyBjYXVzZSBhIHBvcHBlciB0byBiZSBibHVycnkgaWYgbm90IHVzaW5nIGZ1bGwgcGl4ZWxzIChTYWZhcmlcbiAgICogYXMgd2VsbCBvbiBIaWdoIERQSSBzY3JlZW5zKS5cbiAgICpcbiAgICogRmlyZWZveCBwcmVmZXJzIG5vIHJvdW5kaW5nIGZvciBwb3NpdGlvbmluZyBhbmQgZG9lcyBub3QgaGF2ZSBibHVycmluZXNzIG9uXG4gICAqIGhpZ2ggRFBJIHNjcmVlbnMuXG4gICAqXG4gICAqIE9ubHkgaG9yaXpvbnRhbCBwbGFjZW1lbnQgYW5kIGxlZnQvcmlnaHQgdmFsdWVzIG5lZWQgdG8gYmUgY29uc2lkZXJlZC5cbiAgICovXG4gIGZ1bmN0aW9uIGdldFJvdW5kZWRPZmZzZXRzKGRhdGEsIHNob3VsZFJvdW5kKSB7XG4gICAgdmFyIF9kYXRhJG9mZnNldHMgPSBkYXRhLm9mZnNldHMsXG4gICAgICAgIHBvcHBlciA9IF9kYXRhJG9mZnNldHMucG9wcGVyLFxuICAgICAgICByZWZlcmVuY2UgPSBfZGF0YSRvZmZzZXRzLnJlZmVyZW5jZTtcbiAgICB2YXIgcm91bmQgPSBNYXRoLnJvdW5kLFxuICAgICAgICBmbG9vciA9IE1hdGguZmxvb3I7XG5cbiAgICB2YXIgbm9Sb3VuZCA9IGZ1bmN0aW9uIG5vUm91bmQodikge1xuICAgICAgcmV0dXJuIHY7XG4gICAgfTtcblxuICAgIHZhciByZWZlcmVuY2VXaWR0aCA9IHJvdW5kKHJlZmVyZW5jZS53aWR0aCk7XG4gICAgdmFyIHBvcHBlcldpZHRoID0gcm91bmQocG9wcGVyLndpZHRoKTtcblxuICAgIHZhciBpc1ZlcnRpY2FsID0gWydsZWZ0JywgJ3JpZ2h0J10uaW5kZXhPZihkYXRhLnBsYWNlbWVudCkgIT09IC0xO1xuICAgIHZhciBpc1ZhcmlhdGlvbiA9IGRhdGEucGxhY2VtZW50LmluZGV4T2YoJy0nKSAhPT0gLTE7XG4gICAgdmFyIHNhbWVXaWR0aFBhcml0eSA9IHJlZmVyZW5jZVdpZHRoICUgMiA9PT0gcG9wcGVyV2lkdGggJSAyO1xuICAgIHZhciBib3RoT2RkV2lkdGggPSByZWZlcmVuY2VXaWR0aCAlIDIgPT09IDEgJiYgcG9wcGVyV2lkdGggJSAyID09PSAxO1xuXG4gICAgdmFyIGhvcml6b250YWxUb0ludGVnZXIgPSAhc2hvdWxkUm91bmQgPyBub1JvdW5kIDogaXNWZXJ0aWNhbCB8fCBpc1ZhcmlhdGlvbiB8fCBzYW1lV2lkdGhQYXJpdHkgPyByb3VuZCA6IGZsb29yO1xuICAgIHZhciB2ZXJ0aWNhbFRvSW50ZWdlciA9ICFzaG91bGRSb3VuZCA/IG5vUm91bmQgOiByb3VuZDtcblxuICAgIHJldHVybiB7XG4gICAgICBsZWZ0OiBob3Jpem9udGFsVG9JbnRlZ2VyKGJvdGhPZGRXaWR0aCAmJiAhaXNWYXJpYXRpb24gJiYgc2hvdWxkUm91bmQgPyBwb3BwZXIubGVmdCAtIDEgOiBwb3BwZXIubGVmdCksXG4gICAgICB0b3A6IHZlcnRpY2FsVG9JbnRlZ2VyKHBvcHBlci50b3ApLFxuICAgICAgYm90dG9tOiB2ZXJ0aWNhbFRvSW50ZWdlcihwb3BwZXIuYm90dG9tKSxcbiAgICAgIHJpZ2h0OiBob3Jpem9udGFsVG9JbnRlZ2VyKHBvcHBlci5yaWdodClcbiAgICB9O1xuICB9XG5cbiAgdmFyIGlzRmlyZWZveCA9IGlzQnJvd3NlciAmJiAvRmlyZWZveC9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7XG5cbiAgLyoqXG4gICAqIEBmdW5jdGlvblxuICAgKiBAbWVtYmVyb2YgTW9kaWZpZXJzXG4gICAqIEBhcmd1bWVudCB7T2JqZWN0fSBkYXRhIC0gVGhlIGRhdGEgb2JqZWN0IGdlbmVyYXRlZCBieSBgdXBkYXRlYCBtZXRob2RcbiAgICogQGFyZ3VtZW50IHtPYmplY3R9IG9wdGlvbnMgLSBNb2RpZmllcnMgY29uZmlndXJhdGlvbiBhbmQgb3B0aW9uc1xuICAgKiBAcmV0dXJucyB7T2JqZWN0fSBUaGUgZGF0YSBvYmplY3QsIHByb3Blcmx5IG1vZGlmaWVkXG4gICAqL1xuICBmdW5jdGlvbiBjb21wdXRlU3R5bGUoZGF0YSwgb3B0aW9ucykge1xuICAgIHZhciB4ID0gb3B0aW9ucy54LFxuICAgICAgICB5ID0gb3B0aW9ucy55O1xuICAgIHZhciBwb3BwZXIgPSBkYXRhLm9mZnNldHMucG9wcGVyO1xuXG4gICAgLy8gUmVtb3ZlIHRoaXMgbGVnYWN5IHN1cHBvcnQgaW4gUG9wcGVyLmpzIHYyXG5cbiAgICB2YXIgbGVnYWN5R3B1QWNjZWxlcmF0aW9uT3B0aW9uID0gZmluZChkYXRhLmluc3RhbmNlLm1vZGlmaWVycywgZnVuY3Rpb24gKG1vZGlmaWVyKSB7XG4gICAgICByZXR1cm4gbW9kaWZpZXIubmFtZSA9PT0gJ2FwcGx5U3R5bGUnO1xuICAgIH0pLmdwdUFjY2VsZXJhdGlvbjtcbiAgICBpZiAobGVnYWN5R3B1QWNjZWxlcmF0aW9uT3B0aW9uICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGNvbnNvbGUud2FybignV0FSTklORzogYGdwdUFjY2VsZXJhdGlvbmAgb3B0aW9uIG1vdmVkIHRvIGBjb21wdXRlU3R5bGVgIG1vZGlmaWVyIGFuZCB3aWxsIG5vdCBiZSBzdXBwb3J0ZWQgaW4gZnV0dXJlIHZlcnNpb25zIG9mIFBvcHBlci5qcyEnKTtcbiAgICB9XG4gICAgdmFyIGdwdUFjY2VsZXJhdGlvbiA9IGxlZ2FjeUdwdUFjY2VsZXJhdGlvbk9wdGlvbiAhPT0gdW5kZWZpbmVkID8gbGVnYWN5R3B1QWNjZWxlcmF0aW9uT3B0aW9uIDogb3B0aW9ucy5ncHVBY2NlbGVyYXRpb247XG5cbiAgICB2YXIgb2Zmc2V0UGFyZW50ID0gZ2V0T2Zmc2V0UGFyZW50KGRhdGEuaW5zdGFuY2UucG9wcGVyKTtcbiAgICB2YXIgb2Zmc2V0UGFyZW50UmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChvZmZzZXRQYXJlbnQpO1xuXG4gICAgLy8gU3R5bGVzXG4gICAgdmFyIHN0eWxlcyA9IHtcbiAgICAgIHBvc2l0aW9uOiBwb3BwZXIucG9zaXRpb25cbiAgICB9O1xuXG4gICAgdmFyIG9mZnNldHMgPSBnZXRSb3VuZGVkT2Zmc2V0cyhkYXRhLCB3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpbyA8IDIgfHwgIWlzRmlyZWZveCk7XG5cbiAgICB2YXIgc2lkZUEgPSB4ID09PSAnYm90dG9tJyA/ICd0b3AnIDogJ2JvdHRvbSc7XG4gICAgdmFyIHNpZGVCID0geSA9PT0gJ3JpZ2h0JyA/ICdsZWZ0JyA6ICdyaWdodCc7XG5cbiAgICAvLyBpZiBncHVBY2NlbGVyYXRpb24gaXMgc2V0IHRvIGB0cnVlYCBhbmQgdHJhbnNmb3JtIGlzIHN1cHBvcnRlZCxcbiAgICAvLyAgd2UgdXNlIGB0cmFuc2xhdGUzZGAgdG8gYXBwbHkgdGhlIHBvc2l0aW9uIHRvIHRoZSBwb3BwZXIgd2VcbiAgICAvLyBhdXRvbWF0aWNhbGx5IHVzZSB0aGUgc3VwcG9ydGVkIHByZWZpeGVkIHZlcnNpb24gaWYgbmVlZGVkXG4gICAgdmFyIHByZWZpeGVkUHJvcGVydHkgPSBnZXRTdXBwb3J0ZWRQcm9wZXJ0eU5hbWUoJ3RyYW5zZm9ybScpO1xuXG4gICAgLy8gbm93LCBsZXQncyBtYWtlIGEgc3RlcCBiYWNrIGFuZCBsb29rIGF0IHRoaXMgY29kZSBjbG9zZWx5ICh3dGY/KVxuICAgIC8vIElmIHRoZSBjb250ZW50IG9mIHRoZSBwb3BwZXIgZ3Jvd3Mgb25jZSBpdCdzIGJlZW4gcG9zaXRpb25lZCwgaXRcbiAgICAvLyBtYXkgaGFwcGVuIHRoYXQgdGhlIHBvcHBlciBnZXRzIG1pc3BsYWNlZCBiZWNhdXNlIG9mIHRoZSBuZXcgY29udGVudFxuICAgIC8vIG92ZXJmbG93aW5nIGl0cyByZWZlcmVuY2UgZWxlbWVudFxuICAgIC8vIFRvIGF2b2lkIHRoaXMgcHJvYmxlbSwgd2UgcHJvdmlkZSB0d28gb3B0aW9ucyAoeCBhbmQgeSksIHdoaWNoIGFsbG93XG4gICAgLy8gdGhlIGNvbnN1bWVyIHRvIGRlZmluZSB0aGUgb2Zmc2V0IG9yaWdpbi5cbiAgICAvLyBJZiB3ZSBwb3NpdGlvbiBhIHBvcHBlciBvbiB0b3Agb2YgYSByZWZlcmVuY2UgZWxlbWVudCwgd2UgY2FuIHNldFxuICAgIC8vIGB4YCB0byBgdG9wYCB0byBtYWtlIHRoZSBwb3BwZXIgZ3JvdyB0b3dhcmRzIGl0cyB0b3AgaW5zdGVhZCBvZlxuICAgIC8vIGl0cyBib3R0b20uXG4gICAgdmFyIGxlZnQgPSB2b2lkIDAsXG4gICAgICAgIHRvcCA9IHZvaWQgMDtcbiAgICBpZiAoc2lkZUEgPT09ICdib3R0b20nKSB7XG4gICAgICAvLyB3aGVuIG9mZnNldFBhcmVudCBpcyA8aHRtbD4gdGhlIHBvc2l0aW9uaW5nIGlzIHJlbGF0aXZlIHRvIHRoZSBib3R0b20gb2YgdGhlIHNjcmVlbiAoZXhjbHVkaW5nIHRoZSBzY3JvbGxiYXIpXG4gICAgICAvLyBhbmQgbm90IHRoZSBib3R0b20gb2YgdGhlIGh0bWwgZWxlbWVudFxuICAgICAgaWYgKG9mZnNldFBhcmVudC5ub2RlTmFtZSA9PT0gJ0hUTUwnKSB7XG4gICAgICAgIHRvcCA9IC1vZmZzZXRQYXJlbnQuY2xpZW50SGVpZ2h0ICsgb2Zmc2V0cy5ib3R0b207XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0b3AgPSAtb2Zmc2V0UGFyZW50UmVjdC5oZWlnaHQgKyBvZmZzZXRzLmJvdHRvbTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdG9wID0gb2Zmc2V0cy50b3A7XG4gICAgfVxuICAgIGlmIChzaWRlQiA9PT0gJ3JpZ2h0Jykge1xuICAgICAgaWYgKG9mZnNldFBhcmVudC5ub2RlTmFtZSA9PT0gJ0hUTUwnKSB7XG4gICAgICAgIGxlZnQgPSAtb2Zmc2V0UGFyZW50LmNsaWVudFdpZHRoICsgb2Zmc2V0cy5yaWdodDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxlZnQgPSAtb2Zmc2V0UGFyZW50UmVjdC53aWR0aCArIG9mZnNldHMucmlnaHQ7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGxlZnQgPSBvZmZzZXRzLmxlZnQ7XG4gICAgfVxuICAgIGlmIChncHVBY2NlbGVyYXRpb24gJiYgcHJlZml4ZWRQcm9wZXJ0eSkge1xuICAgICAgc3R5bGVzW3ByZWZpeGVkUHJvcGVydHldID0gJ3RyYW5zbGF0ZTNkKCcgKyBsZWZ0ICsgJ3B4LCAnICsgdG9wICsgJ3B4LCAwKSc7XG4gICAgICBzdHlsZXNbc2lkZUFdID0gMDtcbiAgICAgIHN0eWxlc1tzaWRlQl0gPSAwO1xuICAgICAgc3R5bGVzLndpbGxDaGFuZ2UgPSAndHJhbnNmb3JtJztcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gb3Rod2VyaXNlLCB3ZSB1c2UgdGhlIHN0YW5kYXJkIGB0b3BgLCBgbGVmdGAsIGBib3R0b21gIGFuZCBgcmlnaHRgIHByb3BlcnRpZXNcbiAgICAgIHZhciBpbnZlcnRUb3AgPSBzaWRlQSA9PT0gJ2JvdHRvbScgPyAtMSA6IDE7XG4gICAgICB2YXIgaW52ZXJ0TGVmdCA9IHNpZGVCID09PSAncmlnaHQnID8gLTEgOiAxO1xuICAgICAgc3R5bGVzW3NpZGVBXSA9IHRvcCAqIGludmVydFRvcDtcbiAgICAgIHN0eWxlc1tzaWRlQl0gPSBsZWZ0ICogaW52ZXJ0TGVmdDtcbiAgICAgIHN0eWxlcy53aWxsQ2hhbmdlID0gc2lkZUEgKyAnLCAnICsgc2lkZUI7XG4gICAgfVxuXG4gICAgLy8gQXR0cmlidXRlc1xuICAgIHZhciBhdHRyaWJ1dGVzID0ge1xuICAgICAgJ3gtcGxhY2VtZW50JzogZGF0YS5wbGFjZW1lbnRcbiAgICB9O1xuXG4gICAgLy8gVXBkYXRlIGBkYXRhYCBhdHRyaWJ1dGVzLCBzdHlsZXMgYW5kIGFycm93U3R5bGVzXG4gICAgZGF0YS5hdHRyaWJ1dGVzID0gX2V4dGVuZHMoe30sIGF0dHJpYnV0ZXMsIGRhdGEuYXR0cmlidXRlcyk7XG4gICAgZGF0YS5zdHlsZXMgPSBfZXh0ZW5kcyh7fSwgc3R5bGVzLCBkYXRhLnN0eWxlcyk7XG4gICAgZGF0YS5hcnJvd1N0eWxlcyA9IF9leHRlbmRzKHt9LCBkYXRhLm9mZnNldHMuYXJyb3csIGRhdGEuYXJyb3dTdHlsZXMpO1xuXG4gICAgcmV0dXJuIGRhdGE7XG4gIH1cblxuICAvKipcbiAgICogSGVscGVyIHVzZWQgdG8ga25vdyBpZiB0aGUgZ2l2ZW4gbW9kaWZpZXIgZGVwZW5kcyBmcm9tIGFub3RoZXIgb25lLjxiciAvPlxuICAgKiBJdCBjaGVja3MgaWYgdGhlIG5lZWRlZCBtb2RpZmllciBpcyBsaXN0ZWQgYW5kIGVuYWJsZWQuXG4gICAqIEBtZXRob2RcbiAgICogQG1lbWJlcm9mIFBvcHBlci5VdGlsc1xuICAgKiBAcGFyYW0ge0FycmF5fSBtb2RpZmllcnMgLSBsaXN0IG9mIG1vZGlmaWVyc1xuICAgKiBAcGFyYW0ge1N0cmluZ30gcmVxdWVzdGluZ05hbWUgLSBuYW1lIG9mIHJlcXVlc3RpbmcgbW9kaWZpZXJcbiAgICogQHBhcmFtIHtTdHJpbmd9IHJlcXVlc3RlZE5hbWUgLSBuYW1lIG9mIHJlcXVlc3RlZCBtb2RpZmllclxuICAgKiBAcmV0dXJucyB7Qm9vbGVhbn1cbiAgICovXG4gIGZ1bmN0aW9uIGlzTW9kaWZpZXJSZXF1aXJlZChtb2RpZmllcnMsIHJlcXVlc3RpbmdOYW1lLCByZXF1ZXN0ZWROYW1lKSB7XG4gICAgdmFyIHJlcXVlc3RpbmcgPSBmaW5kKG1vZGlmaWVycywgZnVuY3Rpb24gKF9yZWYpIHtcbiAgICAgIHZhciBuYW1lID0gX3JlZi5uYW1lO1xuICAgICAgcmV0dXJuIG5hbWUgPT09IHJlcXVlc3RpbmdOYW1lO1xuICAgIH0pO1xuXG4gICAgdmFyIGlzUmVxdWlyZWQgPSAhIXJlcXVlc3RpbmcgJiYgbW9kaWZpZXJzLnNvbWUoZnVuY3Rpb24gKG1vZGlmaWVyKSB7XG4gICAgICByZXR1cm4gbW9kaWZpZXIubmFtZSA9PT0gcmVxdWVzdGVkTmFtZSAmJiBtb2RpZmllci5lbmFibGVkICYmIG1vZGlmaWVyLm9yZGVyIDwgcmVxdWVzdGluZy5vcmRlcjtcbiAgICB9KTtcblxuICAgIGlmICghaXNSZXF1aXJlZCkge1xuICAgICAgdmFyIF9yZXF1ZXN0aW5nID0gJ2AnICsgcmVxdWVzdGluZ05hbWUgKyAnYCc7XG4gICAgICB2YXIgcmVxdWVzdGVkID0gJ2AnICsgcmVxdWVzdGVkTmFtZSArICdgJztcbiAgICAgIGNvbnNvbGUud2FybihyZXF1ZXN0ZWQgKyAnIG1vZGlmaWVyIGlzIHJlcXVpcmVkIGJ5ICcgKyBfcmVxdWVzdGluZyArICcgbW9kaWZpZXIgaW4gb3JkZXIgdG8gd29yaywgYmUgc3VyZSB0byBpbmNsdWRlIGl0IGJlZm9yZSAnICsgX3JlcXVlc3RpbmcgKyAnIScpO1xuICAgIH1cbiAgICByZXR1cm4gaXNSZXF1aXJlZDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAZnVuY3Rpb25cbiAgICogQG1lbWJlcm9mIE1vZGlmaWVyc1xuICAgKiBAYXJndW1lbnQge09iamVjdH0gZGF0YSAtIFRoZSBkYXRhIG9iamVjdCBnZW5lcmF0ZWQgYnkgdXBkYXRlIG1ldGhvZFxuICAgKiBAYXJndW1lbnQge09iamVjdH0gb3B0aW9ucyAtIE1vZGlmaWVycyBjb25maWd1cmF0aW9uIGFuZCBvcHRpb25zXG4gICAqIEByZXR1cm5zIHtPYmplY3R9IFRoZSBkYXRhIG9iamVjdCwgcHJvcGVybHkgbW9kaWZpZWRcbiAgICovXG4gIGZ1bmN0aW9uIGFycm93KGRhdGEsIG9wdGlvbnMpIHtcbiAgICB2YXIgX2RhdGEkb2Zmc2V0cyRhcnJvdztcblxuICAgIC8vIGFycm93IGRlcGVuZHMgb24ga2VlcFRvZ2V0aGVyIGluIG9yZGVyIHRvIHdvcmtcbiAgICBpZiAoIWlzTW9kaWZpZXJSZXF1aXJlZChkYXRhLmluc3RhbmNlLm1vZGlmaWVycywgJ2Fycm93JywgJ2tlZXBUb2dldGhlcicpKSB7XG4gICAgICByZXR1cm4gZGF0YTtcbiAgICB9XG5cbiAgICB2YXIgYXJyb3dFbGVtZW50ID0gb3B0aW9ucy5lbGVtZW50O1xuXG4gICAgLy8gaWYgYXJyb3dFbGVtZW50IGlzIGEgc3RyaW5nLCBzdXBwb3NlIGl0J3MgYSBDU1Mgc2VsZWN0b3JcbiAgICBpZiAodHlwZW9mIGFycm93RWxlbWVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGFycm93RWxlbWVudCA9IGRhdGEuaW5zdGFuY2UucG9wcGVyLnF1ZXJ5U2VsZWN0b3IoYXJyb3dFbGVtZW50KTtcblxuICAgICAgLy8gaWYgYXJyb3dFbGVtZW50IGlzIG5vdCBmb3VuZCwgZG9uJ3QgcnVuIHRoZSBtb2RpZmllclxuICAgICAgaWYgKCFhcnJvd0VsZW1lbnQpIHtcbiAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIGlmIHRoZSBhcnJvd0VsZW1lbnQgaXNuJ3QgYSBxdWVyeSBzZWxlY3RvciB3ZSBtdXN0IGNoZWNrIHRoYXQgdGhlXG4gICAgICAvLyBwcm92aWRlZCBET00gbm9kZSBpcyBjaGlsZCBvZiBpdHMgcG9wcGVyIG5vZGVcbiAgICAgIGlmICghZGF0YS5pbnN0YW5jZS5wb3BwZXIuY29udGFpbnMoYXJyb3dFbGVtZW50KSkge1xuICAgICAgICBjb25zb2xlLndhcm4oJ1dBUk5JTkc6IGBhcnJvdy5lbGVtZW50YCBtdXN0IGJlIGNoaWxkIG9mIGl0cyBwb3BwZXIgZWxlbWVudCEnKTtcbiAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIHBsYWNlbWVudCA9IGRhdGEucGxhY2VtZW50LnNwbGl0KCctJylbMF07XG4gICAgdmFyIF9kYXRhJG9mZnNldHMgPSBkYXRhLm9mZnNldHMsXG4gICAgICAgIHBvcHBlciA9IF9kYXRhJG9mZnNldHMucG9wcGVyLFxuICAgICAgICByZWZlcmVuY2UgPSBfZGF0YSRvZmZzZXRzLnJlZmVyZW5jZTtcblxuICAgIHZhciBpc1ZlcnRpY2FsID0gWydsZWZ0JywgJ3JpZ2h0J10uaW5kZXhPZihwbGFjZW1lbnQpICE9PSAtMTtcblxuICAgIHZhciBsZW4gPSBpc1ZlcnRpY2FsID8gJ2hlaWdodCcgOiAnd2lkdGgnO1xuICAgIHZhciBzaWRlQ2FwaXRhbGl6ZWQgPSBpc1ZlcnRpY2FsID8gJ1RvcCcgOiAnTGVmdCc7XG4gICAgdmFyIHNpZGUgPSBzaWRlQ2FwaXRhbGl6ZWQudG9Mb3dlckNhc2UoKTtcbiAgICB2YXIgYWx0U2lkZSA9IGlzVmVydGljYWwgPyAnbGVmdCcgOiAndG9wJztcbiAgICB2YXIgb3BTaWRlID0gaXNWZXJ0aWNhbCA/ICdib3R0b20nIDogJ3JpZ2h0JztcbiAgICB2YXIgYXJyb3dFbGVtZW50U2l6ZSA9IGdldE91dGVyU2l6ZXMoYXJyb3dFbGVtZW50KVtsZW5dO1xuXG4gICAgLy9cbiAgICAvLyBleHRlbmRzIGtlZXBUb2dldGhlciBiZWhhdmlvciBtYWtpbmcgc3VyZSB0aGUgcG9wcGVyIGFuZCBpdHNcbiAgICAvLyByZWZlcmVuY2UgaGF2ZSBlbm91Z2ggcGl4ZWxzIGluIGNvbmp1bmN0aW9uXG4gICAgLy9cblxuICAgIC8vIHRvcC9sZWZ0IHNpZGVcbiAgICBpZiAocmVmZXJlbmNlW29wU2lkZV0gLSBhcnJvd0VsZW1lbnRTaXplIDwgcG9wcGVyW3NpZGVdKSB7XG4gICAgICBkYXRhLm9mZnNldHMucG9wcGVyW3NpZGVdIC09IHBvcHBlcltzaWRlXSAtIChyZWZlcmVuY2Vbb3BTaWRlXSAtIGFycm93RWxlbWVudFNpemUpO1xuICAgIH1cbiAgICAvLyBib3R0b20vcmlnaHQgc2lkZVxuICAgIGlmIChyZWZlcmVuY2Vbc2lkZV0gKyBhcnJvd0VsZW1lbnRTaXplID4gcG9wcGVyW29wU2lkZV0pIHtcbiAgICAgIGRhdGEub2Zmc2V0cy5wb3BwZXJbc2lkZV0gKz0gcmVmZXJlbmNlW3NpZGVdICsgYXJyb3dFbGVtZW50U2l6ZSAtIHBvcHBlcltvcFNpZGVdO1xuICAgIH1cbiAgICBkYXRhLm9mZnNldHMucG9wcGVyID0gZ2V0Q2xpZW50UmVjdChkYXRhLm9mZnNldHMucG9wcGVyKTtcblxuICAgIC8vIGNvbXB1dGUgY2VudGVyIG9mIHRoZSBwb3BwZXJcbiAgICB2YXIgY2VudGVyID0gcmVmZXJlbmNlW3NpZGVdICsgcmVmZXJlbmNlW2xlbl0gLyAyIC0gYXJyb3dFbGVtZW50U2l6ZSAvIDI7XG5cbiAgICAvLyBDb21wdXRlIHRoZSBzaWRlVmFsdWUgdXNpbmcgdGhlIHVwZGF0ZWQgcG9wcGVyIG9mZnNldHNcbiAgICAvLyB0YWtlIHBvcHBlciBtYXJnaW4gaW4gYWNjb3VudCBiZWNhdXNlIHdlIGRvbid0IGhhdmUgdGhpcyBpbmZvIGF2YWlsYWJsZVxuICAgIHZhciBjc3MgPSBnZXRTdHlsZUNvbXB1dGVkUHJvcGVydHkoZGF0YS5pbnN0YW5jZS5wb3BwZXIpO1xuICAgIHZhciBwb3BwZXJNYXJnaW5TaWRlID0gcGFyc2VGbG9hdChjc3NbJ21hcmdpbicgKyBzaWRlQ2FwaXRhbGl6ZWRdLCAxMCk7XG4gICAgdmFyIHBvcHBlckJvcmRlclNpZGUgPSBwYXJzZUZsb2F0KGNzc1snYm9yZGVyJyArIHNpZGVDYXBpdGFsaXplZCArICdXaWR0aCddLCAxMCk7XG4gICAgdmFyIHNpZGVWYWx1ZSA9IGNlbnRlciAtIGRhdGEub2Zmc2V0cy5wb3BwZXJbc2lkZV0gLSBwb3BwZXJNYXJnaW5TaWRlIC0gcG9wcGVyQm9yZGVyU2lkZTtcblxuICAgIC8vIHByZXZlbnQgYXJyb3dFbGVtZW50IGZyb20gYmVpbmcgcGxhY2VkIG5vdCBjb250aWd1b3VzbHkgdG8gaXRzIHBvcHBlclxuICAgIHNpZGVWYWx1ZSA9IE1hdGgubWF4KE1hdGgubWluKHBvcHBlcltsZW5dIC0gYXJyb3dFbGVtZW50U2l6ZSwgc2lkZVZhbHVlKSwgMCk7XG5cbiAgICBkYXRhLmFycm93RWxlbWVudCA9IGFycm93RWxlbWVudDtcbiAgICBkYXRhLm9mZnNldHMuYXJyb3cgPSAoX2RhdGEkb2Zmc2V0cyRhcnJvdyA9IHt9LCBkZWZpbmVQcm9wZXJ0eShfZGF0YSRvZmZzZXRzJGFycm93LCBzaWRlLCBNYXRoLnJvdW5kKHNpZGVWYWx1ZSkpLCBkZWZpbmVQcm9wZXJ0eShfZGF0YSRvZmZzZXRzJGFycm93LCBhbHRTaWRlLCAnJyksIF9kYXRhJG9mZnNldHMkYXJyb3cpO1xuXG4gICAgcmV0dXJuIGRhdGE7XG4gIH1cblxuICAvKipcbiAgICogR2V0IHRoZSBvcHBvc2l0ZSBwbGFjZW1lbnQgdmFyaWF0aW9uIG9mIHRoZSBnaXZlbiBvbmVcbiAgICogQG1ldGhvZFxuICAgKiBAbWVtYmVyb2YgUG9wcGVyLlV0aWxzXG4gICAqIEBhcmd1bWVudCB7U3RyaW5nfSBwbGFjZW1lbnQgdmFyaWF0aW9uXG4gICAqIEByZXR1cm5zIHtTdHJpbmd9IGZsaXBwZWQgcGxhY2VtZW50IHZhcmlhdGlvblxuICAgKi9cbiAgZnVuY3Rpb24gZ2V0T3Bwb3NpdGVWYXJpYXRpb24odmFyaWF0aW9uKSB7XG4gICAgaWYgKHZhcmlhdGlvbiA9PT0gJ2VuZCcpIHtcbiAgICAgIHJldHVybiAnc3RhcnQnO1xuICAgIH0gZWxzZSBpZiAodmFyaWF0aW9uID09PSAnc3RhcnQnKSB7XG4gICAgICByZXR1cm4gJ2VuZCc7XG4gICAgfVxuICAgIHJldHVybiB2YXJpYXRpb247XG4gIH1cblxuICAvKipcbiAgICogTGlzdCBvZiBhY2NlcHRlZCBwbGFjZW1lbnRzIHRvIHVzZSBhcyB2YWx1ZXMgb2YgdGhlIGBwbGFjZW1lbnRgIG9wdGlvbi48YnIgLz5cbiAgICogVmFsaWQgcGxhY2VtZW50cyBhcmU6XG4gICAqIC0gYGF1dG9gXG4gICAqIC0gYHRvcGBcbiAgICogLSBgcmlnaHRgXG4gICAqIC0gYGJvdHRvbWBcbiAgICogLSBgbGVmdGBcbiAgICpcbiAgICogRWFjaCBwbGFjZW1lbnQgY2FuIGhhdmUgYSB2YXJpYXRpb24gZnJvbSB0aGlzIGxpc3Q6XG4gICAqIC0gYC1zdGFydGBcbiAgICogLSBgLWVuZGBcbiAgICpcbiAgICogVmFyaWF0aW9ucyBhcmUgaW50ZXJwcmV0ZWQgZWFzaWx5IGlmIHlvdSB0aGluayBvZiB0aGVtIGFzIHRoZSBsZWZ0IHRvIHJpZ2h0XG4gICAqIHdyaXR0ZW4gbGFuZ3VhZ2VzLiBIb3Jpem9udGFsbHkgKGB0b3BgIGFuZCBgYm90dG9tYCksIGBzdGFydGAgaXMgbGVmdCBhbmQgYGVuZGBcbiAgICogaXMgcmlnaHQuPGJyIC8+XG4gICAqIFZlcnRpY2FsbHkgKGBsZWZ0YCBhbmQgYHJpZ2h0YCksIGBzdGFydGAgaXMgdG9wIGFuZCBgZW5kYCBpcyBib3R0b20uXG4gICAqXG4gICAqIFNvbWUgdmFsaWQgZXhhbXBsZXMgYXJlOlxuICAgKiAtIGB0b3AtZW5kYCAob24gdG9wIG9mIHJlZmVyZW5jZSwgcmlnaHQgYWxpZ25lZClcbiAgICogLSBgcmlnaHQtc3RhcnRgIChvbiByaWdodCBvZiByZWZlcmVuY2UsIHRvcCBhbGlnbmVkKVxuICAgKiAtIGBib3R0b21gIChvbiBib3R0b20sIGNlbnRlcmVkKVxuICAgKiAtIGBhdXRvLWVuZGAgKG9uIHRoZSBzaWRlIHdpdGggbW9yZSBzcGFjZSBhdmFpbGFibGUsIGFsaWdubWVudCBkZXBlbmRzIGJ5IHBsYWNlbWVudClcbiAgICpcbiAgICogQHN0YXRpY1xuICAgKiBAdHlwZSB7QXJyYXl9XG4gICAqIEBlbnVtIHtTdHJpbmd9XG4gICAqIEByZWFkb25seVxuICAgKiBAbWV0aG9kIHBsYWNlbWVudHNcbiAgICogQG1lbWJlcm9mIFBvcHBlclxuICAgKi9cbiAgdmFyIHBsYWNlbWVudHMgPSBbJ2F1dG8tc3RhcnQnLCAnYXV0bycsICdhdXRvLWVuZCcsICd0b3Atc3RhcnQnLCAndG9wJywgJ3RvcC1lbmQnLCAncmlnaHQtc3RhcnQnLCAncmlnaHQnLCAncmlnaHQtZW5kJywgJ2JvdHRvbS1lbmQnLCAnYm90dG9tJywgJ2JvdHRvbS1zdGFydCcsICdsZWZ0LWVuZCcsICdsZWZ0JywgJ2xlZnQtc3RhcnQnXTtcblxuICAvLyBHZXQgcmlkIG9mIGBhdXRvYCBgYXV0by1zdGFydGAgYW5kIGBhdXRvLWVuZGBcbiAgdmFyIHZhbGlkUGxhY2VtZW50cyA9IHBsYWNlbWVudHMuc2xpY2UoMyk7XG5cbiAgLyoqXG4gICAqIEdpdmVuIGFuIGluaXRpYWwgcGxhY2VtZW50LCByZXR1cm5zIGFsbCB0aGUgc3Vic2VxdWVudCBwbGFjZW1lbnRzXG4gICAqIGNsb2Nrd2lzZSAob3IgY291bnRlci1jbG9ja3dpc2UpLlxuICAgKlxuICAgKiBAbWV0aG9kXG4gICAqIEBtZW1iZXJvZiBQb3BwZXIuVXRpbHNcbiAgICogQGFyZ3VtZW50IHtTdHJpbmd9IHBsYWNlbWVudCAtIEEgdmFsaWQgcGxhY2VtZW50IChpdCBhY2NlcHRzIHZhcmlhdGlvbnMpXG4gICAqIEBhcmd1bWVudCB7Qm9vbGVhbn0gY291bnRlciAtIFNldCB0byB0cnVlIHRvIHdhbGsgdGhlIHBsYWNlbWVudHMgY291bnRlcmNsb2Nrd2lzZVxuICAgKiBAcmV0dXJucyB7QXJyYXl9IHBsYWNlbWVudHMgaW5jbHVkaW5nIHRoZWlyIHZhcmlhdGlvbnNcbiAgICovXG4gIGZ1bmN0aW9uIGNsb2Nrd2lzZShwbGFjZW1lbnQpIHtcbiAgICB2YXIgY291bnRlciA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogZmFsc2U7XG5cbiAgICB2YXIgaW5kZXggPSB2YWxpZFBsYWNlbWVudHMuaW5kZXhPZihwbGFjZW1lbnQpO1xuICAgIHZhciBhcnIgPSB2YWxpZFBsYWNlbWVudHMuc2xpY2UoaW5kZXggKyAxKS5jb25jYXQodmFsaWRQbGFjZW1lbnRzLnNsaWNlKDAsIGluZGV4KSk7XG4gICAgcmV0dXJuIGNvdW50ZXIgPyBhcnIucmV2ZXJzZSgpIDogYXJyO1xuICB9XG5cbiAgdmFyIEJFSEFWSU9SUyA9IHtcbiAgICBGTElQOiAnZmxpcCcsXG4gICAgQ0xPQ0tXSVNFOiAnY2xvY2t3aXNlJyxcbiAgICBDT1VOVEVSQ0xPQ0tXSVNFOiAnY291bnRlcmNsb2Nrd2lzZSdcbiAgfTtcblxuICAvKipcbiAgICogQGZ1bmN0aW9uXG4gICAqIEBtZW1iZXJvZiBNb2RpZmllcnNcbiAgICogQGFyZ3VtZW50IHtPYmplY3R9IGRhdGEgLSBUaGUgZGF0YSBvYmplY3QgZ2VuZXJhdGVkIGJ5IHVwZGF0ZSBtZXRob2RcbiAgICogQGFyZ3VtZW50IHtPYmplY3R9IG9wdGlvbnMgLSBNb2RpZmllcnMgY29uZmlndXJhdGlvbiBhbmQgb3B0aW9uc1xuICAgKiBAcmV0dXJucyB7T2JqZWN0fSBUaGUgZGF0YSBvYmplY3QsIHByb3Blcmx5IG1vZGlmaWVkXG4gICAqL1xuICBmdW5jdGlvbiBmbGlwKGRhdGEsIG9wdGlvbnMpIHtcbiAgICAvLyBpZiBgaW5uZXJgIG1vZGlmaWVyIGlzIGVuYWJsZWQsIHdlIGNhbid0IHVzZSB0aGUgYGZsaXBgIG1vZGlmaWVyXG4gICAgaWYgKGlzTW9kaWZpZXJFbmFibGVkKGRhdGEuaW5zdGFuY2UubW9kaWZpZXJzLCAnaW5uZXInKSkge1xuICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfVxuXG4gICAgaWYgKGRhdGEuZmxpcHBlZCAmJiBkYXRhLnBsYWNlbWVudCA9PT0gZGF0YS5vcmlnaW5hbFBsYWNlbWVudCkge1xuICAgICAgLy8gc2VlbXMgbGlrZSBmbGlwIGlzIHRyeWluZyB0byBsb29wLCBwcm9iYWJseSB0aGVyZSdzIG5vdCBlbm91Z2ggc3BhY2Ugb24gYW55IG9mIHRoZSBmbGlwcGFibGUgc2lkZXNcbiAgICAgIHJldHVybiBkYXRhO1xuICAgIH1cblxuICAgIHZhciBib3VuZGFyaWVzID0gZ2V0Qm91bmRhcmllcyhkYXRhLmluc3RhbmNlLnBvcHBlciwgZGF0YS5pbnN0YW5jZS5yZWZlcmVuY2UsIG9wdGlvbnMucGFkZGluZywgb3B0aW9ucy5ib3VuZGFyaWVzRWxlbWVudCwgZGF0YS5wb3NpdGlvbkZpeGVkKTtcblxuICAgIHZhciBwbGFjZW1lbnQgPSBkYXRhLnBsYWNlbWVudC5zcGxpdCgnLScpWzBdO1xuICAgIHZhciBwbGFjZW1lbnRPcHBvc2l0ZSA9IGdldE9wcG9zaXRlUGxhY2VtZW50KHBsYWNlbWVudCk7XG4gICAgdmFyIHZhcmlhdGlvbiA9IGRhdGEucGxhY2VtZW50LnNwbGl0KCctJylbMV0gfHwgJyc7XG5cbiAgICB2YXIgZmxpcE9yZGVyID0gW107XG5cbiAgICBzd2l0Y2ggKG9wdGlvbnMuYmVoYXZpb3IpIHtcbiAgICAgIGNhc2UgQkVIQVZJT1JTLkZMSVA6XG4gICAgICAgIGZsaXBPcmRlciA9IFtwbGFjZW1lbnQsIHBsYWNlbWVudE9wcG9zaXRlXTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIEJFSEFWSU9SUy5DTE9DS1dJU0U6XG4gICAgICAgIGZsaXBPcmRlciA9IGNsb2Nrd2lzZShwbGFjZW1lbnQpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgQkVIQVZJT1JTLkNPVU5URVJDTE9DS1dJU0U6XG4gICAgICAgIGZsaXBPcmRlciA9IGNsb2Nrd2lzZShwbGFjZW1lbnQsIHRydWUpO1xuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGZsaXBPcmRlciA9IG9wdGlvbnMuYmVoYXZpb3I7XG4gICAgfVxuXG4gICAgZmxpcE9yZGVyLmZvckVhY2goZnVuY3Rpb24gKHN0ZXAsIGluZGV4KSB7XG4gICAgICBpZiAocGxhY2VtZW50ICE9PSBzdGVwIHx8IGZsaXBPcmRlci5sZW5ndGggPT09IGluZGV4ICsgMSkge1xuICAgICAgICByZXR1cm4gZGF0YTtcbiAgICAgIH1cblxuICAgICAgcGxhY2VtZW50ID0gZGF0YS5wbGFjZW1lbnQuc3BsaXQoJy0nKVswXTtcbiAgICAgIHBsYWNlbWVudE9wcG9zaXRlID0gZ2V0T3Bwb3NpdGVQbGFjZW1lbnQocGxhY2VtZW50KTtcblxuICAgICAgdmFyIHBvcHBlck9mZnNldHMgPSBkYXRhLm9mZnNldHMucG9wcGVyO1xuICAgICAgdmFyIHJlZk9mZnNldHMgPSBkYXRhLm9mZnNldHMucmVmZXJlbmNlO1xuXG4gICAgICAvLyB1c2luZyBmbG9vciBiZWNhdXNlIHRoZSByZWZlcmVuY2Ugb2Zmc2V0cyBtYXkgY29udGFpbiBkZWNpbWFscyB3ZSBhcmUgbm90IGdvaW5nIHRvIGNvbnNpZGVyIGhlcmVcbiAgICAgIHZhciBmbG9vciA9IE1hdGguZmxvb3I7XG4gICAgICB2YXIgb3ZlcmxhcHNSZWYgPSBwbGFjZW1lbnQgPT09ICdsZWZ0JyAmJiBmbG9vcihwb3BwZXJPZmZzZXRzLnJpZ2h0KSA+IGZsb29yKHJlZk9mZnNldHMubGVmdCkgfHwgcGxhY2VtZW50ID09PSAncmlnaHQnICYmIGZsb29yKHBvcHBlck9mZnNldHMubGVmdCkgPCBmbG9vcihyZWZPZmZzZXRzLnJpZ2h0KSB8fCBwbGFjZW1lbnQgPT09ICd0b3AnICYmIGZsb29yKHBvcHBlck9mZnNldHMuYm90dG9tKSA+IGZsb29yKHJlZk9mZnNldHMudG9wKSB8fCBwbGFjZW1lbnQgPT09ICdib3R0b20nICYmIGZsb29yKHBvcHBlck9mZnNldHMudG9wKSA8IGZsb29yKHJlZk9mZnNldHMuYm90dG9tKTtcblxuICAgICAgdmFyIG92ZXJmbG93c0xlZnQgPSBmbG9vcihwb3BwZXJPZmZzZXRzLmxlZnQpIDwgZmxvb3IoYm91bmRhcmllcy5sZWZ0KTtcbiAgICAgIHZhciBvdmVyZmxvd3NSaWdodCA9IGZsb29yKHBvcHBlck9mZnNldHMucmlnaHQpID4gZmxvb3IoYm91bmRhcmllcy5yaWdodCk7XG4gICAgICB2YXIgb3ZlcmZsb3dzVG9wID0gZmxvb3IocG9wcGVyT2Zmc2V0cy50b3ApIDwgZmxvb3IoYm91bmRhcmllcy50b3ApO1xuICAgICAgdmFyIG92ZXJmbG93c0JvdHRvbSA9IGZsb29yKHBvcHBlck9mZnNldHMuYm90dG9tKSA+IGZsb29yKGJvdW5kYXJpZXMuYm90dG9tKTtcblxuICAgICAgdmFyIG92ZXJmbG93c0JvdW5kYXJpZXMgPSBwbGFjZW1lbnQgPT09ICdsZWZ0JyAmJiBvdmVyZmxvd3NMZWZ0IHx8IHBsYWNlbWVudCA9PT0gJ3JpZ2h0JyAmJiBvdmVyZmxvd3NSaWdodCB8fCBwbGFjZW1lbnQgPT09ICd0b3AnICYmIG92ZXJmbG93c1RvcCB8fCBwbGFjZW1lbnQgPT09ICdib3R0b20nICYmIG92ZXJmbG93c0JvdHRvbTtcblxuICAgICAgLy8gZmxpcCB0aGUgdmFyaWF0aW9uIGlmIHJlcXVpcmVkXG4gICAgICB2YXIgaXNWZXJ0aWNhbCA9IFsndG9wJywgJ2JvdHRvbSddLmluZGV4T2YocGxhY2VtZW50KSAhPT0gLTE7XG5cbiAgICAgIC8vIGZsaXBzIHZhcmlhdGlvbiBpZiByZWZlcmVuY2UgZWxlbWVudCBvdmVyZmxvd3MgYm91bmRhcmllc1xuICAgICAgdmFyIGZsaXBwZWRWYXJpYXRpb25CeVJlZiA9ICEhb3B0aW9ucy5mbGlwVmFyaWF0aW9ucyAmJiAoaXNWZXJ0aWNhbCAmJiB2YXJpYXRpb24gPT09ICdzdGFydCcgJiYgb3ZlcmZsb3dzTGVmdCB8fCBpc1ZlcnRpY2FsICYmIHZhcmlhdGlvbiA9PT0gJ2VuZCcgJiYgb3ZlcmZsb3dzUmlnaHQgfHwgIWlzVmVydGljYWwgJiYgdmFyaWF0aW9uID09PSAnc3RhcnQnICYmIG92ZXJmbG93c1RvcCB8fCAhaXNWZXJ0aWNhbCAmJiB2YXJpYXRpb24gPT09ICdlbmQnICYmIG92ZXJmbG93c0JvdHRvbSk7XG5cbiAgICAgIC8vIGZsaXBzIHZhcmlhdGlvbiBpZiBwb3BwZXIgY29udGVudCBvdmVyZmxvd3MgYm91bmRhcmllc1xuICAgICAgdmFyIGZsaXBwZWRWYXJpYXRpb25CeUNvbnRlbnQgPSAhIW9wdGlvbnMuZmxpcFZhcmlhdGlvbnNCeUNvbnRlbnQgJiYgKGlzVmVydGljYWwgJiYgdmFyaWF0aW9uID09PSAnc3RhcnQnICYmIG92ZXJmbG93c1JpZ2h0IHx8IGlzVmVydGljYWwgJiYgdmFyaWF0aW9uID09PSAnZW5kJyAmJiBvdmVyZmxvd3NMZWZ0IHx8ICFpc1ZlcnRpY2FsICYmIHZhcmlhdGlvbiA9PT0gJ3N0YXJ0JyAmJiBvdmVyZmxvd3NCb3R0b20gfHwgIWlzVmVydGljYWwgJiYgdmFyaWF0aW9uID09PSAnZW5kJyAmJiBvdmVyZmxvd3NUb3ApO1xuXG4gICAgICB2YXIgZmxpcHBlZFZhcmlhdGlvbiA9IGZsaXBwZWRWYXJpYXRpb25CeVJlZiB8fCBmbGlwcGVkVmFyaWF0aW9uQnlDb250ZW50O1xuXG4gICAgICBpZiAob3ZlcmxhcHNSZWYgfHwgb3ZlcmZsb3dzQm91bmRhcmllcyB8fCBmbGlwcGVkVmFyaWF0aW9uKSB7XG4gICAgICAgIC8vIHRoaXMgYm9vbGVhbiB0byBkZXRlY3QgYW55IGZsaXAgbG9vcFxuICAgICAgICBkYXRhLmZsaXBwZWQgPSB0cnVlO1xuXG4gICAgICAgIGlmIChvdmVybGFwc1JlZiB8fCBvdmVyZmxvd3NCb3VuZGFyaWVzKSB7XG4gICAgICAgICAgcGxhY2VtZW50ID0gZmxpcE9yZGVyW2luZGV4ICsgMV07XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZmxpcHBlZFZhcmlhdGlvbikge1xuICAgICAgICAgIHZhcmlhdGlvbiA9IGdldE9wcG9zaXRlVmFyaWF0aW9uKHZhcmlhdGlvbik7XG4gICAgICAgIH1cblxuICAgICAgICBkYXRhLnBsYWNlbWVudCA9IHBsYWNlbWVudCArICh2YXJpYXRpb24gPyAnLScgKyB2YXJpYXRpb24gOiAnJyk7XG5cbiAgICAgICAgLy8gdGhpcyBvYmplY3QgY29udGFpbnMgYHBvc2l0aW9uYCwgd2Ugd2FudCB0byBwcmVzZXJ2ZSBpdCBhbG9uZyB3aXRoXG4gICAgICAgIC8vIGFueSBhZGRpdGlvbmFsIHByb3BlcnR5IHdlIG1heSBhZGQgaW4gdGhlIGZ1dHVyZVxuICAgICAgICBkYXRhLm9mZnNldHMucG9wcGVyID0gX2V4dGVuZHMoe30sIGRhdGEub2Zmc2V0cy5wb3BwZXIsIGdldFBvcHBlck9mZnNldHMoZGF0YS5pbnN0YW5jZS5wb3BwZXIsIGRhdGEub2Zmc2V0cy5yZWZlcmVuY2UsIGRhdGEucGxhY2VtZW50KSk7XG5cbiAgICAgICAgZGF0YSA9IHJ1bk1vZGlmaWVycyhkYXRhLmluc3RhbmNlLm1vZGlmaWVycywgZGF0YSwgJ2ZsaXAnKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gZGF0YTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAZnVuY3Rpb25cbiAgICogQG1lbWJlcm9mIE1vZGlmaWVyc1xuICAgKiBAYXJndW1lbnQge09iamVjdH0gZGF0YSAtIFRoZSBkYXRhIG9iamVjdCBnZW5lcmF0ZWQgYnkgdXBkYXRlIG1ldGhvZFxuICAgKiBAYXJndW1lbnQge09iamVjdH0gb3B0aW9ucyAtIE1vZGlmaWVycyBjb25maWd1cmF0aW9uIGFuZCBvcHRpb25zXG4gICAqIEByZXR1cm5zIHtPYmplY3R9IFRoZSBkYXRhIG9iamVjdCwgcHJvcGVybHkgbW9kaWZpZWRcbiAgICovXG4gIGZ1bmN0aW9uIGtlZXBUb2dldGhlcihkYXRhKSB7XG4gICAgdmFyIF9kYXRhJG9mZnNldHMgPSBkYXRhLm9mZnNldHMsXG4gICAgICAgIHBvcHBlciA9IF9kYXRhJG9mZnNldHMucG9wcGVyLFxuICAgICAgICByZWZlcmVuY2UgPSBfZGF0YSRvZmZzZXRzLnJlZmVyZW5jZTtcblxuICAgIHZhciBwbGFjZW1lbnQgPSBkYXRhLnBsYWNlbWVudC5zcGxpdCgnLScpWzBdO1xuICAgIHZhciBmbG9vciA9IE1hdGguZmxvb3I7XG4gICAgdmFyIGlzVmVydGljYWwgPSBbJ3RvcCcsICdib3R0b20nXS5pbmRleE9mKHBsYWNlbWVudCkgIT09IC0xO1xuICAgIHZhciBzaWRlID0gaXNWZXJ0aWNhbCA/ICdyaWdodCcgOiAnYm90dG9tJztcbiAgICB2YXIgb3BTaWRlID0gaXNWZXJ0aWNhbCA/ICdsZWZ0JyA6ICd0b3AnO1xuICAgIHZhciBtZWFzdXJlbWVudCA9IGlzVmVydGljYWwgPyAnd2lkdGgnIDogJ2hlaWdodCc7XG5cbiAgICBpZiAocG9wcGVyW3NpZGVdIDwgZmxvb3IocmVmZXJlbmNlW29wU2lkZV0pKSB7XG4gICAgICBkYXRhLm9mZnNldHMucG9wcGVyW29wU2lkZV0gPSBmbG9vcihyZWZlcmVuY2Vbb3BTaWRlXSkgLSBwb3BwZXJbbWVhc3VyZW1lbnRdO1xuICAgIH1cbiAgICBpZiAocG9wcGVyW29wU2lkZV0gPiBmbG9vcihyZWZlcmVuY2Vbc2lkZV0pKSB7XG4gICAgICBkYXRhLm9mZnNldHMucG9wcGVyW29wU2lkZV0gPSBmbG9vcihyZWZlcmVuY2Vbc2lkZV0pO1xuICAgIH1cblxuICAgIHJldHVybiBkYXRhO1xuICB9XG5cbiAgLyoqXG4gICAqIENvbnZlcnRzIGEgc3RyaW5nIGNvbnRhaW5pbmcgdmFsdWUgKyB1bml0IGludG8gYSBweCB2YWx1ZSBudW1iZXJcbiAgICogQGZ1bmN0aW9uXG4gICAqIEBtZW1iZXJvZiB7bW9kaWZpZXJzfm9mZnNldH1cbiAgICogQHByaXZhdGVcbiAgICogQGFyZ3VtZW50IHtTdHJpbmd9IHN0ciAtIFZhbHVlICsgdW5pdCBzdHJpbmdcbiAgICogQGFyZ3VtZW50IHtTdHJpbmd9IG1lYXN1cmVtZW50IC0gYGhlaWdodGAgb3IgYHdpZHRoYFxuICAgKiBAYXJndW1lbnQge09iamVjdH0gcG9wcGVyT2Zmc2V0c1xuICAgKiBAYXJndW1lbnQge09iamVjdH0gcmVmZXJlbmNlT2Zmc2V0c1xuICAgKiBAcmV0dXJucyB7TnVtYmVyfFN0cmluZ31cbiAgICogVmFsdWUgaW4gcGl4ZWxzLCBvciBvcmlnaW5hbCBzdHJpbmcgaWYgbm8gdmFsdWVzIHdlcmUgZXh0cmFjdGVkXG4gICAqL1xuICBmdW5jdGlvbiB0b1ZhbHVlKHN0ciwgbWVhc3VyZW1lbnQsIHBvcHBlck9mZnNldHMsIHJlZmVyZW5jZU9mZnNldHMpIHtcbiAgICAvLyBzZXBhcmF0ZSB2YWx1ZSBmcm9tIHVuaXRcbiAgICB2YXIgc3BsaXQgPSBzdHIubWF0Y2goLygoPzpcXC18XFwrKT9cXGQqXFwuP1xcZCopKC4qKS8pO1xuICAgIHZhciB2YWx1ZSA9ICtzcGxpdFsxXTtcbiAgICB2YXIgdW5pdCA9IHNwbGl0WzJdO1xuXG4gICAgLy8gSWYgaXQncyBub3QgYSBudW1iZXIgaXQncyBhbiBvcGVyYXRvciwgSSBndWVzc1xuICAgIGlmICghdmFsdWUpIHtcbiAgICAgIHJldHVybiBzdHI7XG4gICAgfVxuXG4gICAgaWYgKHVuaXQuaW5kZXhPZignJScpID09PSAwKSB7XG4gICAgICB2YXIgZWxlbWVudCA9IHZvaWQgMDtcbiAgICAgIHN3aXRjaCAodW5pdCkge1xuICAgICAgICBjYXNlICclcCc6XG4gICAgICAgICAgZWxlbWVudCA9IHBvcHBlck9mZnNldHM7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJyUnOlxuICAgICAgICBjYXNlICclcic6XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgZWxlbWVudCA9IHJlZmVyZW5jZU9mZnNldHM7XG4gICAgICB9XG5cbiAgICAgIHZhciByZWN0ID0gZ2V0Q2xpZW50UmVjdChlbGVtZW50KTtcbiAgICAgIHJldHVybiByZWN0W21lYXN1cmVtZW50XSAvIDEwMCAqIHZhbHVlO1xuICAgIH0gZWxzZSBpZiAodW5pdCA9PT0gJ3ZoJyB8fCB1bml0ID09PSAndncnKSB7XG4gICAgICAvLyBpZiBpcyBhIHZoIG9yIHZ3LCB3ZSBjYWxjdWxhdGUgdGhlIHNpemUgYmFzZWQgb24gdGhlIHZpZXdwb3J0XG4gICAgICB2YXIgc2l6ZSA9IHZvaWQgMDtcbiAgICAgIGlmICh1bml0ID09PSAndmgnKSB7XG4gICAgICAgIHNpemUgPSBNYXRoLm1heChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0LCB3aW5kb3cuaW5uZXJIZWlnaHQgfHwgMCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzaXplID0gTWF0aC5tYXgoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoLCB3aW5kb3cuaW5uZXJXaWR0aCB8fCAwKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBzaXplIC8gMTAwICogdmFsdWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIGlmIGlzIGFuIGV4cGxpY2l0IHBpeGVsIHVuaXQsIHdlIGdldCByaWQgb2YgdGhlIHVuaXQgYW5kIGtlZXAgdGhlIHZhbHVlXG4gICAgICAvLyBpZiBpcyBhbiBpbXBsaWNpdCB1bml0LCBpdCdzIHB4LCBhbmQgd2UgcmV0dXJuIGp1c3QgdGhlIHZhbHVlXG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFBhcnNlIGFuIGBvZmZzZXRgIHN0cmluZyB0byBleHRyYXBvbGF0ZSBgeGAgYW5kIGB5YCBudW1lcmljIG9mZnNldHMuXG4gICAqIEBmdW5jdGlvblxuICAgKiBAbWVtYmVyb2Yge21vZGlmaWVyc35vZmZzZXR9XG4gICAqIEBwcml2YXRlXG4gICAqIEBhcmd1bWVudCB7U3RyaW5nfSBvZmZzZXRcbiAgICogQGFyZ3VtZW50IHtPYmplY3R9IHBvcHBlck9mZnNldHNcbiAgICogQGFyZ3VtZW50IHtPYmplY3R9IHJlZmVyZW5jZU9mZnNldHNcbiAgICogQGFyZ3VtZW50IHtTdHJpbmd9IGJhc2VQbGFjZW1lbnRcbiAgICogQHJldHVybnMge0FycmF5fSBhIHR3byBjZWxscyBhcnJheSB3aXRoIHggYW5kIHkgb2Zmc2V0cyBpbiBudW1iZXJzXG4gICAqL1xuICBmdW5jdGlvbiBwYXJzZU9mZnNldChvZmZzZXQsIHBvcHBlck9mZnNldHMsIHJlZmVyZW5jZU9mZnNldHMsIGJhc2VQbGFjZW1lbnQpIHtcbiAgICB2YXIgb2Zmc2V0cyA9IFswLCAwXTtcblxuICAgIC8vIFVzZSBoZWlnaHQgaWYgcGxhY2VtZW50IGlzIGxlZnQgb3IgcmlnaHQgYW5kIGluZGV4IGlzIDAgb3RoZXJ3aXNlIHVzZSB3aWR0aFxuICAgIC8vIGluIHRoaXMgd2F5IHRoZSBmaXJzdCBvZmZzZXQgd2lsbCB1c2UgYW4gYXhpcyBhbmQgdGhlIHNlY29uZCBvbmVcbiAgICAvLyB3aWxsIHVzZSB0aGUgb3RoZXIgb25lXG4gICAgdmFyIHVzZUhlaWdodCA9IFsncmlnaHQnLCAnbGVmdCddLmluZGV4T2YoYmFzZVBsYWNlbWVudCkgIT09IC0xO1xuXG4gICAgLy8gU3BsaXQgdGhlIG9mZnNldCBzdHJpbmcgdG8gb2J0YWluIGEgbGlzdCBvZiB2YWx1ZXMgYW5kIG9wZXJhbmRzXG4gICAgLy8gVGhlIHJlZ2V4IGFkZHJlc3NlcyB2YWx1ZXMgd2l0aCB0aGUgcGx1cyBvciBtaW51cyBzaWduIGluIGZyb250ICgrMTAsIC0yMCwgZXRjKVxuICAgIHZhciBmcmFnbWVudHMgPSBvZmZzZXQuc3BsaXQoLyhcXCt8XFwtKS8pLm1hcChmdW5jdGlvbiAoZnJhZykge1xuICAgICAgcmV0dXJuIGZyYWcudHJpbSgpO1xuICAgIH0pO1xuXG4gICAgLy8gRGV0ZWN0IGlmIHRoZSBvZmZzZXQgc3RyaW5nIGNvbnRhaW5zIGEgcGFpciBvZiB2YWx1ZXMgb3IgYSBzaW5nbGUgb25lXG4gICAgLy8gdGhleSBjb3VsZCBiZSBzZXBhcmF0ZWQgYnkgY29tbWEgb3Igc3BhY2VcbiAgICB2YXIgZGl2aWRlciA9IGZyYWdtZW50cy5pbmRleE9mKGZpbmQoZnJhZ21lbnRzLCBmdW5jdGlvbiAoZnJhZykge1xuICAgICAgcmV0dXJuIGZyYWcuc2VhcmNoKC8sfFxccy8pICE9PSAtMTtcbiAgICB9KSk7XG5cbiAgICBpZiAoZnJhZ21lbnRzW2RpdmlkZXJdICYmIGZyYWdtZW50c1tkaXZpZGVyXS5pbmRleE9mKCcsJykgPT09IC0xKSB7XG4gICAgICBjb25zb2xlLndhcm4oJ09mZnNldHMgc2VwYXJhdGVkIGJ5IHdoaXRlIHNwYWNlKHMpIGFyZSBkZXByZWNhdGVkLCB1c2UgYSBjb21tYSAoLCkgaW5zdGVhZC4nKTtcbiAgICB9XG5cbiAgICAvLyBJZiBkaXZpZGVyIGlzIGZvdW5kLCB3ZSBkaXZpZGUgdGhlIGxpc3Qgb2YgdmFsdWVzIGFuZCBvcGVyYW5kcyB0byBkaXZpZGVcbiAgICAvLyB0aGVtIGJ5IG9mc2V0IFggYW5kIFkuXG4gICAgdmFyIHNwbGl0UmVnZXggPSAvXFxzKixcXHMqfFxccysvO1xuICAgIHZhciBvcHMgPSBkaXZpZGVyICE9PSAtMSA/IFtmcmFnbWVudHMuc2xpY2UoMCwgZGl2aWRlcikuY29uY2F0KFtmcmFnbWVudHNbZGl2aWRlcl0uc3BsaXQoc3BsaXRSZWdleClbMF1dKSwgW2ZyYWdtZW50c1tkaXZpZGVyXS5zcGxpdChzcGxpdFJlZ2V4KVsxXV0uY29uY2F0KGZyYWdtZW50cy5zbGljZShkaXZpZGVyICsgMSkpXSA6IFtmcmFnbWVudHNdO1xuXG4gICAgLy8gQ29udmVydCB0aGUgdmFsdWVzIHdpdGggdW5pdHMgdG8gYWJzb2x1dGUgcGl4ZWxzIHRvIGFsbG93IG91ciBjb21wdXRhdGlvbnNcbiAgICBvcHMgPSBvcHMubWFwKGZ1bmN0aW9uIChvcCwgaW5kZXgpIHtcbiAgICAgIC8vIE1vc3Qgb2YgdGhlIHVuaXRzIHJlbHkgb24gdGhlIG9yaWVudGF0aW9uIG9mIHRoZSBwb3BwZXJcbiAgICAgIHZhciBtZWFzdXJlbWVudCA9IChpbmRleCA9PT0gMSA/ICF1c2VIZWlnaHQgOiB1c2VIZWlnaHQpID8gJ2hlaWdodCcgOiAnd2lkdGgnO1xuICAgICAgdmFyIG1lcmdlV2l0aFByZXZpb3VzID0gZmFsc2U7XG4gICAgICByZXR1cm4gb3BcbiAgICAgIC8vIFRoaXMgYWdncmVnYXRlcyBhbnkgYCtgIG9yIGAtYCBzaWduIHRoYXQgYXJlbid0IGNvbnNpZGVyZWQgb3BlcmF0b3JzXG4gICAgICAvLyBlLmcuOiAxMCArICs1ID0+IFsxMCwgKywgKzVdXG4gICAgICAucmVkdWNlKGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAgIGlmIChhW2EubGVuZ3RoIC0gMV0gPT09ICcnICYmIFsnKycsICctJ10uaW5kZXhPZihiKSAhPT0gLTEpIHtcbiAgICAgICAgICBhW2EubGVuZ3RoIC0gMV0gPSBiO1xuICAgICAgICAgIG1lcmdlV2l0aFByZXZpb3VzID0gdHJ1ZTtcbiAgICAgICAgICByZXR1cm4gYTtcbiAgICAgICAgfSBlbHNlIGlmIChtZXJnZVdpdGhQcmV2aW91cykge1xuICAgICAgICAgIGFbYS5sZW5ndGggLSAxXSArPSBiO1xuICAgICAgICAgIG1lcmdlV2l0aFByZXZpb3VzID0gZmFsc2U7XG4gICAgICAgICAgcmV0dXJuIGE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIGEuY29uY2F0KGIpO1xuICAgICAgICB9XG4gICAgICB9LCBbXSlcbiAgICAgIC8vIEhlcmUgd2UgY29udmVydCB0aGUgc3RyaW5nIHZhbHVlcyBpbnRvIG51bWJlciB2YWx1ZXMgKGluIHB4KVxuICAgICAgLm1hcChmdW5jdGlvbiAoc3RyKSB7XG4gICAgICAgIHJldHVybiB0b1ZhbHVlKHN0ciwgbWVhc3VyZW1lbnQsIHBvcHBlck9mZnNldHMsIHJlZmVyZW5jZU9mZnNldHMpO1xuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICAvLyBMb29wIHRyb3VnaCB0aGUgb2Zmc2V0cyBhcnJheXMgYW5kIGV4ZWN1dGUgdGhlIG9wZXJhdGlvbnNcbiAgICBvcHMuZm9yRWFjaChmdW5jdGlvbiAob3AsIGluZGV4KSB7XG4gICAgICBvcC5mb3JFYWNoKGZ1bmN0aW9uIChmcmFnLCBpbmRleDIpIHtcbiAgICAgICAgaWYgKGlzTnVtZXJpYyhmcmFnKSkge1xuICAgICAgICAgIG9mZnNldHNbaW5kZXhdICs9IGZyYWcgKiAob3BbaW5kZXgyIC0gMV0gPT09ICctJyA/IC0xIDogMSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIHJldHVybiBvZmZzZXRzO1xuICB9XG5cbiAgLyoqXG4gICAqIEBmdW5jdGlvblxuICAgKiBAbWVtYmVyb2YgTW9kaWZpZXJzXG4gICAqIEBhcmd1bWVudCB7T2JqZWN0fSBkYXRhIC0gVGhlIGRhdGEgb2JqZWN0IGdlbmVyYXRlZCBieSB1cGRhdGUgbWV0aG9kXG4gICAqIEBhcmd1bWVudCB7T2JqZWN0fSBvcHRpb25zIC0gTW9kaWZpZXJzIGNvbmZpZ3VyYXRpb24gYW5kIG9wdGlvbnNcbiAgICogQGFyZ3VtZW50IHtOdW1iZXJ8U3RyaW5nfSBvcHRpb25zLm9mZnNldD0wXG4gICAqIFRoZSBvZmZzZXQgdmFsdWUgYXMgZGVzY3JpYmVkIGluIHRoZSBtb2RpZmllciBkZXNjcmlwdGlvblxuICAgKiBAcmV0dXJucyB7T2JqZWN0fSBUaGUgZGF0YSBvYmplY3QsIHByb3Blcmx5IG1vZGlmaWVkXG4gICAqL1xuICBmdW5jdGlvbiBvZmZzZXQoZGF0YSwgX3JlZikge1xuICAgIHZhciBvZmZzZXQgPSBfcmVmLm9mZnNldDtcbiAgICB2YXIgcGxhY2VtZW50ID0gZGF0YS5wbGFjZW1lbnQsXG4gICAgICAgIF9kYXRhJG9mZnNldHMgPSBkYXRhLm9mZnNldHMsXG4gICAgICAgIHBvcHBlciA9IF9kYXRhJG9mZnNldHMucG9wcGVyLFxuICAgICAgICByZWZlcmVuY2UgPSBfZGF0YSRvZmZzZXRzLnJlZmVyZW5jZTtcblxuICAgIHZhciBiYXNlUGxhY2VtZW50ID0gcGxhY2VtZW50LnNwbGl0KCctJylbMF07XG5cbiAgICB2YXIgb2Zmc2V0cyA9IHZvaWQgMDtcbiAgICBpZiAoaXNOdW1lcmljKCtvZmZzZXQpKSB7XG4gICAgICBvZmZzZXRzID0gWytvZmZzZXQsIDBdO1xuICAgIH0gZWxzZSB7XG4gICAgICBvZmZzZXRzID0gcGFyc2VPZmZzZXQob2Zmc2V0LCBwb3BwZXIsIHJlZmVyZW5jZSwgYmFzZVBsYWNlbWVudCk7XG4gICAgfVxuXG4gICAgaWYgKGJhc2VQbGFjZW1lbnQgPT09ICdsZWZ0Jykge1xuICAgICAgcG9wcGVyLnRvcCArPSBvZmZzZXRzWzBdO1xuICAgICAgcG9wcGVyLmxlZnQgLT0gb2Zmc2V0c1sxXTtcbiAgICB9IGVsc2UgaWYgKGJhc2VQbGFjZW1lbnQgPT09ICdyaWdodCcpIHtcbiAgICAgIHBvcHBlci50b3AgKz0gb2Zmc2V0c1swXTtcbiAgICAgIHBvcHBlci5sZWZ0ICs9IG9mZnNldHNbMV07XG4gICAgfSBlbHNlIGlmIChiYXNlUGxhY2VtZW50ID09PSAndG9wJykge1xuICAgICAgcG9wcGVyLmxlZnQgKz0gb2Zmc2V0c1swXTtcbiAgICAgIHBvcHBlci50b3AgLT0gb2Zmc2V0c1sxXTtcbiAgICB9IGVsc2UgaWYgKGJhc2VQbGFjZW1lbnQgPT09ICdib3R0b20nKSB7XG4gICAgICBwb3BwZXIubGVmdCArPSBvZmZzZXRzWzBdO1xuICAgICAgcG9wcGVyLnRvcCArPSBvZmZzZXRzWzFdO1xuICAgIH1cblxuICAgIGRhdGEucG9wcGVyID0gcG9wcGVyO1xuICAgIHJldHVybiBkYXRhO1xuICB9XG5cbiAgLyoqXG4gICAqIEBmdW5jdGlvblxuICAgKiBAbWVtYmVyb2YgTW9kaWZpZXJzXG4gICAqIEBhcmd1bWVudCB7T2JqZWN0fSBkYXRhIC0gVGhlIGRhdGEgb2JqZWN0IGdlbmVyYXRlZCBieSBgdXBkYXRlYCBtZXRob2RcbiAgICogQGFyZ3VtZW50IHtPYmplY3R9IG9wdGlvbnMgLSBNb2RpZmllcnMgY29uZmlndXJhdGlvbiBhbmQgb3B0aW9uc1xuICAgKiBAcmV0dXJucyB7T2JqZWN0fSBUaGUgZGF0YSBvYmplY3QsIHByb3Blcmx5IG1vZGlmaWVkXG4gICAqL1xuICBmdW5jdGlvbiBwcmV2ZW50T3ZlcmZsb3coZGF0YSwgb3B0aW9ucykge1xuICAgIHZhciBib3VuZGFyaWVzRWxlbWVudCA9IG9wdGlvbnMuYm91bmRhcmllc0VsZW1lbnQgfHwgZ2V0T2Zmc2V0UGFyZW50KGRhdGEuaW5zdGFuY2UucG9wcGVyKTtcblxuICAgIC8vIElmIG9mZnNldFBhcmVudCBpcyB0aGUgcmVmZXJlbmNlIGVsZW1lbnQsIHdlIHJlYWxseSB3YW50IHRvXG4gICAgLy8gZ28gb25lIHN0ZXAgdXAgYW5kIHVzZSB0aGUgbmV4dCBvZmZzZXRQYXJlbnQgYXMgcmVmZXJlbmNlIHRvXG4gICAgLy8gYXZvaWQgdG8gbWFrZSB0aGlzIG1vZGlmaWVyIGNvbXBsZXRlbHkgdXNlbGVzcyBhbmQgbG9vayBsaWtlIGJyb2tlblxuICAgIGlmIChkYXRhLmluc3RhbmNlLnJlZmVyZW5jZSA9PT0gYm91bmRhcmllc0VsZW1lbnQpIHtcbiAgICAgIGJvdW5kYXJpZXNFbGVtZW50ID0gZ2V0T2Zmc2V0UGFyZW50KGJvdW5kYXJpZXNFbGVtZW50KTtcbiAgICB9XG5cbiAgICAvLyBOT1RFOiBET00gYWNjZXNzIGhlcmVcbiAgICAvLyByZXNldHMgdGhlIHBvcHBlcidzIHBvc2l0aW9uIHNvIHRoYXQgdGhlIGRvY3VtZW50IHNpemUgY2FuIGJlIGNhbGN1bGF0ZWQgZXhjbHVkaW5nXG4gICAgLy8gdGhlIHNpemUgb2YgdGhlIHBvcHBlciBlbGVtZW50IGl0c2VsZlxuICAgIHZhciB0cmFuc2Zvcm1Qcm9wID0gZ2V0U3VwcG9ydGVkUHJvcGVydHlOYW1lKCd0cmFuc2Zvcm0nKTtcbiAgICB2YXIgcG9wcGVyU3R5bGVzID0gZGF0YS5pbnN0YW5jZS5wb3BwZXIuc3R5bGU7IC8vIGFzc2lnbm1lbnQgdG8gaGVscCBtaW5pZmljYXRpb25cbiAgICB2YXIgdG9wID0gcG9wcGVyU3R5bGVzLnRvcCxcbiAgICAgICAgbGVmdCA9IHBvcHBlclN0eWxlcy5sZWZ0LFxuICAgICAgICB0cmFuc2Zvcm0gPSBwb3BwZXJTdHlsZXNbdHJhbnNmb3JtUHJvcF07XG5cbiAgICBwb3BwZXJTdHlsZXMudG9wID0gJyc7XG4gICAgcG9wcGVyU3R5bGVzLmxlZnQgPSAnJztcbiAgICBwb3BwZXJTdHlsZXNbdHJhbnNmb3JtUHJvcF0gPSAnJztcblxuICAgIHZhciBib3VuZGFyaWVzID0gZ2V0Qm91bmRhcmllcyhkYXRhLmluc3RhbmNlLnBvcHBlciwgZGF0YS5pbnN0YW5jZS5yZWZlcmVuY2UsIG9wdGlvbnMucGFkZGluZywgYm91bmRhcmllc0VsZW1lbnQsIGRhdGEucG9zaXRpb25GaXhlZCk7XG5cbiAgICAvLyBOT1RFOiBET00gYWNjZXNzIGhlcmVcbiAgICAvLyByZXN0b3JlcyB0aGUgb3JpZ2luYWwgc3R5bGUgcHJvcGVydGllcyBhZnRlciB0aGUgb2Zmc2V0cyBoYXZlIGJlZW4gY29tcHV0ZWRcbiAgICBwb3BwZXJTdHlsZXMudG9wID0gdG9wO1xuICAgIHBvcHBlclN0eWxlcy5sZWZ0ID0gbGVmdDtcbiAgICBwb3BwZXJTdHlsZXNbdHJhbnNmb3JtUHJvcF0gPSB0cmFuc2Zvcm07XG5cbiAgICBvcHRpb25zLmJvdW5kYXJpZXMgPSBib3VuZGFyaWVzO1xuXG4gICAgdmFyIG9yZGVyID0gb3B0aW9ucy5wcmlvcml0eTtcbiAgICB2YXIgcG9wcGVyID0gZGF0YS5vZmZzZXRzLnBvcHBlcjtcblxuICAgIHZhciBjaGVjayA9IHtcbiAgICAgIHByaW1hcnk6IGZ1bmN0aW9uIHByaW1hcnkocGxhY2VtZW50KSB7XG4gICAgICAgIHZhciB2YWx1ZSA9IHBvcHBlcltwbGFjZW1lbnRdO1xuICAgICAgICBpZiAocG9wcGVyW3BsYWNlbWVudF0gPCBib3VuZGFyaWVzW3BsYWNlbWVudF0gJiYgIW9wdGlvbnMuZXNjYXBlV2l0aFJlZmVyZW5jZSkge1xuICAgICAgICAgIHZhbHVlID0gTWF0aC5tYXgocG9wcGVyW3BsYWNlbWVudF0sIGJvdW5kYXJpZXNbcGxhY2VtZW50XSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGRlZmluZVByb3BlcnR5KHt9LCBwbGFjZW1lbnQsIHZhbHVlKTtcbiAgICAgIH0sXG4gICAgICBzZWNvbmRhcnk6IGZ1bmN0aW9uIHNlY29uZGFyeShwbGFjZW1lbnQpIHtcbiAgICAgICAgdmFyIG1haW5TaWRlID0gcGxhY2VtZW50ID09PSAncmlnaHQnID8gJ2xlZnQnIDogJ3RvcCc7XG4gICAgICAgIHZhciB2YWx1ZSA9IHBvcHBlclttYWluU2lkZV07XG4gICAgICAgIGlmIChwb3BwZXJbcGxhY2VtZW50XSA+IGJvdW5kYXJpZXNbcGxhY2VtZW50XSAmJiAhb3B0aW9ucy5lc2NhcGVXaXRoUmVmZXJlbmNlKSB7XG4gICAgICAgICAgdmFsdWUgPSBNYXRoLm1pbihwb3BwZXJbbWFpblNpZGVdLCBib3VuZGFyaWVzW3BsYWNlbWVudF0gLSAocGxhY2VtZW50ID09PSAncmlnaHQnID8gcG9wcGVyLndpZHRoIDogcG9wcGVyLmhlaWdodCkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkZWZpbmVQcm9wZXJ0eSh7fSwgbWFpblNpZGUsIHZhbHVlKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgb3JkZXIuZm9yRWFjaChmdW5jdGlvbiAocGxhY2VtZW50KSB7XG4gICAgICB2YXIgc2lkZSA9IFsnbGVmdCcsICd0b3AnXS5pbmRleE9mKHBsYWNlbWVudCkgIT09IC0xID8gJ3ByaW1hcnknIDogJ3NlY29uZGFyeSc7XG4gICAgICBwb3BwZXIgPSBfZXh0ZW5kcyh7fSwgcG9wcGVyLCBjaGVja1tzaWRlXShwbGFjZW1lbnQpKTtcbiAgICB9KTtcblxuICAgIGRhdGEub2Zmc2V0cy5wb3BwZXIgPSBwb3BwZXI7XG5cbiAgICByZXR1cm4gZGF0YTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAZnVuY3Rpb25cbiAgICogQG1lbWJlcm9mIE1vZGlmaWVyc1xuICAgKiBAYXJndW1lbnQge09iamVjdH0gZGF0YSAtIFRoZSBkYXRhIG9iamVjdCBnZW5lcmF0ZWQgYnkgYHVwZGF0ZWAgbWV0aG9kXG4gICAqIEBhcmd1bWVudCB7T2JqZWN0fSBvcHRpb25zIC0gTW9kaWZpZXJzIGNvbmZpZ3VyYXRpb24gYW5kIG9wdGlvbnNcbiAgICogQHJldHVybnMge09iamVjdH0gVGhlIGRhdGEgb2JqZWN0LCBwcm9wZXJseSBtb2RpZmllZFxuICAgKi9cbiAgZnVuY3Rpb24gc2hpZnQoZGF0YSkge1xuICAgIHZhciBwbGFjZW1lbnQgPSBkYXRhLnBsYWNlbWVudDtcbiAgICB2YXIgYmFzZVBsYWNlbWVudCA9IHBsYWNlbWVudC5zcGxpdCgnLScpWzBdO1xuICAgIHZhciBzaGlmdHZhcmlhdGlvbiA9IHBsYWNlbWVudC5zcGxpdCgnLScpWzFdO1xuXG4gICAgLy8gaWYgc2hpZnQgc2hpZnR2YXJpYXRpb24gaXMgc3BlY2lmaWVkLCBydW4gdGhlIG1vZGlmaWVyXG4gICAgaWYgKHNoaWZ0dmFyaWF0aW9uKSB7XG4gICAgICB2YXIgX2RhdGEkb2Zmc2V0cyA9IGRhdGEub2Zmc2V0cyxcbiAgICAgICAgICByZWZlcmVuY2UgPSBfZGF0YSRvZmZzZXRzLnJlZmVyZW5jZSxcbiAgICAgICAgICBwb3BwZXIgPSBfZGF0YSRvZmZzZXRzLnBvcHBlcjtcblxuICAgICAgdmFyIGlzVmVydGljYWwgPSBbJ2JvdHRvbScsICd0b3AnXS5pbmRleE9mKGJhc2VQbGFjZW1lbnQpICE9PSAtMTtcbiAgICAgIHZhciBzaWRlID0gaXNWZXJ0aWNhbCA/ICdsZWZ0JyA6ICd0b3AnO1xuICAgICAgdmFyIG1lYXN1cmVtZW50ID0gaXNWZXJ0aWNhbCA/ICd3aWR0aCcgOiAnaGVpZ2h0JztcblxuICAgICAgdmFyIHNoaWZ0T2Zmc2V0cyA9IHtcbiAgICAgICAgc3RhcnQ6IGRlZmluZVByb3BlcnR5KHt9LCBzaWRlLCByZWZlcmVuY2Vbc2lkZV0pLFxuICAgICAgICBlbmQ6IGRlZmluZVByb3BlcnR5KHt9LCBzaWRlLCByZWZlcmVuY2Vbc2lkZV0gKyByZWZlcmVuY2VbbWVhc3VyZW1lbnRdIC0gcG9wcGVyW21lYXN1cmVtZW50XSlcbiAgICAgIH07XG5cbiAgICAgIGRhdGEub2Zmc2V0cy5wb3BwZXIgPSBfZXh0ZW5kcyh7fSwgcG9wcGVyLCBzaGlmdE9mZnNldHNbc2hpZnR2YXJpYXRpb25dKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZGF0YTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAZnVuY3Rpb25cbiAgICogQG1lbWJlcm9mIE1vZGlmaWVyc1xuICAgKiBAYXJndW1lbnQge09iamVjdH0gZGF0YSAtIFRoZSBkYXRhIG9iamVjdCBnZW5lcmF0ZWQgYnkgdXBkYXRlIG1ldGhvZFxuICAgKiBAYXJndW1lbnQge09iamVjdH0gb3B0aW9ucyAtIE1vZGlmaWVycyBjb25maWd1cmF0aW9uIGFuZCBvcHRpb25zXG4gICAqIEByZXR1cm5zIHtPYmplY3R9IFRoZSBkYXRhIG9iamVjdCwgcHJvcGVybHkgbW9kaWZpZWRcbiAgICovXG4gIGZ1bmN0aW9uIGhpZGUoZGF0YSkge1xuICAgIGlmICghaXNNb2RpZmllclJlcXVpcmVkKGRhdGEuaW5zdGFuY2UubW9kaWZpZXJzLCAnaGlkZScsICdwcmV2ZW50T3ZlcmZsb3cnKSkge1xuICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfVxuXG4gICAgdmFyIHJlZlJlY3QgPSBkYXRhLm9mZnNldHMucmVmZXJlbmNlO1xuICAgIHZhciBib3VuZCA9IGZpbmQoZGF0YS5pbnN0YW5jZS5tb2RpZmllcnMsIGZ1bmN0aW9uIChtb2RpZmllcikge1xuICAgICAgcmV0dXJuIG1vZGlmaWVyLm5hbWUgPT09ICdwcmV2ZW50T3ZlcmZsb3cnO1xuICAgIH0pLmJvdW5kYXJpZXM7XG5cbiAgICBpZiAocmVmUmVjdC5ib3R0b20gPCBib3VuZC50b3AgfHwgcmVmUmVjdC5sZWZ0ID4gYm91bmQucmlnaHQgfHwgcmVmUmVjdC50b3AgPiBib3VuZC5ib3R0b20gfHwgcmVmUmVjdC5yaWdodCA8IGJvdW5kLmxlZnQpIHtcbiAgICAgIC8vIEF2b2lkIHVubmVjZXNzYXJ5IERPTSBhY2Nlc3MgaWYgdmlzaWJpbGl0eSBoYXNuJ3QgY2hhbmdlZFxuICAgICAgaWYgKGRhdGEuaGlkZSA9PT0gdHJ1ZSkge1xuICAgICAgICByZXR1cm4gZGF0YTtcbiAgICAgIH1cblxuICAgICAgZGF0YS5oaWRlID0gdHJ1ZTtcbiAgICAgIGRhdGEuYXR0cmlidXRlc1sneC1vdXQtb2YtYm91bmRhcmllcyddID0gJyc7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIEF2b2lkIHVubmVjZXNzYXJ5IERPTSBhY2Nlc3MgaWYgdmlzaWJpbGl0eSBoYXNuJ3QgY2hhbmdlZFxuICAgICAgaWYgKGRhdGEuaGlkZSA9PT0gZmFsc2UpIHtcbiAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgICB9XG5cbiAgICAgIGRhdGEuaGlkZSA9IGZhbHNlO1xuICAgICAgZGF0YS5hdHRyaWJ1dGVzWyd4LW91dC1vZi1ib3VuZGFyaWVzJ10gPSBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZGF0YTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAZnVuY3Rpb25cbiAgICogQG1lbWJlcm9mIE1vZGlmaWVyc1xuICAgKiBAYXJndW1lbnQge09iamVjdH0gZGF0YSAtIFRoZSBkYXRhIG9iamVjdCBnZW5lcmF0ZWQgYnkgYHVwZGF0ZWAgbWV0aG9kXG4gICAqIEBhcmd1bWVudCB7T2JqZWN0fSBvcHRpb25zIC0gTW9kaWZpZXJzIGNvbmZpZ3VyYXRpb24gYW5kIG9wdGlvbnNcbiAgICogQHJldHVybnMge09iamVjdH0gVGhlIGRhdGEgb2JqZWN0LCBwcm9wZXJseSBtb2RpZmllZFxuICAgKi9cbiAgZnVuY3Rpb24gaW5uZXIoZGF0YSkge1xuICAgIHZhciBwbGFjZW1lbnQgPSBkYXRhLnBsYWNlbWVudDtcbiAgICB2YXIgYmFzZVBsYWNlbWVudCA9IHBsYWNlbWVudC5zcGxpdCgnLScpWzBdO1xuICAgIHZhciBfZGF0YSRvZmZzZXRzID0gZGF0YS5vZmZzZXRzLFxuICAgICAgICBwb3BwZXIgPSBfZGF0YSRvZmZzZXRzLnBvcHBlcixcbiAgICAgICAgcmVmZXJlbmNlID0gX2RhdGEkb2Zmc2V0cy5yZWZlcmVuY2U7XG5cbiAgICB2YXIgaXNIb3JpeiA9IFsnbGVmdCcsICdyaWdodCddLmluZGV4T2YoYmFzZVBsYWNlbWVudCkgIT09IC0xO1xuXG4gICAgdmFyIHN1YnRyYWN0TGVuZ3RoID0gWyd0b3AnLCAnbGVmdCddLmluZGV4T2YoYmFzZVBsYWNlbWVudCkgPT09IC0xO1xuXG4gICAgcG9wcGVyW2lzSG9yaXogPyAnbGVmdCcgOiAndG9wJ10gPSByZWZlcmVuY2VbYmFzZVBsYWNlbWVudF0gLSAoc3VidHJhY3RMZW5ndGggPyBwb3BwZXJbaXNIb3JpeiA/ICd3aWR0aCcgOiAnaGVpZ2h0J10gOiAwKTtcblxuICAgIGRhdGEucGxhY2VtZW50ID0gZ2V0T3Bwb3NpdGVQbGFjZW1lbnQocGxhY2VtZW50KTtcbiAgICBkYXRhLm9mZnNldHMucG9wcGVyID0gZ2V0Q2xpZW50UmVjdChwb3BwZXIpO1xuXG4gICAgcmV0dXJuIGRhdGE7XG4gIH1cblxuICAvKipcbiAgICogTW9kaWZpZXIgZnVuY3Rpb24sIGVhY2ggbW9kaWZpZXIgY2FuIGhhdmUgYSBmdW5jdGlvbiBvZiB0aGlzIHR5cGUgYXNzaWduZWRcbiAgICogdG8gaXRzIGBmbmAgcHJvcGVydHkuPGJyIC8+XG4gICAqIFRoZXNlIGZ1bmN0aW9ucyB3aWxsIGJlIGNhbGxlZCBvbiBlYWNoIHVwZGF0ZSwgdGhpcyBtZWFucyB0aGF0IHlvdSBtdXN0XG4gICAqIG1ha2Ugc3VyZSB0aGV5IGFyZSBwZXJmb3JtYW50IGVub3VnaCB0byBhdm9pZCBwZXJmb3JtYW5jZSBib3R0bGVuZWNrcy5cbiAgICpcbiAgICogQGZ1bmN0aW9uIE1vZGlmaWVyRm5cbiAgICogQGFyZ3VtZW50IHtkYXRhT2JqZWN0fSBkYXRhIC0gVGhlIGRhdGEgb2JqZWN0IGdlbmVyYXRlZCBieSBgdXBkYXRlYCBtZXRob2RcbiAgICogQGFyZ3VtZW50IHtPYmplY3R9IG9wdGlvbnMgLSBNb2RpZmllcnMgY29uZmlndXJhdGlvbiBhbmQgb3B0aW9uc1xuICAgKiBAcmV0dXJucyB7ZGF0YU9iamVjdH0gVGhlIGRhdGEgb2JqZWN0LCBwcm9wZXJseSBtb2RpZmllZFxuICAgKi9cblxuICAvKipcbiAgICogTW9kaWZpZXJzIGFyZSBwbHVnaW5zIHVzZWQgdG8gYWx0ZXIgdGhlIGJlaGF2aW9yIG9mIHlvdXIgcG9wcGVycy48YnIgLz5cbiAgICogUG9wcGVyLmpzIHVzZXMgYSBzZXQgb2YgOSBtb2RpZmllcnMgdG8gcHJvdmlkZSBhbGwgdGhlIGJhc2ljIGZ1bmN0aW9uYWxpdGllc1xuICAgKiBuZWVkZWQgYnkgdGhlIGxpYnJhcnkuXG4gICAqXG4gICAqIFVzdWFsbHkgeW91IGRvbid0IHdhbnQgdG8gb3ZlcnJpZGUgdGhlIGBvcmRlcmAsIGBmbmAgYW5kIGBvbkxvYWRgIHByb3BzLlxuICAgKiBBbGwgdGhlIG90aGVyIHByb3BlcnRpZXMgYXJlIGNvbmZpZ3VyYXRpb25zIHRoYXQgY291bGQgYmUgdHdlYWtlZC5cbiAgICogQG5hbWVzcGFjZSBtb2RpZmllcnNcbiAgICovXG4gIHZhciBtb2RpZmllcnMgPSB7XG4gICAgLyoqXG4gICAgICogTW9kaWZpZXIgdXNlZCB0byBzaGlmdCB0aGUgcG9wcGVyIG9uIHRoZSBzdGFydCBvciBlbmQgb2YgaXRzIHJlZmVyZW5jZVxuICAgICAqIGVsZW1lbnQuPGJyIC8+XG4gICAgICogSXQgd2lsbCByZWFkIHRoZSB2YXJpYXRpb24gb2YgdGhlIGBwbGFjZW1lbnRgIHByb3BlcnR5LjxiciAvPlxuICAgICAqIEl0IGNhbiBiZSBvbmUgZWl0aGVyIGAtZW5kYCBvciBgLXN0YXJ0YC5cbiAgICAgKiBAbWVtYmVyb2YgbW9kaWZpZXJzXG4gICAgICogQGlubmVyXG4gICAgICovXG4gICAgc2hpZnQ6IHtcbiAgICAgIC8qKiBAcHJvcCB7bnVtYmVyfSBvcmRlcj0xMDAgLSBJbmRleCB1c2VkIHRvIGRlZmluZSB0aGUgb3JkZXIgb2YgZXhlY3V0aW9uICovXG4gICAgICBvcmRlcjogMTAwLFxuICAgICAgLyoqIEBwcm9wIHtCb29sZWFufSBlbmFibGVkPXRydWUgLSBXaGV0aGVyIHRoZSBtb2RpZmllciBpcyBlbmFibGVkIG9yIG5vdCAqL1xuICAgICAgZW5hYmxlZDogdHJ1ZSxcbiAgICAgIC8qKiBAcHJvcCB7TW9kaWZpZXJGbn0gKi9cbiAgICAgIGZuOiBzaGlmdFxuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBUaGUgYG9mZnNldGAgbW9kaWZpZXIgY2FuIHNoaWZ0IHlvdXIgcG9wcGVyIG9uIGJvdGggaXRzIGF4aXMuXG4gICAgICpcbiAgICAgKiBJdCBhY2NlcHRzIHRoZSBmb2xsb3dpbmcgdW5pdHM6XG4gICAgICogLSBgcHhgIG9yIHVuaXQtbGVzcywgaW50ZXJwcmV0ZWQgYXMgcGl4ZWxzXG4gICAgICogLSBgJWAgb3IgYCVyYCwgcGVyY2VudGFnZSByZWxhdGl2ZSB0byB0aGUgbGVuZ3RoIG9mIHRoZSByZWZlcmVuY2UgZWxlbWVudFxuICAgICAqIC0gYCVwYCwgcGVyY2VudGFnZSByZWxhdGl2ZSB0byB0aGUgbGVuZ3RoIG9mIHRoZSBwb3BwZXIgZWxlbWVudFxuICAgICAqIC0gYHZ3YCwgQ1NTIHZpZXdwb3J0IHdpZHRoIHVuaXRcbiAgICAgKiAtIGB2aGAsIENTUyB2aWV3cG9ydCBoZWlnaHQgdW5pdFxuICAgICAqXG4gICAgICogRm9yIGxlbmd0aCBpcyBpbnRlbmRlZCB0aGUgbWFpbiBheGlzIHJlbGF0aXZlIHRvIHRoZSBwbGFjZW1lbnQgb2YgdGhlIHBvcHBlci48YnIgLz5cbiAgICAgKiBUaGlzIG1lYW5zIHRoYXQgaWYgdGhlIHBsYWNlbWVudCBpcyBgdG9wYCBvciBgYm90dG9tYCwgdGhlIGxlbmd0aCB3aWxsIGJlIHRoZVxuICAgICAqIGB3aWR0aGAuIEluIGNhc2Ugb2YgYGxlZnRgIG9yIGByaWdodGAsIGl0IHdpbGwgYmUgdGhlIGBoZWlnaHRgLlxuICAgICAqXG4gICAgICogWW91IGNhbiBwcm92aWRlIGEgc2luZ2xlIHZhbHVlIChhcyBgTnVtYmVyYCBvciBgU3RyaW5nYCksIG9yIGEgcGFpciBvZiB2YWx1ZXNcbiAgICAgKiBhcyBgU3RyaW5nYCBkaXZpZGVkIGJ5IGEgY29tbWEgb3Igb25lIChvciBtb3JlKSB3aGl0ZSBzcGFjZXMuPGJyIC8+XG4gICAgICogVGhlIGxhdHRlciBpcyBhIGRlcHJlY2F0ZWQgbWV0aG9kIGJlY2F1c2UgaXQgbGVhZHMgdG8gY29uZnVzaW9uIGFuZCB3aWxsIGJlXG4gICAgICogcmVtb3ZlZCBpbiB2Mi48YnIgLz5cbiAgICAgKiBBZGRpdGlvbmFsbHksIGl0IGFjY2VwdHMgYWRkaXRpb25zIGFuZCBzdWJ0cmFjdGlvbnMgYmV0d2VlbiBkaWZmZXJlbnQgdW5pdHMuXG4gICAgICogTm90ZSB0aGF0IG11bHRpcGxpY2F0aW9ucyBhbmQgZGl2aXNpb25zIGFyZW4ndCBzdXBwb3J0ZWQuXG4gICAgICpcbiAgICAgKiBWYWxpZCBleGFtcGxlcyBhcmU6XG4gICAgICogYGBgXG4gICAgICogMTBcbiAgICAgKiAnMTAlJ1xuICAgICAqICcxMCwgMTAnXG4gICAgICogJzEwJSwgMTAnXG4gICAgICogJzEwICsgMTAlJ1xuICAgICAqICcxMCAtIDV2aCArIDMlJ1xuICAgICAqICctMTBweCArIDV2aCwgNXB4IC0gNiUnXG4gICAgICogYGBgXG4gICAgICogPiAqKk5CKio6IElmIHlvdSBkZXNpcmUgdG8gYXBwbHkgb2Zmc2V0cyB0byB5b3VyIHBvcHBlcnMgaW4gYSB3YXkgdGhhdCBtYXkgbWFrZSB0aGVtIG92ZXJsYXBcbiAgICAgKiA+IHdpdGggdGhlaXIgcmVmZXJlbmNlIGVsZW1lbnQsIHVuZm9ydHVuYXRlbHksIHlvdSB3aWxsIGhhdmUgdG8gZGlzYWJsZSB0aGUgYGZsaXBgIG1vZGlmaWVyLlxuICAgICAqID4gWW91IGNhbiByZWFkIG1vcmUgb24gdGhpcyBhdCB0aGlzIFtpc3N1ZV0oaHR0cHM6Ly9naXRodWIuY29tL0ZlelZyYXN0YS9wb3BwZXIuanMvaXNzdWVzLzM3MykuXG4gICAgICpcbiAgICAgKiBAbWVtYmVyb2YgbW9kaWZpZXJzXG4gICAgICogQGlubmVyXG4gICAgICovXG4gICAgb2Zmc2V0OiB7XG4gICAgICAvKiogQHByb3Age251bWJlcn0gb3JkZXI9MjAwIC0gSW5kZXggdXNlZCB0byBkZWZpbmUgdGhlIG9yZGVyIG9mIGV4ZWN1dGlvbiAqL1xuICAgICAgb3JkZXI6IDIwMCxcbiAgICAgIC8qKiBAcHJvcCB7Qm9vbGVhbn0gZW5hYmxlZD10cnVlIC0gV2hldGhlciB0aGUgbW9kaWZpZXIgaXMgZW5hYmxlZCBvciBub3QgKi9cbiAgICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgICAvKiogQHByb3Age01vZGlmaWVyRm59ICovXG4gICAgICBmbjogb2Zmc2V0LFxuICAgICAgLyoqIEBwcm9wIHtOdW1iZXJ8U3RyaW5nfSBvZmZzZXQ9MFxuICAgICAgICogVGhlIG9mZnNldCB2YWx1ZSBhcyBkZXNjcmliZWQgaW4gdGhlIG1vZGlmaWVyIGRlc2NyaXB0aW9uXG4gICAgICAgKi9cbiAgICAgIG9mZnNldDogMFxuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBNb2RpZmllciB1c2VkIHRvIHByZXZlbnQgdGhlIHBvcHBlciBmcm9tIGJlaW5nIHBvc2l0aW9uZWQgb3V0c2lkZSB0aGUgYm91bmRhcnkuXG4gICAgICpcbiAgICAgKiBBIHNjZW5hcmlvIGV4aXN0cyB3aGVyZSB0aGUgcmVmZXJlbmNlIGl0c2VsZiBpcyBub3Qgd2l0aGluIHRoZSBib3VuZGFyaWVzLjxiciAvPlxuICAgICAqIFdlIGNhbiBzYXkgaXQgaGFzIFwiZXNjYXBlZCB0aGUgYm91bmRhcmllc1wiIOKAlCBvciBqdXN0IFwiZXNjYXBlZFwiLjxiciAvPlxuICAgICAqIEluIHRoaXMgY2FzZSB3ZSBuZWVkIHRvIGRlY2lkZSB3aGV0aGVyIHRoZSBwb3BwZXIgc2hvdWxkIGVpdGhlcjpcbiAgICAgKlxuICAgICAqIC0gZGV0YWNoIGZyb20gdGhlIHJlZmVyZW5jZSBhbmQgcmVtYWluIFwidHJhcHBlZFwiIGluIHRoZSBib3VuZGFyaWVzLCBvclxuICAgICAqIC0gaWYgaXQgc2hvdWxkIGlnbm9yZSB0aGUgYm91bmRhcnkgYW5kIFwiZXNjYXBlIHdpdGggaXRzIHJlZmVyZW5jZVwiXG4gICAgICpcbiAgICAgKiBXaGVuIGBlc2NhcGVXaXRoUmVmZXJlbmNlYCBpcyBzZXQgdG9gdHJ1ZWAgYW5kIHJlZmVyZW5jZSBpcyBjb21wbGV0ZWx5XG4gICAgICogb3V0c2lkZSBpdHMgYm91bmRhcmllcywgdGhlIHBvcHBlciB3aWxsIG92ZXJmbG93IChvciBjb21wbGV0ZWx5IGxlYXZlKVxuICAgICAqIHRoZSBib3VuZGFyaWVzIGluIG9yZGVyIHRvIHJlbWFpbiBhdHRhY2hlZCB0byB0aGUgZWRnZSBvZiB0aGUgcmVmZXJlbmNlLlxuICAgICAqXG4gICAgICogQG1lbWJlcm9mIG1vZGlmaWVyc1xuICAgICAqIEBpbm5lclxuICAgICAqL1xuICAgIHByZXZlbnRPdmVyZmxvdzoge1xuICAgICAgLyoqIEBwcm9wIHtudW1iZXJ9IG9yZGVyPTMwMCAtIEluZGV4IHVzZWQgdG8gZGVmaW5lIHRoZSBvcmRlciBvZiBleGVjdXRpb24gKi9cbiAgICAgIG9yZGVyOiAzMDAsXG4gICAgICAvKiogQHByb3Age0Jvb2xlYW59IGVuYWJsZWQ9dHJ1ZSAtIFdoZXRoZXIgdGhlIG1vZGlmaWVyIGlzIGVuYWJsZWQgb3Igbm90ICovXG4gICAgICBlbmFibGVkOiB0cnVlLFxuICAgICAgLyoqIEBwcm9wIHtNb2RpZmllckZufSAqL1xuICAgICAgZm46IHByZXZlbnRPdmVyZmxvdyxcbiAgICAgIC8qKlxuICAgICAgICogQHByb3Age0FycmF5fSBbcHJpb3JpdHk9WydsZWZ0JywncmlnaHQnLCd0b3AnLCdib3R0b20nXV1cbiAgICAgICAqIFBvcHBlciB3aWxsIHRyeSB0byBwcmV2ZW50IG92ZXJmbG93IGZvbGxvd2luZyB0aGVzZSBwcmlvcml0aWVzIGJ5IGRlZmF1bHQsXG4gICAgICAgKiB0aGVuLCBpdCBjb3VsZCBvdmVyZmxvdyBvbiB0aGUgbGVmdCBhbmQgb24gdG9wIG9mIHRoZSBgYm91bmRhcmllc0VsZW1lbnRgXG4gICAgICAgKi9cbiAgICAgIHByaW9yaXR5OiBbJ2xlZnQnLCAncmlnaHQnLCAndG9wJywgJ2JvdHRvbSddLFxuICAgICAgLyoqXG4gICAgICAgKiBAcHJvcCB7bnVtYmVyfSBwYWRkaW5nPTVcbiAgICAgICAqIEFtb3VudCBvZiBwaXhlbCB1c2VkIHRvIGRlZmluZSBhIG1pbmltdW0gZGlzdGFuY2UgYmV0d2VlbiB0aGUgYm91bmRhcmllc1xuICAgICAgICogYW5kIHRoZSBwb3BwZXIuIFRoaXMgbWFrZXMgc3VyZSB0aGUgcG9wcGVyIGFsd2F5cyBoYXMgYSBsaXR0bGUgcGFkZGluZ1xuICAgICAgICogYmV0d2VlbiB0aGUgZWRnZXMgb2YgaXRzIGNvbnRhaW5lclxuICAgICAgICovXG4gICAgICBwYWRkaW5nOiA1LFxuICAgICAgLyoqXG4gICAgICAgKiBAcHJvcCB7U3RyaW5nfEhUTUxFbGVtZW50fSBib3VuZGFyaWVzRWxlbWVudD0nc2Nyb2xsUGFyZW50J1xuICAgICAgICogQm91bmRhcmllcyB1c2VkIGJ5IHRoZSBtb2RpZmllci4gQ2FuIGJlIGBzY3JvbGxQYXJlbnRgLCBgd2luZG93YCxcbiAgICAgICAqIGB2aWV3cG9ydGAgb3IgYW55IERPTSBlbGVtZW50LlxuICAgICAgICovXG4gICAgICBib3VuZGFyaWVzRWxlbWVudDogJ3Njcm9sbFBhcmVudCdcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogTW9kaWZpZXIgdXNlZCB0byBtYWtlIHN1cmUgdGhlIHJlZmVyZW5jZSBhbmQgaXRzIHBvcHBlciBzdGF5IG5lYXIgZWFjaCBvdGhlclxuICAgICAqIHdpdGhvdXQgbGVhdmluZyBhbnkgZ2FwIGJldHdlZW4gdGhlIHR3by4gRXNwZWNpYWxseSB1c2VmdWwgd2hlbiB0aGUgYXJyb3cgaXNcbiAgICAgKiBlbmFibGVkIGFuZCB5b3Ugd2FudCB0byBlbnN1cmUgdGhhdCBpdCBwb2ludHMgdG8gaXRzIHJlZmVyZW5jZSBlbGVtZW50LlxuICAgICAqIEl0IGNhcmVzIG9ubHkgYWJvdXQgdGhlIGZpcnN0IGF4aXMuIFlvdSBjYW4gc3RpbGwgaGF2ZSBwb3BwZXJzIHdpdGggbWFyZ2luXG4gICAgICogYmV0d2VlbiB0aGUgcG9wcGVyIGFuZCBpdHMgcmVmZXJlbmNlIGVsZW1lbnQuXG4gICAgICogQG1lbWJlcm9mIG1vZGlmaWVyc1xuICAgICAqIEBpbm5lclxuICAgICAqL1xuICAgIGtlZXBUb2dldGhlcjoge1xuICAgICAgLyoqIEBwcm9wIHtudW1iZXJ9IG9yZGVyPTQwMCAtIEluZGV4IHVzZWQgdG8gZGVmaW5lIHRoZSBvcmRlciBvZiBleGVjdXRpb24gKi9cbiAgICAgIG9yZGVyOiA0MDAsXG4gICAgICAvKiogQHByb3Age0Jvb2xlYW59IGVuYWJsZWQ9dHJ1ZSAtIFdoZXRoZXIgdGhlIG1vZGlmaWVyIGlzIGVuYWJsZWQgb3Igbm90ICovXG4gICAgICBlbmFibGVkOiB0cnVlLFxuICAgICAgLyoqIEBwcm9wIHtNb2RpZmllckZufSAqL1xuICAgICAgZm46IGtlZXBUb2dldGhlclxuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBUaGlzIG1vZGlmaWVyIGlzIHVzZWQgdG8gbW92ZSB0aGUgYGFycm93RWxlbWVudGAgb2YgdGhlIHBvcHBlciB0byBtYWtlXG4gICAgICogc3VyZSBpdCBpcyBwb3NpdGlvbmVkIGJldHdlZW4gdGhlIHJlZmVyZW5jZSBlbGVtZW50IGFuZCBpdHMgcG9wcGVyIGVsZW1lbnQuXG4gICAgICogSXQgd2lsbCByZWFkIHRoZSBvdXRlciBzaXplIG9mIHRoZSBgYXJyb3dFbGVtZW50YCBub2RlIHRvIGRldGVjdCBob3cgbWFueVxuICAgICAqIHBpeGVscyBvZiBjb25qdW5jdGlvbiBhcmUgbmVlZGVkLlxuICAgICAqXG4gICAgICogSXQgaGFzIG5vIGVmZmVjdCBpZiBubyBgYXJyb3dFbGVtZW50YCBpcyBwcm92aWRlZC5cbiAgICAgKiBAbWVtYmVyb2YgbW9kaWZpZXJzXG4gICAgICogQGlubmVyXG4gICAgICovXG4gICAgYXJyb3c6IHtcbiAgICAgIC8qKiBAcHJvcCB7bnVtYmVyfSBvcmRlcj01MDAgLSBJbmRleCB1c2VkIHRvIGRlZmluZSB0aGUgb3JkZXIgb2YgZXhlY3V0aW9uICovXG4gICAgICBvcmRlcjogNTAwLFxuICAgICAgLyoqIEBwcm9wIHtCb29sZWFufSBlbmFibGVkPXRydWUgLSBXaGV0aGVyIHRoZSBtb2RpZmllciBpcyBlbmFibGVkIG9yIG5vdCAqL1xuICAgICAgZW5hYmxlZDogdHJ1ZSxcbiAgICAgIC8qKiBAcHJvcCB7TW9kaWZpZXJGbn0gKi9cbiAgICAgIGZuOiBhcnJvdyxcbiAgICAgIC8qKiBAcHJvcCB7U3RyaW5nfEhUTUxFbGVtZW50fSBlbGVtZW50PSdbeC1hcnJvd10nIC0gU2VsZWN0b3Igb3Igbm9kZSB1c2VkIGFzIGFycm93ICovXG4gICAgICBlbGVtZW50OiAnW3gtYXJyb3ddJ1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBNb2RpZmllciB1c2VkIHRvIGZsaXAgdGhlIHBvcHBlcidzIHBsYWNlbWVudCB3aGVuIGl0IHN0YXJ0cyB0byBvdmVybGFwIGl0c1xuICAgICAqIHJlZmVyZW5jZSBlbGVtZW50LlxuICAgICAqXG4gICAgICogUmVxdWlyZXMgdGhlIGBwcmV2ZW50T3ZlcmZsb3dgIG1vZGlmaWVyIGJlZm9yZSBpdCBpbiBvcmRlciB0byB3b3JrLlxuICAgICAqXG4gICAgICogKipOT1RFOioqIHRoaXMgbW9kaWZpZXIgd2lsbCBpbnRlcnJ1cHQgdGhlIGN1cnJlbnQgdXBkYXRlIGN5Y2xlIGFuZCB3aWxsXG4gICAgICogcmVzdGFydCBpdCBpZiBpdCBkZXRlY3RzIHRoZSBuZWVkIHRvIGZsaXAgdGhlIHBsYWNlbWVudC5cbiAgICAgKiBAbWVtYmVyb2YgbW9kaWZpZXJzXG4gICAgICogQGlubmVyXG4gICAgICovXG4gICAgZmxpcDoge1xuICAgICAgLyoqIEBwcm9wIHtudW1iZXJ9IG9yZGVyPTYwMCAtIEluZGV4IHVzZWQgdG8gZGVmaW5lIHRoZSBvcmRlciBvZiBleGVjdXRpb24gKi9cbiAgICAgIG9yZGVyOiA2MDAsXG4gICAgICAvKiogQHByb3Age0Jvb2xlYW59IGVuYWJsZWQ9dHJ1ZSAtIFdoZXRoZXIgdGhlIG1vZGlmaWVyIGlzIGVuYWJsZWQgb3Igbm90ICovXG4gICAgICBlbmFibGVkOiB0cnVlLFxuICAgICAgLyoqIEBwcm9wIHtNb2RpZmllckZufSAqL1xuICAgICAgZm46IGZsaXAsXG4gICAgICAvKipcbiAgICAgICAqIEBwcm9wIHtTdHJpbmd8QXJyYXl9IGJlaGF2aW9yPSdmbGlwJ1xuICAgICAgICogVGhlIGJlaGF2aW9yIHVzZWQgdG8gY2hhbmdlIHRoZSBwb3BwZXIncyBwbGFjZW1lbnQuIEl0IGNhbiBiZSBvbmUgb2ZcbiAgICAgICAqIGBmbGlwYCwgYGNsb2Nrd2lzZWAsIGBjb3VudGVyY2xvY2t3aXNlYCBvciBhbiBhcnJheSB3aXRoIGEgbGlzdCBvZiB2YWxpZFxuICAgICAgICogcGxhY2VtZW50cyAod2l0aCBvcHRpb25hbCB2YXJpYXRpb25zKVxuICAgICAgICovXG4gICAgICBiZWhhdmlvcjogJ2ZsaXAnLFxuICAgICAgLyoqXG4gICAgICAgKiBAcHJvcCB7bnVtYmVyfSBwYWRkaW5nPTVcbiAgICAgICAqIFRoZSBwb3BwZXIgd2lsbCBmbGlwIGlmIGl0IGhpdHMgdGhlIGVkZ2VzIG9mIHRoZSBgYm91bmRhcmllc0VsZW1lbnRgXG4gICAgICAgKi9cbiAgICAgIHBhZGRpbmc6IDUsXG4gICAgICAvKipcbiAgICAgICAqIEBwcm9wIHtTdHJpbmd8SFRNTEVsZW1lbnR9IGJvdW5kYXJpZXNFbGVtZW50PSd2aWV3cG9ydCdcbiAgICAgICAqIFRoZSBlbGVtZW50IHdoaWNoIHdpbGwgZGVmaW5lIHRoZSBib3VuZGFyaWVzIG9mIHRoZSBwb3BwZXIgcG9zaXRpb24uXG4gICAgICAgKiBUaGUgcG9wcGVyIHdpbGwgbmV2ZXIgYmUgcGxhY2VkIG91dHNpZGUgb2YgdGhlIGRlZmluZWQgYm91bmRhcmllc1xuICAgICAgICogKGV4Y2VwdCBpZiBga2VlcFRvZ2V0aGVyYCBpcyBlbmFibGVkKVxuICAgICAgICovXG4gICAgICBib3VuZGFyaWVzRWxlbWVudDogJ3ZpZXdwb3J0JyxcbiAgICAgIC8qKlxuICAgICAgICogQHByb3Age0Jvb2xlYW59IGZsaXBWYXJpYXRpb25zPWZhbHNlXG4gICAgICAgKiBUaGUgcG9wcGVyIHdpbGwgc3dpdGNoIHBsYWNlbWVudCB2YXJpYXRpb24gYmV0d2VlbiBgLXN0YXJ0YCBhbmQgYC1lbmRgIHdoZW5cbiAgICAgICAqIHRoZSByZWZlcmVuY2UgZWxlbWVudCBvdmVybGFwcyBpdHMgYm91bmRhcmllcy5cbiAgICAgICAqXG4gICAgICAgKiBUaGUgb3JpZ2luYWwgcGxhY2VtZW50IHNob3VsZCBoYXZlIGEgc2V0IHZhcmlhdGlvbi5cbiAgICAgICAqL1xuICAgICAgZmxpcFZhcmlhdGlvbnM6IGZhbHNlLFxuICAgICAgLyoqXG4gICAgICAgKiBAcHJvcCB7Qm9vbGVhbn0gZmxpcFZhcmlhdGlvbnNCeUNvbnRlbnQ9ZmFsc2VcbiAgICAgICAqIFRoZSBwb3BwZXIgd2lsbCBzd2l0Y2ggcGxhY2VtZW50IHZhcmlhdGlvbiBiZXR3ZWVuIGAtc3RhcnRgIGFuZCBgLWVuZGAgd2hlblxuICAgICAgICogdGhlIHBvcHBlciBlbGVtZW50IG92ZXJsYXBzIGl0cyByZWZlcmVuY2UgYm91bmRhcmllcy5cbiAgICAgICAqXG4gICAgICAgKiBUaGUgb3JpZ2luYWwgcGxhY2VtZW50IHNob3VsZCBoYXZlIGEgc2V0IHZhcmlhdGlvbi5cbiAgICAgICAqL1xuICAgICAgZmxpcFZhcmlhdGlvbnNCeUNvbnRlbnQ6IGZhbHNlXG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIE1vZGlmaWVyIHVzZWQgdG8gbWFrZSB0aGUgcG9wcGVyIGZsb3cgdG93YXJkIHRoZSBpbm5lciBvZiB0aGUgcmVmZXJlbmNlIGVsZW1lbnQuXG4gICAgICogQnkgZGVmYXVsdCwgd2hlbiB0aGlzIG1vZGlmaWVyIGlzIGRpc2FibGVkLCB0aGUgcG9wcGVyIHdpbGwgYmUgcGxhY2VkIG91dHNpZGVcbiAgICAgKiB0aGUgcmVmZXJlbmNlIGVsZW1lbnQuXG4gICAgICogQG1lbWJlcm9mIG1vZGlmaWVyc1xuICAgICAqIEBpbm5lclxuICAgICAqL1xuICAgIGlubmVyOiB7XG4gICAgICAvKiogQHByb3Age251bWJlcn0gb3JkZXI9NzAwIC0gSW5kZXggdXNlZCB0byBkZWZpbmUgdGhlIG9yZGVyIG9mIGV4ZWN1dGlvbiAqL1xuICAgICAgb3JkZXI6IDcwMCxcbiAgICAgIC8qKiBAcHJvcCB7Qm9vbGVhbn0gZW5hYmxlZD1mYWxzZSAtIFdoZXRoZXIgdGhlIG1vZGlmaWVyIGlzIGVuYWJsZWQgb3Igbm90ICovXG4gICAgICBlbmFibGVkOiBmYWxzZSxcbiAgICAgIC8qKiBAcHJvcCB7TW9kaWZpZXJGbn0gKi9cbiAgICAgIGZuOiBpbm5lclxuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBNb2RpZmllciB1c2VkIHRvIGhpZGUgdGhlIHBvcHBlciB3aGVuIGl0cyByZWZlcmVuY2UgZWxlbWVudCBpcyBvdXRzaWRlIG9mIHRoZVxuICAgICAqIHBvcHBlciBib3VuZGFyaWVzLiBJdCB3aWxsIHNldCBhIGB4LW91dC1vZi1ib3VuZGFyaWVzYCBhdHRyaWJ1dGUgd2hpY2ggY2FuXG4gICAgICogYmUgdXNlZCB0byBoaWRlIHdpdGggYSBDU1Mgc2VsZWN0b3IgdGhlIHBvcHBlciB3aGVuIGl0cyByZWZlcmVuY2UgaXNcbiAgICAgKiBvdXQgb2YgYm91bmRhcmllcy5cbiAgICAgKlxuICAgICAqIFJlcXVpcmVzIHRoZSBgcHJldmVudE92ZXJmbG93YCBtb2RpZmllciBiZWZvcmUgaXQgaW4gb3JkZXIgdG8gd29yay5cbiAgICAgKiBAbWVtYmVyb2YgbW9kaWZpZXJzXG4gICAgICogQGlubmVyXG4gICAgICovXG4gICAgaGlkZToge1xuICAgICAgLyoqIEBwcm9wIHtudW1iZXJ9IG9yZGVyPTgwMCAtIEluZGV4IHVzZWQgdG8gZGVmaW5lIHRoZSBvcmRlciBvZiBleGVjdXRpb24gKi9cbiAgICAgIG9yZGVyOiA4MDAsXG4gICAgICAvKiogQHByb3Age0Jvb2xlYW59IGVuYWJsZWQ9dHJ1ZSAtIFdoZXRoZXIgdGhlIG1vZGlmaWVyIGlzIGVuYWJsZWQgb3Igbm90ICovXG4gICAgICBlbmFibGVkOiB0cnVlLFxuICAgICAgLyoqIEBwcm9wIHtNb2RpZmllckZufSAqL1xuICAgICAgZm46IGhpZGVcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogQ29tcHV0ZXMgdGhlIHN0eWxlIHRoYXQgd2lsbCBiZSBhcHBsaWVkIHRvIHRoZSBwb3BwZXIgZWxlbWVudCB0byBnZXRzXG4gICAgICogcHJvcGVybHkgcG9zaXRpb25lZC5cbiAgICAgKlxuICAgICAqIE5vdGUgdGhhdCB0aGlzIG1vZGlmaWVyIHdpbGwgbm90IHRvdWNoIHRoZSBET00sIGl0IGp1c3QgcHJlcGFyZXMgdGhlIHN0eWxlc1xuICAgICAqIHNvIHRoYXQgYGFwcGx5U3R5bGVgIG1vZGlmaWVyIGNhbiBhcHBseSBpdC4gVGhpcyBzZXBhcmF0aW9uIGlzIHVzZWZ1bFxuICAgICAqIGluIGNhc2UgeW91IG5lZWQgdG8gcmVwbGFjZSBgYXBwbHlTdHlsZWAgd2l0aCBhIGN1c3RvbSBpbXBsZW1lbnRhdGlvbi5cbiAgICAgKlxuICAgICAqIFRoaXMgbW9kaWZpZXIgaGFzIGA4NTBgIGFzIGBvcmRlcmAgdmFsdWUgdG8gbWFpbnRhaW4gYmFja3dhcmQgY29tcGF0aWJpbGl0eVxuICAgICAqIHdpdGggcHJldmlvdXMgdmVyc2lvbnMgb2YgUG9wcGVyLmpzLiBFeHBlY3QgdGhlIG1vZGlmaWVycyBvcmRlcmluZyBtZXRob2RcbiAgICAgKiB0byBjaGFuZ2UgaW4gZnV0dXJlIG1ham9yIHZlcnNpb25zIG9mIHRoZSBsaWJyYXJ5LlxuICAgICAqXG4gICAgICogQG1lbWJlcm9mIG1vZGlmaWVyc1xuICAgICAqIEBpbm5lclxuICAgICAqL1xuICAgIGNvbXB1dGVTdHlsZToge1xuICAgICAgLyoqIEBwcm9wIHtudW1iZXJ9IG9yZGVyPTg1MCAtIEluZGV4IHVzZWQgdG8gZGVmaW5lIHRoZSBvcmRlciBvZiBleGVjdXRpb24gKi9cbiAgICAgIG9yZGVyOiA4NTAsXG4gICAgICAvKiogQHByb3Age0Jvb2xlYW59IGVuYWJsZWQ9dHJ1ZSAtIFdoZXRoZXIgdGhlIG1vZGlmaWVyIGlzIGVuYWJsZWQgb3Igbm90ICovXG4gICAgICBlbmFibGVkOiB0cnVlLFxuICAgICAgLyoqIEBwcm9wIHtNb2RpZmllckZufSAqL1xuICAgICAgZm46IGNvbXB1dGVTdHlsZSxcbiAgICAgIC8qKlxuICAgICAgICogQHByb3Age0Jvb2xlYW59IGdwdUFjY2VsZXJhdGlvbj10cnVlXG4gICAgICAgKiBJZiB0cnVlLCBpdCB1c2VzIHRoZSBDU1MgM0QgdHJhbnNmb3JtYXRpb24gdG8gcG9zaXRpb24gdGhlIHBvcHBlci5cbiAgICAgICAqIE90aGVyd2lzZSwgaXQgd2lsbCB1c2UgdGhlIGB0b3BgIGFuZCBgbGVmdGAgcHJvcGVydGllc1xuICAgICAgICovXG4gICAgICBncHVBY2NlbGVyYXRpb246IHRydWUsXG4gICAgICAvKipcbiAgICAgICAqIEBwcm9wIHtzdHJpbmd9IFt4PSdib3R0b20nXVxuICAgICAgICogV2hlcmUgdG8gYW5jaG9yIHRoZSBYIGF4aXMgKGBib3R0b21gIG9yIGB0b3BgKS4gQUtBIFggb2Zmc2V0IG9yaWdpbi5cbiAgICAgICAqIENoYW5nZSB0aGlzIGlmIHlvdXIgcG9wcGVyIHNob3VsZCBncm93IGluIGEgZGlyZWN0aW9uIGRpZmZlcmVudCBmcm9tIGBib3R0b21gXG4gICAgICAgKi9cbiAgICAgIHg6ICdib3R0b20nLFxuICAgICAgLyoqXG4gICAgICAgKiBAcHJvcCB7c3RyaW5nfSBbeD0nbGVmdCddXG4gICAgICAgKiBXaGVyZSB0byBhbmNob3IgdGhlIFkgYXhpcyAoYGxlZnRgIG9yIGByaWdodGApLiBBS0EgWSBvZmZzZXQgb3JpZ2luLlxuICAgICAgICogQ2hhbmdlIHRoaXMgaWYgeW91ciBwb3BwZXIgc2hvdWxkIGdyb3cgaW4gYSBkaXJlY3Rpb24gZGlmZmVyZW50IGZyb20gYHJpZ2h0YFxuICAgICAgICovXG4gICAgICB5OiAncmlnaHQnXG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIEFwcGxpZXMgdGhlIGNvbXB1dGVkIHN0eWxlcyB0byB0aGUgcG9wcGVyIGVsZW1lbnQuXG4gICAgICpcbiAgICAgKiBBbGwgdGhlIERPTSBtYW5pcHVsYXRpb25zIGFyZSBsaW1pdGVkIHRvIHRoaXMgbW9kaWZpZXIuIFRoaXMgaXMgdXNlZnVsIGluIGNhc2VcbiAgICAgKiB5b3Ugd2FudCB0byBpbnRlZ3JhdGUgUG9wcGVyLmpzIGluc2lkZSBhIGZyYW1ld29yayBvciB2aWV3IGxpYnJhcnkgYW5kIHlvdVxuICAgICAqIHdhbnQgdG8gZGVsZWdhdGUgYWxsIHRoZSBET00gbWFuaXB1bGF0aW9ucyB0byBpdC5cbiAgICAgKlxuICAgICAqIE5vdGUgdGhhdCBpZiB5b3UgZGlzYWJsZSB0aGlzIG1vZGlmaWVyLCB5b3UgbXVzdCBtYWtlIHN1cmUgdGhlIHBvcHBlciBlbGVtZW50XG4gICAgICogaGFzIGl0cyBwb3NpdGlvbiBzZXQgdG8gYGFic29sdXRlYCBiZWZvcmUgUG9wcGVyLmpzIGNhbiBkbyBpdHMgd29yayFcbiAgICAgKlxuICAgICAqIEp1c3QgZGlzYWJsZSB0aGlzIG1vZGlmaWVyIGFuZCBkZWZpbmUgeW91ciBvd24gdG8gYWNoaWV2ZSB0aGUgZGVzaXJlZCBlZmZlY3QuXG4gICAgICpcbiAgICAgKiBAbWVtYmVyb2YgbW9kaWZpZXJzXG4gICAgICogQGlubmVyXG4gICAgICovXG4gICAgYXBwbHlTdHlsZToge1xuICAgICAgLyoqIEBwcm9wIHtudW1iZXJ9IG9yZGVyPTkwMCAtIEluZGV4IHVzZWQgdG8gZGVmaW5lIHRoZSBvcmRlciBvZiBleGVjdXRpb24gKi9cbiAgICAgIG9yZGVyOiA5MDAsXG4gICAgICAvKiogQHByb3Age0Jvb2xlYW59IGVuYWJsZWQ9dHJ1ZSAtIFdoZXRoZXIgdGhlIG1vZGlmaWVyIGlzIGVuYWJsZWQgb3Igbm90ICovXG4gICAgICBlbmFibGVkOiB0cnVlLFxuICAgICAgLyoqIEBwcm9wIHtNb2RpZmllckZufSAqL1xuICAgICAgZm46IGFwcGx5U3R5bGUsXG4gICAgICAvKiogQHByb3Age0Z1bmN0aW9ufSAqL1xuICAgICAgb25Mb2FkOiBhcHBseVN0eWxlT25Mb2FkLFxuICAgICAgLyoqXG4gICAgICAgKiBAZGVwcmVjYXRlZCBzaW5jZSB2ZXJzaW9uIDEuMTAuMCwgdGhlIHByb3BlcnR5IG1vdmVkIHRvIGBjb21wdXRlU3R5bGVgIG1vZGlmaWVyXG4gICAgICAgKiBAcHJvcCB7Qm9vbGVhbn0gZ3B1QWNjZWxlcmF0aW9uPXRydWVcbiAgICAgICAqIElmIHRydWUsIGl0IHVzZXMgdGhlIENTUyAzRCB0cmFuc2Zvcm1hdGlvbiB0byBwb3NpdGlvbiB0aGUgcG9wcGVyLlxuICAgICAgICogT3RoZXJ3aXNlLCBpdCB3aWxsIHVzZSB0aGUgYHRvcGAgYW5kIGBsZWZ0YCBwcm9wZXJ0aWVzXG4gICAgICAgKi9cbiAgICAgIGdwdUFjY2VsZXJhdGlvbjogdW5kZWZpbmVkXG4gICAgfVxuICB9O1xuXG4gIC8qKlxuICAgKiBUaGUgYGRhdGFPYmplY3RgIGlzIGFuIG9iamVjdCBjb250YWluaW5nIGFsbCB0aGUgaW5mb3JtYXRpb24gdXNlZCBieSBQb3BwZXIuanMuXG4gICAqIFRoaXMgb2JqZWN0IGlzIHBhc3NlZCB0byBtb2RpZmllcnMgYW5kIHRvIHRoZSBgb25DcmVhdGVgIGFuZCBgb25VcGRhdGVgIGNhbGxiYWNrcy5cbiAgICogQG5hbWUgZGF0YU9iamVjdFxuICAgKiBAcHJvcGVydHkge09iamVjdH0gZGF0YS5pbnN0YW5jZSBUaGUgUG9wcGVyLmpzIGluc3RhbmNlXG4gICAqIEBwcm9wZXJ0eSB7U3RyaW5nfSBkYXRhLnBsYWNlbWVudCBQbGFjZW1lbnQgYXBwbGllZCB0byBwb3BwZXJcbiAgICogQHByb3BlcnR5IHtTdHJpbmd9IGRhdGEub3JpZ2luYWxQbGFjZW1lbnQgUGxhY2VtZW50IG9yaWdpbmFsbHkgZGVmaW5lZCBvbiBpbml0XG4gICAqIEBwcm9wZXJ0eSB7Qm9vbGVhbn0gZGF0YS5mbGlwcGVkIFRydWUgaWYgcG9wcGVyIGhhcyBiZWVuIGZsaXBwZWQgYnkgZmxpcCBtb2RpZmllclxuICAgKiBAcHJvcGVydHkge0Jvb2xlYW59IGRhdGEuaGlkZSBUcnVlIGlmIHRoZSByZWZlcmVuY2UgZWxlbWVudCBpcyBvdXQgb2YgYm91bmRhcmllcywgdXNlZnVsIHRvIGtub3cgd2hlbiB0byBoaWRlIHRoZSBwb3BwZXJcbiAgICogQHByb3BlcnR5IHtIVE1MRWxlbWVudH0gZGF0YS5hcnJvd0VsZW1lbnQgTm9kZSB1c2VkIGFzIGFycm93IGJ5IGFycm93IG1vZGlmaWVyXG4gICAqIEBwcm9wZXJ0eSB7T2JqZWN0fSBkYXRhLnN0eWxlcyBBbnkgQ1NTIHByb3BlcnR5IGRlZmluZWQgaGVyZSB3aWxsIGJlIGFwcGxpZWQgdG8gdGhlIHBvcHBlci4gSXQgZXhwZWN0cyB0aGUgSmF2YVNjcmlwdCBub21lbmNsYXR1cmUgKGVnLiBgbWFyZ2luQm90dG9tYClcbiAgICogQHByb3BlcnR5IHtPYmplY3R9IGRhdGEuYXJyb3dTdHlsZXMgQW55IENTUyBwcm9wZXJ0eSBkZWZpbmVkIGhlcmUgd2lsbCBiZSBhcHBsaWVkIHRvIHRoZSBwb3BwZXIgYXJyb3cuIEl0IGV4cGVjdHMgdGhlIEphdmFTY3JpcHQgbm9tZW5jbGF0dXJlIChlZy4gYG1hcmdpbkJvdHRvbWApXG4gICAqIEBwcm9wZXJ0eSB7T2JqZWN0fSBkYXRhLmJvdW5kYXJpZXMgT2Zmc2V0cyBvZiB0aGUgcG9wcGVyIGJvdW5kYXJpZXNcbiAgICogQHByb3BlcnR5IHtPYmplY3R9IGRhdGEub2Zmc2V0cyBUaGUgbWVhc3VyZW1lbnRzIG9mIHBvcHBlciwgcmVmZXJlbmNlIGFuZCBhcnJvdyBlbGVtZW50c1xuICAgKiBAcHJvcGVydHkge09iamVjdH0gZGF0YS5vZmZzZXRzLnBvcHBlciBgdG9wYCwgYGxlZnRgLCBgd2lkdGhgLCBgaGVpZ2h0YCB2YWx1ZXNcbiAgICogQHByb3BlcnR5IHtPYmplY3R9IGRhdGEub2Zmc2V0cy5yZWZlcmVuY2UgYHRvcGAsIGBsZWZ0YCwgYHdpZHRoYCwgYGhlaWdodGAgdmFsdWVzXG4gICAqIEBwcm9wZXJ0eSB7T2JqZWN0fSBkYXRhLm9mZnNldHMuYXJyb3ddIGB0b3BgIGFuZCBgbGVmdGAgb2Zmc2V0cywgb25seSBvbmUgb2YgdGhlbSB3aWxsIGJlIGRpZmZlcmVudCBmcm9tIDBcbiAgICovXG5cbiAgLyoqXG4gICAqIERlZmF1bHQgb3B0aW9ucyBwcm92aWRlZCB0byBQb3BwZXIuanMgY29uc3RydWN0b3IuPGJyIC8+XG4gICAqIFRoZXNlIGNhbiBiZSBvdmVycmlkZGVuIHVzaW5nIHRoZSBgb3B0aW9uc2AgYXJndW1lbnQgb2YgUG9wcGVyLmpzLjxiciAvPlxuICAgKiBUbyBvdmVycmlkZSBhbiBvcHRpb24sIHNpbXBseSBwYXNzIGFuIG9iamVjdCB3aXRoIHRoZSBzYW1lXG4gICAqIHN0cnVjdHVyZSBvZiB0aGUgYG9wdGlvbnNgIG9iamVjdCwgYXMgdGhlIDNyZCBhcmd1bWVudC4gRm9yIGV4YW1wbGU6XG4gICAqIGBgYFxuICAgKiBuZXcgUG9wcGVyKHJlZiwgcG9wLCB7XG4gICAqICAgbW9kaWZpZXJzOiB7XG4gICAqICAgICBwcmV2ZW50T3ZlcmZsb3c6IHsgZW5hYmxlZDogZmFsc2UgfVxuICAgKiAgIH1cbiAgICogfSlcbiAgICogYGBgXG4gICAqIEB0eXBlIHtPYmplY3R9XG4gICAqIEBzdGF0aWNcbiAgICogQG1lbWJlcm9mIFBvcHBlclxuICAgKi9cbiAgdmFyIERlZmF1bHRzID0ge1xuICAgIC8qKlxuICAgICAqIFBvcHBlcidzIHBsYWNlbWVudC5cbiAgICAgKiBAcHJvcCB7UG9wcGVyLnBsYWNlbWVudHN9IHBsYWNlbWVudD0nYm90dG9tJ1xuICAgICAqL1xuICAgIHBsYWNlbWVudDogJ2JvdHRvbScsXG5cbiAgICAvKipcbiAgICAgKiBTZXQgdGhpcyB0byB0cnVlIGlmIHlvdSB3YW50IHBvcHBlciB0byBwb3NpdGlvbiBpdCBzZWxmIGluICdmaXhlZCcgbW9kZVxuICAgICAqIEBwcm9wIHtCb29sZWFufSBwb3NpdGlvbkZpeGVkPWZhbHNlXG4gICAgICovXG4gICAgcG9zaXRpb25GaXhlZDogZmFsc2UsXG5cbiAgICAvKipcbiAgICAgKiBXaGV0aGVyIGV2ZW50cyAocmVzaXplLCBzY3JvbGwpIGFyZSBpbml0aWFsbHkgZW5hYmxlZC5cbiAgICAgKiBAcHJvcCB7Qm9vbGVhbn0gZXZlbnRzRW5hYmxlZD10cnVlXG4gICAgICovXG4gICAgZXZlbnRzRW5hYmxlZDogdHJ1ZSxcblxuICAgIC8qKlxuICAgICAqIFNldCB0byB0cnVlIGlmIHlvdSB3YW50IHRvIGF1dG9tYXRpY2FsbHkgcmVtb3ZlIHRoZSBwb3BwZXIgd2hlblxuICAgICAqIHlvdSBjYWxsIHRoZSBgZGVzdHJveWAgbWV0aG9kLlxuICAgICAqIEBwcm9wIHtCb29sZWFufSByZW1vdmVPbkRlc3Ryb3k9ZmFsc2VcbiAgICAgKi9cbiAgICByZW1vdmVPbkRlc3Ryb3k6IGZhbHNlLFxuXG4gICAgLyoqXG4gICAgICogQ2FsbGJhY2sgY2FsbGVkIHdoZW4gdGhlIHBvcHBlciBpcyBjcmVhdGVkLjxiciAvPlxuICAgICAqIEJ5IGRlZmF1bHQsIGl0IGlzIHNldCB0byBuby1vcC48YnIgLz5cbiAgICAgKiBBY2Nlc3MgUG9wcGVyLmpzIGluc3RhbmNlIHdpdGggYGRhdGEuaW5zdGFuY2VgLlxuICAgICAqIEBwcm9wIHtvbkNyZWF0ZX1cbiAgICAgKi9cbiAgICBvbkNyZWF0ZTogZnVuY3Rpb24gb25DcmVhdGUoKSB7fSxcblxuICAgIC8qKlxuICAgICAqIENhbGxiYWNrIGNhbGxlZCB3aGVuIHRoZSBwb3BwZXIgaXMgdXBkYXRlZC4gVGhpcyBjYWxsYmFjayBpcyBub3QgY2FsbGVkXG4gICAgICogb24gdGhlIGluaXRpYWxpemF0aW9uL2NyZWF0aW9uIG9mIHRoZSBwb3BwZXIsIGJ1dCBvbmx5IG9uIHN1YnNlcXVlbnRcbiAgICAgKiB1cGRhdGVzLjxiciAvPlxuICAgICAqIEJ5IGRlZmF1bHQsIGl0IGlzIHNldCB0byBuby1vcC48YnIgLz5cbiAgICAgKiBBY2Nlc3MgUG9wcGVyLmpzIGluc3RhbmNlIHdpdGggYGRhdGEuaW5zdGFuY2VgLlxuICAgICAqIEBwcm9wIHtvblVwZGF0ZX1cbiAgICAgKi9cbiAgICBvblVwZGF0ZTogZnVuY3Rpb24gb25VcGRhdGUoKSB7fSxcblxuICAgIC8qKlxuICAgICAqIExpc3Qgb2YgbW9kaWZpZXJzIHVzZWQgdG8gbW9kaWZ5IHRoZSBvZmZzZXRzIGJlZm9yZSB0aGV5IGFyZSBhcHBsaWVkIHRvIHRoZSBwb3BwZXIuXG4gICAgICogVGhleSBwcm92aWRlIG1vc3Qgb2YgdGhlIGZ1bmN0aW9uYWxpdGllcyBvZiBQb3BwZXIuanMuXG4gICAgICogQHByb3Age21vZGlmaWVyc31cbiAgICAgKi9cbiAgICBtb2RpZmllcnM6IG1vZGlmaWVyc1xuICB9O1xuXG4gIC8qKlxuICAgKiBAY2FsbGJhY2sgb25DcmVhdGVcbiAgICogQHBhcmFtIHtkYXRhT2JqZWN0fSBkYXRhXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAY2FsbGJhY2sgb25VcGRhdGVcbiAgICogQHBhcmFtIHtkYXRhT2JqZWN0fSBkYXRhXG4gICAqL1xuXG4gIC8vIFV0aWxzXG4gIC8vIE1ldGhvZHNcbiAgdmFyIFBvcHBlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IFBvcHBlci5qcyBpbnN0YW5jZS5cbiAgICAgKiBAY2xhc3MgUG9wcGVyXG4gICAgICogQHBhcmFtIHtFbGVtZW50fHJlZmVyZW5jZU9iamVjdH0gcmVmZXJlbmNlIC0gVGhlIHJlZmVyZW5jZSBlbGVtZW50IHVzZWQgdG8gcG9zaXRpb24gdGhlIHBvcHBlclxuICAgICAqIEBwYXJhbSB7RWxlbWVudH0gcG9wcGVyIC0gVGhlIEhUTUwgLyBYTUwgZWxlbWVudCB1c2VkIGFzIHRoZSBwb3BwZXJcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyAtIFlvdXIgY3VzdG9tIG9wdGlvbnMgdG8gb3ZlcnJpZGUgdGhlIG9uZXMgZGVmaW5lZCBpbiBbRGVmYXVsdHNdKCNkZWZhdWx0cylcbiAgICAgKiBAcmV0dXJuIHtPYmplY3R9IGluc3RhbmNlIC0gVGhlIGdlbmVyYXRlZCBQb3BwZXIuanMgaW5zdGFuY2VcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBQb3BwZXIocmVmZXJlbmNlLCBwb3BwZXIpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiB7fTtcbiAgICAgIGNsYXNzQ2FsbENoZWNrKHRoaXMsIFBvcHBlcik7XG5cbiAgICAgIHRoaXMuc2NoZWR1bGVVcGRhdGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoX3RoaXMudXBkYXRlKTtcbiAgICAgIH07XG5cbiAgICAgIC8vIG1ha2UgdXBkYXRlKCkgZGVib3VuY2VkLCBzbyB0aGF0IGl0IG9ubHkgcnVucyBhdCBtb3N0IG9uY2UtcGVyLXRpY2tcbiAgICAgIHRoaXMudXBkYXRlID0gZGVib3VuY2UodGhpcy51cGRhdGUuYmluZCh0aGlzKSk7XG5cbiAgICAgIC8vIHdpdGgge30gd2UgY3JlYXRlIGEgbmV3IG9iamVjdCB3aXRoIHRoZSBvcHRpb25zIGluc2lkZSBpdFxuICAgICAgdGhpcy5vcHRpb25zID0gX2V4dGVuZHMoe30sIFBvcHBlci5EZWZhdWx0cywgb3B0aW9ucyk7XG5cbiAgICAgIC8vIGluaXQgc3RhdGVcbiAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgIGlzRGVzdHJveWVkOiBmYWxzZSxcbiAgICAgICAgaXNDcmVhdGVkOiBmYWxzZSxcbiAgICAgICAgc2Nyb2xsUGFyZW50czogW11cbiAgICAgIH07XG5cbiAgICAgIC8vIGdldCByZWZlcmVuY2UgYW5kIHBvcHBlciBlbGVtZW50cyAoYWxsb3cgalF1ZXJ5IHdyYXBwZXJzKVxuICAgICAgdGhpcy5yZWZlcmVuY2UgPSByZWZlcmVuY2UgJiYgcmVmZXJlbmNlLmpxdWVyeSA/IHJlZmVyZW5jZVswXSA6IHJlZmVyZW5jZTtcbiAgICAgIHRoaXMucG9wcGVyID0gcG9wcGVyICYmIHBvcHBlci5qcXVlcnkgPyBwb3BwZXJbMF0gOiBwb3BwZXI7XG5cbiAgICAgIC8vIERlZXAgbWVyZ2UgbW9kaWZpZXJzIG9wdGlvbnNcbiAgICAgIHRoaXMub3B0aW9ucy5tb2RpZmllcnMgPSB7fTtcbiAgICAgIE9iamVjdC5rZXlzKF9leHRlbmRzKHt9LCBQb3BwZXIuRGVmYXVsdHMubW9kaWZpZXJzLCBvcHRpb25zLm1vZGlmaWVycykpLmZvckVhY2goZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgX3RoaXMub3B0aW9ucy5tb2RpZmllcnNbbmFtZV0gPSBfZXh0ZW5kcyh7fSwgUG9wcGVyLkRlZmF1bHRzLm1vZGlmaWVyc1tuYW1lXSB8fCB7fSwgb3B0aW9ucy5tb2RpZmllcnMgPyBvcHRpb25zLm1vZGlmaWVyc1tuYW1lXSA6IHt9KTtcbiAgICAgIH0pO1xuXG4gICAgICAvLyBSZWZhY3RvcmluZyBtb2RpZmllcnMnIGxpc3QgKE9iamVjdCA9PiBBcnJheSlcbiAgICAgIHRoaXMubW9kaWZpZXJzID0gT2JqZWN0LmtleXModGhpcy5vcHRpb25zLm1vZGlmaWVycykubWFwKGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICAgIHJldHVybiBfZXh0ZW5kcyh7XG4gICAgICAgICAgbmFtZTogbmFtZVxuICAgICAgICB9LCBfdGhpcy5vcHRpb25zLm1vZGlmaWVyc1tuYW1lXSk7XG4gICAgICB9KVxuICAgICAgLy8gc29ydCB0aGUgbW9kaWZpZXJzIGJ5IG9yZGVyXG4gICAgICAuc29ydChmdW5jdGlvbiAoYSwgYikge1xuICAgICAgICByZXR1cm4gYS5vcmRlciAtIGIub3JkZXI7XG4gICAgICB9KTtcblxuICAgICAgLy8gbW9kaWZpZXJzIGhhdmUgdGhlIGFiaWxpdHkgdG8gZXhlY3V0ZSBhcmJpdHJhcnkgY29kZSB3aGVuIFBvcHBlci5qcyBnZXQgaW5pdGVkXG4gICAgICAvLyBzdWNoIGNvZGUgaXMgZXhlY3V0ZWQgaW4gdGhlIHNhbWUgb3JkZXIgb2YgaXRzIG1vZGlmaWVyXG4gICAgICAvLyB0aGV5IGNvdWxkIGFkZCBuZXcgcHJvcGVydGllcyB0byB0aGVpciBvcHRpb25zIGNvbmZpZ3VyYXRpb25cbiAgICAgIC8vIEJFIEFXQVJFOiBkb24ndCBhZGQgb3B0aW9ucyB0byBgb3B0aW9ucy5tb2RpZmllcnMubmFtZWAgYnV0IHRvIGBtb2RpZmllck9wdGlvbnNgIVxuICAgICAgdGhpcy5tb2RpZmllcnMuZm9yRWFjaChmdW5jdGlvbiAobW9kaWZpZXJPcHRpb25zKSB7XG4gICAgICAgIGlmIChtb2RpZmllck9wdGlvbnMuZW5hYmxlZCAmJiBpc0Z1bmN0aW9uKG1vZGlmaWVyT3B0aW9ucy5vbkxvYWQpKSB7XG4gICAgICAgICAgbW9kaWZpZXJPcHRpb25zLm9uTG9hZChfdGhpcy5yZWZlcmVuY2UsIF90aGlzLnBvcHBlciwgX3RoaXMub3B0aW9ucywgbW9kaWZpZXJPcHRpb25zLCBfdGhpcy5zdGF0ZSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICAvLyBmaXJlIHRoZSBmaXJzdCB1cGRhdGUgdG8gcG9zaXRpb24gdGhlIHBvcHBlciBpbiB0aGUgcmlnaHQgcGxhY2VcbiAgICAgIHRoaXMudXBkYXRlKCk7XG5cbiAgICAgIHZhciBldmVudHNFbmFibGVkID0gdGhpcy5vcHRpb25zLmV2ZW50c0VuYWJsZWQ7XG4gICAgICBpZiAoZXZlbnRzRW5hYmxlZCkge1xuICAgICAgICAvLyBzZXR1cCBldmVudCBsaXN0ZW5lcnMsIHRoZXkgd2lsbCB0YWtlIGNhcmUgb2YgdXBkYXRlIHRoZSBwb3NpdGlvbiBpbiBzcGVjaWZpYyBzaXR1YXRpb25zXG4gICAgICAgIHRoaXMuZW5hYmxlRXZlbnRMaXN0ZW5lcnMoKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5zdGF0ZS5ldmVudHNFbmFibGVkID0gZXZlbnRzRW5hYmxlZDtcbiAgICB9XG5cbiAgICAvLyBXZSBjYW4ndCB1c2UgY2xhc3MgcHJvcGVydGllcyBiZWNhdXNlIHRoZXkgZG9uJ3QgZ2V0IGxpc3RlZCBpbiB0aGVcbiAgICAvLyBjbGFzcyBwcm90b3R5cGUgYW5kIGJyZWFrIHN0dWZmIGxpa2UgU2lub24gc3R1YnNcblxuXG4gICAgY3JlYXRlQ2xhc3MoUG9wcGVyLCBbe1xuICAgICAga2V5OiAndXBkYXRlJyxcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGUkJDEoKSB7XG4gICAgICAgIHJldHVybiB1cGRhdGUuY2FsbCh0aGlzKTtcbiAgICAgIH1cbiAgICB9LCB7XG4gICAgICBrZXk6ICdkZXN0cm95JyxcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBkZXN0cm95JCQxKCkge1xuICAgICAgICByZXR1cm4gZGVzdHJveS5jYWxsKHRoaXMpO1xuICAgICAgfVxuICAgIH0sIHtcbiAgICAgIGtleTogJ2VuYWJsZUV2ZW50TGlzdGVuZXJzJyxcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBlbmFibGVFdmVudExpc3RlbmVycyQkMSgpIHtcbiAgICAgICAgcmV0dXJuIGVuYWJsZUV2ZW50TGlzdGVuZXJzLmNhbGwodGhpcyk7XG4gICAgICB9XG4gICAgfSwge1xuICAgICAga2V5OiAnZGlzYWJsZUV2ZW50TGlzdGVuZXJzJyxcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBkaXNhYmxlRXZlbnRMaXN0ZW5lcnMkJDEoKSB7XG4gICAgICAgIHJldHVybiBkaXNhYmxlRXZlbnRMaXN0ZW5lcnMuY2FsbCh0aGlzKTtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBTY2hlZHVsZXMgYW4gdXBkYXRlLiBJdCB3aWxsIHJ1biBvbiB0aGUgbmV4dCBVSSB1cGRhdGUgYXZhaWxhYmxlLlxuICAgICAgICogQG1ldGhvZCBzY2hlZHVsZVVwZGF0ZVxuICAgICAgICogQG1lbWJlcm9mIFBvcHBlclxuICAgICAgICovXG5cblxuICAgICAgLyoqXG4gICAgICAgKiBDb2xsZWN0aW9uIG9mIHV0aWxpdGllcyB1c2VmdWwgd2hlbiB3cml0aW5nIGN1c3RvbSBtb2RpZmllcnMuXG4gICAgICAgKiBTdGFydGluZyBmcm9tIHZlcnNpb24gMS43LCB0aGlzIG1ldGhvZCBpcyBhdmFpbGFibGUgb25seSBpZiB5b3VcbiAgICAgICAqIGluY2x1ZGUgYHBvcHBlci11dGlscy5qc2AgYmVmb3JlIGBwb3BwZXIuanNgLlxuICAgICAgICpcbiAgICAgICAqICoqREVQUkVDQVRJT04qKjogVGhpcyB3YXkgdG8gYWNjZXNzIFBvcHBlclV0aWxzIGlzIGRlcHJlY2F0ZWRcbiAgICAgICAqIGFuZCB3aWxsIGJlIHJlbW92ZWQgaW4gdjIhIFVzZSB0aGUgUG9wcGVyVXRpbHMgbW9kdWxlIGRpcmVjdGx5IGluc3RlYWQuXG4gICAgICAgKiBEdWUgdG8gdGhlIGhpZ2ggaW5zdGFiaWxpdHkgb2YgdGhlIG1ldGhvZHMgY29udGFpbmVkIGluIFV0aWxzLCB3ZSBjYW4ndFxuICAgICAgICogZ3VhcmFudGVlIHRoZW0gdG8gZm9sbG93IHNlbXZlci4gVXNlIHRoZW0gYXQgeW91ciBvd24gcmlzayFcbiAgICAgICAqIEBzdGF0aWNcbiAgICAgICAqIEBwcml2YXRlXG4gICAgICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgICAgICogQGRlcHJlY2F0ZWQgc2luY2UgdmVyc2lvbiAxLjhcbiAgICAgICAqIEBtZW1iZXIgVXRpbHNcbiAgICAgICAqIEBtZW1iZXJvZiBQb3BwZXJcbiAgICAgICAqL1xuXG4gICAgfV0pO1xuICAgIHJldHVybiBQb3BwZXI7XG4gIH0oKTtcblxuICAvKipcbiAgICogVGhlIGByZWZlcmVuY2VPYmplY3RgIGlzIGFuIG9iamVjdCB0aGF0IHByb3ZpZGVzIGFuIGludGVyZmFjZSBjb21wYXRpYmxlIHdpdGggUG9wcGVyLmpzXG4gICAqIGFuZCBsZXRzIHlvdSB1c2UgaXQgYXMgcmVwbGFjZW1lbnQgb2YgYSByZWFsIERPTSBub2RlLjxiciAvPlxuICAgKiBZb3UgY2FuIHVzZSB0aGlzIG1ldGhvZCB0byBwb3NpdGlvbiBhIHBvcHBlciByZWxhdGl2ZWx5IHRvIGEgc2V0IG9mIGNvb3JkaW5hdGVzXG4gICAqIGluIGNhc2UgeW91IGRvbid0IGhhdmUgYSBET00gbm9kZSB0byB1c2UgYXMgcmVmZXJlbmNlLlxuICAgKlxuICAgKiBgYGBcbiAgICogbmV3IFBvcHBlcihyZWZlcmVuY2VPYmplY3QsIHBvcHBlck5vZGUpO1xuICAgKiBgYGBcbiAgICpcbiAgICogTkI6IFRoaXMgZmVhdHVyZSBpc24ndCBzdXBwb3J0ZWQgaW4gSW50ZXJuZXQgRXhwbG9yZXIgMTAuXG4gICAqIEBuYW1lIHJlZmVyZW5jZU9iamVjdFxuICAgKiBAcHJvcGVydHkge0Z1bmN0aW9ufSBkYXRhLmdldEJvdW5kaW5nQ2xpZW50UmVjdFxuICAgKiBBIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhIHNldCBvZiBjb29yZGluYXRlcyBjb21wYXRpYmxlIHdpdGggdGhlIG5hdGl2ZSBgZ2V0Qm91bmRpbmdDbGllbnRSZWN0YCBtZXRob2QuXG4gICAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBkYXRhLmNsaWVudFdpZHRoXG4gICAqIEFuIEVTNiBnZXR0ZXIgdGhhdCB3aWxsIHJldHVybiB0aGUgd2lkdGggb2YgdGhlIHZpcnR1YWwgcmVmZXJlbmNlIGVsZW1lbnQuXG4gICAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBkYXRhLmNsaWVudEhlaWdodFxuICAgKiBBbiBFUzYgZ2V0dGVyIHRoYXQgd2lsbCByZXR1cm4gdGhlIGhlaWdodCBvZiB0aGUgdmlydHVhbCByZWZlcmVuY2UgZWxlbWVudC5cbiAgICovXG5cblxuICBQb3BwZXIuVXRpbHMgPSAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cgOiBnbG9iYWwpLlBvcHBlclV0aWxzO1xuICBQb3BwZXIucGxhY2VtZW50cyA9IHBsYWNlbWVudHM7XG4gIFBvcHBlci5EZWZhdWx0cyA9IERlZmF1bHRzO1xuXG4gIC8qKlxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICogQ29uc3RhbnRzXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKi9cblxuICB2YXIgTkFNRSQ0ID0gJ2Ryb3Bkb3duJztcbiAgdmFyIFZFUlNJT04kNCA9ICc0LjQuMSc7XG4gIHZhciBEQVRBX0tFWSQ0ID0gJ2JzLmRyb3Bkb3duJztcbiAgdmFyIEVWRU5UX0tFWSQ0ID0gXCIuXCIgKyBEQVRBX0tFWSQ0O1xuICB2YXIgREFUQV9BUElfS0VZJDQgPSAnLmRhdGEtYXBpJztcbiAgdmFyIEpRVUVSWV9OT19DT05GTElDVCQ0ID0gJC5mbltOQU1FJDRdO1xuICB2YXIgRVNDQVBFX0tFWUNPREUgPSAyNzsgLy8gS2V5Ym9hcmRFdmVudC53aGljaCB2YWx1ZSBmb3IgRXNjYXBlIChFc2MpIGtleVxuXG4gIHZhciBTUEFDRV9LRVlDT0RFID0gMzI7IC8vIEtleWJvYXJkRXZlbnQud2hpY2ggdmFsdWUgZm9yIHNwYWNlIGtleVxuXG4gIHZhciBUQUJfS0VZQ09ERSA9IDk7IC8vIEtleWJvYXJkRXZlbnQud2hpY2ggdmFsdWUgZm9yIHRhYiBrZXlcblxuICB2YXIgQVJST1dfVVBfS0VZQ09ERSA9IDM4OyAvLyBLZXlib2FyZEV2ZW50LndoaWNoIHZhbHVlIGZvciB1cCBhcnJvdyBrZXlcblxuICB2YXIgQVJST1dfRE9XTl9LRVlDT0RFID0gNDA7IC8vIEtleWJvYXJkRXZlbnQud2hpY2ggdmFsdWUgZm9yIGRvd24gYXJyb3cga2V5XG5cbiAgdmFyIFJJR0hUX01PVVNFX0JVVFRPTl9XSElDSCA9IDM7IC8vIE1vdXNlRXZlbnQud2hpY2ggdmFsdWUgZm9yIHRoZSByaWdodCBidXR0b24gKGFzc3VtaW5nIGEgcmlnaHQtaGFuZGVkIG1vdXNlKVxuXG4gIHZhciBSRUdFWFBfS0VZRE9XTiA9IG5ldyBSZWdFeHAoQVJST1dfVVBfS0VZQ09ERSArIFwifFwiICsgQVJST1dfRE9XTl9LRVlDT0RFICsgXCJ8XCIgKyBFU0NBUEVfS0VZQ09ERSk7XG4gIHZhciBFdmVudCQ0ID0ge1xuICAgIEhJREU6IFwiaGlkZVwiICsgRVZFTlRfS0VZJDQsXG4gICAgSElEREVOOiBcImhpZGRlblwiICsgRVZFTlRfS0VZJDQsXG4gICAgU0hPVzogXCJzaG93XCIgKyBFVkVOVF9LRVkkNCxcbiAgICBTSE9XTjogXCJzaG93blwiICsgRVZFTlRfS0VZJDQsXG4gICAgQ0xJQ0s6IFwiY2xpY2tcIiArIEVWRU5UX0tFWSQ0LFxuICAgIENMSUNLX0RBVEFfQVBJOiBcImNsaWNrXCIgKyBFVkVOVF9LRVkkNCArIERBVEFfQVBJX0tFWSQ0LFxuICAgIEtFWURPV05fREFUQV9BUEk6IFwia2V5ZG93blwiICsgRVZFTlRfS0VZJDQgKyBEQVRBX0FQSV9LRVkkNCxcbiAgICBLRVlVUF9EQVRBX0FQSTogXCJrZXl1cFwiICsgRVZFTlRfS0VZJDQgKyBEQVRBX0FQSV9LRVkkNFxuICB9O1xuICB2YXIgQ2xhc3NOYW1lJDQgPSB7XG4gICAgRElTQUJMRUQ6ICdkaXNhYmxlZCcsXG4gICAgU0hPVzogJ3Nob3cnLFxuICAgIERST1BVUDogJ2Ryb3B1cCcsXG4gICAgRFJPUFJJR0hUOiAnZHJvcHJpZ2h0JyxcbiAgICBEUk9QTEVGVDogJ2Ryb3BsZWZ0JyxcbiAgICBNRU5VUklHSFQ6ICdkcm9wZG93bi1tZW51LXJpZ2h0JyxcbiAgICBNRU5VTEVGVDogJ2Ryb3Bkb3duLW1lbnUtbGVmdCcsXG4gICAgUE9TSVRJT05fU1RBVElDOiAncG9zaXRpb24tc3RhdGljJ1xuICB9O1xuICB2YXIgU2VsZWN0b3IkNCA9IHtcbiAgICBEQVRBX1RPR0dMRTogJ1tkYXRhLXRvZ2dsZT1cImRyb3Bkb3duXCJdJyxcbiAgICBGT1JNX0NISUxEOiAnLmRyb3Bkb3duIGZvcm0nLFxuICAgIE1FTlU6ICcuZHJvcGRvd24tbWVudScsXG4gICAgTkFWQkFSX05BVjogJy5uYXZiYXItbmF2JyxcbiAgICBWSVNJQkxFX0lURU1TOiAnLmRyb3Bkb3duLW1lbnUgLmRyb3Bkb3duLWl0ZW06bm90KC5kaXNhYmxlZCk6bm90KDpkaXNhYmxlZCknXG4gIH07XG4gIHZhciBBdHRhY2htZW50TWFwID0ge1xuICAgIFRPUDogJ3RvcC1zdGFydCcsXG4gICAgVE9QRU5EOiAndG9wLWVuZCcsXG4gICAgQk9UVE9NOiAnYm90dG9tLXN0YXJ0JyxcbiAgICBCT1RUT01FTkQ6ICdib3R0b20tZW5kJyxcbiAgICBSSUdIVDogJ3JpZ2h0LXN0YXJ0JyxcbiAgICBSSUdIVEVORDogJ3JpZ2h0LWVuZCcsXG4gICAgTEVGVDogJ2xlZnQtc3RhcnQnLFxuICAgIExFRlRFTkQ6ICdsZWZ0LWVuZCdcbiAgfTtcbiAgdmFyIERlZmF1bHQkMiA9IHtcbiAgICBvZmZzZXQ6IDAsXG4gICAgZmxpcDogdHJ1ZSxcbiAgICBib3VuZGFyeTogJ3Njcm9sbFBhcmVudCcsXG4gICAgcmVmZXJlbmNlOiAndG9nZ2xlJyxcbiAgICBkaXNwbGF5OiAnZHluYW1pYycsXG4gICAgcG9wcGVyQ29uZmlnOiBudWxsXG4gIH07XG4gIHZhciBEZWZhdWx0VHlwZSQyID0ge1xuICAgIG9mZnNldDogJyhudW1iZXJ8c3RyaW5nfGZ1bmN0aW9uKScsXG4gICAgZmxpcDogJ2Jvb2xlYW4nLFxuICAgIGJvdW5kYXJ5OiAnKHN0cmluZ3xlbGVtZW50KScsXG4gICAgcmVmZXJlbmNlOiAnKHN0cmluZ3xlbGVtZW50KScsXG4gICAgZGlzcGxheTogJ3N0cmluZycsXG4gICAgcG9wcGVyQ29uZmlnOiAnKG51bGx8b2JqZWN0KSdcbiAgfTtcbiAgLyoqXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKiBDbGFzcyBEZWZpbml0aW9uXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKi9cblxuICB2YXIgRHJvcGRvd24gPVxuICAvKiNfX1BVUkVfXyovXG4gIGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBEcm9wZG93bihlbGVtZW50LCBjb25maWcpIHtcbiAgICAgIHRoaXMuX2VsZW1lbnQgPSBlbGVtZW50O1xuICAgICAgdGhpcy5fcG9wcGVyID0gbnVsbDtcbiAgICAgIHRoaXMuX2NvbmZpZyA9IHRoaXMuX2dldENvbmZpZyhjb25maWcpO1xuICAgICAgdGhpcy5fbWVudSA9IHRoaXMuX2dldE1lbnVFbGVtZW50KCk7XG4gICAgICB0aGlzLl9pbk5hdmJhciA9IHRoaXMuX2RldGVjdE5hdmJhcigpO1xuXG4gICAgICB0aGlzLl9hZGRFdmVudExpc3RlbmVycygpO1xuICAgIH0gLy8gR2V0dGVyc1xuXG5cbiAgICB2YXIgX3Byb3RvID0gRHJvcGRvd24ucHJvdG90eXBlO1xuXG4gICAgLy8gUHVibGljXG4gICAgX3Byb3RvLnRvZ2dsZSA9IGZ1bmN0aW9uIHRvZ2dsZSgpIHtcbiAgICAgIGlmICh0aGlzLl9lbGVtZW50LmRpc2FibGVkIHx8ICQodGhpcy5fZWxlbWVudCkuaGFzQ2xhc3MoQ2xhc3NOYW1lJDQuRElTQUJMRUQpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIGlzQWN0aXZlID0gJCh0aGlzLl9tZW51KS5oYXNDbGFzcyhDbGFzc05hbWUkNC5TSE9XKTtcblxuICAgICAgRHJvcGRvd24uX2NsZWFyTWVudXMoKTtcblxuICAgICAgaWYgKGlzQWN0aXZlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdGhpcy5zaG93KHRydWUpO1xuICAgIH07XG5cbiAgICBfcHJvdG8uc2hvdyA9IGZ1bmN0aW9uIHNob3codXNlUG9wcGVyKSB7XG4gICAgICBpZiAodXNlUG9wcGVyID09PSB2b2lkIDApIHtcbiAgICAgICAgdXNlUG9wcGVyID0gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLl9lbGVtZW50LmRpc2FibGVkIHx8ICQodGhpcy5fZWxlbWVudCkuaGFzQ2xhc3MoQ2xhc3NOYW1lJDQuRElTQUJMRUQpIHx8ICQodGhpcy5fbWVudSkuaGFzQ2xhc3MoQ2xhc3NOYW1lJDQuU0hPVykpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB2YXIgcmVsYXRlZFRhcmdldCA9IHtcbiAgICAgICAgcmVsYXRlZFRhcmdldDogdGhpcy5fZWxlbWVudFxuICAgICAgfTtcbiAgICAgIHZhciBzaG93RXZlbnQgPSAkLkV2ZW50KEV2ZW50JDQuU0hPVywgcmVsYXRlZFRhcmdldCk7XG5cbiAgICAgIHZhciBwYXJlbnQgPSBEcm9wZG93bi5fZ2V0UGFyZW50RnJvbUVsZW1lbnQodGhpcy5fZWxlbWVudCk7XG5cbiAgICAgICQocGFyZW50KS50cmlnZ2VyKHNob3dFdmVudCk7XG5cbiAgICAgIGlmIChzaG93RXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfSAvLyBEaXNhYmxlIHRvdGFsbHkgUG9wcGVyLmpzIGZvciBEcm9wZG93biBpbiBOYXZiYXJcblxuXG4gICAgICBpZiAoIXRoaXMuX2luTmF2YmFyICYmIHVzZVBvcHBlcikge1xuICAgICAgICAvKipcbiAgICAgICAgICogQ2hlY2sgZm9yIFBvcHBlciBkZXBlbmRlbmN5XG4gICAgICAgICAqIFBvcHBlciAtIGh0dHBzOi8vcG9wcGVyLmpzLm9yZ1xuICAgICAgICAgKi9cbiAgICAgICAgaWYgKHR5cGVvZiBQb3BwZXIgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQm9vdHN0cmFwXFwncyBkcm9wZG93bnMgcmVxdWlyZSBQb3BwZXIuanMgKGh0dHBzOi8vcG9wcGVyLmpzLm9yZy8pJyk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgcmVmZXJlbmNlRWxlbWVudCA9IHRoaXMuX2VsZW1lbnQ7XG5cbiAgICAgICAgaWYgKHRoaXMuX2NvbmZpZy5yZWZlcmVuY2UgPT09ICdwYXJlbnQnKSB7XG4gICAgICAgICAgcmVmZXJlbmNlRWxlbWVudCA9IHBhcmVudDtcbiAgICAgICAgfSBlbHNlIGlmIChVdGlsLmlzRWxlbWVudCh0aGlzLl9jb25maWcucmVmZXJlbmNlKSkge1xuICAgICAgICAgIHJlZmVyZW5jZUVsZW1lbnQgPSB0aGlzLl9jb25maWcucmVmZXJlbmNlOyAvLyBDaGVjayBpZiBpdCdzIGpRdWVyeSBlbGVtZW50XG5cbiAgICAgICAgICBpZiAodHlwZW9mIHRoaXMuX2NvbmZpZy5yZWZlcmVuY2UuanF1ZXJ5ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgcmVmZXJlbmNlRWxlbWVudCA9IHRoaXMuX2NvbmZpZy5yZWZlcmVuY2VbMF07XG4gICAgICAgICAgfVxuICAgICAgICB9IC8vIElmIGJvdW5kYXJ5IGlzIG5vdCBgc2Nyb2xsUGFyZW50YCwgdGhlbiBzZXQgcG9zaXRpb24gdG8gYHN0YXRpY2BcbiAgICAgICAgLy8gdG8gYWxsb3cgdGhlIG1lbnUgdG8gXCJlc2NhcGVcIiB0aGUgc2Nyb2xsIHBhcmVudCdzIGJvdW5kYXJpZXNcbiAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2lzc3Vlcy8yNDI1MVxuXG5cbiAgICAgICAgaWYgKHRoaXMuX2NvbmZpZy5ib3VuZGFyeSAhPT0gJ3Njcm9sbFBhcmVudCcpIHtcbiAgICAgICAgICAkKHBhcmVudCkuYWRkQ2xhc3MoQ2xhc3NOYW1lJDQuUE9TSVRJT05fU1RBVElDKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuX3BvcHBlciA9IG5ldyBQb3BwZXIocmVmZXJlbmNlRWxlbWVudCwgdGhpcy5fbWVudSwgdGhpcy5fZ2V0UG9wcGVyQ29uZmlnKCkpO1xuICAgICAgfSAvLyBJZiB0aGlzIGlzIGEgdG91Y2gtZW5hYmxlZCBkZXZpY2Ugd2UgYWRkIGV4dHJhXG4gICAgICAvLyBlbXB0eSBtb3VzZW92ZXIgbGlzdGVuZXJzIHRvIHRoZSBib2R5J3MgaW1tZWRpYXRlIGNoaWxkcmVuO1xuICAgICAgLy8gb25seSBuZWVkZWQgYmVjYXVzZSBvZiBicm9rZW4gZXZlbnQgZGVsZWdhdGlvbiBvbiBpT1NcbiAgICAgIC8vIGh0dHBzOi8vd3d3LnF1aXJrc21vZGUub3JnL2Jsb2cvYXJjaGl2ZXMvMjAxNC8wMi9tb3VzZV9ldmVudF9idWIuaHRtbFxuXG5cbiAgICAgIGlmICgnb250b3VjaHN0YXJ0JyBpbiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQgJiYgJChwYXJlbnQpLmNsb3Nlc3QoU2VsZWN0b3IkNC5OQVZCQVJfTkFWKS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgJChkb2N1bWVudC5ib2R5KS5jaGlsZHJlbigpLm9uKCdtb3VzZW92ZXInLCBudWxsLCAkLm5vb3ApO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl9lbGVtZW50LmZvY3VzKCk7XG5cbiAgICAgIHRoaXMuX2VsZW1lbnQuc2V0QXR0cmlidXRlKCdhcmlhLWV4cGFuZGVkJywgdHJ1ZSk7XG5cbiAgICAgICQodGhpcy5fbWVudSkudG9nZ2xlQ2xhc3MoQ2xhc3NOYW1lJDQuU0hPVyk7XG4gICAgICAkKHBhcmVudCkudG9nZ2xlQ2xhc3MoQ2xhc3NOYW1lJDQuU0hPVykudHJpZ2dlcigkLkV2ZW50KEV2ZW50JDQuU0hPV04sIHJlbGF0ZWRUYXJnZXQpKTtcbiAgICB9O1xuXG4gICAgX3Byb3RvLmhpZGUgPSBmdW5jdGlvbiBoaWRlKCkge1xuICAgICAgaWYgKHRoaXMuX2VsZW1lbnQuZGlzYWJsZWQgfHwgJCh0aGlzLl9lbGVtZW50KS5oYXNDbGFzcyhDbGFzc05hbWUkNC5ESVNBQkxFRCkgfHwgISQodGhpcy5fbWVudSkuaGFzQ2xhc3MoQ2xhc3NOYW1lJDQuU0hPVykpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB2YXIgcmVsYXRlZFRhcmdldCA9IHtcbiAgICAgICAgcmVsYXRlZFRhcmdldDogdGhpcy5fZWxlbWVudFxuICAgICAgfTtcbiAgICAgIHZhciBoaWRlRXZlbnQgPSAkLkV2ZW50KEV2ZW50JDQuSElERSwgcmVsYXRlZFRhcmdldCk7XG5cbiAgICAgIHZhciBwYXJlbnQgPSBEcm9wZG93bi5fZ2V0UGFyZW50RnJvbUVsZW1lbnQodGhpcy5fZWxlbWVudCk7XG5cbiAgICAgICQocGFyZW50KS50cmlnZ2VyKGhpZGVFdmVudCk7XG5cbiAgICAgIGlmIChoaWRlRXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5fcG9wcGVyKSB7XG4gICAgICAgIHRoaXMuX3BvcHBlci5kZXN0cm95KCk7XG4gICAgICB9XG5cbiAgICAgICQodGhpcy5fbWVudSkudG9nZ2xlQ2xhc3MoQ2xhc3NOYW1lJDQuU0hPVyk7XG4gICAgICAkKHBhcmVudCkudG9nZ2xlQ2xhc3MoQ2xhc3NOYW1lJDQuU0hPVykudHJpZ2dlcigkLkV2ZW50KEV2ZW50JDQuSElEREVOLCByZWxhdGVkVGFyZ2V0KSk7XG4gICAgfTtcblxuICAgIF9wcm90by5kaXNwb3NlID0gZnVuY3Rpb24gZGlzcG9zZSgpIHtcbiAgICAgICQucmVtb3ZlRGF0YSh0aGlzLl9lbGVtZW50LCBEQVRBX0tFWSQ0KTtcbiAgICAgICQodGhpcy5fZWxlbWVudCkub2ZmKEVWRU5UX0tFWSQ0KTtcbiAgICAgIHRoaXMuX2VsZW1lbnQgPSBudWxsO1xuICAgICAgdGhpcy5fbWVudSA9IG51bGw7XG5cbiAgICAgIGlmICh0aGlzLl9wb3BwZXIgIT09IG51bGwpIHtcbiAgICAgICAgdGhpcy5fcG9wcGVyLmRlc3Ryb3koKTtcblxuICAgICAgICB0aGlzLl9wb3BwZXIgPSBudWxsO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfcHJvdG8udXBkYXRlID0gZnVuY3Rpb24gdXBkYXRlKCkge1xuICAgICAgdGhpcy5faW5OYXZiYXIgPSB0aGlzLl9kZXRlY3ROYXZiYXIoKTtcblxuICAgICAgaWYgKHRoaXMuX3BvcHBlciAhPT0gbnVsbCkge1xuICAgICAgICB0aGlzLl9wb3BwZXIuc2NoZWR1bGVVcGRhdGUoKTtcbiAgICAgIH1cbiAgICB9IC8vIFByaXZhdGVcbiAgICA7XG5cbiAgICBfcHJvdG8uX2FkZEV2ZW50TGlzdGVuZXJzID0gZnVuY3Rpb24gX2FkZEV2ZW50TGlzdGVuZXJzKCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgJCh0aGlzLl9lbGVtZW50KS5vbihFdmVudCQ0LkNMSUNLLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cbiAgICAgICAgX3RoaXMudG9nZ2xlKCk7XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgX3Byb3RvLl9nZXRDb25maWcgPSBmdW5jdGlvbiBfZ2V0Q29uZmlnKGNvbmZpZykge1xuICAgICAgY29uZmlnID0gX29iamVjdFNwcmVhZDIoe30sIHRoaXMuY29uc3RydWN0b3IuRGVmYXVsdCwge30sICQodGhpcy5fZWxlbWVudCkuZGF0YSgpLCB7fSwgY29uZmlnKTtcbiAgICAgIFV0aWwudHlwZUNoZWNrQ29uZmlnKE5BTUUkNCwgY29uZmlnLCB0aGlzLmNvbnN0cnVjdG9yLkRlZmF1bHRUeXBlKTtcbiAgICAgIHJldHVybiBjb25maWc7XG4gICAgfTtcblxuICAgIF9wcm90by5fZ2V0TWVudUVsZW1lbnQgPSBmdW5jdGlvbiBfZ2V0TWVudUVsZW1lbnQoKSB7XG4gICAgICBpZiAoIXRoaXMuX21lbnUpIHtcbiAgICAgICAgdmFyIHBhcmVudCA9IERyb3Bkb3duLl9nZXRQYXJlbnRGcm9tRWxlbWVudCh0aGlzLl9lbGVtZW50KTtcblxuICAgICAgICBpZiAocGFyZW50KSB7XG4gICAgICAgICAgdGhpcy5fbWVudSA9IHBhcmVudC5xdWVyeVNlbGVjdG9yKFNlbGVjdG9yJDQuTUVOVSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMuX21lbnU7XG4gICAgfTtcblxuICAgIF9wcm90by5fZ2V0UGxhY2VtZW50ID0gZnVuY3Rpb24gX2dldFBsYWNlbWVudCgpIHtcbiAgICAgIHZhciAkcGFyZW50RHJvcGRvd24gPSAkKHRoaXMuX2VsZW1lbnQucGFyZW50Tm9kZSk7XG4gICAgICB2YXIgcGxhY2VtZW50ID0gQXR0YWNobWVudE1hcC5CT1RUT007IC8vIEhhbmRsZSBkcm9wdXBcblxuICAgICAgaWYgKCRwYXJlbnREcm9wZG93bi5oYXNDbGFzcyhDbGFzc05hbWUkNC5EUk9QVVApKSB7XG4gICAgICAgIHBsYWNlbWVudCA9IEF0dGFjaG1lbnRNYXAuVE9QO1xuXG4gICAgICAgIGlmICgkKHRoaXMuX21lbnUpLmhhc0NsYXNzKENsYXNzTmFtZSQ0Lk1FTlVSSUdIVCkpIHtcbiAgICAgICAgICBwbGFjZW1lbnQgPSBBdHRhY2htZW50TWFwLlRPUEVORDtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmICgkcGFyZW50RHJvcGRvd24uaGFzQ2xhc3MoQ2xhc3NOYW1lJDQuRFJPUFJJR0hUKSkge1xuICAgICAgICBwbGFjZW1lbnQgPSBBdHRhY2htZW50TWFwLlJJR0hUO1xuICAgICAgfSBlbHNlIGlmICgkcGFyZW50RHJvcGRvd24uaGFzQ2xhc3MoQ2xhc3NOYW1lJDQuRFJPUExFRlQpKSB7XG4gICAgICAgIHBsYWNlbWVudCA9IEF0dGFjaG1lbnRNYXAuTEVGVDtcbiAgICAgIH0gZWxzZSBpZiAoJCh0aGlzLl9tZW51KS5oYXNDbGFzcyhDbGFzc05hbWUkNC5NRU5VUklHSFQpKSB7XG4gICAgICAgIHBsYWNlbWVudCA9IEF0dGFjaG1lbnRNYXAuQk9UVE9NRU5EO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcGxhY2VtZW50O1xuICAgIH07XG5cbiAgICBfcHJvdG8uX2RldGVjdE5hdmJhciA9IGZ1bmN0aW9uIF9kZXRlY3ROYXZiYXIoKSB7XG4gICAgICByZXR1cm4gJCh0aGlzLl9lbGVtZW50KS5jbG9zZXN0KCcubmF2YmFyJykubGVuZ3RoID4gMDtcbiAgICB9O1xuXG4gICAgX3Byb3RvLl9nZXRPZmZzZXQgPSBmdW5jdGlvbiBfZ2V0T2Zmc2V0KCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHZhciBvZmZzZXQgPSB7fTtcblxuICAgICAgaWYgKHR5cGVvZiB0aGlzLl9jb25maWcub2Zmc2V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIG9mZnNldC5mbiA9IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgZGF0YS5vZmZzZXRzID0gX29iamVjdFNwcmVhZDIoe30sIGRhdGEub2Zmc2V0cywge30sIF90aGlzMi5fY29uZmlnLm9mZnNldChkYXRhLm9mZnNldHMsIF90aGlzMi5fZWxlbWVudCkgfHwge30pO1xuICAgICAgICAgIHJldHVybiBkYXRhO1xuICAgICAgICB9O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb2Zmc2V0Lm9mZnNldCA9IHRoaXMuX2NvbmZpZy5vZmZzZXQ7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBvZmZzZXQ7XG4gICAgfTtcblxuICAgIF9wcm90by5fZ2V0UG9wcGVyQ29uZmlnID0gZnVuY3Rpb24gX2dldFBvcHBlckNvbmZpZygpIHtcbiAgICAgIHZhciBwb3BwZXJDb25maWcgPSB7XG4gICAgICAgIHBsYWNlbWVudDogdGhpcy5fZ2V0UGxhY2VtZW50KCksXG4gICAgICAgIG1vZGlmaWVyczoge1xuICAgICAgICAgIG9mZnNldDogdGhpcy5fZ2V0T2Zmc2V0KCksXG4gICAgICAgICAgZmxpcDoge1xuICAgICAgICAgICAgZW5hYmxlZDogdGhpcy5fY29uZmlnLmZsaXBcbiAgICAgICAgICB9LFxuICAgICAgICAgIHByZXZlbnRPdmVyZmxvdzoge1xuICAgICAgICAgICAgYm91bmRhcmllc0VsZW1lbnQ6IHRoaXMuX2NvbmZpZy5ib3VuZGFyeVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfTsgLy8gRGlzYWJsZSBQb3BwZXIuanMgaWYgd2UgaGF2ZSBhIHN0YXRpYyBkaXNwbGF5XG5cbiAgICAgIGlmICh0aGlzLl9jb25maWcuZGlzcGxheSA9PT0gJ3N0YXRpYycpIHtcbiAgICAgICAgcG9wcGVyQ29uZmlnLm1vZGlmaWVycy5hcHBseVN0eWxlID0ge1xuICAgICAgICAgIGVuYWJsZWQ6IGZhbHNlXG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkMih7fSwgcG9wcGVyQ29uZmlnLCB7fSwgdGhpcy5fY29uZmlnLnBvcHBlckNvbmZpZyk7XG4gICAgfSAvLyBTdGF0aWNcbiAgICA7XG5cbiAgICBEcm9wZG93bi5falF1ZXJ5SW50ZXJmYWNlID0gZnVuY3Rpb24gX2pRdWVyeUludGVyZmFjZShjb25maWcpIHtcbiAgICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZGF0YSA9ICQodGhpcykuZGF0YShEQVRBX0tFWSQ0KTtcblxuICAgICAgICB2YXIgX2NvbmZpZyA9IHR5cGVvZiBjb25maWcgPT09ICdvYmplY3QnID8gY29uZmlnIDogbnVsbDtcblxuICAgICAgICBpZiAoIWRhdGEpIHtcbiAgICAgICAgICBkYXRhID0gbmV3IERyb3Bkb3duKHRoaXMsIF9jb25maWcpO1xuICAgICAgICAgICQodGhpcykuZGF0YShEQVRBX0tFWSQ0LCBkYXRhKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0eXBlb2YgY29uZmlnID09PSAnc3RyaW5nJykge1xuICAgICAgICAgIGlmICh0eXBlb2YgZGF0YVtjb25maWddID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIk5vIG1ldGhvZCBuYW1lZCBcXFwiXCIgKyBjb25maWcgKyBcIlxcXCJcIik7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgZGF0YVtjb25maWddKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICBEcm9wZG93bi5fY2xlYXJNZW51cyA9IGZ1bmN0aW9uIF9jbGVhck1lbnVzKGV2ZW50KSB7XG4gICAgICBpZiAoZXZlbnQgJiYgKGV2ZW50LndoaWNoID09PSBSSUdIVF9NT1VTRV9CVVRUT05fV0hJQ0ggfHwgZXZlbnQudHlwZSA9PT0gJ2tleXVwJyAmJiBldmVudC53aGljaCAhPT0gVEFCX0tFWUNPREUpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIHRvZ2dsZXMgPSBbXS5zbGljZS5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoU2VsZWN0b3IkNC5EQVRBX1RPR0dMRSkpO1xuXG4gICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gdG9nZ2xlcy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgICB2YXIgcGFyZW50ID0gRHJvcGRvd24uX2dldFBhcmVudEZyb21FbGVtZW50KHRvZ2dsZXNbaV0pO1xuXG4gICAgICAgIHZhciBjb250ZXh0ID0gJCh0b2dnbGVzW2ldKS5kYXRhKERBVEFfS0VZJDQpO1xuICAgICAgICB2YXIgcmVsYXRlZFRhcmdldCA9IHtcbiAgICAgICAgICByZWxhdGVkVGFyZ2V0OiB0b2dnbGVzW2ldXG4gICAgICAgIH07XG5cbiAgICAgICAgaWYgKGV2ZW50ICYmIGV2ZW50LnR5cGUgPT09ICdjbGljaycpIHtcbiAgICAgICAgICByZWxhdGVkVGFyZ2V0LmNsaWNrRXZlbnQgPSBldmVudDtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghY29udGV4dCkge1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGRyb3Bkb3duTWVudSA9IGNvbnRleHQuX21lbnU7XG5cbiAgICAgICAgaWYgKCEkKHBhcmVudCkuaGFzQ2xhc3MoQ2xhc3NOYW1lJDQuU0hPVykpIHtcbiAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChldmVudCAmJiAoZXZlbnQudHlwZSA9PT0gJ2NsaWNrJyAmJiAvaW5wdXR8dGV4dGFyZWEvaS50ZXN0KGV2ZW50LnRhcmdldC50YWdOYW1lKSB8fCBldmVudC50eXBlID09PSAna2V5dXAnICYmIGV2ZW50LndoaWNoID09PSBUQUJfS0VZQ09ERSkgJiYgJC5jb250YWlucyhwYXJlbnQsIGV2ZW50LnRhcmdldCkpIHtcbiAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBoaWRlRXZlbnQgPSAkLkV2ZW50KEV2ZW50JDQuSElERSwgcmVsYXRlZFRhcmdldCk7XG4gICAgICAgICQocGFyZW50KS50cmlnZ2VyKGhpZGVFdmVudCk7XG5cbiAgICAgICAgaWYgKGhpZGVFdmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSkge1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9IC8vIElmIHRoaXMgaXMgYSB0b3VjaC1lbmFibGVkIGRldmljZSB3ZSByZW1vdmUgdGhlIGV4dHJhXG4gICAgICAgIC8vIGVtcHR5IG1vdXNlb3ZlciBsaXN0ZW5lcnMgd2UgYWRkZWQgZm9yIGlPUyBzdXBwb3J0XG5cblxuICAgICAgICBpZiAoJ29udG91Y2hzdGFydCcgaW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KSB7XG4gICAgICAgICAgJChkb2N1bWVudC5ib2R5KS5jaGlsZHJlbigpLm9mZignbW91c2VvdmVyJywgbnVsbCwgJC5ub29wKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRvZ2dsZXNbaV0uc2V0QXR0cmlidXRlKCdhcmlhLWV4cGFuZGVkJywgJ2ZhbHNlJyk7XG5cbiAgICAgICAgaWYgKGNvbnRleHQuX3BvcHBlcikge1xuICAgICAgICAgIGNvbnRleHQuX3BvcHBlci5kZXN0cm95KCk7XG4gICAgICAgIH1cblxuICAgICAgICAkKGRyb3Bkb3duTWVudSkucmVtb3ZlQ2xhc3MoQ2xhc3NOYW1lJDQuU0hPVyk7XG4gICAgICAgICQocGFyZW50KS5yZW1vdmVDbGFzcyhDbGFzc05hbWUkNC5TSE9XKS50cmlnZ2VyKCQuRXZlbnQoRXZlbnQkNC5ISURERU4sIHJlbGF0ZWRUYXJnZXQpKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgRHJvcGRvd24uX2dldFBhcmVudEZyb21FbGVtZW50ID0gZnVuY3Rpb24gX2dldFBhcmVudEZyb21FbGVtZW50KGVsZW1lbnQpIHtcbiAgICAgIHZhciBwYXJlbnQ7XG4gICAgICB2YXIgc2VsZWN0b3IgPSBVdGlsLmdldFNlbGVjdG9yRnJvbUVsZW1lbnQoZWxlbWVudCk7XG5cbiAgICAgIGlmIChzZWxlY3Rvcikge1xuICAgICAgICBwYXJlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHBhcmVudCB8fCBlbGVtZW50LnBhcmVudE5vZGU7XG4gICAgfSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY29tcGxleGl0eVxuICAgIDtcblxuICAgIERyb3Bkb3duLl9kYXRhQXBpS2V5ZG93bkhhbmRsZXIgPSBmdW5jdGlvbiBfZGF0YUFwaUtleWRvd25IYW5kbGVyKGV2ZW50KSB7XG4gICAgICAvLyBJZiBub3QgaW5wdXQvdGV4dGFyZWE6XG4gICAgICAvLyAgLSBBbmQgbm90IGEga2V5IGluIFJFR0VYUF9LRVlET1dOID0+IG5vdCBhIGRyb3Bkb3duIGNvbW1hbmRcbiAgICAgIC8vIElmIGlucHV0L3RleHRhcmVhOlxuICAgICAgLy8gIC0gSWYgc3BhY2Uga2V5ID0+IG5vdCBhIGRyb3Bkb3duIGNvbW1hbmRcbiAgICAgIC8vICAtIElmIGtleSBpcyBvdGhlciB0aGFuIGVzY2FwZVxuICAgICAgLy8gICAgLSBJZiBrZXkgaXMgbm90IHVwIG9yIGRvd24gPT4gbm90IGEgZHJvcGRvd24gY29tbWFuZFxuICAgICAgLy8gICAgLSBJZiB0cmlnZ2VyIGluc2lkZSB0aGUgbWVudSA9PiBub3QgYSBkcm9wZG93biBjb21tYW5kXG4gICAgICBpZiAoL2lucHV0fHRleHRhcmVhL2kudGVzdChldmVudC50YXJnZXQudGFnTmFtZSkgPyBldmVudC53aGljaCA9PT0gU1BBQ0VfS0VZQ09ERSB8fCBldmVudC53aGljaCAhPT0gRVNDQVBFX0tFWUNPREUgJiYgKGV2ZW50LndoaWNoICE9PSBBUlJPV19ET1dOX0tFWUNPREUgJiYgZXZlbnQud2hpY2ggIT09IEFSUk9XX1VQX0tFWUNPREUgfHwgJChldmVudC50YXJnZXQpLmNsb3Nlc3QoU2VsZWN0b3IkNC5NRU5VKS5sZW5ndGgpIDogIVJFR0VYUF9LRVlET1dOLnRlc3QoZXZlbnQud2hpY2gpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuXG4gICAgICBpZiAodGhpcy5kaXNhYmxlZCB8fCAkKHRoaXMpLmhhc0NsYXNzKENsYXNzTmFtZSQ0LkRJU0FCTEVEKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHZhciBwYXJlbnQgPSBEcm9wZG93bi5fZ2V0UGFyZW50RnJvbUVsZW1lbnQodGhpcyk7XG5cbiAgICAgIHZhciBpc0FjdGl2ZSA9ICQocGFyZW50KS5oYXNDbGFzcyhDbGFzc05hbWUkNC5TSE9XKTtcblxuICAgICAgaWYgKCFpc0FjdGl2ZSAmJiBldmVudC53aGljaCA9PT0gRVNDQVBFX0tFWUNPREUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAoIWlzQWN0aXZlIHx8IGlzQWN0aXZlICYmIChldmVudC53aGljaCA9PT0gRVNDQVBFX0tFWUNPREUgfHwgZXZlbnQud2hpY2ggPT09IFNQQUNFX0tFWUNPREUpKSB7XG4gICAgICAgIGlmIChldmVudC53aGljaCA9PT0gRVNDQVBFX0tFWUNPREUpIHtcbiAgICAgICAgICB2YXIgdG9nZ2xlID0gcGFyZW50LnF1ZXJ5U2VsZWN0b3IoU2VsZWN0b3IkNC5EQVRBX1RPR0dMRSk7XG4gICAgICAgICAgJCh0b2dnbGUpLnRyaWdnZXIoJ2ZvY3VzJyk7XG4gICAgICAgIH1cblxuICAgICAgICAkKHRoaXMpLnRyaWdnZXIoJ2NsaWNrJyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIGl0ZW1zID0gW10uc2xpY2UuY2FsbChwYXJlbnQucXVlcnlTZWxlY3RvckFsbChTZWxlY3RvciQ0LlZJU0lCTEVfSVRFTVMpKS5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgcmV0dXJuICQoaXRlbSkuaXMoJzp2aXNpYmxlJyk7XG4gICAgICB9KTtcblxuICAgICAgaWYgKGl0ZW1zLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHZhciBpbmRleCA9IGl0ZW1zLmluZGV4T2YoZXZlbnQudGFyZ2V0KTtcblxuICAgICAgaWYgKGV2ZW50LndoaWNoID09PSBBUlJPV19VUF9LRVlDT0RFICYmIGluZGV4ID4gMCkge1xuICAgICAgICAvLyBVcFxuICAgICAgICBpbmRleC0tO1xuICAgICAgfVxuXG4gICAgICBpZiAoZXZlbnQud2hpY2ggPT09IEFSUk9XX0RPV05fS0VZQ09ERSAmJiBpbmRleCA8IGl0ZW1zLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgLy8gRG93blxuICAgICAgICBpbmRleCsrO1xuICAgICAgfVxuXG4gICAgICBpZiAoaW5kZXggPCAwKSB7XG4gICAgICAgIGluZGV4ID0gMDtcbiAgICAgIH1cblxuICAgICAgaXRlbXNbaW5kZXhdLmZvY3VzKCk7XG4gICAgfTtcblxuICAgIF9jcmVhdGVDbGFzcyhEcm9wZG93biwgbnVsbCwgW3tcbiAgICAgIGtleTogXCJWRVJTSU9OXCIsXG4gICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgcmV0dXJuIFZFUlNJT04kNDtcbiAgICAgIH1cbiAgICB9LCB7XG4gICAgICBrZXk6IFwiRGVmYXVsdFwiLFxuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgIHJldHVybiBEZWZhdWx0JDI7XG4gICAgICB9XG4gICAgfSwge1xuICAgICAga2V5OiBcIkRlZmF1bHRUeXBlXCIsXG4gICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgcmV0dXJuIERlZmF1bHRUeXBlJDI7XG4gICAgICB9XG4gICAgfV0pO1xuXG4gICAgcmV0dXJuIERyb3Bkb3duO1xuICB9KCk7XG4gIC8qKlxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICogRGF0YSBBcGkgaW1wbGVtZW50YXRpb25cbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqL1xuXG5cbiAgJChkb2N1bWVudCkub24oRXZlbnQkNC5LRVlET1dOX0RBVEFfQVBJLCBTZWxlY3RvciQ0LkRBVEFfVE9HR0xFLCBEcm9wZG93bi5fZGF0YUFwaUtleWRvd25IYW5kbGVyKS5vbihFdmVudCQ0LktFWURPV05fREFUQV9BUEksIFNlbGVjdG9yJDQuTUVOVSwgRHJvcGRvd24uX2RhdGFBcGlLZXlkb3duSGFuZGxlcikub24oRXZlbnQkNC5DTElDS19EQVRBX0FQSSArIFwiIFwiICsgRXZlbnQkNC5LRVlVUF9EQVRBX0FQSSwgRHJvcGRvd24uX2NsZWFyTWVudXMpLm9uKEV2ZW50JDQuQ0xJQ0tfREFUQV9BUEksIFNlbGVjdG9yJDQuREFUQV9UT0dHTEUsIGZ1bmN0aW9uIChldmVudCkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cbiAgICBEcm9wZG93bi5falF1ZXJ5SW50ZXJmYWNlLmNhbGwoJCh0aGlzKSwgJ3RvZ2dsZScpO1xuICB9KS5vbihFdmVudCQ0LkNMSUNLX0RBVEFfQVBJLCBTZWxlY3RvciQ0LkZPUk1fQ0hJTEQsIGZ1bmN0aW9uIChlKSB7XG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgfSk7XG4gIC8qKlxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICogalF1ZXJ5XG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKi9cblxuICAkLmZuW05BTUUkNF0gPSBEcm9wZG93bi5falF1ZXJ5SW50ZXJmYWNlO1xuICAkLmZuW05BTUUkNF0uQ29uc3RydWN0b3IgPSBEcm9wZG93bjtcblxuICAkLmZuW05BTUUkNF0ubm9Db25mbGljdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAkLmZuW05BTUUkNF0gPSBKUVVFUllfTk9fQ09ORkxJQ1QkNDtcbiAgICByZXR1cm4gRHJvcGRvd24uX2pRdWVyeUludGVyZmFjZTtcbiAgfTtcblxuICAvKipcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqIENvbnN0YW50c1xuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICovXG5cbiAgdmFyIE5BTUUkNSA9ICdtb2RhbCc7XG4gIHZhciBWRVJTSU9OJDUgPSAnNC40LjEnO1xuICB2YXIgREFUQV9LRVkkNSA9ICdicy5tb2RhbCc7XG4gIHZhciBFVkVOVF9LRVkkNSA9IFwiLlwiICsgREFUQV9LRVkkNTtcbiAgdmFyIERBVEFfQVBJX0tFWSQ1ID0gJy5kYXRhLWFwaSc7XG4gIHZhciBKUVVFUllfTk9fQ09ORkxJQ1QkNSA9ICQuZm5bTkFNRSQ1XTtcbiAgdmFyIEVTQ0FQRV9LRVlDT0RFJDEgPSAyNzsgLy8gS2V5Ym9hcmRFdmVudC53aGljaCB2YWx1ZSBmb3IgRXNjYXBlIChFc2MpIGtleVxuXG4gIHZhciBEZWZhdWx0JDMgPSB7XG4gICAgYmFja2Ryb3A6IHRydWUsXG4gICAga2V5Ym9hcmQ6IHRydWUsXG4gICAgZm9jdXM6IHRydWUsXG4gICAgc2hvdzogdHJ1ZVxuICB9O1xuICB2YXIgRGVmYXVsdFR5cGUkMyA9IHtcbiAgICBiYWNrZHJvcDogJyhib29sZWFufHN0cmluZyknLFxuICAgIGtleWJvYXJkOiAnYm9vbGVhbicsXG4gICAgZm9jdXM6ICdib29sZWFuJyxcbiAgICBzaG93OiAnYm9vbGVhbidcbiAgfTtcbiAgdmFyIEV2ZW50JDUgPSB7XG4gICAgSElERTogXCJoaWRlXCIgKyBFVkVOVF9LRVkkNSxcbiAgICBISURFX1BSRVZFTlRFRDogXCJoaWRlUHJldmVudGVkXCIgKyBFVkVOVF9LRVkkNSxcbiAgICBISURERU46IFwiaGlkZGVuXCIgKyBFVkVOVF9LRVkkNSxcbiAgICBTSE9XOiBcInNob3dcIiArIEVWRU5UX0tFWSQ1LFxuICAgIFNIT1dOOiBcInNob3duXCIgKyBFVkVOVF9LRVkkNSxcbiAgICBGT0NVU0lOOiBcImZvY3VzaW5cIiArIEVWRU5UX0tFWSQ1LFxuICAgIFJFU0laRTogXCJyZXNpemVcIiArIEVWRU5UX0tFWSQ1LFxuICAgIENMSUNLX0RJU01JU1M6IFwiY2xpY2suZGlzbWlzc1wiICsgRVZFTlRfS0VZJDUsXG4gICAgS0VZRE9XTl9ESVNNSVNTOiBcImtleWRvd24uZGlzbWlzc1wiICsgRVZFTlRfS0VZJDUsXG4gICAgTU9VU0VVUF9ESVNNSVNTOiBcIm1vdXNldXAuZGlzbWlzc1wiICsgRVZFTlRfS0VZJDUsXG4gICAgTU9VU0VET1dOX0RJU01JU1M6IFwibW91c2Vkb3duLmRpc21pc3NcIiArIEVWRU5UX0tFWSQ1LFxuICAgIENMSUNLX0RBVEFfQVBJOiBcImNsaWNrXCIgKyBFVkVOVF9LRVkkNSArIERBVEFfQVBJX0tFWSQ1XG4gIH07XG4gIHZhciBDbGFzc05hbWUkNSA9IHtcbiAgICBTQ1JPTExBQkxFOiAnbW9kYWwtZGlhbG9nLXNjcm9sbGFibGUnLFxuICAgIFNDUk9MTEJBUl9NRUFTVVJFUjogJ21vZGFsLXNjcm9sbGJhci1tZWFzdXJlJyxcbiAgICBCQUNLRFJPUDogJ21vZGFsLWJhY2tkcm9wJyxcbiAgICBPUEVOOiAnbW9kYWwtb3BlbicsXG4gICAgRkFERTogJ2ZhZGUnLFxuICAgIFNIT1c6ICdzaG93JyxcbiAgICBTVEFUSUM6ICdtb2RhbC1zdGF0aWMnXG4gIH07XG4gIHZhciBTZWxlY3RvciQ1ID0ge1xuICAgIERJQUxPRzogJy5tb2RhbC1kaWFsb2cnLFxuICAgIE1PREFMX0JPRFk6ICcubW9kYWwtYm9keScsXG4gICAgREFUQV9UT0dHTEU6ICdbZGF0YS10b2dnbGU9XCJtb2RhbFwiXScsXG4gICAgREFUQV9ESVNNSVNTOiAnW2RhdGEtZGlzbWlzcz1cIm1vZGFsXCJdJyxcbiAgICBGSVhFRF9DT05URU5UOiAnLmZpeGVkLXRvcCwgLmZpeGVkLWJvdHRvbSwgLmlzLWZpeGVkLCAuc3RpY2t5LXRvcCcsXG4gICAgU1RJQ0tZX0NPTlRFTlQ6ICcuc3RpY2t5LXRvcCdcbiAgfTtcbiAgLyoqXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKiBDbGFzcyBEZWZpbml0aW9uXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKi9cblxuICB2YXIgTW9kYWwgPVxuICAvKiNfX1BVUkVfXyovXG4gIGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBNb2RhbChlbGVtZW50LCBjb25maWcpIHtcbiAgICAgIHRoaXMuX2NvbmZpZyA9IHRoaXMuX2dldENvbmZpZyhjb25maWcpO1xuICAgICAgdGhpcy5fZWxlbWVudCA9IGVsZW1lbnQ7XG4gICAgICB0aGlzLl9kaWFsb2cgPSBlbGVtZW50LnF1ZXJ5U2VsZWN0b3IoU2VsZWN0b3IkNS5ESUFMT0cpO1xuICAgICAgdGhpcy5fYmFja2Ryb3AgPSBudWxsO1xuICAgICAgdGhpcy5faXNTaG93biA9IGZhbHNlO1xuICAgICAgdGhpcy5faXNCb2R5T3ZlcmZsb3dpbmcgPSBmYWxzZTtcbiAgICAgIHRoaXMuX2lnbm9yZUJhY2tkcm9wQ2xpY2sgPSBmYWxzZTtcbiAgICAgIHRoaXMuX2lzVHJhbnNpdGlvbmluZyA9IGZhbHNlO1xuICAgICAgdGhpcy5fc2Nyb2xsYmFyV2lkdGggPSAwO1xuICAgIH0gLy8gR2V0dGVyc1xuXG5cbiAgICB2YXIgX3Byb3RvID0gTW9kYWwucHJvdG90eXBlO1xuXG4gICAgLy8gUHVibGljXG4gICAgX3Byb3RvLnRvZ2dsZSA9IGZ1bmN0aW9uIHRvZ2dsZShyZWxhdGVkVGFyZ2V0KSB7XG4gICAgICByZXR1cm4gdGhpcy5faXNTaG93biA/IHRoaXMuaGlkZSgpIDogdGhpcy5zaG93KHJlbGF0ZWRUYXJnZXQpO1xuICAgIH07XG5cbiAgICBfcHJvdG8uc2hvdyA9IGZ1bmN0aW9uIHNob3cocmVsYXRlZFRhcmdldCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgaWYgKHRoaXMuX2lzU2hvd24gfHwgdGhpcy5faXNUcmFuc2l0aW9uaW5nKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKCQodGhpcy5fZWxlbWVudCkuaGFzQ2xhc3MoQ2xhc3NOYW1lJDUuRkFERSkpIHtcbiAgICAgICAgdGhpcy5faXNUcmFuc2l0aW9uaW5nID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgdmFyIHNob3dFdmVudCA9ICQuRXZlbnQoRXZlbnQkNS5TSE9XLCB7XG4gICAgICAgIHJlbGF0ZWRUYXJnZXQ6IHJlbGF0ZWRUYXJnZXRcbiAgICAgIH0pO1xuICAgICAgJCh0aGlzLl9lbGVtZW50KS50cmlnZ2VyKHNob3dFdmVudCk7XG5cbiAgICAgIGlmICh0aGlzLl9pc1Nob3duIHx8IHNob3dFdmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHRoaXMuX2lzU2hvd24gPSB0cnVlO1xuXG4gICAgICB0aGlzLl9jaGVja1Njcm9sbGJhcigpO1xuXG4gICAgICB0aGlzLl9zZXRTY3JvbGxiYXIoKTtcblxuICAgICAgdGhpcy5fYWRqdXN0RGlhbG9nKCk7XG5cbiAgICAgIHRoaXMuX3NldEVzY2FwZUV2ZW50KCk7XG5cbiAgICAgIHRoaXMuX3NldFJlc2l6ZUV2ZW50KCk7XG5cbiAgICAgICQodGhpcy5fZWxlbWVudCkub24oRXZlbnQkNS5DTElDS19ESVNNSVNTLCBTZWxlY3RvciQ1LkRBVEFfRElTTUlTUywgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIHJldHVybiBfdGhpcy5oaWRlKGV2ZW50KTtcbiAgICAgIH0pO1xuICAgICAgJCh0aGlzLl9kaWFsb2cpLm9uKEV2ZW50JDUuTU9VU0VET1dOX0RJU01JU1MsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgJChfdGhpcy5fZWxlbWVudCkub25lKEV2ZW50JDUuTU9VU0VVUF9ESVNNSVNTLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICBpZiAoJChldmVudC50YXJnZXQpLmlzKF90aGlzLl9lbGVtZW50KSkge1xuICAgICAgICAgICAgX3RoaXMuX2lnbm9yZUJhY2tkcm9wQ2xpY2sgPSB0cnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcblxuICAgICAgdGhpcy5fc2hvd0JhY2tkcm9wKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzLl9zaG93RWxlbWVudChyZWxhdGVkVGFyZ2V0KTtcbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICBfcHJvdG8uaGlkZSA9IGZ1bmN0aW9uIGhpZGUoZXZlbnQpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICBpZiAoZXZlbnQpIHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIH1cblxuICAgICAgaWYgKCF0aGlzLl9pc1Nob3duIHx8IHRoaXMuX2lzVHJhbnNpdGlvbmluZykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHZhciBoaWRlRXZlbnQgPSAkLkV2ZW50KEV2ZW50JDUuSElERSk7XG4gICAgICAkKHRoaXMuX2VsZW1lbnQpLnRyaWdnZXIoaGlkZUV2ZW50KTtcblxuICAgICAgaWYgKCF0aGlzLl9pc1Nob3duIHx8IGhpZGVFdmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHRoaXMuX2lzU2hvd24gPSBmYWxzZTtcbiAgICAgIHZhciB0cmFuc2l0aW9uID0gJCh0aGlzLl9lbGVtZW50KS5oYXNDbGFzcyhDbGFzc05hbWUkNS5GQURFKTtcblxuICAgICAgaWYgKHRyYW5zaXRpb24pIHtcbiAgICAgICAgdGhpcy5faXNUcmFuc2l0aW9uaW5nID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5fc2V0RXNjYXBlRXZlbnQoKTtcblxuICAgICAgdGhpcy5fc2V0UmVzaXplRXZlbnQoKTtcblxuICAgICAgJChkb2N1bWVudCkub2ZmKEV2ZW50JDUuRk9DVVNJTik7XG4gICAgICAkKHRoaXMuX2VsZW1lbnQpLnJlbW92ZUNsYXNzKENsYXNzTmFtZSQ1LlNIT1cpO1xuICAgICAgJCh0aGlzLl9lbGVtZW50KS5vZmYoRXZlbnQkNS5DTElDS19ESVNNSVNTKTtcbiAgICAgICQodGhpcy5fZGlhbG9nKS5vZmYoRXZlbnQkNS5NT1VTRURPV05fRElTTUlTUyk7XG5cbiAgICAgIGlmICh0cmFuc2l0aW9uKSB7XG4gICAgICAgIHZhciB0cmFuc2l0aW9uRHVyYXRpb24gPSBVdGlsLmdldFRyYW5zaXRpb25EdXJhdGlvbkZyb21FbGVtZW50KHRoaXMuX2VsZW1lbnQpO1xuICAgICAgICAkKHRoaXMuX2VsZW1lbnQpLm9uZShVdGlsLlRSQU5TSVRJT05fRU5ELCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMyLl9oaWRlTW9kYWwoZXZlbnQpO1xuICAgICAgICB9KS5lbXVsYXRlVHJhbnNpdGlvbkVuZCh0cmFuc2l0aW9uRHVyYXRpb24pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5faGlkZU1vZGFsKCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90by5kaXNwb3NlID0gZnVuY3Rpb24gZGlzcG9zZSgpIHtcbiAgICAgIFt3aW5kb3csIHRoaXMuX2VsZW1lbnQsIHRoaXMuX2RpYWxvZ10uZm9yRWFjaChmdW5jdGlvbiAoaHRtbEVsZW1lbnQpIHtcbiAgICAgICAgcmV0dXJuICQoaHRtbEVsZW1lbnQpLm9mZihFVkVOVF9LRVkkNSk7XG4gICAgICB9KTtcbiAgICAgIC8qKlxuICAgICAgICogYGRvY3VtZW50YCBoYXMgMiBldmVudHMgYEV2ZW50LkZPQ1VTSU5gIGFuZCBgRXZlbnQuQ0xJQ0tfREFUQV9BUElgXG4gICAgICAgKiBEbyBub3QgbW92ZSBgZG9jdW1lbnRgIGluIGBodG1sRWxlbWVudHNgIGFycmF5XG4gICAgICAgKiBJdCB3aWxsIHJlbW92ZSBgRXZlbnQuQ0xJQ0tfREFUQV9BUElgIGV2ZW50IHRoYXQgc2hvdWxkIHJlbWFpblxuICAgICAgICovXG5cbiAgICAgICQoZG9jdW1lbnQpLm9mZihFdmVudCQ1LkZPQ1VTSU4pO1xuICAgICAgJC5yZW1vdmVEYXRhKHRoaXMuX2VsZW1lbnQsIERBVEFfS0VZJDUpO1xuICAgICAgdGhpcy5fY29uZmlnID0gbnVsbDtcbiAgICAgIHRoaXMuX2VsZW1lbnQgPSBudWxsO1xuICAgICAgdGhpcy5fZGlhbG9nID0gbnVsbDtcbiAgICAgIHRoaXMuX2JhY2tkcm9wID0gbnVsbDtcbiAgICAgIHRoaXMuX2lzU2hvd24gPSBudWxsO1xuICAgICAgdGhpcy5faXNCb2R5T3ZlcmZsb3dpbmcgPSBudWxsO1xuICAgICAgdGhpcy5faWdub3JlQmFja2Ryb3BDbGljayA9IG51bGw7XG4gICAgICB0aGlzLl9pc1RyYW5zaXRpb25pbmcgPSBudWxsO1xuICAgICAgdGhpcy5fc2Nyb2xsYmFyV2lkdGggPSBudWxsO1xuICAgIH07XG5cbiAgICBfcHJvdG8uaGFuZGxlVXBkYXRlID0gZnVuY3Rpb24gaGFuZGxlVXBkYXRlKCkge1xuICAgICAgdGhpcy5fYWRqdXN0RGlhbG9nKCk7XG4gICAgfSAvLyBQcml2YXRlXG4gICAgO1xuXG4gICAgX3Byb3RvLl9nZXRDb25maWcgPSBmdW5jdGlvbiBfZ2V0Q29uZmlnKGNvbmZpZykge1xuICAgICAgY29uZmlnID0gX29iamVjdFNwcmVhZDIoe30sIERlZmF1bHQkMywge30sIGNvbmZpZyk7XG4gICAgICBVdGlsLnR5cGVDaGVja0NvbmZpZyhOQU1FJDUsIGNvbmZpZywgRGVmYXVsdFR5cGUkMyk7XG4gICAgICByZXR1cm4gY29uZmlnO1xuICAgIH07XG5cbiAgICBfcHJvdG8uX3RyaWdnZXJCYWNrZHJvcFRyYW5zaXRpb24gPSBmdW5jdGlvbiBfdHJpZ2dlckJhY2tkcm9wVHJhbnNpdGlvbigpIHtcbiAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICBpZiAodGhpcy5fY29uZmlnLmJhY2tkcm9wID09PSAnc3RhdGljJykge1xuICAgICAgICB2YXIgaGlkZUV2ZW50UHJldmVudGVkID0gJC5FdmVudChFdmVudCQ1LkhJREVfUFJFVkVOVEVEKTtcbiAgICAgICAgJCh0aGlzLl9lbGVtZW50KS50cmlnZ2VyKGhpZGVFdmVudFByZXZlbnRlZCk7XG5cbiAgICAgICAgaWYgKGhpZGVFdmVudFByZXZlbnRlZC5kZWZhdWx0UHJldmVudGVkKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5fZWxlbWVudC5jbGFzc0xpc3QuYWRkKENsYXNzTmFtZSQ1LlNUQVRJQyk7XG5cbiAgICAgICAgdmFyIG1vZGFsVHJhbnNpdGlvbkR1cmF0aW9uID0gVXRpbC5nZXRUcmFuc2l0aW9uRHVyYXRpb25Gcm9tRWxlbWVudCh0aGlzLl9lbGVtZW50KTtcbiAgICAgICAgJCh0aGlzLl9lbGVtZW50KS5vbmUoVXRpbC5UUkFOU0lUSU9OX0VORCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgIF90aGlzMy5fZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKENsYXNzTmFtZSQ1LlNUQVRJQyk7XG4gICAgICAgIH0pLmVtdWxhdGVUcmFuc2l0aW9uRW5kKG1vZGFsVHJhbnNpdGlvbkR1cmF0aW9uKTtcblxuICAgICAgICB0aGlzLl9lbGVtZW50LmZvY3VzKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmhpZGUoKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3Byb3RvLl9zaG93RWxlbWVudCA9IGZ1bmN0aW9uIF9zaG93RWxlbWVudChyZWxhdGVkVGFyZ2V0KSB7XG4gICAgICB2YXIgX3RoaXM0ID0gdGhpcztcblxuICAgICAgdmFyIHRyYW5zaXRpb24gPSAkKHRoaXMuX2VsZW1lbnQpLmhhc0NsYXNzKENsYXNzTmFtZSQ1LkZBREUpO1xuICAgICAgdmFyIG1vZGFsQm9keSA9IHRoaXMuX2RpYWxvZyA/IHRoaXMuX2RpYWxvZy5xdWVyeVNlbGVjdG9yKFNlbGVjdG9yJDUuTU9EQUxfQk9EWSkgOiBudWxsO1xuXG4gICAgICBpZiAoIXRoaXMuX2VsZW1lbnQucGFyZW50Tm9kZSB8fCB0aGlzLl9lbGVtZW50LnBhcmVudE5vZGUubm9kZVR5cGUgIT09IE5vZGUuRUxFTUVOVF9OT0RFKSB7XG4gICAgICAgIC8vIERvbid0IG1vdmUgbW9kYWwncyBET00gcG9zaXRpb25cbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0aGlzLl9lbGVtZW50KTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5fZWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcblxuICAgICAgdGhpcy5fZWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoJ2FyaWEtaGlkZGVuJyk7XG5cbiAgICAgIHRoaXMuX2VsZW1lbnQuc2V0QXR0cmlidXRlKCdhcmlhLW1vZGFsJywgdHJ1ZSk7XG5cbiAgICAgIGlmICgkKHRoaXMuX2RpYWxvZykuaGFzQ2xhc3MoQ2xhc3NOYW1lJDUuU0NST0xMQUJMRSkgJiYgbW9kYWxCb2R5KSB7XG4gICAgICAgIG1vZGFsQm9keS5zY3JvbGxUb3AgPSAwO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5fZWxlbWVudC5zY3JvbGxUb3AgPSAwO1xuICAgICAgfVxuXG4gICAgICBpZiAodHJhbnNpdGlvbikge1xuICAgICAgICBVdGlsLnJlZmxvdyh0aGlzLl9lbGVtZW50KTtcbiAgICAgIH1cblxuICAgICAgJCh0aGlzLl9lbGVtZW50KS5hZGRDbGFzcyhDbGFzc05hbWUkNS5TSE9XKTtcblxuICAgICAgaWYgKHRoaXMuX2NvbmZpZy5mb2N1cykge1xuICAgICAgICB0aGlzLl9lbmZvcmNlRm9jdXMoKTtcbiAgICAgIH1cblxuICAgICAgdmFyIHNob3duRXZlbnQgPSAkLkV2ZW50KEV2ZW50JDUuU0hPV04sIHtcbiAgICAgICAgcmVsYXRlZFRhcmdldDogcmVsYXRlZFRhcmdldFxuICAgICAgfSk7XG5cbiAgICAgIHZhciB0cmFuc2l0aW9uQ29tcGxldGUgPSBmdW5jdGlvbiB0cmFuc2l0aW9uQ29tcGxldGUoKSB7XG4gICAgICAgIGlmIChfdGhpczQuX2NvbmZpZy5mb2N1cykge1xuICAgICAgICAgIF90aGlzNC5fZWxlbWVudC5mb2N1cygpO1xuICAgICAgICB9XG5cbiAgICAgICAgX3RoaXM0Ll9pc1RyYW5zaXRpb25pbmcgPSBmYWxzZTtcbiAgICAgICAgJChfdGhpczQuX2VsZW1lbnQpLnRyaWdnZXIoc2hvd25FdmVudCk7XG4gICAgICB9O1xuXG4gICAgICBpZiAodHJhbnNpdGlvbikge1xuICAgICAgICB2YXIgdHJhbnNpdGlvbkR1cmF0aW9uID0gVXRpbC5nZXRUcmFuc2l0aW9uRHVyYXRpb25Gcm9tRWxlbWVudCh0aGlzLl9kaWFsb2cpO1xuICAgICAgICAkKHRoaXMuX2RpYWxvZykub25lKFV0aWwuVFJBTlNJVElPTl9FTkQsIHRyYW5zaXRpb25Db21wbGV0ZSkuZW11bGF0ZVRyYW5zaXRpb25FbmQodHJhbnNpdGlvbkR1cmF0aW9uKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRyYW5zaXRpb25Db21wbGV0ZSgpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfcHJvdG8uX2VuZm9yY2VGb2N1cyA9IGZ1bmN0aW9uIF9lbmZvcmNlRm9jdXMoKSB7XG4gICAgICB2YXIgX3RoaXM1ID0gdGhpcztcblxuICAgICAgJChkb2N1bWVudCkub2ZmKEV2ZW50JDUuRk9DVVNJTikgLy8gR3VhcmQgYWdhaW5zdCBpbmZpbml0ZSBmb2N1cyBsb29wXG4gICAgICAub24oRXZlbnQkNS5GT0NVU0lOLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgaWYgKGRvY3VtZW50ICE9PSBldmVudC50YXJnZXQgJiYgX3RoaXM1Ll9lbGVtZW50ICE9PSBldmVudC50YXJnZXQgJiYgJChfdGhpczUuX2VsZW1lbnQpLmhhcyhldmVudC50YXJnZXQpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgIF90aGlzNS5fZWxlbWVudC5mb2N1cygpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgX3Byb3RvLl9zZXRFc2NhcGVFdmVudCA9IGZ1bmN0aW9uIF9zZXRFc2NhcGVFdmVudCgpIHtcbiAgICAgIHZhciBfdGhpczYgPSB0aGlzO1xuXG4gICAgICBpZiAodGhpcy5faXNTaG93biAmJiB0aGlzLl9jb25maWcua2V5Ym9hcmQpIHtcbiAgICAgICAgJCh0aGlzLl9lbGVtZW50KS5vbihFdmVudCQ1LktFWURPV05fRElTTUlTUywgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgaWYgKGV2ZW50LndoaWNoID09PSBFU0NBUEVfS0VZQ09ERSQxKSB7XG4gICAgICAgICAgICBfdGhpczYuX3RyaWdnZXJCYWNrZHJvcFRyYW5zaXRpb24oKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIGlmICghdGhpcy5faXNTaG93bikge1xuICAgICAgICAkKHRoaXMuX2VsZW1lbnQpLm9mZihFdmVudCQ1LktFWURPV05fRElTTUlTUyk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90by5fc2V0UmVzaXplRXZlbnQgPSBmdW5jdGlvbiBfc2V0UmVzaXplRXZlbnQoKSB7XG4gICAgICB2YXIgX3RoaXM3ID0gdGhpcztcblxuICAgICAgaWYgKHRoaXMuX2lzU2hvd24pIHtcbiAgICAgICAgJCh3aW5kb3cpLm9uKEV2ZW50JDUuUkVTSVpFLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXM3LmhhbmRsZVVwZGF0ZShldmVudCk7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgJCh3aW5kb3cpLm9mZihFdmVudCQ1LlJFU0laRSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90by5faGlkZU1vZGFsID0gZnVuY3Rpb24gX2hpZGVNb2RhbCgpIHtcbiAgICAgIHZhciBfdGhpczggPSB0aGlzO1xuXG4gICAgICB0aGlzLl9lbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG5cbiAgICAgIHRoaXMuX2VsZW1lbnQuc2V0QXR0cmlidXRlKCdhcmlhLWhpZGRlbicsIHRydWUpO1xuXG4gICAgICB0aGlzLl9lbGVtZW50LnJlbW92ZUF0dHJpYnV0ZSgnYXJpYS1tb2RhbCcpO1xuXG4gICAgICB0aGlzLl9pc1RyYW5zaXRpb25pbmcgPSBmYWxzZTtcblxuICAgICAgdGhpcy5fc2hvd0JhY2tkcm9wKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgJChkb2N1bWVudC5ib2R5KS5yZW1vdmVDbGFzcyhDbGFzc05hbWUkNS5PUEVOKTtcblxuICAgICAgICBfdGhpczguX3Jlc2V0QWRqdXN0bWVudHMoKTtcblxuICAgICAgICBfdGhpczguX3Jlc2V0U2Nyb2xsYmFyKCk7XG5cbiAgICAgICAgJChfdGhpczguX2VsZW1lbnQpLnRyaWdnZXIoRXZlbnQkNS5ISURERU4pO1xuICAgICAgfSk7XG4gICAgfTtcblxuICAgIF9wcm90by5fcmVtb3ZlQmFja2Ryb3AgPSBmdW5jdGlvbiBfcmVtb3ZlQmFja2Ryb3AoKSB7XG4gICAgICBpZiAodGhpcy5fYmFja2Ryb3ApIHtcbiAgICAgICAgJCh0aGlzLl9iYWNrZHJvcCkucmVtb3ZlKCk7XG4gICAgICAgIHRoaXMuX2JhY2tkcm9wID0gbnVsbDtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3Byb3RvLl9zaG93QmFja2Ryb3AgPSBmdW5jdGlvbiBfc2hvd0JhY2tkcm9wKGNhbGxiYWNrKSB7XG4gICAgICB2YXIgX3RoaXM5ID0gdGhpcztcblxuICAgICAgdmFyIGFuaW1hdGUgPSAkKHRoaXMuX2VsZW1lbnQpLmhhc0NsYXNzKENsYXNzTmFtZSQ1LkZBREUpID8gQ2xhc3NOYW1lJDUuRkFERSA6ICcnO1xuXG4gICAgICBpZiAodGhpcy5faXNTaG93biAmJiB0aGlzLl9jb25maWcuYmFja2Ryb3ApIHtcbiAgICAgICAgdGhpcy5fYmFja2Ryb3AgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgdGhpcy5fYmFja2Ryb3AuY2xhc3NOYW1lID0gQ2xhc3NOYW1lJDUuQkFDS0RST1A7XG5cbiAgICAgICAgaWYgKGFuaW1hdGUpIHtcbiAgICAgICAgICB0aGlzLl9iYWNrZHJvcC5jbGFzc0xpc3QuYWRkKGFuaW1hdGUpO1xuICAgICAgICB9XG5cbiAgICAgICAgJCh0aGlzLl9iYWNrZHJvcCkuYXBwZW5kVG8oZG9jdW1lbnQuYm9keSk7XG4gICAgICAgICQodGhpcy5fZWxlbWVudCkub24oRXZlbnQkNS5DTElDS19ESVNNSVNTLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICBpZiAoX3RoaXM5Ll9pZ25vcmVCYWNrZHJvcENsaWNrKSB7XG4gICAgICAgICAgICBfdGhpczkuX2lnbm9yZUJhY2tkcm9wQ2xpY2sgPSBmYWxzZTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoZXZlbnQudGFyZ2V0ICE9PSBldmVudC5jdXJyZW50VGFyZ2V0KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgX3RoaXM5Ll90cmlnZ2VyQmFja2Ryb3BUcmFuc2l0aW9uKCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmIChhbmltYXRlKSB7XG4gICAgICAgICAgVXRpbC5yZWZsb3codGhpcy5fYmFja2Ryb3ApO1xuICAgICAgICB9XG5cbiAgICAgICAgJCh0aGlzLl9iYWNrZHJvcCkuYWRkQ2xhc3MoQ2xhc3NOYW1lJDUuU0hPVyk7XG5cbiAgICAgICAgaWYgKCFjYWxsYmFjaykge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghYW5pbWF0ZSkge1xuICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGJhY2tkcm9wVHJhbnNpdGlvbkR1cmF0aW9uID0gVXRpbC5nZXRUcmFuc2l0aW9uRHVyYXRpb25Gcm9tRWxlbWVudCh0aGlzLl9iYWNrZHJvcCk7XG4gICAgICAgICQodGhpcy5fYmFja2Ryb3ApLm9uZShVdGlsLlRSQU5TSVRJT05fRU5ELCBjYWxsYmFjaykuZW11bGF0ZVRyYW5zaXRpb25FbmQoYmFja2Ryb3BUcmFuc2l0aW9uRHVyYXRpb24pO1xuICAgICAgfSBlbHNlIGlmICghdGhpcy5faXNTaG93biAmJiB0aGlzLl9iYWNrZHJvcCkge1xuICAgICAgICAkKHRoaXMuX2JhY2tkcm9wKS5yZW1vdmVDbGFzcyhDbGFzc05hbWUkNS5TSE9XKTtcblxuICAgICAgICB2YXIgY2FsbGJhY2tSZW1vdmUgPSBmdW5jdGlvbiBjYWxsYmFja1JlbW92ZSgpIHtcbiAgICAgICAgICBfdGhpczkuX3JlbW92ZUJhY2tkcm9wKCk7XG5cbiAgICAgICAgICBpZiAoY2FsbGJhY2spIHtcbiAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIGlmICgkKHRoaXMuX2VsZW1lbnQpLmhhc0NsYXNzKENsYXNzTmFtZSQ1LkZBREUpKSB7XG4gICAgICAgICAgdmFyIF9iYWNrZHJvcFRyYW5zaXRpb25EdXJhdGlvbiA9IFV0aWwuZ2V0VHJhbnNpdGlvbkR1cmF0aW9uRnJvbUVsZW1lbnQodGhpcy5fYmFja2Ryb3ApO1xuXG4gICAgICAgICAgJCh0aGlzLl9iYWNrZHJvcCkub25lKFV0aWwuVFJBTlNJVElPTl9FTkQsIGNhbGxiYWNrUmVtb3ZlKS5lbXVsYXRlVHJhbnNpdGlvbkVuZChfYmFja2Ryb3BUcmFuc2l0aW9uRHVyYXRpb24pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNhbGxiYWNrUmVtb3ZlKCk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoY2FsbGJhY2spIHtcbiAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgIH1cbiAgICB9IC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAvLyB0aGUgZm9sbG93aW5nIG1ldGhvZHMgYXJlIHVzZWQgdG8gaGFuZGxlIG92ZXJmbG93aW5nIG1vZGFsc1xuICAgIC8vIHRvZG8gKGZhdCk6IHRoZXNlIHNob3VsZCBwcm9iYWJseSBiZSByZWZhY3RvcmVkIG91dCBvZiBtb2RhbC5qc1xuICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICA7XG5cbiAgICBfcHJvdG8uX2FkanVzdERpYWxvZyA9IGZ1bmN0aW9uIF9hZGp1c3REaWFsb2coKSB7XG4gICAgICB2YXIgaXNNb2RhbE92ZXJmbG93aW5nID0gdGhpcy5fZWxlbWVudC5zY3JvbGxIZWlnaHQgPiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0O1xuXG4gICAgICBpZiAoIXRoaXMuX2lzQm9keU92ZXJmbG93aW5nICYmIGlzTW9kYWxPdmVyZmxvd2luZykge1xuICAgICAgICB0aGlzLl9lbGVtZW50LnN0eWxlLnBhZGRpbmdMZWZ0ID0gdGhpcy5fc2Nyb2xsYmFyV2lkdGggKyBcInB4XCI7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLl9pc0JvZHlPdmVyZmxvd2luZyAmJiAhaXNNb2RhbE92ZXJmbG93aW5nKSB7XG4gICAgICAgIHRoaXMuX2VsZW1lbnQuc3R5bGUucGFkZGluZ1JpZ2h0ID0gdGhpcy5fc2Nyb2xsYmFyV2lkdGggKyBcInB4XCI7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90by5fcmVzZXRBZGp1c3RtZW50cyA9IGZ1bmN0aW9uIF9yZXNldEFkanVzdG1lbnRzKCkge1xuICAgICAgdGhpcy5fZWxlbWVudC5zdHlsZS5wYWRkaW5nTGVmdCA9ICcnO1xuICAgICAgdGhpcy5fZWxlbWVudC5zdHlsZS5wYWRkaW5nUmlnaHQgPSAnJztcbiAgICB9O1xuXG4gICAgX3Byb3RvLl9jaGVja1Njcm9sbGJhciA9IGZ1bmN0aW9uIF9jaGVja1Njcm9sbGJhcigpIHtcbiAgICAgIHZhciByZWN0ID0gZG9jdW1lbnQuYm9keS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgIHRoaXMuX2lzQm9keU92ZXJmbG93aW5nID0gcmVjdC5sZWZ0ICsgcmVjdC5yaWdodCA8IHdpbmRvdy5pbm5lcldpZHRoO1xuICAgICAgdGhpcy5fc2Nyb2xsYmFyV2lkdGggPSB0aGlzLl9nZXRTY3JvbGxiYXJXaWR0aCgpO1xuICAgIH07XG5cbiAgICBfcHJvdG8uX3NldFNjcm9sbGJhciA9IGZ1bmN0aW9uIF9zZXRTY3JvbGxiYXIoKSB7XG4gICAgICB2YXIgX3RoaXMxMCA9IHRoaXM7XG5cbiAgICAgIGlmICh0aGlzLl9pc0JvZHlPdmVyZmxvd2luZykge1xuICAgICAgICAvLyBOb3RlOiBET01Ob2RlLnN0eWxlLnBhZGRpbmdSaWdodCByZXR1cm5zIHRoZSBhY3R1YWwgdmFsdWUgb3IgJycgaWYgbm90IHNldFxuICAgICAgICAvLyAgIHdoaWxlICQoRE9NTm9kZSkuY3NzKCdwYWRkaW5nLXJpZ2h0JykgcmV0dXJucyB0aGUgY2FsY3VsYXRlZCB2YWx1ZSBvciAwIGlmIG5vdCBzZXRcbiAgICAgICAgdmFyIGZpeGVkQ29udGVudCA9IFtdLnNsaWNlLmNhbGwoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChTZWxlY3RvciQ1LkZJWEVEX0NPTlRFTlQpKTtcbiAgICAgICAgdmFyIHN0aWNreUNvbnRlbnQgPSBbXS5zbGljZS5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoU2VsZWN0b3IkNS5TVElDS1lfQ09OVEVOVCkpOyAvLyBBZGp1c3QgZml4ZWQgY29udGVudCBwYWRkaW5nXG5cbiAgICAgICAgJChmaXhlZENvbnRlbnQpLmVhY2goZnVuY3Rpb24gKGluZGV4LCBlbGVtZW50KSB7XG4gICAgICAgICAgdmFyIGFjdHVhbFBhZGRpbmcgPSBlbGVtZW50LnN0eWxlLnBhZGRpbmdSaWdodDtcbiAgICAgICAgICB2YXIgY2FsY3VsYXRlZFBhZGRpbmcgPSAkKGVsZW1lbnQpLmNzcygncGFkZGluZy1yaWdodCcpO1xuICAgICAgICAgICQoZWxlbWVudCkuZGF0YSgncGFkZGluZy1yaWdodCcsIGFjdHVhbFBhZGRpbmcpLmNzcygncGFkZGluZy1yaWdodCcsIHBhcnNlRmxvYXQoY2FsY3VsYXRlZFBhZGRpbmcpICsgX3RoaXMxMC5fc2Nyb2xsYmFyV2lkdGggKyBcInB4XCIpO1xuICAgICAgICB9KTsgLy8gQWRqdXN0IHN0aWNreSBjb250ZW50IG1hcmdpblxuXG4gICAgICAgICQoc3RpY2t5Q29udGVudCkuZWFjaChmdW5jdGlvbiAoaW5kZXgsIGVsZW1lbnQpIHtcbiAgICAgICAgICB2YXIgYWN0dWFsTWFyZ2luID0gZWxlbWVudC5zdHlsZS5tYXJnaW5SaWdodDtcbiAgICAgICAgICB2YXIgY2FsY3VsYXRlZE1hcmdpbiA9ICQoZWxlbWVudCkuY3NzKCdtYXJnaW4tcmlnaHQnKTtcbiAgICAgICAgICAkKGVsZW1lbnQpLmRhdGEoJ21hcmdpbi1yaWdodCcsIGFjdHVhbE1hcmdpbikuY3NzKCdtYXJnaW4tcmlnaHQnLCBwYXJzZUZsb2F0KGNhbGN1bGF0ZWRNYXJnaW4pIC0gX3RoaXMxMC5fc2Nyb2xsYmFyV2lkdGggKyBcInB4XCIpO1xuICAgICAgICB9KTsgLy8gQWRqdXN0IGJvZHkgcGFkZGluZ1xuXG4gICAgICAgIHZhciBhY3R1YWxQYWRkaW5nID0gZG9jdW1lbnQuYm9keS5zdHlsZS5wYWRkaW5nUmlnaHQ7XG4gICAgICAgIHZhciBjYWxjdWxhdGVkUGFkZGluZyA9ICQoZG9jdW1lbnQuYm9keSkuY3NzKCdwYWRkaW5nLXJpZ2h0Jyk7XG4gICAgICAgICQoZG9jdW1lbnQuYm9keSkuZGF0YSgncGFkZGluZy1yaWdodCcsIGFjdHVhbFBhZGRpbmcpLmNzcygncGFkZGluZy1yaWdodCcsIHBhcnNlRmxvYXQoY2FsY3VsYXRlZFBhZGRpbmcpICsgdGhpcy5fc2Nyb2xsYmFyV2lkdGggKyBcInB4XCIpO1xuICAgICAgfVxuXG4gICAgICAkKGRvY3VtZW50LmJvZHkpLmFkZENsYXNzKENsYXNzTmFtZSQ1Lk9QRU4pO1xuICAgIH07XG5cbiAgICBfcHJvdG8uX3Jlc2V0U2Nyb2xsYmFyID0gZnVuY3Rpb24gX3Jlc2V0U2Nyb2xsYmFyKCkge1xuICAgICAgLy8gUmVzdG9yZSBmaXhlZCBjb250ZW50IHBhZGRpbmdcbiAgICAgIHZhciBmaXhlZENvbnRlbnQgPSBbXS5zbGljZS5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoU2VsZWN0b3IkNS5GSVhFRF9DT05URU5UKSk7XG4gICAgICAkKGZpeGVkQ29udGVudCkuZWFjaChmdW5jdGlvbiAoaW5kZXgsIGVsZW1lbnQpIHtcbiAgICAgICAgdmFyIHBhZGRpbmcgPSAkKGVsZW1lbnQpLmRhdGEoJ3BhZGRpbmctcmlnaHQnKTtcbiAgICAgICAgJChlbGVtZW50KS5yZW1vdmVEYXRhKCdwYWRkaW5nLXJpZ2h0Jyk7XG4gICAgICAgIGVsZW1lbnQuc3R5bGUucGFkZGluZ1JpZ2h0ID0gcGFkZGluZyA/IHBhZGRpbmcgOiAnJztcbiAgICAgIH0pOyAvLyBSZXN0b3JlIHN0aWNreSBjb250ZW50XG5cbiAgICAgIHZhciBlbGVtZW50cyA9IFtdLnNsaWNlLmNhbGwoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIlwiICsgU2VsZWN0b3IkNS5TVElDS1lfQ09OVEVOVCkpO1xuICAgICAgJChlbGVtZW50cykuZWFjaChmdW5jdGlvbiAoaW5kZXgsIGVsZW1lbnQpIHtcbiAgICAgICAgdmFyIG1hcmdpbiA9ICQoZWxlbWVudCkuZGF0YSgnbWFyZ2luLXJpZ2h0Jyk7XG5cbiAgICAgICAgaWYgKHR5cGVvZiBtYXJnaW4gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgJChlbGVtZW50KS5jc3MoJ21hcmdpbi1yaWdodCcsIG1hcmdpbikucmVtb3ZlRGF0YSgnbWFyZ2luLXJpZ2h0Jyk7XG4gICAgICAgIH1cbiAgICAgIH0pOyAvLyBSZXN0b3JlIGJvZHkgcGFkZGluZ1xuXG4gICAgICB2YXIgcGFkZGluZyA9ICQoZG9jdW1lbnQuYm9keSkuZGF0YSgncGFkZGluZy1yaWdodCcpO1xuICAgICAgJChkb2N1bWVudC5ib2R5KS5yZW1vdmVEYXRhKCdwYWRkaW5nLXJpZ2h0Jyk7XG4gICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLnBhZGRpbmdSaWdodCA9IHBhZGRpbmcgPyBwYWRkaW5nIDogJyc7XG4gICAgfTtcblxuICAgIF9wcm90by5fZ2V0U2Nyb2xsYmFyV2lkdGggPSBmdW5jdGlvbiBfZ2V0U2Nyb2xsYmFyV2lkdGgoKSB7XG4gICAgICAvLyB0aHggZC53YWxzaFxuICAgICAgdmFyIHNjcm9sbERpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgc2Nyb2xsRGl2LmNsYXNzTmFtZSA9IENsYXNzTmFtZSQ1LlNDUk9MTEJBUl9NRUFTVVJFUjtcbiAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc2Nyb2xsRGl2KTtcbiAgICAgIHZhciBzY3JvbGxiYXJXaWR0aCA9IHNjcm9sbERpdi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aCAtIHNjcm9sbERpdi5jbGllbnRXaWR0aDtcbiAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoc2Nyb2xsRGl2KTtcbiAgICAgIHJldHVybiBzY3JvbGxiYXJXaWR0aDtcbiAgICB9IC8vIFN0YXRpY1xuICAgIDtcblxuICAgIE1vZGFsLl9qUXVlcnlJbnRlcmZhY2UgPSBmdW5jdGlvbiBfalF1ZXJ5SW50ZXJmYWNlKGNvbmZpZywgcmVsYXRlZFRhcmdldCkge1xuICAgICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBkYXRhID0gJCh0aGlzKS5kYXRhKERBVEFfS0VZJDUpO1xuXG4gICAgICAgIHZhciBfY29uZmlnID0gX29iamVjdFNwcmVhZDIoe30sIERlZmF1bHQkMywge30sICQodGhpcykuZGF0YSgpLCB7fSwgdHlwZW9mIGNvbmZpZyA9PT0gJ29iamVjdCcgJiYgY29uZmlnID8gY29uZmlnIDoge30pO1xuXG4gICAgICAgIGlmICghZGF0YSkge1xuICAgICAgICAgIGRhdGEgPSBuZXcgTW9kYWwodGhpcywgX2NvbmZpZyk7XG4gICAgICAgICAgJCh0aGlzKS5kYXRhKERBVEFfS0VZJDUsIGRhdGEpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHR5cGVvZiBjb25maWcgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgaWYgKHR5cGVvZiBkYXRhW2NvbmZpZ10gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiTm8gbWV0aG9kIG5hbWVkIFxcXCJcIiArIGNvbmZpZyArIFwiXFxcIlwiKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBkYXRhW2NvbmZpZ10ocmVsYXRlZFRhcmdldCk7XG4gICAgICAgIH0gZWxzZSBpZiAoX2NvbmZpZy5zaG93KSB7XG4gICAgICAgICAgZGF0YS5zaG93KHJlbGF0ZWRUYXJnZXQpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgX2NyZWF0ZUNsYXNzKE1vZGFsLCBudWxsLCBbe1xuICAgICAga2V5OiBcIlZFUlNJT05cIixcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICByZXR1cm4gVkVSU0lPTiQ1O1xuICAgICAgfVxuICAgIH0sIHtcbiAgICAgIGtleTogXCJEZWZhdWx0XCIsXG4gICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgcmV0dXJuIERlZmF1bHQkMztcbiAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gTW9kYWw7XG4gIH0oKTtcbiAgLyoqXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKiBEYXRhIEFwaSBpbXBsZW1lbnRhdGlvblxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICovXG5cblxuICAkKGRvY3VtZW50KS5vbihFdmVudCQ1LkNMSUNLX0RBVEFfQVBJLCBTZWxlY3RvciQ1LkRBVEFfVE9HR0xFLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICB2YXIgX3RoaXMxMSA9IHRoaXM7XG5cbiAgICB2YXIgdGFyZ2V0O1xuICAgIHZhciBzZWxlY3RvciA9IFV0aWwuZ2V0U2VsZWN0b3JGcm9tRWxlbWVudCh0aGlzKTtcblxuICAgIGlmIChzZWxlY3Rvcikge1xuICAgICAgdGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XG4gICAgfVxuXG4gICAgdmFyIGNvbmZpZyA9ICQodGFyZ2V0KS5kYXRhKERBVEFfS0VZJDUpID8gJ3RvZ2dsZScgOiBfb2JqZWN0U3ByZWFkMih7fSwgJCh0YXJnZXQpLmRhdGEoKSwge30sICQodGhpcykuZGF0YSgpKTtcblxuICAgIGlmICh0aGlzLnRhZ05hbWUgPT09ICdBJyB8fCB0aGlzLnRhZ05hbWUgPT09ICdBUkVBJykge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG5cbiAgICB2YXIgJHRhcmdldCA9ICQodGFyZ2V0KS5vbmUoRXZlbnQkNS5TSE9XLCBmdW5jdGlvbiAoc2hvd0V2ZW50KSB7XG4gICAgICBpZiAoc2hvd0V2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpKSB7XG4gICAgICAgIC8vIE9ubHkgcmVnaXN0ZXIgZm9jdXMgcmVzdG9yZXIgaWYgbW9kYWwgd2lsbCBhY3R1YWxseSBnZXQgc2hvd25cbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAkdGFyZ2V0Lm9uZShFdmVudCQ1LkhJRERFTiwgZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoJChfdGhpczExKS5pcygnOnZpc2libGUnKSkge1xuICAgICAgICAgIF90aGlzMTEuZm9jdXMoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBNb2RhbC5falF1ZXJ5SW50ZXJmYWNlLmNhbGwoJCh0YXJnZXQpLCBjb25maWcsIHRoaXMpO1xuICB9KTtcbiAgLyoqXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKiBqUXVlcnlcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqL1xuXG4gICQuZm5bTkFNRSQ1XSA9IE1vZGFsLl9qUXVlcnlJbnRlcmZhY2U7XG4gICQuZm5bTkFNRSQ1XS5Db25zdHJ1Y3RvciA9IE1vZGFsO1xuXG4gICQuZm5bTkFNRSQ1XS5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xuICAgICQuZm5bTkFNRSQ1XSA9IEpRVUVSWV9OT19DT05GTElDVCQ1O1xuICAgIHJldHVybiBNb2RhbC5falF1ZXJ5SW50ZXJmYWNlO1xuICB9O1xuXG4gIC8qKlxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKiBCb290c3RyYXAgKHY0LjQuMSk6IHRvb2xzL3Nhbml0aXplci5qc1xuICAgKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21hc3Rlci9MSUNFTlNFKVxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKi9cbiAgdmFyIHVyaUF0dHJzID0gWydiYWNrZ3JvdW5kJywgJ2NpdGUnLCAnaHJlZicsICdpdGVtdHlwZScsICdsb25nZGVzYycsICdwb3N0ZXInLCAnc3JjJywgJ3hsaW5rOmhyZWYnXTtcbiAgdmFyIEFSSUFfQVRUUklCVVRFX1BBVFRFUk4gPSAvXmFyaWEtW1xcdy1dKiQvaTtcbiAgdmFyIERlZmF1bHRXaGl0ZWxpc3QgPSB7XG4gICAgLy8gR2xvYmFsIGF0dHJpYnV0ZXMgYWxsb3dlZCBvbiBhbnkgc3VwcGxpZWQgZWxlbWVudCBiZWxvdy5cbiAgICAnKic6IFsnY2xhc3MnLCAnZGlyJywgJ2lkJywgJ2xhbmcnLCAncm9sZScsIEFSSUFfQVRUUklCVVRFX1BBVFRFUk5dLFxuICAgIGE6IFsndGFyZ2V0JywgJ2hyZWYnLCAndGl0bGUnLCAncmVsJ10sXG4gICAgYXJlYTogW10sXG4gICAgYjogW10sXG4gICAgYnI6IFtdLFxuICAgIGNvbDogW10sXG4gICAgY29kZTogW10sXG4gICAgZGl2OiBbXSxcbiAgICBlbTogW10sXG4gICAgaHI6IFtdLFxuICAgIGgxOiBbXSxcbiAgICBoMjogW10sXG4gICAgaDM6IFtdLFxuICAgIGg0OiBbXSxcbiAgICBoNTogW10sXG4gICAgaDY6IFtdLFxuICAgIGk6IFtdLFxuICAgIGltZzogWydzcmMnLCAnYWx0JywgJ3RpdGxlJywgJ3dpZHRoJywgJ2hlaWdodCddLFxuICAgIGxpOiBbXSxcbiAgICBvbDogW10sXG4gICAgcDogW10sXG4gICAgcHJlOiBbXSxcbiAgICBzOiBbXSxcbiAgICBzbWFsbDogW10sXG4gICAgc3BhbjogW10sXG4gICAgc3ViOiBbXSxcbiAgICBzdXA6IFtdLFxuICAgIHN0cm9uZzogW10sXG4gICAgdTogW10sXG4gICAgdWw6IFtdXG4gIH07XG4gIC8qKlxuICAgKiBBIHBhdHRlcm4gdGhhdCByZWNvZ25pemVzIGEgY29tbW9ubHkgdXNlZnVsIHN1YnNldCBvZiBVUkxzIHRoYXQgYXJlIHNhZmUuXG4gICAqXG4gICAqIFNob3V0b3V0IHRvIEFuZ3VsYXIgNyBodHRwczovL2dpdGh1Yi5jb20vYW5ndWxhci9hbmd1bGFyL2Jsb2IvNy4yLjQvcGFja2FnZXMvY29yZS9zcmMvc2FuaXRpemF0aW9uL3VybF9zYW5pdGl6ZXIudHNcbiAgICovXG5cbiAgdmFyIFNBRkVfVVJMX1BBVFRFUk4gPSAvXig/Oig/Omh0dHBzP3xtYWlsdG98ZnRwfHRlbHxmaWxlKTp8W14mOi8/I10qKD86Wy8/I118JCkpL2dpO1xuICAvKipcbiAgICogQSBwYXR0ZXJuIHRoYXQgbWF0Y2hlcyBzYWZlIGRhdGEgVVJMcy4gT25seSBtYXRjaGVzIGltYWdlLCB2aWRlbyBhbmQgYXVkaW8gdHlwZXMuXG4gICAqXG4gICAqIFNob3V0b3V0IHRvIEFuZ3VsYXIgNyBodHRwczovL2dpdGh1Yi5jb20vYW5ndWxhci9hbmd1bGFyL2Jsb2IvNy4yLjQvcGFja2FnZXMvY29yZS9zcmMvc2FuaXRpemF0aW9uL3VybF9zYW5pdGl6ZXIudHNcbiAgICovXG5cbiAgdmFyIERBVEFfVVJMX1BBVFRFUk4gPSAvXmRhdGE6KD86aW1hZ2VcXC8oPzpibXB8Z2lmfGpwZWd8anBnfHBuZ3x0aWZmfHdlYnApfHZpZGVvXFwvKD86bXBlZ3xtcDR8b2dnfHdlYm0pfGF1ZGlvXFwvKD86bXAzfG9nYXxvZ2d8b3B1cykpO2Jhc2U2NCxbYS16MC05Ky9dKz0qJC9pO1xuXG4gIGZ1bmN0aW9uIGFsbG93ZWRBdHRyaWJ1dGUoYXR0ciwgYWxsb3dlZEF0dHJpYnV0ZUxpc3QpIHtcbiAgICB2YXIgYXR0ck5hbWUgPSBhdHRyLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XG5cbiAgICBpZiAoYWxsb3dlZEF0dHJpYnV0ZUxpc3QuaW5kZXhPZihhdHRyTmFtZSkgIT09IC0xKSB7XG4gICAgICBpZiAodXJpQXR0cnMuaW5kZXhPZihhdHRyTmFtZSkgIT09IC0xKSB7XG4gICAgICAgIHJldHVybiBCb29sZWFuKGF0dHIubm9kZVZhbHVlLm1hdGNoKFNBRkVfVVJMX1BBVFRFUk4pIHx8IGF0dHIubm9kZVZhbHVlLm1hdGNoKERBVEFfVVJMX1BBVFRFUk4pKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgdmFyIHJlZ0V4cCA9IGFsbG93ZWRBdHRyaWJ1dGVMaXN0LmZpbHRlcihmdW5jdGlvbiAoYXR0clJlZ2V4KSB7XG4gICAgICByZXR1cm4gYXR0clJlZ2V4IGluc3RhbmNlb2YgUmVnRXhwO1xuICAgIH0pOyAvLyBDaGVjayBpZiBhIHJlZ3VsYXIgZXhwcmVzc2lvbiB2YWxpZGF0ZXMgdGhlIGF0dHJpYnV0ZS5cblxuICAgIGZvciAodmFyIGkgPSAwLCBsID0gcmVnRXhwLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgaWYgKGF0dHJOYW1lLm1hdGNoKHJlZ0V4cFtpXSkpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgZnVuY3Rpb24gc2FuaXRpemVIdG1sKHVuc2FmZUh0bWwsIHdoaXRlTGlzdCwgc2FuaXRpemVGbikge1xuICAgIGlmICh1bnNhZmVIdG1sLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuIHVuc2FmZUh0bWw7XG4gICAgfVxuXG4gICAgaWYgKHNhbml0aXplRm4gJiYgdHlwZW9mIHNhbml0aXplRm4gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJldHVybiBzYW5pdGl6ZUZuKHVuc2FmZUh0bWwpO1xuICAgIH1cblxuICAgIHZhciBkb21QYXJzZXIgPSBuZXcgd2luZG93LkRPTVBhcnNlcigpO1xuICAgIHZhciBjcmVhdGVkRG9jdW1lbnQgPSBkb21QYXJzZXIucGFyc2VGcm9tU3RyaW5nKHVuc2FmZUh0bWwsICd0ZXh0L2h0bWwnKTtcbiAgICB2YXIgd2hpdGVsaXN0S2V5cyA9IE9iamVjdC5rZXlzKHdoaXRlTGlzdCk7XG4gICAgdmFyIGVsZW1lbnRzID0gW10uc2xpY2UuY2FsbChjcmVhdGVkRG9jdW1lbnQuYm9keS5xdWVyeVNlbGVjdG9yQWxsKCcqJykpO1xuXG4gICAgdmFyIF9sb29wID0gZnVuY3Rpb24gX2xvb3AoaSwgbGVuKSB7XG4gICAgICB2YXIgZWwgPSBlbGVtZW50c1tpXTtcbiAgICAgIHZhciBlbE5hbWUgPSBlbC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xuXG4gICAgICBpZiAod2hpdGVsaXN0S2V5cy5pbmRleE9mKGVsLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkpID09PSAtMSkge1xuICAgICAgICBlbC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGVsKTtcbiAgICAgICAgcmV0dXJuIFwiY29udGludWVcIjtcbiAgICAgIH1cblxuICAgICAgdmFyIGF0dHJpYnV0ZUxpc3QgPSBbXS5zbGljZS5jYWxsKGVsLmF0dHJpYnV0ZXMpO1xuICAgICAgdmFyIHdoaXRlbGlzdGVkQXR0cmlidXRlcyA9IFtdLmNvbmNhdCh3aGl0ZUxpc3RbJyonXSB8fCBbXSwgd2hpdGVMaXN0W2VsTmFtZV0gfHwgW10pO1xuICAgICAgYXR0cmlidXRlTGlzdC5mb3JFYWNoKGZ1bmN0aW9uIChhdHRyKSB7XG4gICAgICAgIGlmICghYWxsb3dlZEF0dHJpYnV0ZShhdHRyLCB3aGl0ZWxpc3RlZEF0dHJpYnV0ZXMpKSB7XG4gICAgICAgICAgZWwucmVtb3ZlQXR0cmlidXRlKGF0dHIubm9kZU5hbWUpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IGVsZW1lbnRzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICB2YXIgX3JldCA9IF9sb29wKGkpO1xuXG4gICAgICBpZiAoX3JldCA9PT0gXCJjb250aW51ZVwiKSBjb250aW51ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gY3JlYXRlZERvY3VtZW50LmJvZHkuaW5uZXJIVE1MO1xuICB9XG5cbiAgLyoqXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKiBDb25zdGFudHNcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqL1xuXG4gIHZhciBOQU1FJDYgPSAndG9vbHRpcCc7XG4gIHZhciBWRVJTSU9OJDYgPSAnNC40LjEnO1xuICB2YXIgREFUQV9LRVkkNiA9ICdicy50b29sdGlwJztcbiAgdmFyIEVWRU5UX0tFWSQ2ID0gXCIuXCIgKyBEQVRBX0tFWSQ2O1xuICB2YXIgSlFVRVJZX05PX0NPTkZMSUNUJDYgPSAkLmZuW05BTUUkNl07XG4gIHZhciBDTEFTU19QUkVGSVggPSAnYnMtdG9vbHRpcCc7XG4gIHZhciBCU0NMU19QUkVGSVhfUkVHRVggPSBuZXcgUmVnRXhwKFwiKF58XFxcXHMpXCIgKyBDTEFTU19QUkVGSVggKyBcIlxcXFxTK1wiLCAnZycpO1xuICB2YXIgRElTQUxMT1dFRF9BVFRSSUJVVEVTID0gWydzYW5pdGl6ZScsICd3aGl0ZUxpc3QnLCAnc2FuaXRpemVGbiddO1xuICB2YXIgRGVmYXVsdFR5cGUkNCA9IHtcbiAgICBhbmltYXRpb246ICdib29sZWFuJyxcbiAgICB0ZW1wbGF0ZTogJ3N0cmluZycsXG4gICAgdGl0bGU6ICcoc3RyaW5nfGVsZW1lbnR8ZnVuY3Rpb24pJyxcbiAgICB0cmlnZ2VyOiAnc3RyaW5nJyxcbiAgICBkZWxheTogJyhudW1iZXJ8b2JqZWN0KScsXG4gICAgaHRtbDogJ2Jvb2xlYW4nLFxuICAgIHNlbGVjdG9yOiAnKHN0cmluZ3xib29sZWFuKScsXG4gICAgcGxhY2VtZW50OiAnKHN0cmluZ3xmdW5jdGlvbiknLFxuICAgIG9mZnNldDogJyhudW1iZXJ8c3RyaW5nfGZ1bmN0aW9uKScsXG4gICAgY29udGFpbmVyOiAnKHN0cmluZ3xlbGVtZW50fGJvb2xlYW4pJyxcbiAgICBmYWxsYmFja1BsYWNlbWVudDogJyhzdHJpbmd8YXJyYXkpJyxcbiAgICBib3VuZGFyeTogJyhzdHJpbmd8ZWxlbWVudCknLFxuICAgIHNhbml0aXplOiAnYm9vbGVhbicsXG4gICAgc2FuaXRpemVGbjogJyhudWxsfGZ1bmN0aW9uKScsXG4gICAgd2hpdGVMaXN0OiAnb2JqZWN0JyxcbiAgICBwb3BwZXJDb25maWc6ICcobnVsbHxvYmplY3QpJ1xuICB9O1xuICB2YXIgQXR0YWNobWVudE1hcCQxID0ge1xuICAgIEFVVE86ICdhdXRvJyxcbiAgICBUT1A6ICd0b3AnLFxuICAgIFJJR0hUOiAncmlnaHQnLFxuICAgIEJPVFRPTTogJ2JvdHRvbScsXG4gICAgTEVGVDogJ2xlZnQnXG4gIH07XG4gIHZhciBEZWZhdWx0JDQgPSB7XG4gICAgYW5pbWF0aW9uOiB0cnVlLFxuICAgIHRlbXBsYXRlOiAnPGRpdiBjbGFzcz1cInRvb2x0aXBcIiByb2xlPVwidG9vbHRpcFwiPicgKyAnPGRpdiBjbGFzcz1cImFycm93XCI+PC9kaXY+JyArICc8ZGl2IGNsYXNzPVwidG9vbHRpcC1pbm5lclwiPjwvZGl2PjwvZGl2PicsXG4gICAgdHJpZ2dlcjogJ2hvdmVyIGZvY3VzJyxcbiAgICB0aXRsZTogJycsXG4gICAgZGVsYXk6IDAsXG4gICAgaHRtbDogZmFsc2UsXG4gICAgc2VsZWN0b3I6IGZhbHNlLFxuICAgIHBsYWNlbWVudDogJ3RvcCcsXG4gICAgb2Zmc2V0OiAwLFxuICAgIGNvbnRhaW5lcjogZmFsc2UsXG4gICAgZmFsbGJhY2tQbGFjZW1lbnQ6ICdmbGlwJyxcbiAgICBib3VuZGFyeTogJ3Njcm9sbFBhcmVudCcsXG4gICAgc2FuaXRpemU6IHRydWUsXG4gICAgc2FuaXRpemVGbjogbnVsbCxcbiAgICB3aGl0ZUxpc3Q6IERlZmF1bHRXaGl0ZWxpc3QsXG4gICAgcG9wcGVyQ29uZmlnOiBudWxsXG4gIH07XG4gIHZhciBIb3ZlclN0YXRlID0ge1xuICAgIFNIT1c6ICdzaG93JyxcbiAgICBPVVQ6ICdvdXQnXG4gIH07XG4gIHZhciBFdmVudCQ2ID0ge1xuICAgIEhJREU6IFwiaGlkZVwiICsgRVZFTlRfS0VZJDYsXG4gICAgSElEREVOOiBcImhpZGRlblwiICsgRVZFTlRfS0VZJDYsXG4gICAgU0hPVzogXCJzaG93XCIgKyBFVkVOVF9LRVkkNixcbiAgICBTSE9XTjogXCJzaG93blwiICsgRVZFTlRfS0VZJDYsXG4gICAgSU5TRVJURUQ6IFwiaW5zZXJ0ZWRcIiArIEVWRU5UX0tFWSQ2LFxuICAgIENMSUNLOiBcImNsaWNrXCIgKyBFVkVOVF9LRVkkNixcbiAgICBGT0NVU0lOOiBcImZvY3VzaW5cIiArIEVWRU5UX0tFWSQ2LFxuICAgIEZPQ1VTT1VUOiBcImZvY3Vzb3V0XCIgKyBFVkVOVF9LRVkkNixcbiAgICBNT1VTRUVOVEVSOiBcIm1vdXNlZW50ZXJcIiArIEVWRU5UX0tFWSQ2LFxuICAgIE1PVVNFTEVBVkU6IFwibW91c2VsZWF2ZVwiICsgRVZFTlRfS0VZJDZcbiAgfTtcbiAgdmFyIENsYXNzTmFtZSQ2ID0ge1xuICAgIEZBREU6ICdmYWRlJyxcbiAgICBTSE9XOiAnc2hvdydcbiAgfTtcbiAgdmFyIFNlbGVjdG9yJDYgPSB7XG4gICAgVE9PTFRJUDogJy50b29sdGlwJyxcbiAgICBUT09MVElQX0lOTkVSOiAnLnRvb2x0aXAtaW5uZXInLFxuICAgIEFSUk9XOiAnLmFycm93J1xuICB9O1xuICB2YXIgVHJpZ2dlciA9IHtcbiAgICBIT1ZFUjogJ2hvdmVyJyxcbiAgICBGT0NVUzogJ2ZvY3VzJyxcbiAgICBDTElDSzogJ2NsaWNrJyxcbiAgICBNQU5VQUw6ICdtYW51YWwnXG4gIH07XG4gIC8qKlxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICogQ2xhc3MgRGVmaW5pdGlvblxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICovXG5cbiAgdmFyIFRvb2x0aXAgPVxuICAvKiNfX1BVUkVfXyovXG4gIGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBUb29sdGlwKGVsZW1lbnQsIGNvbmZpZykge1xuICAgICAgaWYgKHR5cGVvZiBQb3BwZXIgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0Jvb3RzdHJhcFxcJ3MgdG9vbHRpcHMgcmVxdWlyZSBQb3BwZXIuanMgKGh0dHBzOi8vcG9wcGVyLmpzLm9yZy8pJyk7XG4gICAgICB9IC8vIHByaXZhdGVcblxuXG4gICAgICB0aGlzLl9pc0VuYWJsZWQgPSB0cnVlO1xuICAgICAgdGhpcy5fdGltZW91dCA9IDA7XG4gICAgICB0aGlzLl9ob3ZlclN0YXRlID0gJyc7XG4gICAgICB0aGlzLl9hY3RpdmVUcmlnZ2VyID0ge307XG4gICAgICB0aGlzLl9wb3BwZXIgPSBudWxsOyAvLyBQcm90ZWN0ZWRcblxuICAgICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcbiAgICAgIHRoaXMuY29uZmlnID0gdGhpcy5fZ2V0Q29uZmlnKGNvbmZpZyk7XG4gICAgICB0aGlzLnRpcCA9IG51bGw7XG5cbiAgICAgIHRoaXMuX3NldExpc3RlbmVycygpO1xuICAgIH0gLy8gR2V0dGVyc1xuXG5cbiAgICB2YXIgX3Byb3RvID0gVG9vbHRpcC5wcm90b3R5cGU7XG5cbiAgICAvLyBQdWJsaWNcbiAgICBfcHJvdG8uZW5hYmxlID0gZnVuY3Rpb24gZW5hYmxlKCkge1xuICAgICAgdGhpcy5faXNFbmFibGVkID0gdHJ1ZTtcbiAgICB9O1xuXG4gICAgX3Byb3RvLmRpc2FibGUgPSBmdW5jdGlvbiBkaXNhYmxlKCkge1xuICAgICAgdGhpcy5faXNFbmFibGVkID0gZmFsc2U7XG4gICAgfTtcblxuICAgIF9wcm90by50b2dnbGVFbmFibGVkID0gZnVuY3Rpb24gdG9nZ2xlRW5hYmxlZCgpIHtcbiAgICAgIHRoaXMuX2lzRW5hYmxlZCA9ICF0aGlzLl9pc0VuYWJsZWQ7XG4gICAgfTtcblxuICAgIF9wcm90by50b2dnbGUgPSBmdW5jdGlvbiB0b2dnbGUoZXZlbnQpIHtcbiAgICAgIGlmICghdGhpcy5faXNFbmFibGVkKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKGV2ZW50KSB7XG4gICAgICAgIHZhciBkYXRhS2V5ID0gdGhpcy5jb25zdHJ1Y3Rvci5EQVRBX0tFWTtcbiAgICAgICAgdmFyIGNvbnRleHQgPSAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpLmRhdGEoZGF0YUtleSk7XG5cbiAgICAgICAgaWYgKCFjb250ZXh0KSB7XG4gICAgICAgICAgY29udGV4dCA9IG5ldyB0aGlzLmNvbnN0cnVjdG9yKGV2ZW50LmN1cnJlbnRUYXJnZXQsIHRoaXMuX2dldERlbGVnYXRlQ29uZmlnKCkpO1xuICAgICAgICAgICQoZXZlbnQuY3VycmVudFRhcmdldCkuZGF0YShkYXRhS2V5LCBjb250ZXh0KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnRleHQuX2FjdGl2ZVRyaWdnZXIuY2xpY2sgPSAhY29udGV4dC5fYWN0aXZlVHJpZ2dlci5jbGljaztcblxuICAgICAgICBpZiAoY29udGV4dC5faXNXaXRoQWN0aXZlVHJpZ2dlcigpKSB7XG4gICAgICAgICAgY29udGV4dC5fZW50ZXIobnVsbCwgY29udGV4dCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY29udGV4dC5fbGVhdmUobnVsbCwgY29udGV4dCk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmICgkKHRoaXMuZ2V0VGlwRWxlbWVudCgpKS5oYXNDbGFzcyhDbGFzc05hbWUkNi5TSE9XKSkge1xuICAgICAgICAgIHRoaXMuX2xlYXZlKG51bGwsIHRoaXMpO1xuXG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5fZW50ZXIobnVsbCwgdGhpcyk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90by5kaXNwb3NlID0gZnVuY3Rpb24gZGlzcG9zZSgpIHtcbiAgICAgIGNsZWFyVGltZW91dCh0aGlzLl90aW1lb3V0KTtcbiAgICAgICQucmVtb3ZlRGF0YSh0aGlzLmVsZW1lbnQsIHRoaXMuY29uc3RydWN0b3IuREFUQV9LRVkpO1xuICAgICAgJCh0aGlzLmVsZW1lbnQpLm9mZih0aGlzLmNvbnN0cnVjdG9yLkVWRU5UX0tFWSk7XG4gICAgICAkKHRoaXMuZWxlbWVudCkuY2xvc2VzdCgnLm1vZGFsJykub2ZmKCdoaWRlLmJzLm1vZGFsJywgdGhpcy5faGlkZU1vZGFsSGFuZGxlcik7XG5cbiAgICAgIGlmICh0aGlzLnRpcCkge1xuICAgICAgICAkKHRoaXMudGlwKS5yZW1vdmUoKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5faXNFbmFibGVkID0gbnVsbDtcbiAgICAgIHRoaXMuX3RpbWVvdXQgPSBudWxsO1xuICAgICAgdGhpcy5faG92ZXJTdGF0ZSA9IG51bGw7XG4gICAgICB0aGlzLl9hY3RpdmVUcmlnZ2VyID0gbnVsbDtcblxuICAgICAgaWYgKHRoaXMuX3BvcHBlcikge1xuICAgICAgICB0aGlzLl9wb3BwZXIuZGVzdHJveSgpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl9wb3BwZXIgPSBudWxsO1xuICAgICAgdGhpcy5lbGVtZW50ID0gbnVsbDtcbiAgICAgIHRoaXMuY29uZmlnID0gbnVsbDtcbiAgICAgIHRoaXMudGlwID0gbnVsbDtcbiAgICB9O1xuXG4gICAgX3Byb3RvLnNob3cgPSBmdW5jdGlvbiBzaG93KCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgaWYgKCQodGhpcy5lbGVtZW50KS5jc3MoJ2Rpc3BsYXknKSA9PT0gJ25vbmUnKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignUGxlYXNlIHVzZSBzaG93IG9uIHZpc2libGUgZWxlbWVudHMnKTtcbiAgICAgIH1cblxuICAgICAgdmFyIHNob3dFdmVudCA9ICQuRXZlbnQodGhpcy5jb25zdHJ1Y3Rvci5FdmVudC5TSE9XKTtcblxuICAgICAgaWYgKHRoaXMuaXNXaXRoQ29udGVudCgpICYmIHRoaXMuX2lzRW5hYmxlZCkge1xuICAgICAgICAkKHRoaXMuZWxlbWVudCkudHJpZ2dlcihzaG93RXZlbnQpO1xuICAgICAgICB2YXIgc2hhZG93Um9vdCA9IFV0aWwuZmluZFNoYWRvd1Jvb3QodGhpcy5lbGVtZW50KTtcbiAgICAgICAgdmFyIGlzSW5UaGVEb20gPSAkLmNvbnRhaW5zKHNoYWRvd1Jvb3QgIT09IG51bGwgPyBzaGFkb3dSb290IDogdGhpcy5lbGVtZW50Lm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LCB0aGlzLmVsZW1lbnQpO1xuXG4gICAgICAgIGlmIChzaG93RXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkgfHwgIWlzSW5UaGVEb20pIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgdGlwID0gdGhpcy5nZXRUaXBFbGVtZW50KCk7XG4gICAgICAgIHZhciB0aXBJZCA9IFV0aWwuZ2V0VUlEKHRoaXMuY29uc3RydWN0b3IuTkFNRSk7XG4gICAgICAgIHRpcC5zZXRBdHRyaWJ1dGUoJ2lkJywgdGlwSWQpO1xuICAgICAgICB0aGlzLmVsZW1lbnQuc2V0QXR0cmlidXRlKCdhcmlhLWRlc2NyaWJlZGJ5JywgdGlwSWQpO1xuICAgICAgICB0aGlzLnNldENvbnRlbnQoKTtcblxuICAgICAgICBpZiAodGhpcy5jb25maWcuYW5pbWF0aW9uKSB7XG4gICAgICAgICAgJCh0aXApLmFkZENsYXNzKENsYXNzTmFtZSQ2LkZBREUpO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHBsYWNlbWVudCA9IHR5cGVvZiB0aGlzLmNvbmZpZy5wbGFjZW1lbnQgPT09ICdmdW5jdGlvbicgPyB0aGlzLmNvbmZpZy5wbGFjZW1lbnQuY2FsbCh0aGlzLCB0aXAsIHRoaXMuZWxlbWVudCkgOiB0aGlzLmNvbmZpZy5wbGFjZW1lbnQ7XG5cbiAgICAgICAgdmFyIGF0dGFjaG1lbnQgPSB0aGlzLl9nZXRBdHRhY2htZW50KHBsYWNlbWVudCk7XG5cbiAgICAgICAgdGhpcy5hZGRBdHRhY2htZW50Q2xhc3MoYXR0YWNobWVudCk7XG5cbiAgICAgICAgdmFyIGNvbnRhaW5lciA9IHRoaXMuX2dldENvbnRhaW5lcigpO1xuXG4gICAgICAgICQodGlwKS5kYXRhKHRoaXMuY29uc3RydWN0b3IuREFUQV9LRVksIHRoaXMpO1xuXG4gICAgICAgIGlmICghJC5jb250YWlucyh0aGlzLmVsZW1lbnQub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsIHRoaXMudGlwKSkge1xuICAgICAgICAgICQodGlwKS5hcHBlbmRUbyhjb250YWluZXIpO1xuICAgICAgICB9XG5cbiAgICAgICAgJCh0aGlzLmVsZW1lbnQpLnRyaWdnZXIodGhpcy5jb25zdHJ1Y3Rvci5FdmVudC5JTlNFUlRFRCk7XG4gICAgICAgIHRoaXMuX3BvcHBlciA9IG5ldyBQb3BwZXIodGhpcy5lbGVtZW50LCB0aXAsIHRoaXMuX2dldFBvcHBlckNvbmZpZyhhdHRhY2htZW50KSk7XG4gICAgICAgICQodGlwKS5hZGRDbGFzcyhDbGFzc05hbWUkNi5TSE9XKTsgLy8gSWYgdGhpcyBpcyBhIHRvdWNoLWVuYWJsZWQgZGV2aWNlIHdlIGFkZCBleHRyYVxuICAgICAgICAvLyBlbXB0eSBtb3VzZW92ZXIgbGlzdGVuZXJzIHRvIHRoZSBib2R5J3MgaW1tZWRpYXRlIGNoaWxkcmVuO1xuICAgICAgICAvLyBvbmx5IG5lZWRlZCBiZWNhdXNlIG9mIGJyb2tlbiBldmVudCBkZWxlZ2F0aW9uIG9uIGlPU1xuICAgICAgICAvLyBodHRwczovL3d3dy5xdWlya3Ntb2RlLm9yZy9ibG9nL2FyY2hpdmVzLzIwMTQvMDIvbW91c2VfZXZlbnRfYnViLmh0bWxcblxuICAgICAgICBpZiAoJ29udG91Y2hzdGFydCcgaW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KSB7XG4gICAgICAgICAgJChkb2N1bWVudC5ib2R5KS5jaGlsZHJlbigpLm9uKCdtb3VzZW92ZXInLCBudWxsLCAkLm5vb3ApO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGNvbXBsZXRlID0gZnVuY3Rpb24gY29tcGxldGUoKSB7XG4gICAgICAgICAgaWYgKF90aGlzLmNvbmZpZy5hbmltYXRpb24pIHtcbiAgICAgICAgICAgIF90aGlzLl9maXhUcmFuc2l0aW9uKCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgdmFyIHByZXZIb3ZlclN0YXRlID0gX3RoaXMuX2hvdmVyU3RhdGU7XG4gICAgICAgICAgX3RoaXMuX2hvdmVyU3RhdGUgPSBudWxsO1xuICAgICAgICAgICQoX3RoaXMuZWxlbWVudCkudHJpZ2dlcihfdGhpcy5jb25zdHJ1Y3Rvci5FdmVudC5TSE9XTik7XG5cbiAgICAgICAgICBpZiAocHJldkhvdmVyU3RhdGUgPT09IEhvdmVyU3RhdGUuT1VUKSB7XG4gICAgICAgICAgICBfdGhpcy5fbGVhdmUobnVsbCwgX3RoaXMpO1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICBpZiAoJCh0aGlzLnRpcCkuaGFzQ2xhc3MoQ2xhc3NOYW1lJDYuRkFERSkpIHtcbiAgICAgICAgICB2YXIgdHJhbnNpdGlvbkR1cmF0aW9uID0gVXRpbC5nZXRUcmFuc2l0aW9uRHVyYXRpb25Gcm9tRWxlbWVudCh0aGlzLnRpcCk7XG4gICAgICAgICAgJCh0aGlzLnRpcCkub25lKFV0aWwuVFJBTlNJVElPTl9FTkQsIGNvbXBsZXRlKS5lbXVsYXRlVHJhbnNpdGlvbkVuZCh0cmFuc2l0aW9uRHVyYXRpb24pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbXBsZXRlKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3Byb3RvLmhpZGUgPSBmdW5jdGlvbiBoaWRlKGNhbGxiYWNrKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgdmFyIHRpcCA9IHRoaXMuZ2V0VGlwRWxlbWVudCgpO1xuICAgICAgdmFyIGhpZGVFdmVudCA9ICQuRXZlbnQodGhpcy5jb25zdHJ1Y3Rvci5FdmVudC5ISURFKTtcblxuICAgICAgdmFyIGNvbXBsZXRlID0gZnVuY3Rpb24gY29tcGxldGUoKSB7XG4gICAgICAgIGlmIChfdGhpczIuX2hvdmVyU3RhdGUgIT09IEhvdmVyU3RhdGUuU0hPVyAmJiB0aXAucGFyZW50Tm9kZSkge1xuICAgICAgICAgIHRpcC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRpcCk7XG4gICAgICAgIH1cblxuICAgICAgICBfdGhpczIuX2NsZWFuVGlwQ2xhc3MoKTtcblxuICAgICAgICBfdGhpczIuZWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoJ2FyaWEtZGVzY3JpYmVkYnknKTtcblxuICAgICAgICAkKF90aGlzMi5lbGVtZW50KS50cmlnZ2VyKF90aGlzMi5jb25zdHJ1Y3Rvci5FdmVudC5ISURERU4pO1xuXG4gICAgICAgIGlmIChfdGhpczIuX3BvcHBlciAhPT0gbnVsbCkge1xuICAgICAgICAgIF90aGlzMi5fcG9wcGVyLmRlc3Ryb3koKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgICQodGhpcy5lbGVtZW50KS50cmlnZ2VyKGhpZGVFdmVudCk7XG5cbiAgICAgIGlmIChoaWRlRXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAkKHRpcCkucmVtb3ZlQ2xhc3MoQ2xhc3NOYW1lJDYuU0hPVyk7IC8vIElmIHRoaXMgaXMgYSB0b3VjaC1lbmFibGVkIGRldmljZSB3ZSByZW1vdmUgdGhlIGV4dHJhXG4gICAgICAvLyBlbXB0eSBtb3VzZW92ZXIgbGlzdGVuZXJzIHdlIGFkZGVkIGZvciBpT1Mgc3VwcG9ydFxuXG4gICAgICBpZiAoJ29udG91Y2hzdGFydCcgaW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KSB7XG4gICAgICAgICQoZG9jdW1lbnQuYm9keSkuY2hpbGRyZW4oKS5vZmYoJ21vdXNlb3ZlcicsIG51bGwsICQubm9vcCk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuX2FjdGl2ZVRyaWdnZXJbVHJpZ2dlci5DTElDS10gPSBmYWxzZTtcbiAgICAgIHRoaXMuX2FjdGl2ZVRyaWdnZXJbVHJpZ2dlci5GT0NVU10gPSBmYWxzZTtcbiAgICAgIHRoaXMuX2FjdGl2ZVRyaWdnZXJbVHJpZ2dlci5IT1ZFUl0gPSBmYWxzZTtcblxuICAgICAgaWYgKCQodGhpcy50aXApLmhhc0NsYXNzKENsYXNzTmFtZSQ2LkZBREUpKSB7XG4gICAgICAgIHZhciB0cmFuc2l0aW9uRHVyYXRpb24gPSBVdGlsLmdldFRyYW5zaXRpb25EdXJhdGlvbkZyb21FbGVtZW50KHRpcCk7XG4gICAgICAgICQodGlwKS5vbmUoVXRpbC5UUkFOU0lUSU9OX0VORCwgY29tcGxldGUpLmVtdWxhdGVUcmFuc2l0aW9uRW5kKHRyYW5zaXRpb25EdXJhdGlvbik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb21wbGV0ZSgpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl9ob3ZlclN0YXRlID0gJyc7XG4gICAgfTtcblxuICAgIF9wcm90by51cGRhdGUgPSBmdW5jdGlvbiB1cGRhdGUoKSB7XG4gICAgICBpZiAodGhpcy5fcG9wcGVyICE9PSBudWxsKSB7XG4gICAgICAgIHRoaXMuX3BvcHBlci5zY2hlZHVsZVVwZGF0ZSgpO1xuICAgICAgfVxuICAgIH0gLy8gUHJvdGVjdGVkXG4gICAgO1xuXG4gICAgX3Byb3RvLmlzV2l0aENvbnRlbnQgPSBmdW5jdGlvbiBpc1dpdGhDb250ZW50KCkge1xuICAgICAgcmV0dXJuIEJvb2xlYW4odGhpcy5nZXRUaXRsZSgpKTtcbiAgICB9O1xuXG4gICAgX3Byb3RvLmFkZEF0dGFjaG1lbnRDbGFzcyA9IGZ1bmN0aW9uIGFkZEF0dGFjaG1lbnRDbGFzcyhhdHRhY2htZW50KSB7XG4gICAgICAkKHRoaXMuZ2V0VGlwRWxlbWVudCgpKS5hZGRDbGFzcyhDTEFTU19QUkVGSVggKyBcIi1cIiArIGF0dGFjaG1lbnQpO1xuICAgIH07XG5cbiAgICBfcHJvdG8uZ2V0VGlwRWxlbWVudCA9IGZ1bmN0aW9uIGdldFRpcEVsZW1lbnQoKSB7XG4gICAgICB0aGlzLnRpcCA9IHRoaXMudGlwIHx8ICQodGhpcy5jb25maWcudGVtcGxhdGUpWzBdO1xuICAgICAgcmV0dXJuIHRoaXMudGlwO1xuICAgIH07XG5cbiAgICBfcHJvdG8uc2V0Q29udGVudCA9IGZ1bmN0aW9uIHNldENvbnRlbnQoKSB7XG4gICAgICB2YXIgdGlwID0gdGhpcy5nZXRUaXBFbGVtZW50KCk7XG4gICAgICB0aGlzLnNldEVsZW1lbnRDb250ZW50KCQodGlwLnF1ZXJ5U2VsZWN0b3JBbGwoU2VsZWN0b3IkNi5UT09MVElQX0lOTkVSKSksIHRoaXMuZ2V0VGl0bGUoKSk7XG4gICAgICAkKHRpcCkucmVtb3ZlQ2xhc3MoQ2xhc3NOYW1lJDYuRkFERSArIFwiIFwiICsgQ2xhc3NOYW1lJDYuU0hPVyk7XG4gICAgfTtcblxuICAgIF9wcm90by5zZXRFbGVtZW50Q29udGVudCA9IGZ1bmN0aW9uIHNldEVsZW1lbnRDb250ZW50KCRlbGVtZW50LCBjb250ZW50KSB7XG4gICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdvYmplY3QnICYmIChjb250ZW50Lm5vZGVUeXBlIHx8IGNvbnRlbnQuanF1ZXJ5KSkge1xuICAgICAgICAvLyBDb250ZW50IGlzIGEgRE9NIG5vZGUgb3IgYSBqUXVlcnlcbiAgICAgICAgaWYgKHRoaXMuY29uZmlnLmh0bWwpIHtcbiAgICAgICAgICBpZiAoISQoY29udGVudCkucGFyZW50KCkuaXMoJGVsZW1lbnQpKSB7XG4gICAgICAgICAgICAkZWxlbWVudC5lbXB0eSgpLmFwcGVuZChjb250ZW50KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgJGVsZW1lbnQudGV4dCgkKGNvbnRlbnQpLnRleHQoKSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLmNvbmZpZy5odG1sKSB7XG4gICAgICAgIGlmICh0aGlzLmNvbmZpZy5zYW5pdGl6ZSkge1xuICAgICAgICAgIGNvbnRlbnQgPSBzYW5pdGl6ZUh0bWwoY29udGVudCwgdGhpcy5jb25maWcud2hpdGVMaXN0LCB0aGlzLmNvbmZpZy5zYW5pdGl6ZUZuKTtcbiAgICAgICAgfVxuXG4gICAgICAgICRlbGVtZW50Lmh0bWwoY29udGVudCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAkZWxlbWVudC50ZXh0KGNvbnRlbnQpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfcHJvdG8uZ2V0VGl0bGUgPSBmdW5jdGlvbiBnZXRUaXRsZSgpIHtcbiAgICAgIHZhciB0aXRsZSA9IHRoaXMuZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtb3JpZ2luYWwtdGl0bGUnKTtcblxuICAgICAgaWYgKCF0aXRsZSkge1xuICAgICAgICB0aXRsZSA9IHR5cGVvZiB0aGlzLmNvbmZpZy50aXRsZSA9PT0gJ2Z1bmN0aW9uJyA/IHRoaXMuY29uZmlnLnRpdGxlLmNhbGwodGhpcy5lbGVtZW50KSA6IHRoaXMuY29uZmlnLnRpdGxlO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGl0bGU7XG4gICAgfSAvLyBQcml2YXRlXG4gICAgO1xuXG4gICAgX3Byb3RvLl9nZXRQb3BwZXJDb25maWcgPSBmdW5jdGlvbiBfZ2V0UG9wcGVyQ29uZmlnKGF0dGFjaG1lbnQpIHtcbiAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICB2YXIgZGVmYXVsdEJzQ29uZmlnID0ge1xuICAgICAgICBwbGFjZW1lbnQ6IGF0dGFjaG1lbnQsXG4gICAgICAgIG1vZGlmaWVyczoge1xuICAgICAgICAgIG9mZnNldDogdGhpcy5fZ2V0T2Zmc2V0KCksXG4gICAgICAgICAgZmxpcDoge1xuICAgICAgICAgICAgYmVoYXZpb3I6IHRoaXMuY29uZmlnLmZhbGxiYWNrUGxhY2VtZW50XG4gICAgICAgICAgfSxcbiAgICAgICAgICBhcnJvdzoge1xuICAgICAgICAgICAgZWxlbWVudDogU2VsZWN0b3IkNi5BUlJPV1xuICAgICAgICAgIH0sXG4gICAgICAgICAgcHJldmVudE92ZXJmbG93OiB7XG4gICAgICAgICAgICBib3VuZGFyaWVzRWxlbWVudDogdGhpcy5jb25maWcuYm91bmRhcnlcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIG9uQ3JlYXRlOiBmdW5jdGlvbiBvbkNyZWF0ZShkYXRhKSB7XG4gICAgICAgICAgaWYgKGRhdGEub3JpZ2luYWxQbGFjZW1lbnQgIT09IGRhdGEucGxhY2VtZW50KSB7XG4gICAgICAgICAgICBfdGhpczMuX2hhbmRsZVBvcHBlclBsYWNlbWVudENoYW5nZShkYXRhKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIG9uVXBkYXRlOiBmdW5jdGlvbiBvblVwZGF0ZShkYXRhKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzMy5faGFuZGxlUG9wcGVyUGxhY2VtZW50Q2hhbmdlKGRhdGEpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQyKHt9LCBkZWZhdWx0QnNDb25maWcsIHt9LCB0aGlzLmNvbmZpZy5wb3BwZXJDb25maWcpO1xuICAgIH07XG5cbiAgICBfcHJvdG8uX2dldE9mZnNldCA9IGZ1bmN0aW9uIF9nZXRPZmZzZXQoKSB7XG4gICAgICB2YXIgX3RoaXM0ID0gdGhpcztcblxuICAgICAgdmFyIG9mZnNldCA9IHt9O1xuXG4gICAgICBpZiAodHlwZW9mIHRoaXMuY29uZmlnLm9mZnNldCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBvZmZzZXQuZm4gPSBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgIGRhdGEub2Zmc2V0cyA9IF9vYmplY3RTcHJlYWQyKHt9LCBkYXRhLm9mZnNldHMsIHt9LCBfdGhpczQuY29uZmlnLm9mZnNldChkYXRhLm9mZnNldHMsIF90aGlzNC5lbGVtZW50KSB8fCB7fSk7XG4gICAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgICAgIH07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvZmZzZXQub2Zmc2V0ID0gdGhpcy5jb25maWcub2Zmc2V0O1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gb2Zmc2V0O1xuICAgIH07XG5cbiAgICBfcHJvdG8uX2dldENvbnRhaW5lciA9IGZ1bmN0aW9uIF9nZXRDb250YWluZXIoKSB7XG4gICAgICBpZiAodGhpcy5jb25maWcuY29udGFpbmVyID09PSBmYWxzZSkge1xuICAgICAgICByZXR1cm4gZG9jdW1lbnQuYm9keTtcbiAgICAgIH1cblxuICAgICAgaWYgKFV0aWwuaXNFbGVtZW50KHRoaXMuY29uZmlnLmNvbnRhaW5lcikpIHtcbiAgICAgICAgcmV0dXJuICQodGhpcy5jb25maWcuY29udGFpbmVyKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuICQoZG9jdW1lbnQpLmZpbmQodGhpcy5jb25maWcuY29udGFpbmVyKTtcbiAgICB9O1xuXG4gICAgX3Byb3RvLl9nZXRBdHRhY2htZW50ID0gZnVuY3Rpb24gX2dldEF0dGFjaG1lbnQocGxhY2VtZW50KSB7XG4gICAgICByZXR1cm4gQXR0YWNobWVudE1hcCQxW3BsYWNlbWVudC50b1VwcGVyQ2FzZSgpXTtcbiAgICB9O1xuXG4gICAgX3Byb3RvLl9zZXRMaXN0ZW5lcnMgPSBmdW5jdGlvbiBfc2V0TGlzdGVuZXJzKCkge1xuICAgICAgdmFyIF90aGlzNSA9IHRoaXM7XG5cbiAgICAgIHZhciB0cmlnZ2VycyA9IHRoaXMuY29uZmlnLnRyaWdnZXIuc3BsaXQoJyAnKTtcbiAgICAgIHRyaWdnZXJzLmZvckVhY2goZnVuY3Rpb24gKHRyaWdnZXIpIHtcbiAgICAgICAgaWYgKHRyaWdnZXIgPT09ICdjbGljaycpIHtcbiAgICAgICAgICAkKF90aGlzNS5lbGVtZW50KS5vbihfdGhpczUuY29uc3RydWN0b3IuRXZlbnQuQ0xJQ0ssIF90aGlzNS5jb25maWcuc2VsZWN0b3IsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzNS50b2dnbGUoZXZlbnQpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2UgaWYgKHRyaWdnZXIgIT09IFRyaWdnZXIuTUFOVUFMKSB7XG4gICAgICAgICAgdmFyIGV2ZW50SW4gPSB0cmlnZ2VyID09PSBUcmlnZ2VyLkhPVkVSID8gX3RoaXM1LmNvbnN0cnVjdG9yLkV2ZW50Lk1PVVNFRU5URVIgOiBfdGhpczUuY29uc3RydWN0b3IuRXZlbnQuRk9DVVNJTjtcbiAgICAgICAgICB2YXIgZXZlbnRPdXQgPSB0cmlnZ2VyID09PSBUcmlnZ2VyLkhPVkVSID8gX3RoaXM1LmNvbnN0cnVjdG9yLkV2ZW50Lk1PVVNFTEVBVkUgOiBfdGhpczUuY29uc3RydWN0b3IuRXZlbnQuRk9DVVNPVVQ7XG4gICAgICAgICAgJChfdGhpczUuZWxlbWVudCkub24oZXZlbnRJbiwgX3RoaXM1LmNvbmZpZy5zZWxlY3RvciwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICByZXR1cm4gX3RoaXM1Ll9lbnRlcihldmVudCk7XG4gICAgICAgICAgfSkub24oZXZlbnRPdXQsIF90aGlzNS5jb25maWcuc2VsZWN0b3IsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzNS5fbGVhdmUoZXZlbnQpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgdGhpcy5faGlkZU1vZGFsSGFuZGxlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKF90aGlzNS5lbGVtZW50KSB7XG4gICAgICAgICAgX3RoaXM1LmhpZGUoKTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgJCh0aGlzLmVsZW1lbnQpLmNsb3Nlc3QoJy5tb2RhbCcpLm9uKCdoaWRlLmJzLm1vZGFsJywgdGhpcy5faGlkZU1vZGFsSGFuZGxlcik7XG5cbiAgICAgIGlmICh0aGlzLmNvbmZpZy5zZWxlY3Rvcikge1xuICAgICAgICB0aGlzLmNvbmZpZyA9IF9vYmplY3RTcHJlYWQyKHt9LCB0aGlzLmNvbmZpZywge1xuICAgICAgICAgIHRyaWdnZXI6ICdtYW51YWwnLFxuICAgICAgICAgIHNlbGVjdG9yOiAnJ1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuX2ZpeFRpdGxlKCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90by5fZml4VGl0bGUgPSBmdW5jdGlvbiBfZml4VGl0bGUoKSB7XG4gICAgICB2YXIgdGl0bGVUeXBlID0gdHlwZW9mIHRoaXMuZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtb3JpZ2luYWwtdGl0bGUnKTtcblxuICAgICAgaWYgKHRoaXMuZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ3RpdGxlJykgfHwgdGl0bGVUeXBlICE9PSAnc3RyaW5nJykge1xuICAgICAgICB0aGlzLmVsZW1lbnQuc2V0QXR0cmlidXRlKCdkYXRhLW9yaWdpbmFsLXRpdGxlJywgdGhpcy5lbGVtZW50LmdldEF0dHJpYnV0ZSgndGl0bGUnKSB8fCAnJyk7XG4gICAgICAgIHRoaXMuZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ3RpdGxlJywgJycpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfcHJvdG8uX2VudGVyID0gZnVuY3Rpb24gX2VudGVyKGV2ZW50LCBjb250ZXh0KSB7XG4gICAgICB2YXIgZGF0YUtleSA9IHRoaXMuY29uc3RydWN0b3IuREFUQV9LRVk7XG4gICAgICBjb250ZXh0ID0gY29udGV4dCB8fCAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpLmRhdGEoZGF0YUtleSk7XG5cbiAgICAgIGlmICghY29udGV4dCkge1xuICAgICAgICBjb250ZXh0ID0gbmV3IHRoaXMuY29uc3RydWN0b3IoZXZlbnQuY3VycmVudFRhcmdldCwgdGhpcy5fZ2V0RGVsZWdhdGVDb25maWcoKSk7XG4gICAgICAgICQoZXZlbnQuY3VycmVudFRhcmdldCkuZGF0YShkYXRhS2V5LCBjb250ZXh0KTtcbiAgICAgIH1cblxuICAgICAgaWYgKGV2ZW50KSB7XG4gICAgICAgIGNvbnRleHQuX2FjdGl2ZVRyaWdnZXJbZXZlbnQudHlwZSA9PT0gJ2ZvY3VzaW4nID8gVHJpZ2dlci5GT0NVUyA6IFRyaWdnZXIuSE9WRVJdID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKCQoY29udGV4dC5nZXRUaXBFbGVtZW50KCkpLmhhc0NsYXNzKENsYXNzTmFtZSQ2LlNIT1cpIHx8IGNvbnRleHQuX2hvdmVyU3RhdGUgPT09IEhvdmVyU3RhdGUuU0hPVykge1xuICAgICAgICBjb250ZXh0Ll9ob3ZlclN0YXRlID0gSG92ZXJTdGF0ZS5TSE9XO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGNsZWFyVGltZW91dChjb250ZXh0Ll90aW1lb3V0KTtcbiAgICAgIGNvbnRleHQuX2hvdmVyU3RhdGUgPSBIb3ZlclN0YXRlLlNIT1c7XG5cbiAgICAgIGlmICghY29udGV4dC5jb25maWcuZGVsYXkgfHwgIWNvbnRleHQuY29uZmlnLmRlbGF5LnNob3cpIHtcbiAgICAgICAgY29udGV4dC5zaG93KCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgY29udGV4dC5fdGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoY29udGV4dC5faG92ZXJTdGF0ZSA9PT0gSG92ZXJTdGF0ZS5TSE9XKSB7XG4gICAgICAgICAgY29udGV4dC5zaG93KCk7XG4gICAgICAgIH1cbiAgICAgIH0sIGNvbnRleHQuY29uZmlnLmRlbGF5LnNob3cpO1xuICAgIH07XG5cbiAgICBfcHJvdG8uX2xlYXZlID0gZnVuY3Rpb24gX2xlYXZlKGV2ZW50LCBjb250ZXh0KSB7XG4gICAgICB2YXIgZGF0YUtleSA9IHRoaXMuY29uc3RydWN0b3IuREFUQV9LRVk7XG4gICAgICBjb250ZXh0ID0gY29udGV4dCB8fCAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpLmRhdGEoZGF0YUtleSk7XG5cbiAgICAgIGlmICghY29udGV4dCkge1xuICAgICAgICBjb250ZXh0ID0gbmV3IHRoaXMuY29uc3RydWN0b3IoZXZlbnQuY3VycmVudFRhcmdldCwgdGhpcy5fZ2V0RGVsZWdhdGVDb25maWcoKSk7XG4gICAgICAgICQoZXZlbnQuY3VycmVudFRhcmdldCkuZGF0YShkYXRhS2V5LCBjb250ZXh0KTtcbiAgICAgIH1cblxuICAgICAgaWYgKGV2ZW50KSB7XG4gICAgICAgIGNvbnRleHQuX2FjdGl2ZVRyaWdnZXJbZXZlbnQudHlwZSA9PT0gJ2ZvY3Vzb3V0JyA/IFRyaWdnZXIuRk9DVVMgOiBUcmlnZ2VyLkhPVkVSXSA9IGZhbHNlO1xuICAgICAgfVxuXG4gICAgICBpZiAoY29udGV4dC5faXNXaXRoQWN0aXZlVHJpZ2dlcigpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgY2xlYXJUaW1lb3V0KGNvbnRleHQuX3RpbWVvdXQpO1xuICAgICAgY29udGV4dC5faG92ZXJTdGF0ZSA9IEhvdmVyU3RhdGUuT1VUO1xuXG4gICAgICBpZiAoIWNvbnRleHQuY29uZmlnLmRlbGF5IHx8ICFjb250ZXh0LmNvbmZpZy5kZWxheS5oaWRlKSB7XG4gICAgICAgIGNvbnRleHQuaGlkZSgpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGNvbnRleHQuX3RpbWVvdXQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKGNvbnRleHQuX2hvdmVyU3RhdGUgPT09IEhvdmVyU3RhdGUuT1VUKSB7XG4gICAgICAgICAgY29udGV4dC5oaWRlKCk7XG4gICAgICAgIH1cbiAgICAgIH0sIGNvbnRleHQuY29uZmlnLmRlbGF5LmhpZGUpO1xuICAgIH07XG5cbiAgICBfcHJvdG8uX2lzV2l0aEFjdGl2ZVRyaWdnZXIgPSBmdW5jdGlvbiBfaXNXaXRoQWN0aXZlVHJpZ2dlcigpIHtcbiAgICAgIGZvciAodmFyIHRyaWdnZXIgaW4gdGhpcy5fYWN0aXZlVHJpZ2dlcikge1xuICAgICAgICBpZiAodGhpcy5fYWN0aXZlVHJpZ2dlclt0cmlnZ2VyXSkge1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9O1xuXG4gICAgX3Byb3RvLl9nZXRDb25maWcgPSBmdW5jdGlvbiBfZ2V0Q29uZmlnKGNvbmZpZykge1xuICAgICAgdmFyIGRhdGFBdHRyaWJ1dGVzID0gJCh0aGlzLmVsZW1lbnQpLmRhdGEoKTtcbiAgICAgIE9iamVjdC5rZXlzKGRhdGFBdHRyaWJ1dGVzKS5mb3JFYWNoKGZ1bmN0aW9uIChkYXRhQXR0cikge1xuICAgICAgICBpZiAoRElTQUxMT1dFRF9BVFRSSUJVVEVTLmluZGV4T2YoZGF0YUF0dHIpICE9PSAtMSkge1xuICAgICAgICAgIGRlbGV0ZSBkYXRhQXR0cmlidXRlc1tkYXRhQXR0cl07XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgY29uZmlnID0gX29iamVjdFNwcmVhZDIoe30sIHRoaXMuY29uc3RydWN0b3IuRGVmYXVsdCwge30sIGRhdGFBdHRyaWJ1dGVzLCB7fSwgdHlwZW9mIGNvbmZpZyA9PT0gJ29iamVjdCcgJiYgY29uZmlnID8gY29uZmlnIDoge30pO1xuXG4gICAgICBpZiAodHlwZW9mIGNvbmZpZy5kZWxheSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgY29uZmlnLmRlbGF5ID0ge1xuICAgICAgICAgIHNob3c6IGNvbmZpZy5kZWxheSxcbiAgICAgICAgICBoaWRlOiBjb25maWcuZGVsYXlcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBjb25maWcudGl0bGUgPT09ICdudW1iZXInKSB7XG4gICAgICAgIGNvbmZpZy50aXRsZSA9IGNvbmZpZy50aXRsZS50b1N0cmluZygpO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGNvbmZpZy5jb250ZW50ID09PSAnbnVtYmVyJykge1xuICAgICAgICBjb25maWcuY29udGVudCA9IGNvbmZpZy5jb250ZW50LnRvU3RyaW5nKCk7XG4gICAgICB9XG5cbiAgICAgIFV0aWwudHlwZUNoZWNrQ29uZmlnKE5BTUUkNiwgY29uZmlnLCB0aGlzLmNvbnN0cnVjdG9yLkRlZmF1bHRUeXBlKTtcblxuICAgICAgaWYgKGNvbmZpZy5zYW5pdGl6ZSkge1xuICAgICAgICBjb25maWcudGVtcGxhdGUgPSBzYW5pdGl6ZUh0bWwoY29uZmlnLnRlbXBsYXRlLCBjb25maWcud2hpdGVMaXN0LCBjb25maWcuc2FuaXRpemVGbik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb25maWc7XG4gICAgfTtcblxuICAgIF9wcm90by5fZ2V0RGVsZWdhdGVDb25maWcgPSBmdW5jdGlvbiBfZ2V0RGVsZWdhdGVDb25maWcoKSB7XG4gICAgICB2YXIgY29uZmlnID0ge307XG5cbiAgICAgIGlmICh0aGlzLmNvbmZpZykge1xuICAgICAgICBmb3IgKHZhciBrZXkgaW4gdGhpcy5jb25maWcpIHtcbiAgICAgICAgICBpZiAodGhpcy5jb25zdHJ1Y3Rvci5EZWZhdWx0W2tleV0gIT09IHRoaXMuY29uZmlnW2tleV0pIHtcbiAgICAgICAgICAgIGNvbmZpZ1trZXldID0gdGhpcy5jb25maWdba2V5XTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbmZpZztcbiAgICB9O1xuXG4gICAgX3Byb3RvLl9jbGVhblRpcENsYXNzID0gZnVuY3Rpb24gX2NsZWFuVGlwQ2xhc3MoKSB7XG4gICAgICB2YXIgJHRpcCA9ICQodGhpcy5nZXRUaXBFbGVtZW50KCkpO1xuICAgICAgdmFyIHRhYkNsYXNzID0gJHRpcC5hdHRyKCdjbGFzcycpLm1hdGNoKEJTQ0xTX1BSRUZJWF9SRUdFWCk7XG5cbiAgICAgIGlmICh0YWJDbGFzcyAhPT0gbnVsbCAmJiB0YWJDbGFzcy5sZW5ndGgpIHtcbiAgICAgICAgJHRpcC5yZW1vdmVDbGFzcyh0YWJDbGFzcy5qb2luKCcnKSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90by5faGFuZGxlUG9wcGVyUGxhY2VtZW50Q2hhbmdlID0gZnVuY3Rpb24gX2hhbmRsZVBvcHBlclBsYWNlbWVudENoYW5nZShwb3BwZXJEYXRhKSB7XG4gICAgICB2YXIgcG9wcGVySW5zdGFuY2UgPSBwb3BwZXJEYXRhLmluc3RhbmNlO1xuICAgICAgdGhpcy50aXAgPSBwb3BwZXJJbnN0YW5jZS5wb3BwZXI7XG5cbiAgICAgIHRoaXMuX2NsZWFuVGlwQ2xhc3MoKTtcblxuICAgICAgdGhpcy5hZGRBdHRhY2htZW50Q2xhc3ModGhpcy5fZ2V0QXR0YWNobWVudChwb3BwZXJEYXRhLnBsYWNlbWVudCkpO1xuICAgIH07XG5cbiAgICBfcHJvdG8uX2ZpeFRyYW5zaXRpb24gPSBmdW5jdGlvbiBfZml4VHJhbnNpdGlvbigpIHtcbiAgICAgIHZhciB0aXAgPSB0aGlzLmdldFRpcEVsZW1lbnQoKTtcbiAgICAgIHZhciBpbml0Q29uZmlnQW5pbWF0aW9uID0gdGhpcy5jb25maWcuYW5pbWF0aW9uO1xuXG4gICAgICBpZiAodGlwLmdldEF0dHJpYnV0ZSgneC1wbGFjZW1lbnQnKSAhPT0gbnVsbCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgICQodGlwKS5yZW1vdmVDbGFzcyhDbGFzc05hbWUkNi5GQURFKTtcbiAgICAgIHRoaXMuY29uZmlnLmFuaW1hdGlvbiA9IGZhbHNlO1xuICAgICAgdGhpcy5oaWRlKCk7XG4gICAgICB0aGlzLnNob3coKTtcbiAgICAgIHRoaXMuY29uZmlnLmFuaW1hdGlvbiA9IGluaXRDb25maWdBbmltYXRpb247XG4gICAgfSAvLyBTdGF0aWNcbiAgICA7XG5cbiAgICBUb29sdGlwLl9qUXVlcnlJbnRlcmZhY2UgPSBmdW5jdGlvbiBfalF1ZXJ5SW50ZXJmYWNlKGNvbmZpZykge1xuICAgICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBkYXRhID0gJCh0aGlzKS5kYXRhKERBVEFfS0VZJDYpO1xuXG4gICAgICAgIHZhciBfY29uZmlnID0gdHlwZW9mIGNvbmZpZyA9PT0gJ29iamVjdCcgJiYgY29uZmlnO1xuXG4gICAgICAgIGlmICghZGF0YSAmJiAvZGlzcG9zZXxoaWRlLy50ZXN0KGNvbmZpZykpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIWRhdGEpIHtcbiAgICAgICAgICBkYXRhID0gbmV3IFRvb2x0aXAodGhpcywgX2NvbmZpZyk7XG4gICAgICAgICAgJCh0aGlzKS5kYXRhKERBVEFfS0VZJDYsIGRhdGEpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHR5cGVvZiBjb25maWcgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgaWYgKHR5cGVvZiBkYXRhW2NvbmZpZ10gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiTm8gbWV0aG9kIG5hbWVkIFxcXCJcIiArIGNvbmZpZyArIFwiXFxcIlwiKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBkYXRhW2NvbmZpZ10oKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfTtcblxuICAgIF9jcmVhdGVDbGFzcyhUb29sdGlwLCBudWxsLCBbe1xuICAgICAga2V5OiBcIlZFUlNJT05cIixcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICByZXR1cm4gVkVSU0lPTiQ2O1xuICAgICAgfVxuICAgIH0sIHtcbiAgICAgIGtleTogXCJEZWZhdWx0XCIsXG4gICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgcmV0dXJuIERlZmF1bHQkNDtcbiAgICAgIH1cbiAgICB9LCB7XG4gICAgICBrZXk6IFwiTkFNRVwiLFxuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgIHJldHVybiBOQU1FJDY7XG4gICAgICB9XG4gICAgfSwge1xuICAgICAga2V5OiBcIkRBVEFfS0VZXCIsXG4gICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgcmV0dXJuIERBVEFfS0VZJDY7XG4gICAgICB9XG4gICAgfSwge1xuICAgICAga2V5OiBcIkV2ZW50XCIsXG4gICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgcmV0dXJuIEV2ZW50JDY7XG4gICAgICB9XG4gICAgfSwge1xuICAgICAga2V5OiBcIkVWRU5UX0tFWVwiLFxuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgIHJldHVybiBFVkVOVF9LRVkkNjtcbiAgICAgIH1cbiAgICB9LCB7XG4gICAgICBrZXk6IFwiRGVmYXVsdFR5cGVcIixcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICByZXR1cm4gRGVmYXVsdFR5cGUkNDtcbiAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gVG9vbHRpcDtcbiAgfSgpO1xuICAvKipcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqIGpRdWVyeVxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICovXG5cblxuICAkLmZuW05BTUUkNl0gPSBUb29sdGlwLl9qUXVlcnlJbnRlcmZhY2U7XG4gICQuZm5bTkFNRSQ2XS5Db25zdHJ1Y3RvciA9IFRvb2x0aXA7XG5cbiAgJC5mbltOQU1FJDZdLm5vQ29uZmxpY3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgJC5mbltOQU1FJDZdID0gSlFVRVJZX05PX0NPTkZMSUNUJDY7XG4gICAgcmV0dXJuIFRvb2x0aXAuX2pRdWVyeUludGVyZmFjZTtcbiAgfTtcblxuICAvKipcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqIENvbnN0YW50c1xuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICovXG5cbiAgdmFyIE5BTUUkNyA9ICdwb3BvdmVyJztcbiAgdmFyIFZFUlNJT04kNyA9ICc0LjQuMSc7XG4gIHZhciBEQVRBX0tFWSQ3ID0gJ2JzLnBvcG92ZXInO1xuICB2YXIgRVZFTlRfS0VZJDcgPSBcIi5cIiArIERBVEFfS0VZJDc7XG4gIHZhciBKUVVFUllfTk9fQ09ORkxJQ1QkNyA9ICQuZm5bTkFNRSQ3XTtcbiAgdmFyIENMQVNTX1BSRUZJWCQxID0gJ2JzLXBvcG92ZXInO1xuICB2YXIgQlNDTFNfUFJFRklYX1JFR0VYJDEgPSBuZXcgUmVnRXhwKFwiKF58XFxcXHMpXCIgKyBDTEFTU19QUkVGSVgkMSArIFwiXFxcXFMrXCIsICdnJyk7XG5cbiAgdmFyIERlZmF1bHQkNSA9IF9vYmplY3RTcHJlYWQyKHt9LCBUb29sdGlwLkRlZmF1bHQsIHtcbiAgICBwbGFjZW1lbnQ6ICdyaWdodCcsXG4gICAgdHJpZ2dlcjogJ2NsaWNrJyxcbiAgICBjb250ZW50OiAnJyxcbiAgICB0ZW1wbGF0ZTogJzxkaXYgY2xhc3M9XCJwb3BvdmVyXCIgcm9sZT1cInRvb2x0aXBcIj4nICsgJzxkaXYgY2xhc3M9XCJhcnJvd1wiPjwvZGl2PicgKyAnPGgzIGNsYXNzPVwicG9wb3Zlci1oZWFkZXJcIj48L2gzPicgKyAnPGRpdiBjbGFzcz1cInBvcG92ZXItYm9keVwiPjwvZGl2PjwvZGl2PidcbiAgfSk7XG5cbiAgdmFyIERlZmF1bHRUeXBlJDUgPSBfb2JqZWN0U3ByZWFkMih7fSwgVG9vbHRpcC5EZWZhdWx0VHlwZSwge1xuICAgIGNvbnRlbnQ6ICcoc3RyaW5nfGVsZW1lbnR8ZnVuY3Rpb24pJ1xuICB9KTtcblxuICB2YXIgQ2xhc3NOYW1lJDcgPSB7XG4gICAgRkFERTogJ2ZhZGUnLFxuICAgIFNIT1c6ICdzaG93J1xuICB9O1xuICB2YXIgU2VsZWN0b3IkNyA9IHtcbiAgICBUSVRMRTogJy5wb3BvdmVyLWhlYWRlcicsXG4gICAgQ09OVEVOVDogJy5wb3BvdmVyLWJvZHknXG4gIH07XG4gIHZhciBFdmVudCQ3ID0ge1xuICAgIEhJREU6IFwiaGlkZVwiICsgRVZFTlRfS0VZJDcsXG4gICAgSElEREVOOiBcImhpZGRlblwiICsgRVZFTlRfS0VZJDcsXG4gICAgU0hPVzogXCJzaG93XCIgKyBFVkVOVF9LRVkkNyxcbiAgICBTSE9XTjogXCJzaG93blwiICsgRVZFTlRfS0VZJDcsXG4gICAgSU5TRVJURUQ6IFwiaW5zZXJ0ZWRcIiArIEVWRU5UX0tFWSQ3LFxuICAgIENMSUNLOiBcImNsaWNrXCIgKyBFVkVOVF9LRVkkNyxcbiAgICBGT0NVU0lOOiBcImZvY3VzaW5cIiArIEVWRU5UX0tFWSQ3LFxuICAgIEZPQ1VTT1VUOiBcImZvY3Vzb3V0XCIgKyBFVkVOVF9LRVkkNyxcbiAgICBNT1VTRUVOVEVSOiBcIm1vdXNlZW50ZXJcIiArIEVWRU5UX0tFWSQ3LFxuICAgIE1PVVNFTEVBVkU6IFwibW91c2VsZWF2ZVwiICsgRVZFTlRfS0VZJDdcbiAgfTtcbiAgLyoqXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKiBDbGFzcyBEZWZpbml0aW9uXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKi9cblxuICB2YXIgUG9wb3ZlciA9XG4gIC8qI19fUFVSRV9fKi9cbiAgZnVuY3Rpb24gKF9Ub29sdGlwKSB7XG4gICAgX2luaGVyaXRzTG9vc2UoUG9wb3ZlciwgX1Rvb2x0aXApO1xuXG4gICAgZnVuY3Rpb24gUG9wb3ZlcigpIHtcbiAgICAgIHJldHVybiBfVG9vbHRpcC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgfVxuXG4gICAgdmFyIF9wcm90byA9IFBvcG92ZXIucHJvdG90eXBlO1xuXG4gICAgLy8gT3ZlcnJpZGVzXG4gICAgX3Byb3RvLmlzV2l0aENvbnRlbnQgPSBmdW5jdGlvbiBpc1dpdGhDb250ZW50KCkge1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0VGl0bGUoKSB8fCB0aGlzLl9nZXRDb250ZW50KCk7XG4gICAgfTtcblxuICAgIF9wcm90by5hZGRBdHRhY2htZW50Q2xhc3MgPSBmdW5jdGlvbiBhZGRBdHRhY2htZW50Q2xhc3MoYXR0YWNobWVudCkge1xuICAgICAgJCh0aGlzLmdldFRpcEVsZW1lbnQoKSkuYWRkQ2xhc3MoQ0xBU1NfUFJFRklYJDEgKyBcIi1cIiArIGF0dGFjaG1lbnQpO1xuICAgIH07XG5cbiAgICBfcHJvdG8uZ2V0VGlwRWxlbWVudCA9IGZ1bmN0aW9uIGdldFRpcEVsZW1lbnQoKSB7XG4gICAgICB0aGlzLnRpcCA9IHRoaXMudGlwIHx8ICQodGhpcy5jb25maWcudGVtcGxhdGUpWzBdO1xuICAgICAgcmV0dXJuIHRoaXMudGlwO1xuICAgIH07XG5cbiAgICBfcHJvdG8uc2V0Q29udGVudCA9IGZ1bmN0aW9uIHNldENvbnRlbnQoKSB7XG4gICAgICB2YXIgJHRpcCA9ICQodGhpcy5nZXRUaXBFbGVtZW50KCkpOyAvLyBXZSB1c2UgYXBwZW5kIGZvciBodG1sIG9iamVjdHMgdG8gbWFpbnRhaW4ganMgZXZlbnRzXG5cbiAgICAgIHRoaXMuc2V0RWxlbWVudENvbnRlbnQoJHRpcC5maW5kKFNlbGVjdG9yJDcuVElUTEUpLCB0aGlzLmdldFRpdGxlKCkpO1xuXG4gICAgICB2YXIgY29udGVudCA9IHRoaXMuX2dldENvbnRlbnQoKTtcblxuICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGNvbnRlbnQgPSBjb250ZW50LmNhbGwodGhpcy5lbGVtZW50KTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5zZXRFbGVtZW50Q29udGVudCgkdGlwLmZpbmQoU2VsZWN0b3IkNy5DT05URU5UKSwgY29udGVudCk7XG4gICAgICAkdGlwLnJlbW92ZUNsYXNzKENsYXNzTmFtZSQ3LkZBREUgKyBcIiBcIiArIENsYXNzTmFtZSQ3LlNIT1cpO1xuICAgIH0gLy8gUHJpdmF0ZVxuICAgIDtcblxuICAgIF9wcm90by5fZ2V0Q29udGVudCA9IGZ1bmN0aW9uIF9nZXRDb250ZW50KCkge1xuICAgICAgcmV0dXJuIHRoaXMuZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtY29udGVudCcpIHx8IHRoaXMuY29uZmlnLmNvbnRlbnQ7XG4gICAgfTtcblxuICAgIF9wcm90by5fY2xlYW5UaXBDbGFzcyA9IGZ1bmN0aW9uIF9jbGVhblRpcENsYXNzKCkge1xuICAgICAgdmFyICR0aXAgPSAkKHRoaXMuZ2V0VGlwRWxlbWVudCgpKTtcbiAgICAgIHZhciB0YWJDbGFzcyA9ICR0aXAuYXR0cignY2xhc3MnKS5tYXRjaChCU0NMU19QUkVGSVhfUkVHRVgkMSk7XG5cbiAgICAgIGlmICh0YWJDbGFzcyAhPT0gbnVsbCAmJiB0YWJDbGFzcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICR0aXAucmVtb3ZlQ2xhc3ModGFiQ2xhc3Muam9pbignJykpO1xuICAgICAgfVxuICAgIH0gLy8gU3RhdGljXG4gICAgO1xuXG4gICAgUG9wb3Zlci5falF1ZXJ5SW50ZXJmYWNlID0gZnVuY3Rpb24gX2pRdWVyeUludGVyZmFjZShjb25maWcpIHtcbiAgICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZGF0YSA9ICQodGhpcykuZGF0YShEQVRBX0tFWSQ3KTtcblxuICAgICAgICB2YXIgX2NvbmZpZyA9IHR5cGVvZiBjb25maWcgPT09ICdvYmplY3QnID8gY29uZmlnIDogbnVsbDtcblxuICAgICAgICBpZiAoIWRhdGEgJiYgL2Rpc3Bvc2V8aGlkZS8udGVzdChjb25maWcpKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCFkYXRhKSB7XG4gICAgICAgICAgZGF0YSA9IG5ldyBQb3BvdmVyKHRoaXMsIF9jb25maWcpO1xuICAgICAgICAgICQodGhpcykuZGF0YShEQVRBX0tFWSQ3LCBkYXRhKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0eXBlb2YgY29uZmlnID09PSAnc3RyaW5nJykge1xuICAgICAgICAgIGlmICh0eXBlb2YgZGF0YVtjb25maWddID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIk5vIG1ldGhvZCBuYW1lZCBcXFwiXCIgKyBjb25maWcgKyBcIlxcXCJcIik7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgZGF0YVtjb25maWddKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICBfY3JlYXRlQ2xhc3MoUG9wb3ZlciwgbnVsbCwgW3tcbiAgICAgIGtleTogXCJWRVJTSU9OXCIsXG4gICAgICAvLyBHZXR0ZXJzXG4gICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgcmV0dXJuIFZFUlNJT04kNztcbiAgICAgIH1cbiAgICB9LCB7XG4gICAgICBrZXk6IFwiRGVmYXVsdFwiLFxuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgIHJldHVybiBEZWZhdWx0JDU7XG4gICAgICB9XG4gICAgfSwge1xuICAgICAga2V5OiBcIk5BTUVcIixcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICByZXR1cm4gTkFNRSQ3O1xuICAgICAgfVxuICAgIH0sIHtcbiAgICAgIGtleTogXCJEQVRBX0tFWVwiLFxuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgIHJldHVybiBEQVRBX0tFWSQ3O1xuICAgICAgfVxuICAgIH0sIHtcbiAgICAgIGtleTogXCJFdmVudFwiLFxuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgIHJldHVybiBFdmVudCQ3O1xuICAgICAgfVxuICAgIH0sIHtcbiAgICAgIGtleTogXCJFVkVOVF9LRVlcIixcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICByZXR1cm4gRVZFTlRfS0VZJDc7XG4gICAgICB9XG4gICAgfSwge1xuICAgICAga2V5OiBcIkRlZmF1bHRUeXBlXCIsXG4gICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgcmV0dXJuIERlZmF1bHRUeXBlJDU7XG4gICAgICB9XG4gICAgfV0pO1xuXG4gICAgcmV0dXJuIFBvcG92ZXI7XG4gIH0oVG9vbHRpcCk7XG4gIC8qKlxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICogalF1ZXJ5XG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKi9cblxuXG4gICQuZm5bTkFNRSQ3XSA9IFBvcG92ZXIuX2pRdWVyeUludGVyZmFjZTtcbiAgJC5mbltOQU1FJDddLkNvbnN0cnVjdG9yID0gUG9wb3ZlcjtcblxuICAkLmZuW05BTUUkN10ubm9Db25mbGljdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAkLmZuW05BTUUkN10gPSBKUVVFUllfTk9fQ09ORkxJQ1QkNztcbiAgICByZXR1cm4gUG9wb3Zlci5falF1ZXJ5SW50ZXJmYWNlO1xuICB9O1xuXG4gIC8qKlxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICogQ29uc3RhbnRzXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKi9cblxuICB2YXIgTkFNRSQ4ID0gJ3Njcm9sbHNweSc7XG4gIHZhciBWRVJTSU9OJDggPSAnNC40LjEnO1xuICB2YXIgREFUQV9LRVkkOCA9ICdicy5zY3JvbGxzcHknO1xuICB2YXIgRVZFTlRfS0VZJDggPSBcIi5cIiArIERBVEFfS0VZJDg7XG4gIHZhciBEQVRBX0FQSV9LRVkkNiA9ICcuZGF0YS1hcGknO1xuICB2YXIgSlFVRVJZX05PX0NPTkZMSUNUJDggPSAkLmZuW05BTUUkOF07XG4gIHZhciBEZWZhdWx0JDYgPSB7XG4gICAgb2Zmc2V0OiAxMCxcbiAgICBtZXRob2Q6ICdhdXRvJyxcbiAgICB0YXJnZXQ6ICcnXG4gIH07XG4gIHZhciBEZWZhdWx0VHlwZSQ2ID0ge1xuICAgIG9mZnNldDogJ251bWJlcicsXG4gICAgbWV0aG9kOiAnc3RyaW5nJyxcbiAgICB0YXJnZXQ6ICcoc3RyaW5nfGVsZW1lbnQpJ1xuICB9O1xuICB2YXIgRXZlbnQkOCA9IHtcbiAgICBBQ1RJVkFURTogXCJhY3RpdmF0ZVwiICsgRVZFTlRfS0VZJDgsXG4gICAgU0NST0xMOiBcInNjcm9sbFwiICsgRVZFTlRfS0VZJDgsXG4gICAgTE9BRF9EQVRBX0FQSTogXCJsb2FkXCIgKyBFVkVOVF9LRVkkOCArIERBVEFfQVBJX0tFWSQ2XG4gIH07XG4gIHZhciBDbGFzc05hbWUkOCA9IHtcbiAgICBEUk9QRE9XTl9JVEVNOiAnZHJvcGRvd24taXRlbScsXG4gICAgRFJPUERPV05fTUVOVTogJ2Ryb3Bkb3duLW1lbnUnLFxuICAgIEFDVElWRTogJ2FjdGl2ZSdcbiAgfTtcbiAgdmFyIFNlbGVjdG9yJDggPSB7XG4gICAgREFUQV9TUFk6ICdbZGF0YS1zcHk9XCJzY3JvbGxcIl0nLFxuICAgIEFDVElWRTogJy5hY3RpdmUnLFxuICAgIE5BVl9MSVNUX0dST1VQOiAnLm5hdiwgLmxpc3QtZ3JvdXAnLFxuICAgIE5BVl9MSU5LUzogJy5uYXYtbGluaycsXG4gICAgTkFWX0lURU1TOiAnLm5hdi1pdGVtJyxcbiAgICBMSVNUX0lURU1TOiAnLmxpc3QtZ3JvdXAtaXRlbScsXG4gICAgRFJPUERPV046ICcuZHJvcGRvd24nLFxuICAgIERST1BET1dOX0lURU1TOiAnLmRyb3Bkb3duLWl0ZW0nLFxuICAgIERST1BET1dOX1RPR0dMRTogJy5kcm9wZG93bi10b2dnbGUnXG4gIH07XG4gIHZhciBPZmZzZXRNZXRob2QgPSB7XG4gICAgT0ZGU0VUOiAnb2Zmc2V0JyxcbiAgICBQT1NJVElPTjogJ3Bvc2l0aW9uJ1xuICB9O1xuICAvKipcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqIENsYXNzIERlZmluaXRpb25cbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqL1xuXG4gIHZhciBTY3JvbGxTcHkgPVxuICAvKiNfX1BVUkVfXyovXG4gIGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBTY3JvbGxTcHkoZWxlbWVudCwgY29uZmlnKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICB0aGlzLl9lbGVtZW50ID0gZWxlbWVudDtcbiAgICAgIHRoaXMuX3Njcm9sbEVsZW1lbnQgPSBlbGVtZW50LnRhZ05hbWUgPT09ICdCT0RZJyA/IHdpbmRvdyA6IGVsZW1lbnQ7XG4gICAgICB0aGlzLl9jb25maWcgPSB0aGlzLl9nZXRDb25maWcoY29uZmlnKTtcbiAgICAgIHRoaXMuX3NlbGVjdG9yID0gdGhpcy5fY29uZmlnLnRhcmdldCArIFwiIFwiICsgU2VsZWN0b3IkOC5OQVZfTElOS1MgKyBcIixcIiArICh0aGlzLl9jb25maWcudGFyZ2V0ICsgXCIgXCIgKyBTZWxlY3RvciQ4LkxJU1RfSVRFTVMgKyBcIixcIikgKyAodGhpcy5fY29uZmlnLnRhcmdldCArIFwiIFwiICsgU2VsZWN0b3IkOC5EUk9QRE9XTl9JVEVNUyk7XG4gICAgICB0aGlzLl9vZmZzZXRzID0gW107XG4gICAgICB0aGlzLl90YXJnZXRzID0gW107XG4gICAgICB0aGlzLl9hY3RpdmVUYXJnZXQgPSBudWxsO1xuICAgICAgdGhpcy5fc2Nyb2xsSGVpZ2h0ID0gMDtcbiAgICAgICQodGhpcy5fc2Nyb2xsRWxlbWVudCkub24oRXZlbnQkOC5TQ1JPTEwsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICByZXR1cm4gX3RoaXMuX3Byb2Nlc3MoZXZlbnQpO1xuICAgICAgfSk7XG4gICAgICB0aGlzLnJlZnJlc2goKTtcblxuICAgICAgdGhpcy5fcHJvY2VzcygpO1xuICAgIH0gLy8gR2V0dGVyc1xuXG5cbiAgICB2YXIgX3Byb3RvID0gU2Nyb2xsU3B5LnByb3RvdHlwZTtcblxuICAgIC8vIFB1YmxpY1xuICAgIF9wcm90by5yZWZyZXNoID0gZnVuY3Rpb24gcmVmcmVzaCgpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB2YXIgYXV0b01ldGhvZCA9IHRoaXMuX3Njcm9sbEVsZW1lbnQgPT09IHRoaXMuX3Njcm9sbEVsZW1lbnQud2luZG93ID8gT2Zmc2V0TWV0aG9kLk9GRlNFVCA6IE9mZnNldE1ldGhvZC5QT1NJVElPTjtcbiAgICAgIHZhciBvZmZzZXRNZXRob2QgPSB0aGlzLl9jb25maWcubWV0aG9kID09PSAnYXV0bycgPyBhdXRvTWV0aG9kIDogdGhpcy5fY29uZmlnLm1ldGhvZDtcbiAgICAgIHZhciBvZmZzZXRCYXNlID0gb2Zmc2V0TWV0aG9kID09PSBPZmZzZXRNZXRob2QuUE9TSVRJT04gPyB0aGlzLl9nZXRTY3JvbGxUb3AoKSA6IDA7XG4gICAgICB0aGlzLl9vZmZzZXRzID0gW107XG4gICAgICB0aGlzLl90YXJnZXRzID0gW107XG4gICAgICB0aGlzLl9zY3JvbGxIZWlnaHQgPSB0aGlzLl9nZXRTY3JvbGxIZWlnaHQoKTtcbiAgICAgIHZhciB0YXJnZXRzID0gW10uc2xpY2UuY2FsbChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX3NlbGVjdG9yKSk7XG4gICAgICB0YXJnZXRzLm1hcChmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgICAgICB2YXIgdGFyZ2V0O1xuICAgICAgICB2YXIgdGFyZ2V0U2VsZWN0b3IgPSBVdGlsLmdldFNlbGVjdG9yRnJvbUVsZW1lbnQoZWxlbWVudCk7XG5cbiAgICAgICAgaWYgKHRhcmdldFNlbGVjdG9yKSB7XG4gICAgICAgICAgdGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXRTZWxlY3Rvcik7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGFyZ2V0KSB7XG4gICAgICAgICAgdmFyIHRhcmdldEJDUiA9IHRhcmdldC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcblxuICAgICAgICAgIGlmICh0YXJnZXRCQ1Iud2lkdGggfHwgdGFyZ2V0QkNSLmhlaWdodCkge1xuICAgICAgICAgICAgLy8gVE9ETyAoZmF0KTogcmVtb3ZlIHNrZXRjaCByZWxpYW5jZSBvbiBqUXVlcnkgcG9zaXRpb24vb2Zmc2V0XG4gICAgICAgICAgICByZXR1cm4gWyQodGFyZ2V0KVtvZmZzZXRNZXRob2RdKCkudG9wICsgb2Zmc2V0QmFzZSwgdGFyZ2V0U2VsZWN0b3JdO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfSkuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgIHJldHVybiBpdGVtO1xuICAgICAgfSkuc29ydChmdW5jdGlvbiAoYSwgYikge1xuICAgICAgICByZXR1cm4gYVswXSAtIGJbMF07XG4gICAgICB9KS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgIF90aGlzMi5fb2Zmc2V0cy5wdXNoKGl0ZW1bMF0pO1xuXG4gICAgICAgIF90aGlzMi5fdGFyZ2V0cy5wdXNoKGl0ZW1bMV0pO1xuICAgICAgfSk7XG4gICAgfTtcblxuICAgIF9wcm90by5kaXNwb3NlID0gZnVuY3Rpb24gZGlzcG9zZSgpIHtcbiAgICAgICQucmVtb3ZlRGF0YSh0aGlzLl9lbGVtZW50LCBEQVRBX0tFWSQ4KTtcbiAgICAgICQodGhpcy5fc2Nyb2xsRWxlbWVudCkub2ZmKEVWRU5UX0tFWSQ4KTtcbiAgICAgIHRoaXMuX2VsZW1lbnQgPSBudWxsO1xuICAgICAgdGhpcy5fc2Nyb2xsRWxlbWVudCA9IG51bGw7XG4gICAgICB0aGlzLl9jb25maWcgPSBudWxsO1xuICAgICAgdGhpcy5fc2VsZWN0b3IgPSBudWxsO1xuICAgICAgdGhpcy5fb2Zmc2V0cyA9IG51bGw7XG4gICAgICB0aGlzLl90YXJnZXRzID0gbnVsbDtcbiAgICAgIHRoaXMuX2FjdGl2ZVRhcmdldCA9IG51bGw7XG4gICAgICB0aGlzLl9zY3JvbGxIZWlnaHQgPSBudWxsO1xuICAgIH0gLy8gUHJpdmF0ZVxuICAgIDtcblxuICAgIF9wcm90by5fZ2V0Q29uZmlnID0gZnVuY3Rpb24gX2dldENvbmZpZyhjb25maWcpIHtcbiAgICAgIGNvbmZpZyA9IF9vYmplY3RTcHJlYWQyKHt9LCBEZWZhdWx0JDYsIHt9LCB0eXBlb2YgY29uZmlnID09PSAnb2JqZWN0JyAmJiBjb25maWcgPyBjb25maWcgOiB7fSk7XG5cbiAgICAgIGlmICh0eXBlb2YgY29uZmlnLnRhcmdldCAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgdmFyIGlkID0gJChjb25maWcudGFyZ2V0KS5hdHRyKCdpZCcpO1xuXG4gICAgICAgIGlmICghaWQpIHtcbiAgICAgICAgICBpZCA9IFV0aWwuZ2V0VUlEKE5BTUUkOCk7XG4gICAgICAgICAgJChjb25maWcudGFyZ2V0KS5hdHRyKCdpZCcsIGlkKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbmZpZy50YXJnZXQgPSBcIiNcIiArIGlkO1xuICAgICAgfVxuXG4gICAgICBVdGlsLnR5cGVDaGVja0NvbmZpZyhOQU1FJDgsIGNvbmZpZywgRGVmYXVsdFR5cGUkNik7XG4gICAgICByZXR1cm4gY29uZmlnO1xuICAgIH07XG5cbiAgICBfcHJvdG8uX2dldFNjcm9sbFRvcCA9IGZ1bmN0aW9uIF9nZXRTY3JvbGxUb3AoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fc2Nyb2xsRWxlbWVudCA9PT0gd2luZG93ID8gdGhpcy5fc2Nyb2xsRWxlbWVudC5wYWdlWU9mZnNldCA6IHRoaXMuX3Njcm9sbEVsZW1lbnQuc2Nyb2xsVG9wO1xuICAgIH07XG5cbiAgICBfcHJvdG8uX2dldFNjcm9sbEhlaWdodCA9IGZ1bmN0aW9uIF9nZXRTY3JvbGxIZWlnaHQoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fc2Nyb2xsRWxlbWVudC5zY3JvbGxIZWlnaHQgfHwgTWF0aC5tYXgoZG9jdW1lbnQuYm9keS5zY3JvbGxIZWlnaHQsIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxIZWlnaHQpO1xuICAgIH07XG5cbiAgICBfcHJvdG8uX2dldE9mZnNldEhlaWdodCA9IGZ1bmN0aW9uIF9nZXRPZmZzZXRIZWlnaHQoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fc2Nyb2xsRWxlbWVudCA9PT0gd2luZG93ID8gd2luZG93LmlubmVySGVpZ2h0IDogdGhpcy5fc2Nyb2xsRWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5oZWlnaHQ7XG4gICAgfTtcblxuICAgIF9wcm90by5fcHJvY2VzcyA9IGZ1bmN0aW9uIF9wcm9jZXNzKCkge1xuICAgICAgdmFyIHNjcm9sbFRvcCA9IHRoaXMuX2dldFNjcm9sbFRvcCgpICsgdGhpcy5fY29uZmlnLm9mZnNldDtcblxuICAgICAgdmFyIHNjcm9sbEhlaWdodCA9IHRoaXMuX2dldFNjcm9sbEhlaWdodCgpO1xuXG4gICAgICB2YXIgbWF4U2Nyb2xsID0gdGhpcy5fY29uZmlnLm9mZnNldCArIHNjcm9sbEhlaWdodCAtIHRoaXMuX2dldE9mZnNldEhlaWdodCgpO1xuXG4gICAgICBpZiAodGhpcy5fc2Nyb2xsSGVpZ2h0ICE9PSBzY3JvbGxIZWlnaHQpIHtcbiAgICAgICAgdGhpcy5yZWZyZXNoKCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChzY3JvbGxUb3AgPj0gbWF4U2Nyb2xsKSB7XG4gICAgICAgIHZhciB0YXJnZXQgPSB0aGlzLl90YXJnZXRzW3RoaXMuX3RhcmdldHMubGVuZ3RoIC0gMV07XG5cbiAgICAgICAgaWYgKHRoaXMuX2FjdGl2ZVRhcmdldCAhPT0gdGFyZ2V0KSB7XG4gICAgICAgICAgdGhpcy5fYWN0aXZhdGUodGFyZ2V0KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMuX2FjdGl2ZVRhcmdldCAmJiBzY3JvbGxUb3AgPCB0aGlzLl9vZmZzZXRzWzBdICYmIHRoaXMuX29mZnNldHNbMF0gPiAwKSB7XG4gICAgICAgIHRoaXMuX2FjdGl2ZVRhcmdldCA9IG51bGw7XG5cbiAgICAgICAgdGhpcy5fY2xlYXIoKTtcblxuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHZhciBvZmZzZXRMZW5ndGggPSB0aGlzLl9vZmZzZXRzLmxlbmd0aDtcblxuICAgICAgZm9yICh2YXIgaSA9IG9mZnNldExlbmd0aDsgaS0tOykge1xuICAgICAgICB2YXIgaXNBY3RpdmVUYXJnZXQgPSB0aGlzLl9hY3RpdmVUYXJnZXQgIT09IHRoaXMuX3RhcmdldHNbaV0gJiYgc2Nyb2xsVG9wID49IHRoaXMuX29mZnNldHNbaV0gJiYgKHR5cGVvZiB0aGlzLl9vZmZzZXRzW2kgKyAxXSA9PT0gJ3VuZGVmaW5lZCcgfHwgc2Nyb2xsVG9wIDwgdGhpcy5fb2Zmc2V0c1tpICsgMV0pO1xuXG4gICAgICAgIGlmIChpc0FjdGl2ZVRhcmdldCkge1xuICAgICAgICAgIHRoaXMuX2FjdGl2YXRlKHRoaXMuX3RhcmdldHNbaV0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90by5fYWN0aXZhdGUgPSBmdW5jdGlvbiBfYWN0aXZhdGUodGFyZ2V0KSB7XG4gICAgICB0aGlzLl9hY3RpdmVUYXJnZXQgPSB0YXJnZXQ7XG5cbiAgICAgIHRoaXMuX2NsZWFyKCk7XG5cbiAgICAgIHZhciBxdWVyaWVzID0gdGhpcy5fc2VsZWN0b3Iuc3BsaXQoJywnKS5tYXAoZnVuY3Rpb24gKHNlbGVjdG9yKSB7XG4gICAgICAgIHJldHVybiBzZWxlY3RvciArIFwiW2RhdGEtdGFyZ2V0PVxcXCJcIiArIHRhcmdldCArIFwiXFxcIl0sXCIgKyBzZWxlY3RvciArIFwiW2hyZWY9XFxcIlwiICsgdGFyZ2V0ICsgXCJcXFwiXVwiO1xuICAgICAgfSk7XG5cbiAgICAgIHZhciAkbGluayA9ICQoW10uc2xpY2UuY2FsbChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHF1ZXJpZXMuam9pbignLCcpKSkpO1xuXG4gICAgICBpZiAoJGxpbmsuaGFzQ2xhc3MoQ2xhc3NOYW1lJDguRFJPUERPV05fSVRFTSkpIHtcbiAgICAgICAgJGxpbmsuY2xvc2VzdChTZWxlY3RvciQ4LkRST1BET1dOKS5maW5kKFNlbGVjdG9yJDguRFJPUERPV05fVE9HR0xFKS5hZGRDbGFzcyhDbGFzc05hbWUkOC5BQ1RJVkUpO1xuICAgICAgICAkbGluay5hZGRDbGFzcyhDbGFzc05hbWUkOC5BQ1RJVkUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gU2V0IHRyaWdnZXJlZCBsaW5rIGFzIGFjdGl2ZVxuICAgICAgICAkbGluay5hZGRDbGFzcyhDbGFzc05hbWUkOC5BQ1RJVkUpOyAvLyBTZXQgdHJpZ2dlcmVkIGxpbmtzIHBhcmVudHMgYXMgYWN0aXZlXG4gICAgICAgIC8vIFdpdGggYm90aCA8dWw+IGFuZCA8bmF2PiBtYXJrdXAgYSBwYXJlbnQgaXMgdGhlIHByZXZpb3VzIHNpYmxpbmcgb2YgYW55IG5hdiBhbmNlc3RvclxuXG4gICAgICAgICRsaW5rLnBhcmVudHMoU2VsZWN0b3IkOC5OQVZfTElTVF9HUk9VUCkucHJldihTZWxlY3RvciQ4Lk5BVl9MSU5LUyArIFwiLCBcIiArIFNlbGVjdG9yJDguTElTVF9JVEVNUykuYWRkQ2xhc3MoQ2xhc3NOYW1lJDguQUNUSVZFKTsgLy8gSGFuZGxlIHNwZWNpYWwgY2FzZSB3aGVuIC5uYXYtbGluayBpcyBpbnNpZGUgLm5hdi1pdGVtXG5cbiAgICAgICAgJGxpbmsucGFyZW50cyhTZWxlY3RvciQ4Lk5BVl9MSVNUX0dST1VQKS5wcmV2KFNlbGVjdG9yJDguTkFWX0lURU1TKS5jaGlsZHJlbihTZWxlY3RvciQ4Lk5BVl9MSU5LUykuYWRkQ2xhc3MoQ2xhc3NOYW1lJDguQUNUSVZFKTtcbiAgICAgIH1cblxuICAgICAgJCh0aGlzLl9zY3JvbGxFbGVtZW50KS50cmlnZ2VyKEV2ZW50JDguQUNUSVZBVEUsIHtcbiAgICAgICAgcmVsYXRlZFRhcmdldDogdGFyZ2V0XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgX3Byb3RvLl9jbGVhciA9IGZ1bmN0aW9uIF9jbGVhcigpIHtcbiAgICAgIFtdLnNsaWNlLmNhbGwoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9zZWxlY3RvcikpLmZpbHRlcihmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICByZXR1cm4gbm9kZS5jbGFzc0xpc3QuY29udGFpbnMoQ2xhc3NOYW1lJDguQUNUSVZFKTtcbiAgICAgIH0pLmZvckVhY2goZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgcmV0dXJuIG5vZGUuY2xhc3NMaXN0LnJlbW92ZShDbGFzc05hbWUkOC5BQ1RJVkUpO1xuICAgICAgfSk7XG4gICAgfSAvLyBTdGF0aWNcbiAgICA7XG5cbiAgICBTY3JvbGxTcHkuX2pRdWVyeUludGVyZmFjZSA9IGZ1bmN0aW9uIF9qUXVlcnlJbnRlcmZhY2UoY29uZmlnKSB7XG4gICAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGRhdGEgPSAkKHRoaXMpLmRhdGEoREFUQV9LRVkkOCk7XG5cbiAgICAgICAgdmFyIF9jb25maWcgPSB0eXBlb2YgY29uZmlnID09PSAnb2JqZWN0JyAmJiBjb25maWc7XG5cbiAgICAgICAgaWYgKCFkYXRhKSB7XG4gICAgICAgICAgZGF0YSA9IG5ldyBTY3JvbGxTcHkodGhpcywgX2NvbmZpZyk7XG4gICAgICAgICAgJCh0aGlzKS5kYXRhKERBVEFfS0VZJDgsIGRhdGEpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHR5cGVvZiBjb25maWcgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgaWYgKHR5cGVvZiBkYXRhW2NvbmZpZ10gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiTm8gbWV0aG9kIG5hbWVkIFxcXCJcIiArIGNvbmZpZyArIFwiXFxcIlwiKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBkYXRhW2NvbmZpZ10oKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfTtcblxuICAgIF9jcmVhdGVDbGFzcyhTY3JvbGxTcHksIG51bGwsIFt7XG4gICAgICBrZXk6IFwiVkVSU0lPTlwiLFxuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgIHJldHVybiBWRVJTSU9OJDg7XG4gICAgICB9XG4gICAgfSwge1xuICAgICAga2V5OiBcIkRlZmF1bHRcIixcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICByZXR1cm4gRGVmYXVsdCQ2O1xuICAgICAgfVxuICAgIH1dKTtcblxuICAgIHJldHVybiBTY3JvbGxTcHk7XG4gIH0oKTtcbiAgLyoqXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKiBEYXRhIEFwaSBpbXBsZW1lbnRhdGlvblxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICovXG5cblxuICAkKHdpbmRvdykub24oRXZlbnQkOC5MT0FEX0RBVEFfQVBJLCBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHNjcm9sbFNweXMgPSBbXS5zbGljZS5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoU2VsZWN0b3IkOC5EQVRBX1NQWSkpO1xuICAgIHZhciBzY3JvbGxTcHlzTGVuZ3RoID0gc2Nyb2xsU3B5cy5sZW5ndGg7XG5cbiAgICBmb3IgKHZhciBpID0gc2Nyb2xsU3B5c0xlbmd0aDsgaS0tOykge1xuICAgICAgdmFyICRzcHkgPSAkKHNjcm9sbFNweXNbaV0pO1xuXG4gICAgICBTY3JvbGxTcHkuX2pRdWVyeUludGVyZmFjZS5jYWxsKCRzcHksICRzcHkuZGF0YSgpKTtcbiAgICB9XG4gIH0pO1xuICAvKipcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqIGpRdWVyeVxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICovXG5cbiAgJC5mbltOQU1FJDhdID0gU2Nyb2xsU3B5Ll9qUXVlcnlJbnRlcmZhY2U7XG4gICQuZm5bTkFNRSQ4XS5Db25zdHJ1Y3RvciA9IFNjcm9sbFNweTtcblxuICAkLmZuW05BTUUkOF0ubm9Db25mbGljdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAkLmZuW05BTUUkOF0gPSBKUVVFUllfTk9fQ09ORkxJQ1QkODtcbiAgICByZXR1cm4gU2Nyb2xsU3B5Ll9qUXVlcnlJbnRlcmZhY2U7XG4gIH07XG5cbiAgLyoqXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKiBDb25zdGFudHNcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqL1xuXG4gIHZhciBOQU1FJDkgPSAndGFiJztcbiAgdmFyIFZFUlNJT04kOSA9ICc0LjQuMSc7XG4gIHZhciBEQVRBX0tFWSQ5ID0gJ2JzLnRhYic7XG4gIHZhciBFVkVOVF9LRVkkOSA9IFwiLlwiICsgREFUQV9LRVkkOTtcbiAgdmFyIERBVEFfQVBJX0tFWSQ3ID0gJy5kYXRhLWFwaSc7XG4gIHZhciBKUVVFUllfTk9fQ09ORkxJQ1QkOSA9ICQuZm5bTkFNRSQ5XTtcbiAgdmFyIEV2ZW50JDkgPSB7XG4gICAgSElERTogXCJoaWRlXCIgKyBFVkVOVF9LRVkkOSxcbiAgICBISURERU46IFwiaGlkZGVuXCIgKyBFVkVOVF9LRVkkOSxcbiAgICBTSE9XOiBcInNob3dcIiArIEVWRU5UX0tFWSQ5LFxuICAgIFNIT1dOOiBcInNob3duXCIgKyBFVkVOVF9LRVkkOSxcbiAgICBDTElDS19EQVRBX0FQSTogXCJjbGlja1wiICsgRVZFTlRfS0VZJDkgKyBEQVRBX0FQSV9LRVkkN1xuICB9O1xuICB2YXIgQ2xhc3NOYW1lJDkgPSB7XG4gICAgRFJPUERPV05fTUVOVTogJ2Ryb3Bkb3duLW1lbnUnLFxuICAgIEFDVElWRTogJ2FjdGl2ZScsXG4gICAgRElTQUJMRUQ6ICdkaXNhYmxlZCcsXG4gICAgRkFERTogJ2ZhZGUnLFxuICAgIFNIT1c6ICdzaG93J1xuICB9O1xuICB2YXIgU2VsZWN0b3IkOSA9IHtcbiAgICBEUk9QRE9XTjogJy5kcm9wZG93bicsXG4gICAgTkFWX0xJU1RfR1JPVVA6ICcubmF2LCAubGlzdC1ncm91cCcsXG4gICAgQUNUSVZFOiAnLmFjdGl2ZScsXG4gICAgQUNUSVZFX1VMOiAnPiBsaSA+IC5hY3RpdmUnLFxuICAgIERBVEFfVE9HR0xFOiAnW2RhdGEtdG9nZ2xlPVwidGFiXCJdLCBbZGF0YS10b2dnbGU9XCJwaWxsXCJdLCBbZGF0YS10b2dnbGU9XCJsaXN0XCJdJyxcbiAgICBEUk9QRE9XTl9UT0dHTEU6ICcuZHJvcGRvd24tdG9nZ2xlJyxcbiAgICBEUk9QRE9XTl9BQ1RJVkVfQ0hJTEQ6ICc+IC5kcm9wZG93bi1tZW51IC5hY3RpdmUnXG4gIH07XG4gIC8qKlxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICogQ2xhc3MgRGVmaW5pdGlvblxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICovXG5cbiAgdmFyIFRhYiA9XG4gIC8qI19fUFVSRV9fKi9cbiAgZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFRhYihlbGVtZW50KSB7XG4gICAgICB0aGlzLl9lbGVtZW50ID0gZWxlbWVudDtcbiAgICB9IC8vIEdldHRlcnNcblxuXG4gICAgdmFyIF9wcm90byA9IFRhYi5wcm90b3R5cGU7XG5cbiAgICAvLyBQdWJsaWNcbiAgICBfcHJvdG8uc2hvdyA9IGZ1bmN0aW9uIHNob3coKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICBpZiAodGhpcy5fZWxlbWVudC5wYXJlbnROb2RlICYmIHRoaXMuX2VsZW1lbnQucGFyZW50Tm9kZS5ub2RlVHlwZSA9PT0gTm9kZS5FTEVNRU5UX05PREUgJiYgJCh0aGlzLl9lbGVtZW50KS5oYXNDbGFzcyhDbGFzc05hbWUkOS5BQ1RJVkUpIHx8ICQodGhpcy5fZWxlbWVudCkuaGFzQ2xhc3MoQ2xhc3NOYW1lJDkuRElTQUJMRUQpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIHRhcmdldDtcbiAgICAgIHZhciBwcmV2aW91cztcbiAgICAgIHZhciBsaXN0RWxlbWVudCA9ICQodGhpcy5fZWxlbWVudCkuY2xvc2VzdChTZWxlY3RvciQ5Lk5BVl9MSVNUX0dST1VQKVswXTtcbiAgICAgIHZhciBzZWxlY3RvciA9IFV0aWwuZ2V0U2VsZWN0b3JGcm9tRWxlbWVudCh0aGlzLl9lbGVtZW50KTtcblxuICAgICAgaWYgKGxpc3RFbGVtZW50KSB7XG4gICAgICAgIHZhciBpdGVtU2VsZWN0b3IgPSBsaXN0RWxlbWVudC5ub2RlTmFtZSA9PT0gJ1VMJyB8fCBsaXN0RWxlbWVudC5ub2RlTmFtZSA9PT0gJ09MJyA/IFNlbGVjdG9yJDkuQUNUSVZFX1VMIDogU2VsZWN0b3IkOS5BQ1RJVkU7XG4gICAgICAgIHByZXZpb3VzID0gJC5tYWtlQXJyYXkoJChsaXN0RWxlbWVudCkuZmluZChpdGVtU2VsZWN0b3IpKTtcbiAgICAgICAgcHJldmlvdXMgPSBwcmV2aW91c1twcmV2aW91cy5sZW5ndGggLSAxXTtcbiAgICAgIH1cblxuICAgICAgdmFyIGhpZGVFdmVudCA9ICQuRXZlbnQoRXZlbnQkOS5ISURFLCB7XG4gICAgICAgIHJlbGF0ZWRUYXJnZXQ6IHRoaXMuX2VsZW1lbnRcbiAgICAgIH0pO1xuICAgICAgdmFyIHNob3dFdmVudCA9ICQuRXZlbnQoRXZlbnQkOS5TSE9XLCB7XG4gICAgICAgIHJlbGF0ZWRUYXJnZXQ6IHByZXZpb3VzXG4gICAgICB9KTtcblxuICAgICAgaWYgKHByZXZpb3VzKSB7XG4gICAgICAgICQocHJldmlvdXMpLnRyaWdnZXIoaGlkZUV2ZW50KTtcbiAgICAgIH1cblxuICAgICAgJCh0aGlzLl9lbGVtZW50KS50cmlnZ2VyKHNob3dFdmVudCk7XG5cbiAgICAgIGlmIChzaG93RXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkgfHwgaGlkZUV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKHNlbGVjdG9yKSB7XG4gICAgICAgIHRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl9hY3RpdmF0ZSh0aGlzLl9lbGVtZW50LCBsaXN0RWxlbWVudCk7XG5cbiAgICAgIHZhciBjb21wbGV0ZSA9IGZ1bmN0aW9uIGNvbXBsZXRlKCkge1xuICAgICAgICB2YXIgaGlkZGVuRXZlbnQgPSAkLkV2ZW50KEV2ZW50JDkuSElEREVOLCB7XG4gICAgICAgICAgcmVsYXRlZFRhcmdldDogX3RoaXMuX2VsZW1lbnRcbiAgICAgICAgfSk7XG4gICAgICAgIHZhciBzaG93bkV2ZW50ID0gJC5FdmVudChFdmVudCQ5LlNIT1dOLCB7XG4gICAgICAgICAgcmVsYXRlZFRhcmdldDogcHJldmlvdXNcbiAgICAgICAgfSk7XG4gICAgICAgICQocHJldmlvdXMpLnRyaWdnZXIoaGlkZGVuRXZlbnQpO1xuICAgICAgICAkKF90aGlzLl9lbGVtZW50KS50cmlnZ2VyKHNob3duRXZlbnQpO1xuICAgICAgfTtcblxuICAgICAgaWYgKHRhcmdldCkge1xuICAgICAgICB0aGlzLl9hY3RpdmF0ZSh0YXJnZXQsIHRhcmdldC5wYXJlbnROb2RlLCBjb21wbGV0ZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb21wbGV0ZSgpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfcHJvdG8uZGlzcG9zZSA9IGZ1bmN0aW9uIGRpc3Bvc2UoKSB7XG4gICAgICAkLnJlbW92ZURhdGEodGhpcy5fZWxlbWVudCwgREFUQV9LRVkkOSk7XG4gICAgICB0aGlzLl9lbGVtZW50ID0gbnVsbDtcbiAgICB9IC8vIFByaXZhdGVcbiAgICA7XG5cbiAgICBfcHJvdG8uX2FjdGl2YXRlID0gZnVuY3Rpb24gX2FjdGl2YXRlKGVsZW1lbnQsIGNvbnRhaW5lciwgY2FsbGJhY2spIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB2YXIgYWN0aXZlRWxlbWVudHMgPSBjb250YWluZXIgJiYgKGNvbnRhaW5lci5ub2RlTmFtZSA9PT0gJ1VMJyB8fCBjb250YWluZXIubm9kZU5hbWUgPT09ICdPTCcpID8gJChjb250YWluZXIpLmZpbmQoU2VsZWN0b3IkOS5BQ1RJVkVfVUwpIDogJChjb250YWluZXIpLmNoaWxkcmVuKFNlbGVjdG9yJDkuQUNUSVZFKTtcbiAgICAgIHZhciBhY3RpdmUgPSBhY3RpdmVFbGVtZW50c1swXTtcbiAgICAgIHZhciBpc1RyYW5zaXRpb25pbmcgPSBjYWxsYmFjayAmJiBhY3RpdmUgJiYgJChhY3RpdmUpLmhhc0NsYXNzKENsYXNzTmFtZSQ5LkZBREUpO1xuXG4gICAgICB2YXIgY29tcGxldGUgPSBmdW5jdGlvbiBjb21wbGV0ZSgpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzMi5fdHJhbnNpdGlvbkNvbXBsZXRlKGVsZW1lbnQsIGFjdGl2ZSwgY2FsbGJhY2spO1xuICAgICAgfTtcblxuICAgICAgaWYgKGFjdGl2ZSAmJiBpc1RyYW5zaXRpb25pbmcpIHtcbiAgICAgICAgdmFyIHRyYW5zaXRpb25EdXJhdGlvbiA9IFV0aWwuZ2V0VHJhbnNpdGlvbkR1cmF0aW9uRnJvbUVsZW1lbnQoYWN0aXZlKTtcbiAgICAgICAgJChhY3RpdmUpLnJlbW92ZUNsYXNzKENsYXNzTmFtZSQ5LlNIT1cpLm9uZShVdGlsLlRSQU5TSVRJT05fRU5ELCBjb21wbGV0ZSkuZW11bGF0ZVRyYW5zaXRpb25FbmQodHJhbnNpdGlvbkR1cmF0aW9uKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbXBsZXRlKCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90by5fdHJhbnNpdGlvbkNvbXBsZXRlID0gZnVuY3Rpb24gX3RyYW5zaXRpb25Db21wbGV0ZShlbGVtZW50LCBhY3RpdmUsIGNhbGxiYWNrKSB7XG4gICAgICBpZiAoYWN0aXZlKSB7XG4gICAgICAgICQoYWN0aXZlKS5yZW1vdmVDbGFzcyhDbGFzc05hbWUkOS5BQ1RJVkUpO1xuICAgICAgICB2YXIgZHJvcGRvd25DaGlsZCA9ICQoYWN0aXZlLnBhcmVudE5vZGUpLmZpbmQoU2VsZWN0b3IkOS5EUk9QRE9XTl9BQ1RJVkVfQ0hJTEQpWzBdO1xuXG4gICAgICAgIGlmIChkcm9wZG93bkNoaWxkKSB7XG4gICAgICAgICAgJChkcm9wZG93bkNoaWxkKS5yZW1vdmVDbGFzcyhDbGFzc05hbWUkOS5BQ1RJVkUpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGFjdGl2ZS5nZXRBdHRyaWJ1dGUoJ3JvbGUnKSA9PT0gJ3RhYicpIHtcbiAgICAgICAgICBhY3RpdmUuc2V0QXR0cmlidXRlKCdhcmlhLXNlbGVjdGVkJywgZmFsc2UpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgICQoZWxlbWVudCkuYWRkQ2xhc3MoQ2xhc3NOYW1lJDkuQUNUSVZFKTtcblxuICAgICAgaWYgKGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdyb2xlJykgPT09ICd0YWInKSB7XG4gICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdhcmlhLXNlbGVjdGVkJywgdHJ1ZSk7XG4gICAgICB9XG5cbiAgICAgIFV0aWwucmVmbG93KGVsZW1lbnQpO1xuXG4gICAgICBpZiAoZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoQ2xhc3NOYW1lJDkuRkFERSkpIHtcbiAgICAgICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKENsYXNzTmFtZSQ5LlNIT1cpO1xuICAgICAgfVxuXG4gICAgICBpZiAoZWxlbWVudC5wYXJlbnROb2RlICYmICQoZWxlbWVudC5wYXJlbnROb2RlKS5oYXNDbGFzcyhDbGFzc05hbWUkOS5EUk9QRE9XTl9NRU5VKSkge1xuICAgICAgICB2YXIgZHJvcGRvd25FbGVtZW50ID0gJChlbGVtZW50KS5jbG9zZXN0KFNlbGVjdG9yJDkuRFJPUERPV04pWzBdO1xuXG4gICAgICAgIGlmIChkcm9wZG93bkVsZW1lbnQpIHtcbiAgICAgICAgICB2YXIgZHJvcGRvd25Ub2dnbGVMaXN0ID0gW10uc2xpY2UuY2FsbChkcm9wZG93bkVsZW1lbnQucXVlcnlTZWxlY3RvckFsbChTZWxlY3RvciQ5LkRST1BET1dOX1RPR0dMRSkpO1xuICAgICAgICAgICQoZHJvcGRvd25Ub2dnbGVMaXN0KS5hZGRDbGFzcyhDbGFzc05hbWUkOS5BQ1RJVkUpO1xuICAgICAgICB9XG5cbiAgICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2FyaWEtZXhwYW5kZWQnLCB0cnVlKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICB9XG4gICAgfSAvLyBTdGF0aWNcbiAgICA7XG5cbiAgICBUYWIuX2pRdWVyeUludGVyZmFjZSA9IGZ1bmN0aW9uIF9qUXVlcnlJbnRlcmZhY2UoY29uZmlnKSB7XG4gICAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyICR0aGlzID0gJCh0aGlzKTtcbiAgICAgICAgdmFyIGRhdGEgPSAkdGhpcy5kYXRhKERBVEFfS0VZJDkpO1xuXG4gICAgICAgIGlmICghZGF0YSkge1xuICAgICAgICAgIGRhdGEgPSBuZXcgVGFiKHRoaXMpO1xuICAgICAgICAgICR0aGlzLmRhdGEoREFUQV9LRVkkOSwgZGF0YSk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodHlwZW9mIGNvbmZpZyA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICBpZiAodHlwZW9mIGRhdGFbY29uZmlnXSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJObyBtZXRob2QgbmFtZWQgXFxcIlwiICsgY29uZmlnICsgXCJcXFwiXCIpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGRhdGFbY29uZmlnXSgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgX2NyZWF0ZUNsYXNzKFRhYiwgbnVsbCwgW3tcbiAgICAgIGtleTogXCJWRVJTSU9OXCIsXG4gICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgcmV0dXJuIFZFUlNJT04kOTtcbiAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gVGFiO1xuICB9KCk7XG4gIC8qKlxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICogRGF0YSBBcGkgaW1wbGVtZW50YXRpb25cbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqL1xuXG5cbiAgJChkb2N1bWVudCkub24oRXZlbnQkOS5DTElDS19EQVRBX0FQSSwgU2VsZWN0b3IkOS5EQVRBX1RPR0dMRSwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgIFRhYi5falF1ZXJ5SW50ZXJmYWNlLmNhbGwoJCh0aGlzKSwgJ3Nob3cnKTtcbiAgfSk7XG4gIC8qKlxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICogalF1ZXJ5XG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKi9cblxuICAkLmZuW05BTUUkOV0gPSBUYWIuX2pRdWVyeUludGVyZmFjZTtcbiAgJC5mbltOQU1FJDldLkNvbnN0cnVjdG9yID0gVGFiO1xuXG4gICQuZm5bTkFNRSQ5XS5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xuICAgICQuZm5bTkFNRSQ5XSA9IEpRVUVSWV9OT19DT05GTElDVCQ5O1xuICAgIHJldHVybiBUYWIuX2pRdWVyeUludGVyZmFjZTtcbiAgfTtcblxuICAvKipcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqIENvbnN0YW50c1xuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICovXG5cbiAgdmFyIE5BTUUkYSA9ICd0b2FzdCc7XG4gIHZhciBWRVJTSU9OJGEgPSAnNC40LjEnO1xuICB2YXIgREFUQV9LRVkkYSA9ICdicy50b2FzdCc7XG4gIHZhciBFVkVOVF9LRVkkYSA9IFwiLlwiICsgREFUQV9LRVkkYTtcbiAgdmFyIEpRVUVSWV9OT19DT05GTElDVCRhID0gJC5mbltOQU1FJGFdO1xuICB2YXIgRXZlbnQkYSA9IHtcbiAgICBDTElDS19ESVNNSVNTOiBcImNsaWNrLmRpc21pc3NcIiArIEVWRU5UX0tFWSRhLFxuICAgIEhJREU6IFwiaGlkZVwiICsgRVZFTlRfS0VZJGEsXG4gICAgSElEREVOOiBcImhpZGRlblwiICsgRVZFTlRfS0VZJGEsXG4gICAgU0hPVzogXCJzaG93XCIgKyBFVkVOVF9LRVkkYSxcbiAgICBTSE9XTjogXCJzaG93blwiICsgRVZFTlRfS0VZJGFcbiAgfTtcbiAgdmFyIENsYXNzTmFtZSRhID0ge1xuICAgIEZBREU6ICdmYWRlJyxcbiAgICBISURFOiAnaGlkZScsXG4gICAgU0hPVzogJ3Nob3cnLFxuICAgIFNIT1dJTkc6ICdzaG93aW5nJ1xuICB9O1xuICB2YXIgRGVmYXVsdFR5cGUkNyA9IHtcbiAgICBhbmltYXRpb246ICdib29sZWFuJyxcbiAgICBhdXRvaGlkZTogJ2Jvb2xlYW4nLFxuICAgIGRlbGF5OiAnbnVtYmVyJ1xuICB9O1xuICB2YXIgRGVmYXVsdCQ3ID0ge1xuICAgIGFuaW1hdGlvbjogdHJ1ZSxcbiAgICBhdXRvaGlkZTogdHJ1ZSxcbiAgICBkZWxheTogNTAwXG4gIH07XG4gIHZhciBTZWxlY3RvciRhID0ge1xuICAgIERBVEFfRElTTUlTUzogJ1tkYXRhLWRpc21pc3M9XCJ0b2FzdFwiXSdcbiAgfTtcbiAgLyoqXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKiBDbGFzcyBEZWZpbml0aW9uXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKi9cblxuICB2YXIgVG9hc3QgPVxuICAvKiNfX1BVUkVfXyovXG4gIGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBUb2FzdChlbGVtZW50LCBjb25maWcpIHtcbiAgICAgIHRoaXMuX2VsZW1lbnQgPSBlbGVtZW50O1xuICAgICAgdGhpcy5fY29uZmlnID0gdGhpcy5fZ2V0Q29uZmlnKGNvbmZpZyk7XG4gICAgICB0aGlzLl90aW1lb3V0ID0gbnVsbDtcblxuICAgICAgdGhpcy5fc2V0TGlzdGVuZXJzKCk7XG4gICAgfSAvLyBHZXR0ZXJzXG5cblxuICAgIHZhciBfcHJvdG8gPSBUb2FzdC5wcm90b3R5cGU7XG5cbiAgICAvLyBQdWJsaWNcbiAgICBfcHJvdG8uc2hvdyA9IGZ1bmN0aW9uIHNob3coKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICB2YXIgc2hvd0V2ZW50ID0gJC5FdmVudChFdmVudCRhLlNIT1cpO1xuICAgICAgJCh0aGlzLl9lbGVtZW50KS50cmlnZ2VyKHNob3dFdmVudCk7XG5cbiAgICAgIGlmIChzaG93RXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5fY29uZmlnLmFuaW1hdGlvbikge1xuICAgICAgICB0aGlzLl9lbGVtZW50LmNsYXNzTGlzdC5hZGQoQ2xhc3NOYW1lJGEuRkFERSk7XG4gICAgICB9XG5cbiAgICAgIHZhciBjb21wbGV0ZSA9IGZ1bmN0aW9uIGNvbXBsZXRlKCkge1xuICAgICAgICBfdGhpcy5fZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKENsYXNzTmFtZSRhLlNIT1dJTkcpO1xuXG4gICAgICAgIF90aGlzLl9lbGVtZW50LmNsYXNzTGlzdC5hZGQoQ2xhc3NOYW1lJGEuU0hPVyk7XG5cbiAgICAgICAgJChfdGhpcy5fZWxlbWVudCkudHJpZ2dlcihFdmVudCRhLlNIT1dOKTtcblxuICAgICAgICBpZiAoX3RoaXMuX2NvbmZpZy5hdXRvaGlkZSkge1xuICAgICAgICAgIF90aGlzLl90aW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBfdGhpcy5oaWRlKCk7XG4gICAgICAgICAgfSwgX3RoaXMuX2NvbmZpZy5kZWxheSk7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIHRoaXMuX2VsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShDbGFzc05hbWUkYS5ISURFKTtcblxuICAgICAgVXRpbC5yZWZsb3codGhpcy5fZWxlbWVudCk7XG5cbiAgICAgIHRoaXMuX2VsZW1lbnQuY2xhc3NMaXN0LmFkZChDbGFzc05hbWUkYS5TSE9XSU5HKTtcblxuICAgICAgaWYgKHRoaXMuX2NvbmZpZy5hbmltYXRpb24pIHtcbiAgICAgICAgdmFyIHRyYW5zaXRpb25EdXJhdGlvbiA9IFV0aWwuZ2V0VHJhbnNpdGlvbkR1cmF0aW9uRnJvbUVsZW1lbnQodGhpcy5fZWxlbWVudCk7XG4gICAgICAgICQodGhpcy5fZWxlbWVudCkub25lKFV0aWwuVFJBTlNJVElPTl9FTkQsIGNvbXBsZXRlKS5lbXVsYXRlVHJhbnNpdGlvbkVuZCh0cmFuc2l0aW9uRHVyYXRpb24pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29tcGxldGUoKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3Byb3RvLmhpZGUgPSBmdW5jdGlvbiBoaWRlKCkge1xuICAgICAgaWYgKCF0aGlzLl9lbGVtZW50LmNsYXNzTGlzdC5jb250YWlucyhDbGFzc05hbWUkYS5TSE9XKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHZhciBoaWRlRXZlbnQgPSAkLkV2ZW50KEV2ZW50JGEuSElERSk7XG4gICAgICAkKHRoaXMuX2VsZW1lbnQpLnRyaWdnZXIoaGlkZUV2ZW50KTtcblxuICAgICAgaWYgKGhpZGVFdmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHRoaXMuX2Nsb3NlKCk7XG4gICAgfTtcblxuICAgIF9wcm90by5kaXNwb3NlID0gZnVuY3Rpb24gZGlzcG9zZSgpIHtcbiAgICAgIGNsZWFyVGltZW91dCh0aGlzLl90aW1lb3V0KTtcbiAgICAgIHRoaXMuX3RpbWVvdXQgPSBudWxsO1xuXG4gICAgICBpZiAodGhpcy5fZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoQ2xhc3NOYW1lJGEuU0hPVykpIHtcbiAgICAgICAgdGhpcy5fZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKENsYXNzTmFtZSRhLlNIT1cpO1xuICAgICAgfVxuXG4gICAgICAkKHRoaXMuX2VsZW1lbnQpLm9mZihFdmVudCRhLkNMSUNLX0RJU01JU1MpO1xuICAgICAgJC5yZW1vdmVEYXRhKHRoaXMuX2VsZW1lbnQsIERBVEFfS0VZJGEpO1xuICAgICAgdGhpcy5fZWxlbWVudCA9IG51bGw7XG4gICAgICB0aGlzLl9jb25maWcgPSBudWxsO1xuICAgIH0gLy8gUHJpdmF0ZVxuICAgIDtcblxuICAgIF9wcm90by5fZ2V0Q29uZmlnID0gZnVuY3Rpb24gX2dldENvbmZpZyhjb25maWcpIHtcbiAgICAgIGNvbmZpZyA9IF9vYmplY3RTcHJlYWQyKHt9LCBEZWZhdWx0JDcsIHt9LCAkKHRoaXMuX2VsZW1lbnQpLmRhdGEoKSwge30sIHR5cGVvZiBjb25maWcgPT09ICdvYmplY3QnICYmIGNvbmZpZyA/IGNvbmZpZyA6IHt9KTtcbiAgICAgIFV0aWwudHlwZUNoZWNrQ29uZmlnKE5BTUUkYSwgY29uZmlnLCB0aGlzLmNvbnN0cnVjdG9yLkRlZmF1bHRUeXBlKTtcbiAgICAgIHJldHVybiBjb25maWc7XG4gICAgfTtcblxuICAgIF9wcm90by5fc2V0TGlzdGVuZXJzID0gZnVuY3Rpb24gX3NldExpc3RlbmVycygpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICAkKHRoaXMuX2VsZW1lbnQpLm9uKEV2ZW50JGEuQ0xJQ0tfRElTTUlTUywgU2VsZWN0b3IkYS5EQVRBX0RJU01JU1MsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzMi5oaWRlKCk7XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgX3Byb3RvLl9jbG9zZSA9IGZ1bmN0aW9uIF9jbG9zZSgpIHtcbiAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICB2YXIgY29tcGxldGUgPSBmdW5jdGlvbiBjb21wbGV0ZSgpIHtcbiAgICAgICAgX3RoaXMzLl9lbGVtZW50LmNsYXNzTGlzdC5hZGQoQ2xhc3NOYW1lJGEuSElERSk7XG5cbiAgICAgICAgJChfdGhpczMuX2VsZW1lbnQpLnRyaWdnZXIoRXZlbnQkYS5ISURERU4pO1xuICAgICAgfTtcblxuICAgICAgdGhpcy5fZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKENsYXNzTmFtZSRhLlNIT1cpO1xuXG4gICAgICBpZiAodGhpcy5fY29uZmlnLmFuaW1hdGlvbikge1xuICAgICAgICB2YXIgdHJhbnNpdGlvbkR1cmF0aW9uID0gVXRpbC5nZXRUcmFuc2l0aW9uRHVyYXRpb25Gcm9tRWxlbWVudCh0aGlzLl9lbGVtZW50KTtcbiAgICAgICAgJCh0aGlzLl9lbGVtZW50KS5vbmUoVXRpbC5UUkFOU0lUSU9OX0VORCwgY29tcGxldGUpLmVtdWxhdGVUcmFuc2l0aW9uRW5kKHRyYW5zaXRpb25EdXJhdGlvbik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb21wbGV0ZSgpO1xuICAgICAgfVxuICAgIH0gLy8gU3RhdGljXG4gICAgO1xuXG4gICAgVG9hc3QuX2pRdWVyeUludGVyZmFjZSA9IGZ1bmN0aW9uIF9qUXVlcnlJbnRlcmZhY2UoY29uZmlnKSB7XG4gICAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyICRlbGVtZW50ID0gJCh0aGlzKTtcbiAgICAgICAgdmFyIGRhdGEgPSAkZWxlbWVudC5kYXRhKERBVEFfS0VZJGEpO1xuXG4gICAgICAgIHZhciBfY29uZmlnID0gdHlwZW9mIGNvbmZpZyA9PT0gJ29iamVjdCcgJiYgY29uZmlnO1xuXG4gICAgICAgIGlmICghZGF0YSkge1xuICAgICAgICAgIGRhdGEgPSBuZXcgVG9hc3QodGhpcywgX2NvbmZpZyk7XG4gICAgICAgICAgJGVsZW1lbnQuZGF0YShEQVRBX0tFWSRhLCBkYXRhKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0eXBlb2YgY29uZmlnID09PSAnc3RyaW5nJykge1xuICAgICAgICAgIGlmICh0eXBlb2YgZGF0YVtjb25maWddID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIk5vIG1ldGhvZCBuYW1lZCBcXFwiXCIgKyBjb25maWcgKyBcIlxcXCJcIik7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgZGF0YVtjb25maWddKHRoaXMpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgX2NyZWF0ZUNsYXNzKFRvYXN0LCBudWxsLCBbe1xuICAgICAga2V5OiBcIlZFUlNJT05cIixcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICByZXR1cm4gVkVSU0lPTiRhO1xuICAgICAgfVxuICAgIH0sIHtcbiAgICAgIGtleTogXCJEZWZhdWx0VHlwZVwiLFxuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgIHJldHVybiBEZWZhdWx0VHlwZSQ3O1xuICAgICAgfVxuICAgIH0sIHtcbiAgICAgIGtleTogXCJEZWZhdWx0XCIsXG4gICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgcmV0dXJuIERlZmF1bHQkNztcbiAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gVG9hc3Q7XG4gIH0oKTtcbiAgLyoqXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKiBqUXVlcnlcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqL1xuXG5cbiAgJC5mbltOQU1FJGFdID0gVG9hc3QuX2pRdWVyeUludGVyZmFjZTtcbiAgJC5mbltOQU1FJGFdLkNvbnN0cnVjdG9yID0gVG9hc3Q7XG5cbiAgJC5mbltOQU1FJGFdLm5vQ29uZmxpY3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgJC5mbltOQU1FJGFdID0gSlFVRVJZX05PX0NPTkZMSUNUJGE7XG4gICAgcmV0dXJuIFRvYXN0Ll9qUXVlcnlJbnRlcmZhY2U7XG4gIH07XG5cbiAgZXhwb3J0cy5BbGVydCA9IEFsZXJ0O1xuICBleHBvcnRzLkJ1dHRvbiA9IEJ1dHRvbjtcbiAgZXhwb3J0cy5DYXJvdXNlbCA9IENhcm91c2VsO1xuICBleHBvcnRzLkNvbGxhcHNlID0gQ29sbGFwc2U7XG4gIGV4cG9ydHMuRHJvcGRvd24gPSBEcm9wZG93bjtcbiAgZXhwb3J0cy5Nb2RhbCA9IE1vZGFsO1xuICBleHBvcnRzLlBvcG92ZXIgPSBQb3BvdmVyO1xuICBleHBvcnRzLlNjcm9sbHNweSA9IFNjcm9sbFNweTtcbiAgZXhwb3J0cy5UYWIgPSBUYWI7XG4gIGV4cG9ydHMuVG9hc3QgPSBUb2FzdDtcbiAgZXhwb3J0cy5Ub29sdGlwID0gVG9vbHRpcDtcbiAgZXhwb3J0cy5VdGlsID0gVXRpbDtcblxuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG59KSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Ym9vdHN0cmFwLmJ1bmRsZS5qcy5tYXBcbiIsIi8qISBoaWdobGlnaHQuanMgdjkuMTQuMiB8IEJTRDMgTGljZW5zZSB8IGdpdC5pby9obGpzbGljZW5zZSAqL1xuIWZ1bmN0aW9uKGUpe3ZhciBuPVwib2JqZWN0XCI9PXR5cGVvZiB3aW5kb3cmJndpbmRvd3x8XCJvYmplY3RcIj09dHlwZW9mIHNlbGYmJnNlbGY7XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGV4cG9ydHM/ZShleHBvcnRzKTpuJiYobi5obGpzPWUoe30pLFwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZCYmZGVmaW5lKFtdLGZ1bmN0aW9uKCl7cmV0dXJuIG4uaGxqc30pKX0oZnVuY3Rpb24oZSl7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZS5yZXBsYWNlKC8mL2csXCImYW1wO1wiKS5yZXBsYWNlKC88L2csXCImbHQ7XCIpLnJlcGxhY2UoLz4vZyxcIiZndDtcIil9ZnVuY3Rpb24gdChlKXtyZXR1cm4gZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpfWZ1bmN0aW9uIHIoZSxuKXt2YXIgdD1lJiZlLmV4ZWMobik7cmV0dXJuIHQmJjA9PT10LmluZGV4fWZ1bmN0aW9uIGEoZSl7cmV0dXJuIGsudGVzdChlKX1mdW5jdGlvbiBpKGUpe3ZhciBuLHQscixpLG89ZS5jbGFzc05hbWUrXCIgXCI7aWYobys9ZS5wYXJlbnROb2RlP2UucGFyZW50Tm9kZS5jbGFzc05hbWU6XCJcIix0PU0uZXhlYyhvKSlyZXR1cm4gdyh0WzFdKT90WzFdOlwibm8taGlnaGxpZ2h0XCI7Zm9yKG89by5zcGxpdCgvXFxzKy8pLG49MCxyPW8ubGVuZ3RoO3I+bjtuKyspaWYoaT1vW25dLGEoaSl8fHcoaSkpcmV0dXJuIGl9ZnVuY3Rpb24gbyhlKXt2YXIgbix0PXt9LHI9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpO2ZvcihuIGluIGUpdFtuXT1lW25dO3JldHVybiByLmZvckVhY2goZnVuY3Rpb24oZSl7Zm9yKG4gaW4gZSl0W25dPWVbbl19KSx0fWZ1bmN0aW9uIGMoZSl7dmFyIG49W107cmV0dXJuIGZ1bmN0aW9uIHIoZSxhKXtmb3IodmFyIGk9ZS5maXJzdENoaWxkO2k7aT1pLm5leHRTaWJsaW5nKTM9PT1pLm5vZGVUeXBlP2ErPWkubm9kZVZhbHVlLmxlbmd0aDoxPT09aS5ub2RlVHlwZSYmKG4ucHVzaCh7ZXZlbnQ6XCJzdGFydFwiLG9mZnNldDphLG5vZGU6aX0pLGE9cihpLGEpLHQoaSkubWF0Y2goL2JyfGhyfGltZ3xpbnB1dC8pfHxuLnB1c2goe2V2ZW50Olwic3RvcFwiLG9mZnNldDphLG5vZGU6aX0pKTtyZXR1cm4gYX0oZSwwKSxufWZ1bmN0aW9uIHUoZSxyLGEpe2Z1bmN0aW9uIGkoKXtyZXR1cm4gZS5sZW5ndGgmJnIubGVuZ3RoP2VbMF0ub2Zmc2V0IT09clswXS5vZmZzZXQ/ZVswXS5vZmZzZXQ8clswXS5vZmZzZXQ/ZTpyOlwic3RhcnRcIj09PXJbMF0uZXZlbnQ/ZTpyOmUubGVuZ3RoP2U6cn1mdW5jdGlvbiBvKGUpe2Z1bmN0aW9uIHIoZSl7cmV0dXJuXCIgXCIrZS5ub2RlTmFtZSsnPVwiJytuKGUudmFsdWUpLnJlcGxhY2UoJ1wiJyxcIiZxdW90O1wiKSsnXCInfWwrPVwiPFwiK3QoZSkrRS5tYXAuY2FsbChlLmF0dHJpYnV0ZXMscikuam9pbihcIlwiKStcIj5cIn1mdW5jdGlvbiBjKGUpe2wrPVwiPC9cIit0KGUpK1wiPlwifWZ1bmN0aW9uIHUoZSl7KFwic3RhcnRcIj09PWUuZXZlbnQ/bzpjKShlLm5vZGUpfWZvcih2YXIgcz0wLGw9XCJcIixmPVtdO2UubGVuZ3RofHxyLmxlbmd0aDspe3ZhciBnPWkoKTtpZihsKz1uKGEuc3Vic3RyaW5nKHMsZ1swXS5vZmZzZXQpKSxzPWdbMF0ub2Zmc2V0LGc9PT1lKXtmLnJldmVyc2UoKS5mb3JFYWNoKGMpO2RvIHUoZy5zcGxpY2UoMCwxKVswXSksZz1pKCk7d2hpbGUoZz09PWUmJmcubGVuZ3RoJiZnWzBdLm9mZnNldD09PXMpO2YucmV2ZXJzZSgpLmZvckVhY2gobyl9ZWxzZVwic3RhcnRcIj09PWdbMF0uZXZlbnQ/Zi5wdXNoKGdbMF0ubm9kZSk6Zi5wb3AoKSx1KGcuc3BsaWNlKDAsMSlbMF0pfXJldHVybiBsK24oYS5zdWJzdHIocykpfWZ1bmN0aW9uIHMoZSl7cmV0dXJuIGUudiYmIWUuY2FjaGVkX3ZhcmlhbnRzJiYoZS5jYWNoZWRfdmFyaWFudHM9ZS52Lm1hcChmdW5jdGlvbihuKXtyZXR1cm4gbyhlLHt2Om51bGx9LG4pfSkpLGUuY2FjaGVkX3ZhcmlhbnRzfHxlLmVXJiZbbyhlKV18fFtlXX1mdW5jdGlvbiBsKGUpe2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuc291cmNlfHxlfWZ1bmN0aW9uIHQodCxyKXtyZXR1cm4gbmV3IFJlZ0V4cChuKHQpLFwibVwiKyhlLmNJP1wiaVwiOlwiXCIpKyhyP1wiZ1wiOlwiXCIpKX1mdW5jdGlvbiByKGEsaSl7aWYoIWEuY29tcGlsZWQpe2lmKGEuY29tcGlsZWQ9ITAsYS5rPWEua3x8YS5iSyxhLmspe3ZhciBvPXt9LGM9ZnVuY3Rpb24obix0KXtlLmNJJiYodD10LnRvTG93ZXJDYXNlKCkpLHQuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zcGxpdChcInxcIik7b1t0WzBdXT1bbix0WzFdP051bWJlcih0WzFdKToxXX0pfTtcInN0cmluZ1wiPT10eXBlb2YgYS5rP2MoXCJrZXl3b3JkXCIsYS5rKTpCKGEuaykuZm9yRWFjaChmdW5jdGlvbihlKXtjKGUsYS5rW2VdKX0pLGEuaz1vfWEubFI9dChhLmx8fC9cXHcrLywhMCksaSYmKGEuYksmJihhLmI9XCJcXFxcYihcIithLmJLLnNwbGl0KFwiIFwiKS5qb2luKFwifFwiKStcIilcXFxcYlwiKSxhLmJ8fChhLmI9L1xcQnxcXGIvKSxhLmJSPXQoYS5iKSxhLmVuZFNhbWVBc0JlZ2luJiYoYS5lPWEuYiksYS5lfHxhLmVXfHwoYS5lPS9cXEJ8XFxiLyksYS5lJiYoYS5lUj10KGEuZSkpLGEudEU9bihhLmUpfHxcIlwiLGEuZVcmJmkudEUmJihhLnRFKz0oYS5lP1wifFwiOlwiXCIpK2kudEUpKSxhLmkmJihhLmlSPXQoYS5pKSksbnVsbD09YS5yJiYoYS5yPTEpLGEuY3x8KGEuYz1bXSksYS5jPUFycmF5LnByb3RvdHlwZS5jb25jYXQuYXBwbHkoW10sYS5jLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gcyhcInNlbGZcIj09PWU/YTplKX0pKSxhLmMuZm9yRWFjaChmdW5jdGlvbihlKXtyKGUsYSl9KSxhLnN0YXJ0cyYmcihhLnN0YXJ0cyxpKTt2YXIgdT1hLmMubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBlLmJLP1wiXFxcXC4/KFwiK2UuYitcIilcXFxcLj9cIjplLmJ9KS5jb25jYXQoW2EudEUsYS5pXSkubWFwKG4pLmZpbHRlcihCb29sZWFuKTthLnQ9dS5sZW5ndGg/dCh1LmpvaW4oXCJ8XCIpLCEwKTp7ZXhlYzpmdW5jdGlvbigpe3JldHVybiBudWxsfX19fXIoZSl9ZnVuY3Rpb24gZihlLHQsYSxpKXtmdW5jdGlvbiBvKGUpe3JldHVybiBuZXcgUmVnRXhwKGUucmVwbGFjZSgvWy1cXC9cXFxcXiQqKz8uKCl8W1xcXXt9XS9nLFwiXFxcXCQmXCIpLFwibVwiKX1mdW5jdGlvbiBjKGUsbil7dmFyIHQsYTtmb3IodD0wLGE9bi5jLmxlbmd0aDthPnQ7dCsrKWlmKHIobi5jW3RdLmJSLGUpKXJldHVybiBuLmNbdF0uZW5kU2FtZUFzQmVnaW4mJihuLmNbdF0uZVI9byhuLmNbdF0uYlIuZXhlYyhlKVswXSkpLG4uY1t0XX1mdW5jdGlvbiB1KGUsbil7aWYocihlLmVSLG4pKXtmb3IoO2UuZW5kc1BhcmVudCYmZS5wYXJlbnQ7KWU9ZS5wYXJlbnQ7cmV0dXJuIGV9cmV0dXJuIGUuZVc/dShlLnBhcmVudCxuKTp2b2lkIDB9ZnVuY3Rpb24gcyhlLG4pe3JldHVybiFhJiZyKG4uaVIsZSl9ZnVuY3Rpb24gcChlLG4pe3ZhciB0PVIuY0k/blswXS50b0xvd2VyQ2FzZSgpOm5bMF07cmV0dXJuIGUuay5oYXNPd25Qcm9wZXJ0eSh0KSYmZS5rW3RdfWZ1bmN0aW9uIGQoZSxuLHQscil7dmFyIGE9cj9cIlwiOmouY2xhc3NQcmVmaXgsaT0nPHNwYW4gY2xhc3M9XCInK2Esbz10P1wiXCI6STtyZXR1cm4gaSs9ZSsnXCI+JyxpK24rb31mdW5jdGlvbiBoKCl7dmFyIGUsdCxyLGE7aWYoIUUuaylyZXR1cm4gbihrKTtmb3IoYT1cIlwiLHQ9MCxFLmxSLmxhc3RJbmRleD0wLHI9RS5sUi5leGVjKGspO3I7KWErPW4oay5zdWJzdHJpbmcodCxyLmluZGV4KSksZT1wKEUsciksZT8oTSs9ZVsxXSxhKz1kKGVbMF0sbihyWzBdKSkpOmErPW4oclswXSksdD1FLmxSLmxhc3RJbmRleCxyPUUubFIuZXhlYyhrKTtyZXR1cm4gYStuKGsuc3Vic3RyKHQpKX1mdW5jdGlvbiBiKCl7dmFyIGU9XCJzdHJpbmdcIj09dHlwZW9mIEUuc0w7aWYoZSYmIUxbRS5zTF0pcmV0dXJuIG4oayk7dmFyIHQ9ZT9mKEUuc0wsaywhMCxCW0Uuc0xdKTpnKGssRS5zTC5sZW5ndGg/RS5zTDp2b2lkIDApO3JldHVybiBFLnI+MCYmKE0rPXQuciksZSYmKEJbRS5zTF09dC50b3ApLGQodC5sYW5ndWFnZSx0LnZhbHVlLCExLCEwKX1mdW5jdGlvbiB2KCl7eSs9bnVsbCE9RS5zTD9iKCk6aCgpLGs9XCJcIn1mdW5jdGlvbiBtKGUpe3krPWUuY04/ZChlLmNOLFwiXCIsITApOlwiXCIsRT1PYmplY3QuY3JlYXRlKGUse3BhcmVudDp7dmFsdWU6RX19KX1mdW5jdGlvbiBOKGUsbil7aWYoays9ZSxudWxsPT1uKXJldHVybiB2KCksMDt2YXIgdD1jKG4sRSk7aWYodClyZXR1cm4gdC5za2lwP2srPW46KHQuZUImJihrKz1uKSx2KCksdC5yQnx8dC5lQnx8KGs9bikpLG0odCxuKSx0LnJCPzA6bi5sZW5ndGg7dmFyIHI9dShFLG4pO2lmKHIpe3ZhciBhPUU7YS5za2lwP2srPW46KGEuckV8fGEuZUV8fChrKz1uKSx2KCksYS5lRSYmKGs9bikpO2RvIEUuY04mJih5Kz1JKSxFLnNraXB8fEUuc0x8fChNKz1FLnIpLEU9RS5wYXJlbnQ7d2hpbGUoRSE9PXIucGFyZW50KTtyZXR1cm4gci5zdGFydHMmJihyLmVuZFNhbWVBc0JlZ2luJiYoci5zdGFydHMuZVI9ci5lUiksbShyLnN0YXJ0cyxcIlwiKSksYS5yRT8wOm4ubGVuZ3RofWlmKHMobixFKSl0aHJvdyBuZXcgRXJyb3IoJ0lsbGVnYWwgbGV4ZW1lIFwiJytuKydcIiBmb3IgbW9kZSBcIicrKEUuY058fFwiPHVubmFtZWQ+XCIpKydcIicpO3JldHVybiBrKz1uLG4ubGVuZ3RofHwxfXZhciBSPXcoZSk7aWYoIVIpdGhyb3cgbmV3IEVycm9yKCdVbmtub3duIGxhbmd1YWdlOiBcIicrZSsnXCInKTtsKFIpO3ZhciB4LEU9aXx8UixCPXt9LHk9XCJcIjtmb3IoeD1FO3ghPT1SO3g9eC5wYXJlbnQpeC5jTiYmKHk9ZCh4LmNOLFwiXCIsITApK3kpO3ZhciBrPVwiXCIsTT0wO3RyeXtmb3IodmFyIEMsQSxTPTA7Oyl7aWYoRS50Lmxhc3RJbmRleD1TLEM9RS50LmV4ZWModCksIUMpYnJlYWs7QT1OKHQuc3Vic3RyaW5nKFMsQy5pbmRleCksQ1swXSksUz1DLmluZGV4K0F9Zm9yKE4odC5zdWJzdHIoUykpLHg9RTt4LnBhcmVudDt4PXgucGFyZW50KXguY04mJih5Kz1JKTtyZXR1cm57cjpNLHZhbHVlOnksbGFuZ3VhZ2U6ZSx0b3A6RX19Y2F0Y2goTyl7aWYoTy5tZXNzYWdlJiYtMSE9PU8ubWVzc2FnZS5pbmRleE9mKFwiSWxsZWdhbFwiKSlyZXR1cm57cjowLHZhbHVlOm4odCl9O3Rocm93IE99fWZ1bmN0aW9uIGcoZSx0KXt0PXR8fGoubGFuZ3VhZ2VzfHxCKEwpO3ZhciByPXtyOjAsdmFsdWU6bihlKX0sYT1yO3JldHVybiB0LmZpbHRlcih3KS5maWx0ZXIoeCkuZm9yRWFjaChmdW5jdGlvbihuKXt2YXIgdD1mKG4sZSwhMSk7dC5sYW5ndWFnZT1uLHQucj5hLnImJihhPXQpLHQucj5yLnImJihhPXIscj10KX0pLGEubGFuZ3VhZ2UmJihyLnNlY29uZF9iZXN0PWEpLHJ9ZnVuY3Rpb24gcChlKXtyZXR1cm4gai50YWJSZXBsYWNlfHxqLnVzZUJSP2UucmVwbGFjZShDLGZ1bmN0aW9uKGUsbil7cmV0dXJuIGoudXNlQlImJlwiXFxuXCI9PT1lP1wiPGJyPlwiOmoudGFiUmVwbGFjZT9uLnJlcGxhY2UoL1xcdC9nLGoudGFiUmVwbGFjZSk6XCJcIn0pOmV9ZnVuY3Rpb24gZChlLG4sdCl7dmFyIHI9bj95W25dOnQsYT1bZS50cmltKCldO3JldHVybiBlLm1hdGNoKC9cXGJobGpzXFxiLyl8fGEucHVzaChcImhsanNcIiksLTE9PT1lLmluZGV4T2YocikmJmEucHVzaChyKSxhLmpvaW4oXCIgXCIpLnRyaW0oKX1mdW5jdGlvbiBoKGUpe3ZhciBuLHQscixvLHMsbD1pKGUpO2EobCl8fChqLnVzZUJSPyhuPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixcImRpdlwiKSxuLmlubmVySFRNTD1lLmlubmVySFRNTC5yZXBsYWNlKC9cXG4vZyxcIlwiKS5yZXBsYWNlKC88YnJbIFxcL10qPi9nLFwiXFxuXCIpKTpuPWUscz1uLnRleHRDb250ZW50LHI9bD9mKGwscywhMCk6ZyhzKSx0PWMobiksdC5sZW5ndGgmJihvPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixcImRpdlwiKSxvLmlubmVySFRNTD1yLnZhbHVlLHIudmFsdWU9dSh0LGMobykscykpLHIudmFsdWU9cChyLnZhbHVlKSxlLmlubmVySFRNTD1yLnZhbHVlLGUuY2xhc3NOYW1lPWQoZS5jbGFzc05hbWUsbCxyLmxhbmd1YWdlKSxlLnJlc3VsdD17bGFuZ3VhZ2U6ci5sYW5ndWFnZSxyZTpyLnJ9LHIuc2Vjb25kX2Jlc3QmJihlLnNlY29uZF9iZXN0PXtsYW5ndWFnZTpyLnNlY29uZF9iZXN0Lmxhbmd1YWdlLHJlOnIuc2Vjb25kX2Jlc3Qucn0pKX1mdW5jdGlvbiBiKGUpe2o9byhqLGUpfWZ1bmN0aW9uIHYoKXtpZighdi5jYWxsZWQpe3YuY2FsbGVkPSEwO3ZhciBlPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJwcmUgY29kZVwiKTtFLmZvckVhY2guY2FsbChlLGgpfX1mdW5jdGlvbiBtKCl7YWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIix2LCExKSxhZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLHYsITEpfWZ1bmN0aW9uIE4obix0KXt2YXIgcj1MW25dPXQoZSk7ci5hbGlhc2VzJiZyLmFsaWFzZXMuZm9yRWFjaChmdW5jdGlvbihlKXt5W2VdPW59KX1mdW5jdGlvbiBSKCl7cmV0dXJuIEIoTCl9ZnVuY3Rpb24gdyhlKXtyZXR1cm4gZT0oZXx8XCJcIikudG9Mb3dlckNhc2UoKSxMW2VdfHxMW3lbZV1dfWZ1bmN0aW9uIHgoZSl7dmFyIG49dyhlKTtyZXR1cm4gbiYmIW4uZGlzYWJsZUF1dG9kZXRlY3R9dmFyIEU9W10sQj1PYmplY3Qua2V5cyxMPXt9LHk9e30saz0vXihuby0/aGlnaGxpZ2h0fHBsYWlufHRleHQpJC9pLE09L1xcYmxhbmcoPzp1YWdlKT8tKFtcXHctXSspXFxiL2ksQz0vKCheKDxbXj5dKz58XFx0fCkrfCg/OlxcbikpKS9nbSxJPVwiPC9zcGFuPlwiLGo9e2NsYXNzUHJlZml4OlwiaGxqcy1cIix0YWJSZXBsYWNlOm51bGwsdXNlQlI6ITEsbGFuZ3VhZ2VzOnZvaWQgMH07cmV0dXJuIGUuaGlnaGxpZ2h0PWYsZS5oaWdobGlnaHRBdXRvPWcsZS5maXhNYXJrdXA9cCxlLmhpZ2hsaWdodEJsb2NrPWgsZS5jb25maWd1cmU9YixlLmluaXRIaWdobGlnaHRpbmc9dixlLmluaXRIaWdobGlnaHRpbmdPbkxvYWQ9bSxlLnJlZ2lzdGVyTGFuZ3VhZ2U9TixlLmxpc3RMYW5ndWFnZXM9UixlLmdldExhbmd1YWdlPXcsZS5hdXRvRGV0ZWN0aW9uPXgsZS5pbmhlcml0PW8sZS5JUj1cIlthLXpBLVpdXFxcXHcqXCIsZS5VSVI9XCJbYS16QS1aX11cXFxcdypcIixlLk5SPVwiXFxcXGJcXFxcZCsoXFxcXC5cXFxcZCspP1wiLGUuQ05SPVwiKC0/KShcXFxcYjBbeFhdW2EtZkEtRjAtOV0rfChcXFxcYlxcXFxkKyhcXFxcLlxcXFxkKik/fFxcXFwuXFxcXGQrKShbZUVdWy0rXT9cXFxcZCspPylcIixlLkJOUj1cIlxcXFxiKDBiWzAxXSspXCIsZS5SU1I9XCIhfCE9fCE9PXwlfCU9fCZ8JiZ8Jj18XFxcXCp8XFxcXCo9fFxcXFwrfFxcXFwrPXwsfC18LT18Lz18L3w6fDt8PDx8PDw9fDw9fDx8PT09fD09fD18Pj4+PXw+Pj18Pj18Pj4+fD4+fD58XFxcXD98XFxcXFt8XFxcXHt8XFxcXCh8XFxcXF58XFxcXF49fFxcXFx8fFxcXFx8PXxcXFxcfFxcXFx8fH5cIixlLkJFPXtiOlwiXFxcXFxcXFxbXFxcXHNcXFxcU11cIixyOjB9LGUuQVNNPXtjTjpcInN0cmluZ1wiLGI6XCInXCIsZTpcIidcIixpOlwiXFxcXG5cIixjOltlLkJFXX0sZS5RU009e2NOOlwic3RyaW5nXCIsYjonXCInLGU6J1wiJyxpOlwiXFxcXG5cIixjOltlLkJFXX0sZS5QV009e2I6L1xcYihhfGFufHRoZXxhcmV8SSdtfGlzbid0fGRvbid0fGRvZXNuJ3R8d29uJ3R8YnV0fGp1c3R8c2hvdWxkfHByZXR0eXxzaW1wbHl8ZW5vdWdofGdvbm5hfGdvaW5nfHd0Znxzb3xzdWNofHdpbGx8eW91fHlvdXJ8dGhleXxsaWtlfG1vcmUpXFxiL30sZS5DPWZ1bmN0aW9uKG4sdCxyKXt2YXIgYT1lLmluaGVyaXQoe2NOOlwiY29tbWVudFwiLGI6bixlOnQsYzpbXX0scnx8e30pO3JldHVybiBhLmMucHVzaChlLlBXTSksYS5jLnB1c2goe2NOOlwiZG9jdGFnXCIsYjpcIig/OlRPRE98RklYTUV8Tk9URXxCVUd8WFhYKTpcIixyOjB9KSxhfSxlLkNMQ009ZS5DKFwiLy9cIixcIiRcIiksZS5DQkNNPWUuQyhcIi9cXFxcKlwiLFwiXFxcXCovXCIpLGUuSENNPWUuQyhcIiNcIixcIiRcIiksZS5OTT17Y046XCJudW1iZXJcIixiOmUuTlIscjowfSxlLkNOTT17Y046XCJudW1iZXJcIixiOmUuQ05SLHI6MH0sZS5CTk09e2NOOlwibnVtYmVyXCIsYjplLkJOUixyOjB9LGUuQ1NTTk09e2NOOlwibnVtYmVyXCIsYjplLk5SK1wiKCV8ZW18ZXh8Y2h8cmVtfHZ3fHZofHZtaW58dm1heHxjbXxtbXxpbnxwdHxwY3xweHxkZWd8Z3JhZHxyYWR8dHVybnxzfG1zfEh6fGtIenxkcGl8ZHBjbXxkcHB4KT9cIixyOjB9LGUuUk09e2NOOlwicmVnZXhwXCIsYjovXFwvLyxlOi9cXC9bZ2ltdXldKi8saTovXFxuLyxjOltlLkJFLHtiOi9cXFsvLGU6L1xcXS8scjowLGM6W2UuQkVdfV19LGUuVE09e2NOOlwidGl0bGVcIixiOmUuSVIscjowfSxlLlVUTT17Y046XCJ0aXRsZVwiLGI6ZS5VSVIscjowfSxlLk1FVEhPRF9HVUFSRD17YjpcIlxcXFwuXFxcXHMqXCIrZS5VSVIscjowfSxlfSk7aGxqcy5yZWdpc3Rlckxhbmd1YWdlKFwiY3NzXCIsZnVuY3Rpb24oZSl7dmFyIGM9XCJbYS16QS1aLV1bYS16QS1aMC05Xy1dKlwiLHQ9e2I6L1tBLVpcXF9cXC5cXC1dK1xccyo6LyxyQjohMCxlOlwiO1wiLGVXOiEwLGM6W3tjTjpcImF0dHJpYnV0ZVwiLGI6L1xcUy8sZTpcIjpcIixlRTohMCxzdGFydHM6e2VXOiEwLGVFOiEwLGM6W3tiOi9bXFx3LV0rXFwoLyxyQjohMCxjOlt7Y046XCJidWlsdF9pblwiLGI6L1tcXHctXSsvfSx7YjovXFwoLyxlOi9cXCkvLGM6W2UuQVNNLGUuUVNNXX1dfSxlLkNTU05NLGUuUVNNLGUuQVNNLGUuQ0JDTSx7Y046XCJudW1iZXJcIixiOlwiI1swLTlBLUZhLWZdK1wifSx7Y046XCJtZXRhXCIsYjpcIiFpbXBvcnRhbnRcIn1dfX1dfTtyZXR1cm57Y0k6ITAsaTovWz1cXC98J1xcJF0vLGM6W2UuQ0JDTSx7Y046XCJzZWxlY3Rvci1pZFwiLGI6LyNbQS1aYS16MC05Xy1dKy99LHtjTjpcInNlbGVjdG9yLWNsYXNzXCIsYjovXFwuW0EtWmEtejAtOV8tXSsvfSx7Y046XCJzZWxlY3Rvci1hdHRyXCIsYjovXFxbLyxlOi9cXF0vLGk6XCIkXCJ9LHtjTjpcInNlbGVjdG9yLXBzZXVkb1wiLGI6LzooOik/W2EtekEtWjAtOVxcX1xcLVxcK1xcKFxcKVwiJy5dKy99LHtiOlwiQChmb250LWZhY2V8cGFnZSlcIixsOlwiW2Etei1dK1wiLGs6XCJmb250LWZhY2UgcGFnZVwifSx7YjpcIkBcIixlOlwiW3s7XVwiLGk6LzovLGM6W3tjTjpcImtleXdvcmRcIixiOi9cXHcrL30se2I6L1xccy8sZVc6ITAsZUU6ITAscjowLGM6W2UuQVNNLGUuUVNNLGUuQ1NTTk1dfV19LHtjTjpcInNlbGVjdG9yLXRhZ1wiLGI6YyxyOjB9LHtiOlwie1wiLGU6XCJ9XCIsaTovXFxTLyxjOltlLkNCQ00sdF19XX19KTtobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoXCJ4bWxcIixmdW5jdGlvbihzKXt2YXIgZT1cIltBLVphLXowLTlcXFxcLl86LV0rXCIsdD17ZVc6ITAsaTovPC8scjowLGM6W3tjTjpcImF0dHJcIixiOmUscjowfSx7YjovPVxccyovLHI6MCxjOlt7Y046XCJzdHJpbmdcIixlbmRzUGFyZW50OiEwLHY6W3tiOi9cIi8sZTovXCIvfSx7YjovJy8sZTovJy99LHtiOi9bXlxcc1wiJz08PmBdKy99XX1dfV19O3JldHVybnthbGlhc2VzOltcImh0bWxcIixcInhodG1sXCIsXCJyc3NcIixcImF0b21cIixcInhqYlwiLFwieHNkXCIsXCJ4c2xcIixcInBsaXN0XCJdLGNJOiEwLGM6W3tjTjpcIm1ldGFcIixiOlwiPCFET0NUWVBFXCIsZTpcIj5cIixyOjEwLGM6W3tiOlwiXFxcXFtcIixlOlwiXFxcXF1cIn1dfSxzLkMoXCI8IS0tXCIsXCItLT5cIix7cjoxMH0pLHtiOlwiPFxcXFwhXFxcXFtDREFUQVxcXFxbXCIsZTpcIlxcXFxdXFxcXF0+XCIscjoxMH0se2NOOlwibWV0YVwiLGI6LzxcXD94bWwvLGU6L1xcPz4vLHI6MTB9LHtiOi88XFw/KHBocCk/LyxlOi9cXD8+LyxzTDpcInBocFwiLGM6W3tiOlwiL1xcXFwqXCIsZTpcIlxcXFwqL1wiLHNraXA6ITB9LHtiOidiXCInLGU6J1wiJyxza2lwOiEwfSx7YjpcImInXCIsZTpcIidcIixza2lwOiEwfSxzLmluaGVyaXQocy5BU00se2k6bnVsbCxjTjpudWxsLGM6bnVsbCxza2lwOiEwfSkscy5pbmhlcml0KHMuUVNNLHtpOm51bGwsY046bnVsbCxjOm51bGwsc2tpcDohMH0pXX0se2NOOlwidGFnXCIsYjpcIjxzdHlsZSg/PVxcXFxzfD58JClcIixlOlwiPlwiLGs6e25hbWU6XCJzdHlsZVwifSxjOlt0XSxzdGFydHM6e2U6XCI8L3N0eWxlPlwiLHJFOiEwLHNMOltcImNzc1wiLFwieG1sXCJdfX0se2NOOlwidGFnXCIsYjpcIjxzY3JpcHQoPz1cXFxcc3w+fCQpXCIsZTpcIj5cIixrOntuYW1lOlwic2NyaXB0XCJ9LGM6W3RdLHN0YXJ0czp7ZTpcIjwvc2NyaXB0PlwiLHJFOiEwLHNMOltcImFjdGlvbnNjcmlwdFwiLFwiamF2YXNjcmlwdFwiLFwiaGFuZGxlYmFyc1wiLFwieG1sXCJdfX0se2NOOlwidGFnXCIsYjpcIjwvP1wiLGU6XCIvPz5cIixjOlt7Y046XCJuYW1lXCIsYjovW15cXC8+PFxcc10rLyxyOjB9LHRdfV19fSk7aGxqcy5yZWdpc3Rlckxhbmd1YWdlKFwibWFya2Rvd25cIixmdW5jdGlvbihlKXtyZXR1cm57YWxpYXNlczpbXCJtZFwiLFwibWtkb3duXCIsXCJta2RcIl0sYzpbe2NOOlwic2VjdGlvblwiLHY6W3tiOlwiXiN7MSw2fVwiLGU6XCIkXCJ9LHtiOlwiXi4rP1xcXFxuWz0tXXsyLH0kXCJ9XX0se2I6XCI8XCIsZTpcIj5cIixzTDpcInhtbFwiLHI6MH0se2NOOlwiYnVsbGV0XCIsYjpcIl4oWyorLV18KFxcXFxkK1xcXFwuKSlcXFxccytcIn0se2NOOlwic3Ryb25nXCIsYjpcIlsqX117Mn0uKz9bKl9dezJ9XCJ9LHtjTjpcImVtcGhhc2lzXCIsdjpbe2I6XCJcXFxcKi4rP1xcXFwqXCJ9LHtiOlwiXy4rP19cIixyOjB9XX0se2NOOlwicXVvdGVcIixiOlwiXj5cXFxccytcIixlOlwiJFwifSx7Y046XCJjb2RlXCIsdjpbe2I6XCJeYGBgdypzKiRcIixlOlwiXmBgYHMqJFwifSx7YjpcImAuKz9gXCJ9LHtiOlwiXiggezR9fFx0KVwiLGU6XCIkXCIscjowfV19LHtiOlwiXlstXFxcXCpdezMsfVwiLGU6XCIkXCJ9LHtiOlwiXFxcXFsuKz9cXFxcXVtcXFxcKFxcXFxbXS4qP1tcXFxcKVxcXFxdXVwiLHJCOiEwLGM6W3tjTjpcInN0cmluZ1wiLGI6XCJcXFxcW1wiLGU6XCJcXFxcXVwiLGVCOiEwLHJFOiEwLHI6MH0se2NOOlwibGlua1wiLGI6XCJcXFxcXVxcXFwoXCIsZTpcIlxcXFwpXCIsZUI6ITAsZUU6ITB9LHtjTjpcInN5bWJvbFwiLGI6XCJcXFxcXVxcXFxbXCIsZTpcIlxcXFxdXCIsZUI6ITAsZUU6ITB9XSxyOjEwfSx7YjovXlxcW1teXFxuXStcXF06LyxyQjohMCxjOlt7Y046XCJzeW1ib2xcIixiOi9cXFsvLGU6L1xcXS8sZUI6ITAsZUU6ITB9LHtjTjpcImxpbmtcIixiOi86XFxzKi8sZTovJC8sZUI6ITB9XX1dfX0pO2hsanMucmVnaXN0ZXJMYW5ndWFnZShcImphdmFzY3JpcHRcIixmdW5jdGlvbihlKXt2YXIgcj1cIltBLVphLXokX11bMC05QS1aYS16JF9dKlwiLHQ9e2tleXdvcmQ6XCJpbiBvZiBpZiBmb3Igd2hpbGUgZmluYWxseSB2YXIgbmV3IGZ1bmN0aW9uIGRvIHJldHVybiB2b2lkIGVsc2UgYnJlYWsgY2F0Y2ggaW5zdGFuY2VvZiB3aXRoIHRocm93IGNhc2UgZGVmYXVsdCB0cnkgdGhpcyBzd2l0Y2ggY29udGludWUgdHlwZW9mIGRlbGV0ZSBsZXQgeWllbGQgY29uc3QgZXhwb3J0IHN1cGVyIGRlYnVnZ2VyIGFzIGFzeW5jIGF3YWl0IHN0YXRpYyBpbXBvcnQgZnJvbSBhc1wiLGxpdGVyYWw6XCJ0cnVlIGZhbHNlIG51bGwgdW5kZWZpbmVkIE5hTiBJbmZpbml0eVwiLGJ1aWx0X2luOlwiZXZhbCBpc0Zpbml0ZSBpc05hTiBwYXJzZUZsb2F0IHBhcnNlSW50IGRlY29kZVVSSSBkZWNvZGVVUklDb21wb25lbnQgZW5jb2RlVVJJIGVuY29kZVVSSUNvbXBvbmVudCBlc2NhcGUgdW5lc2NhcGUgT2JqZWN0IEZ1bmN0aW9uIEJvb2xlYW4gRXJyb3IgRXZhbEVycm9yIEludGVybmFsRXJyb3IgUmFuZ2VFcnJvciBSZWZlcmVuY2VFcnJvciBTdG9wSXRlcmF0aW9uIFN5bnRheEVycm9yIFR5cGVFcnJvciBVUklFcnJvciBOdW1iZXIgTWF0aCBEYXRlIFN0cmluZyBSZWdFeHAgQXJyYXkgRmxvYXQzMkFycmF5IEZsb2F0NjRBcnJheSBJbnQxNkFycmF5IEludDMyQXJyYXkgSW50OEFycmF5IFVpbnQxNkFycmF5IFVpbnQzMkFycmF5IFVpbnQ4QXJyYXkgVWludDhDbGFtcGVkQXJyYXkgQXJyYXlCdWZmZXIgRGF0YVZpZXcgSlNPTiBJbnRsIGFyZ3VtZW50cyByZXF1aXJlIG1vZHVsZSBjb25zb2xlIHdpbmRvdyBkb2N1bWVudCBTeW1ib2wgU2V0IE1hcCBXZWFrU2V0IFdlYWtNYXAgUHJveHkgUmVmbGVjdCBQcm9taXNlXCJ9LGE9e2NOOlwibnVtYmVyXCIsdjpbe2I6XCJcXFxcYigwW2JCXVswMV0rKVwifSx7YjpcIlxcXFxiKDBbb09dWzAtN10rKVwifSx7YjplLkNOUn1dLHI6MH0sbj17Y046XCJzdWJzdFwiLGI6XCJcXFxcJFxcXFx7XCIsZTpcIlxcXFx9XCIsazp0LGM6W119LGM9e2NOOlwic3RyaW5nXCIsYjpcImBcIixlOlwiYFwiLGM6W2UuQkUsbl19O24uYz1bZS5BU00sZS5RU00sYyxhLGUuUk1dO3ZhciBzPW4uYy5jb25jYXQoW2UuQ0JDTSxlLkNMQ01dKTtyZXR1cm57YWxpYXNlczpbXCJqc1wiLFwianN4XCJdLGs6dCxjOlt7Y046XCJtZXRhXCIscjoxMCxiOi9eXFxzKlsnXCJddXNlIChzdHJpY3R8YXNtKVsnXCJdL30se2NOOlwibWV0YVwiLGI6L14jIS8sZTovJC99LGUuQVNNLGUuUVNNLGMsZS5DTENNLGUuQ0JDTSxhLHtiOi9beyxdXFxzKi8scjowLGM6W3tiOnIrXCJcXFxccyo6XCIsckI6ITAscjowLGM6W3tjTjpcImF0dHJcIixiOnIscjowfV19XX0se2I6XCIoXCIrZS5SU1IrXCJ8XFxcXGIoY2FzZXxyZXR1cm58dGhyb3cpXFxcXGIpXFxcXHMqXCIsazpcInJldHVybiB0aHJvdyBjYXNlXCIsYzpbZS5DTENNLGUuQ0JDTSxlLlJNLHtjTjpcImZ1bmN0aW9uXCIsYjpcIihcXFxcKC4qP1xcXFwpfFwiK3IrXCIpXFxcXHMqPT5cIixyQjohMCxlOlwiXFxcXHMqPT5cIixjOlt7Y046XCJwYXJhbXNcIix2Olt7YjpyfSx7YjovXFwoXFxzKlxcKS99LHtiOi9cXCgvLGU6L1xcKS8sZUI6ITAsZUU6ITAsazp0LGM6c31dfV19LHtiOi88LyxlOi8oXFwvXFx3K3xcXHcrXFwvKT4vLHNMOlwieG1sXCIsYzpbe2I6LzxcXHcrXFxzKlxcLz4vLHNraXA6ITB9LHtiOi88XFx3Ky8sZTovKFxcL1xcdyt8XFx3K1xcLyk+Lyxza2lwOiEwLGM6W3tiOi88XFx3K1xccypcXC8+Lyxza2lwOiEwfSxcInNlbGZcIl19XX1dLHI6MH0se2NOOlwiZnVuY3Rpb25cIixiSzpcImZ1bmN0aW9uXCIsZTovXFx7LyxlRTohMCxjOltlLmluaGVyaXQoZS5UTSx7YjpyfSkse2NOOlwicGFyYW1zXCIsYjovXFwoLyxlOi9cXCkvLGVCOiEwLGVFOiEwLGM6c31dLGk6L1xcW3wlL30se2I6L1xcJFsoLl0vfSxlLk1FVEhPRF9HVUFSRCx7Y046XCJjbGFzc1wiLGJLOlwiY2xhc3NcIixlOi9bezs9XS8sZUU6ITAsaTovWzpcIlxcW1xcXV0vLGM6W3tiSzpcImV4dGVuZHNcIn0sZS5VVE1dfSx7Yks6XCJjb25zdHJ1Y3RvciBnZXQgc2V0XCIsZTovXFx7LyxlRTohMH1dLGk6LyMoPyEhKS99fSk7aGxqcy5yZWdpc3Rlckxhbmd1YWdlKFwicGhwXCIsZnVuY3Rpb24oZSl7dmFyIGM9e2I6XCJcXFxcJCtbYS16QS1aX38tw79dW2EtekEtWjAtOV9/LcO/XSpcIn0saT17Y046XCJtZXRhXCIsYjovPFxcPyhwaHApP3xcXD8+L30sdD17Y046XCJzdHJpbmdcIixjOltlLkJFLGldLHY6W3tiOidiXCInLGU6J1wiJ30se2I6XCJiJ1wiLGU6XCInXCJ9LGUuaW5oZXJpdChlLkFTTSx7aTpudWxsfSksZS5pbmhlcml0KGUuUVNNLHtpOm51bGx9KV19LGE9e3Y6W2UuQk5NLGUuQ05NXX07cmV0dXJue2FsaWFzZXM6W1wicGhwXCIsXCJwaHAzXCIsXCJwaHA0XCIsXCJwaHA1XCIsXCJwaHA2XCIsXCJwaHA3XCJdLGNJOiEwLGs6XCJhbmQgaW5jbHVkZV9vbmNlIGxpc3QgYWJzdHJhY3QgZ2xvYmFsIHByaXZhdGUgZWNobyBpbnRlcmZhY2UgYXMgc3RhdGljIGVuZHN3aXRjaCBhcnJheSBudWxsIGlmIGVuZHdoaWxlIG9yIGNvbnN0IGZvciBlbmRmb3JlYWNoIHNlbGYgdmFyIHdoaWxlIGlzc2V0IHB1YmxpYyBwcm90ZWN0ZWQgZXhpdCBmb3JlYWNoIHRocm93IGVsc2VpZiBpbmNsdWRlIF9fRklMRV9fIGVtcHR5IHJlcXVpcmVfb25jZSBkbyB4b3IgcmV0dXJuIHBhcmVudCBjbG9uZSB1c2UgX19DTEFTU19fIF9fTElORV9fIGVsc2UgYnJlYWsgcHJpbnQgZXZhbCBuZXcgY2F0Y2ggX19NRVRIT0RfXyBjYXNlIGV4Y2VwdGlvbiBkZWZhdWx0IGRpZSByZXF1aXJlIF9fRlVOQ1RJT05fXyBlbmRkZWNsYXJlIGZpbmFsIHRyeSBzd2l0Y2ggY29udGludWUgZW5kZm9yIGVuZGlmIGRlY2xhcmUgdW5zZXQgdHJ1ZSBmYWxzZSB0cmFpdCBnb3RvIGluc3RhbmNlb2YgaW5zdGVhZG9mIF9fRElSX18gX19OQU1FU1BBQ0VfXyB5aWVsZCBmaW5hbGx5XCIsYzpbZS5IQ00sZS5DKFwiLy9cIixcIiRcIix7YzpbaV19KSxlLkMoXCIvXFxcXCpcIixcIlxcXFwqL1wiLHtjOlt7Y046XCJkb2N0YWdcIixiOlwiQFtBLVphLXpdK1wifV19KSxlLkMoXCJfX2hhbHRfY29tcGlsZXIuKz87XCIsITEse2VXOiEwLGs6XCJfX2hhbHRfY29tcGlsZXJcIixsOmUuVUlSfSkse2NOOlwic3RyaW5nXCIsYjovPDw8WydcIl0/XFx3K1snXCJdPyQvLGU6L15cXHcrOz8kLyxjOltlLkJFLHtjTjpcInN1YnN0XCIsdjpbe2I6L1xcJFxcdysvfSx7YjovXFx7XFwkLyxlOi9cXH0vfV19XX0saSx7Y046XCJrZXl3b3JkXCIsYjovXFwkdGhpc1xcYi99LGMse2I6Lyg6OnwtPikrW2EtekEtWl9cXHg3Zi1cXHhmZl1bYS16QS1aMC05X1xceDdmLVxceGZmXSovfSx7Y046XCJmdW5jdGlvblwiLGJLOlwiZnVuY3Rpb25cIixlOi9bO3tdLyxlRTohMCxpOlwiXFxcXCR8XFxcXFt8JVwiLGM6W2UuVVRNLHtjTjpcInBhcmFtc1wiLGI6XCJcXFxcKFwiLGU6XCJcXFxcKVwiLGM6W1wic2VsZlwiLGMsZS5DQkNNLHQsYV19XX0se2NOOlwiY2xhc3NcIixiSzpcImNsYXNzIGludGVyZmFjZVwiLGU6XCJ7XCIsZUU6ITAsaTovWzpcXChcXCRcIl0vLGM6W3tiSzpcImV4dGVuZHMgaW1wbGVtZW50c1wifSxlLlVUTV19LHtiSzpcIm5hbWVzcGFjZVwiLGU6XCI7XCIsaTovW1xcLiddLyxjOltlLlVUTV19LHtiSzpcInVzZVwiLGU6XCI7XCIsYzpbZS5VVE1dfSx7YjpcIj0+XCJ9LHQsYV19fSk7IiwiLyogQmFzZWQgb246XG4gKlxuICogTWFpbGNoaW1wIEFKQVggZm9ybSBzdWJtaXQgVmFuaWxsYUpTXG4gKiBWYW5pbGxhIEpTXG4gKiBBdXRob3I6IE1pY2hpZWwgVmFuZGV3YWxsZVxuICogR2l0aHViIGF1dGhvcjogaHR0cHM6Ly9naXRodWIuY29tL21pY2hpZWwtdmFuZGV3YWxsZVxuICogR2l0aHViIHByb2plY3Q6IGh0dHBzOi8vZ2l0aHViLmNvbS9taWNoaWVsLXZhbmRld2FsbGUvTWFpbGNoaW1wLUFKQVgtZm9ybS1zdWJtaXQtdmFuaWxsYUpTXG4gKi9cblxuKGZ1bmN0aW9uICgpIHtcbiAgdmFyIG1haWxjaGltcEZvcm1zID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnanMtc3Vic2NyaWJlLWZvcm0nKTtcbiAgW10uZm9yRWFjaC5jYWxsKG1haWxjaGltcEZvcm1zLCBmdW5jdGlvbiAoZm9ybSkge1xuICAgIC8vIEdldC9jcmVhdGUgZGl2IHRvIGRpc3BsYXkgcmVzcG9uc2VcbiAgICB2YXIgcmVzcG9uc2U7XG4gICAgaWYgKGZvcm0uZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnanMtc3Vic2NyaWJlLXJlc3BvbnNlJykubGVuZ3RoID4gMCkge1xuICAgICAgcmVzcG9uc2UgPSBmb3JtLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2pzLXN1YnNjcmliZS1yZXNwb25zZScpWzBdO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXNwb25zZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ0RJVicpO1xuICAgICAgcmVzcG9uc2UuY2xhc3NMaXN0LmFkZCgnc3Vic2NyaWJlX19yZXNwb25zZScpO1xuICAgICAgZm9ybS5hcHBlbmRDaGlsZChyZXNwb25zZSk7XG4gICAgfVxuXG4gICAgZm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAvLyBSZXNldCB2YWxpZGF0aW9uIGNsYXNzZXNcbiAgICAgIGZvcm0uY2xhc3NMaXN0LnJlbW92ZSgnc3Vic2NyaWJlLWZvcm0taXMtaW52YWxpZCcpO1xuICAgICAgZm9ybS5jbGFzc0xpc3QucmVtb3ZlKCdzdWJzY3JpYmUtZm9ybS1pcy12YWxpZCcpO1xuXG4gICAgICAvLyBDaGVjayBmb3Igc3BhbVxuICAgICAgLy8gaWYgKGZvcm0uZ2V0RWxlbWVudEJ5SWQoJ2pzLXZhbGlkYXRlLXJvYm90JykudmFsdWUgIT09ICcnKSByZXR1cm4gZmFsc2U7XG5cbiAgICAgIC8vIEdldCB1cmwgZm9yIG1haWxjaGltcFxuICAgICAgdmFyIHVybCA9IHRoaXMuYWN0aW9uLnJlcGxhY2UoJy9wb3N0PycsICcvcG9zdC1qc29uPycpO1xuXG4gICAgICAvLyBBZGQgZm9ybSBkYXRhIHRvIG9iamVjdFxuICAgICAgdmFyIGRhdGEgPSAnJztcbiAgICAgIHZhciBpbnB1dHMgPSBmb3JtLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdpbnB1dCcpO1xuICAgICAgW10uZm9yRWFjaC5jYWxsKGlucHV0cywgZnVuY3Rpb24gKGlucHV0KSB7XG4gICAgICAgIGRhdGEgKz0gJyYnICsgaW5wdXQubmFtZSArICc9JyArIGVuY29kZVVSSUNvbXBvbmVudChpbnB1dC52YWx1ZSk7XG4gICAgICB9KTtcblxuICAgICAgLy8gQ3JlYXRlICYgYWRkIHBvc3Qgc2NyaXB0IHRvIHRoZSBET01cbiAgICAgIHZhciBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcbiAgICAgIHNjcmlwdC5zcmMgPSB1cmwgKyBkYXRhO1xuICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzY3JpcHQpO1xuXG4gICAgICAvLyBDYWxsYmFjayBmdW5jdGlvblxuICAgICAgdmFyIGNhbGxiYWNrID0gJ2NhbGxiYWNrJztcbiAgICAgIHdpbmRvd1tjYWxsYmFja10gPSBmdW5jdGlvbiAobWNyZXNwb25zZSkge1xuICAgICAgICAvLyBSZW1vdmUgcG9zdCBzY3JpcHQgZnJvbSB0aGUgRE9NXG4gICAgICAgIGRlbGV0ZSB3aW5kb3dbY2FsbGJhY2tdO1xuICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHNjcmlwdCk7XG5cbiAgICAgICAgLy8gRGlzcGxheSByZXNwb25zZSBtZXNzYWdlXG4gICAgICAgIHJlc3BvbnNlLmlubmVySFRNTCA9IG1jcmVzcG9uc2UubXNnLnJlcGxhY2UoL15cXGQqXFxzWy3igJTigJNdXFxzL2csICcnKTtcblxuICAgICAgICAvLyBBZGQgdmFsaWRhdGlvbiBjbGFzc2VzXG4gICAgICAgIGlmIChtY3Jlc3BvbnNlLnJlc3VsdCA9PT0gJ2Vycm9yJykgZm9ybS5jbGFzc0xpc3QuYWRkKCdzdWJzY3JpYmUtZm9ybS1pcy1pbnZhbGlkJyk7XG4gICAgICAgIGVsc2UgZm9ybS5jbGFzc0xpc3QuYWRkKCdzdWJzY3JpYmUtZm9ybS1pcy12YWxpZCcpO1xuICAgICAgfTtcbiAgICB9KTtcbiAgfSk7XG59KSgpO1xuIiwiLyohXHJcbiAqIE1hc29ucnkgUEFDS0FHRUQgdjQuMi4xXHJcbiAqIENhc2NhZGluZyBncmlkIGxheW91dCBsaWJyYXJ5XHJcbiAqIGh0dHBzOi8vbWFzb25yeS5kZXNhbmRyby5jb21cclxuICogTUlUIExpY2Vuc2VcclxuICogYnkgRGF2aWQgRGVTYW5kcm9cclxuICovXHJcblxyXG4hZnVuY3Rpb24odCxlKXtcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFwianF1ZXJ5LWJyaWRnZXQvanF1ZXJ5LWJyaWRnZXRcIixbXCJqcXVlcnlcIl0sZnVuY3Rpb24oaSl7cmV0dXJuIGUodCxpKX0pOlwib2JqZWN0XCI9PXR5cGVvZiBtb2R1bGUmJm1vZHVsZS5leHBvcnRzP21vZHVsZS5leHBvcnRzPWUodCxyZXF1aXJlKFwianF1ZXJ5XCIpKTp0LmpRdWVyeUJyaWRnZXQ9ZSh0LHQualF1ZXJ5KX0od2luZG93LGZ1bmN0aW9uKHQsZSl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gaShpLHIsYSl7ZnVuY3Rpb24gaCh0LGUsbil7dmFyIG8scj1cIiQoKS5cIitpKycoXCInK2UrJ1wiKSc7cmV0dXJuIHQuZWFjaChmdW5jdGlvbih0LGgpe3ZhciB1PWEuZGF0YShoLGkpO2lmKCF1KXJldHVybiB2b2lkIHMoaStcIiBub3QgaW5pdGlhbGl6ZWQuIENhbm5vdCBjYWxsIG1ldGhvZHMsIGkuZS4gXCIrcik7dmFyIGQ9dVtlXTtpZighZHx8XCJfXCI9PWUuY2hhckF0KDApKXJldHVybiB2b2lkIHMocitcIiBpcyBub3QgYSB2YWxpZCBtZXRob2RcIik7dmFyIGw9ZC5hcHBseSh1LG4pO289dm9pZCAwPT09bz9sOm99KSx2b2lkIDAhPT1vP286dH1mdW5jdGlvbiB1KHQsZSl7dC5lYWNoKGZ1bmN0aW9uKHQsbil7dmFyIG89YS5kYXRhKG4saSk7bz8oby5vcHRpb24oZSksby5faW5pdCgpKToobz1uZXcgcihuLGUpLGEuZGF0YShuLGksbykpfSl9YT1hfHxlfHx0LmpRdWVyeSxhJiYoci5wcm90b3R5cGUub3B0aW9ufHwoci5wcm90b3R5cGUub3B0aW9uPWZ1bmN0aW9uKHQpe2EuaXNQbGFpbk9iamVjdCh0KSYmKHRoaXMub3B0aW9ucz1hLmV4dGVuZCghMCx0aGlzLm9wdGlvbnMsdCkpfSksYS5mbltpXT1mdW5jdGlvbih0KXtpZihcInN0cmluZ1wiPT10eXBlb2YgdCl7dmFyIGU9by5jYWxsKGFyZ3VtZW50cywxKTtyZXR1cm4gaCh0aGlzLHQsZSl9cmV0dXJuIHUodGhpcyx0KSx0aGlzfSxuKGEpKX1mdW5jdGlvbiBuKHQpeyF0fHx0JiZ0LmJyaWRnZXR8fCh0LmJyaWRnZXQ9aSl9dmFyIG89QXJyYXkucHJvdG90eXBlLnNsaWNlLHI9dC5jb25zb2xlLHM9XCJ1bmRlZmluZWRcIj09dHlwZW9mIHI/ZnVuY3Rpb24oKXt9OmZ1bmN0aW9uKHQpe3IuZXJyb3IodCl9O3JldHVybiBuKGV8fHQualF1ZXJ5KSxpfSksZnVuY3Rpb24odCxlKXtcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFwiZXYtZW1pdHRlci9ldi1lbWl0dGVyXCIsZSk6XCJvYmplY3RcIj09dHlwZW9mIG1vZHVsZSYmbW9kdWxlLmV4cG9ydHM/bW9kdWxlLmV4cG9ydHM9ZSgpOnQuRXZFbWl0dGVyPWUoKX0oXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdz93aW5kb3c6dGhpcyxmdW5jdGlvbigpe2Z1bmN0aW9uIHQoKXt9dmFyIGU9dC5wcm90b3R5cGU7cmV0dXJuIGUub249ZnVuY3Rpb24odCxlKXtpZih0JiZlKXt2YXIgaT10aGlzLl9ldmVudHM9dGhpcy5fZXZlbnRzfHx7fSxuPWlbdF09aVt0XXx8W107cmV0dXJuLTE9PW4uaW5kZXhPZihlKSYmbi5wdXNoKGUpLHRoaXN9fSxlLm9uY2U9ZnVuY3Rpb24odCxlKXtpZih0JiZlKXt0aGlzLm9uKHQsZSk7dmFyIGk9dGhpcy5fb25jZUV2ZW50cz10aGlzLl9vbmNlRXZlbnRzfHx7fSxuPWlbdF09aVt0XXx8e307cmV0dXJuIG5bZV09ITAsdGhpc319LGUub2ZmPWZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5fZXZlbnRzJiZ0aGlzLl9ldmVudHNbdF07aWYoaSYmaS5sZW5ndGgpe3ZhciBuPWkuaW5kZXhPZihlKTtyZXR1cm4tMSE9biYmaS5zcGxpY2UobiwxKSx0aGlzfX0sZS5lbWl0RXZlbnQ9ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLl9ldmVudHMmJnRoaXMuX2V2ZW50c1t0XTtpZihpJiZpLmxlbmd0aCl7aT1pLnNsaWNlKDApLGU9ZXx8W107Zm9yKHZhciBuPXRoaXMuX29uY2VFdmVudHMmJnRoaXMuX29uY2VFdmVudHNbdF0sbz0wO288aS5sZW5ndGg7bysrKXt2YXIgcj1pW29dLHM9biYmbltyXTtzJiYodGhpcy5vZmYodCxyKSxkZWxldGUgbltyXSksci5hcHBseSh0aGlzLGUpfXJldHVybiB0aGlzfX0sZS5hbGxPZmY9ZnVuY3Rpb24oKXtkZWxldGUgdGhpcy5fZXZlbnRzLGRlbGV0ZSB0aGlzLl9vbmNlRXZlbnRzfSx0fSksZnVuY3Rpb24odCxlKXtcInVzZSBzdHJpY3RcIjtcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFwiZ2V0LXNpemUvZ2V0LXNpemVcIixbXSxmdW5jdGlvbigpe3JldHVybiBlKCl9KTpcIm9iamVjdFwiPT10eXBlb2YgbW9kdWxlJiZtb2R1bGUuZXhwb3J0cz9tb2R1bGUuZXhwb3J0cz1lKCk6dC5nZXRTaXplPWUoKX0od2luZG93LGZ1bmN0aW9uKCl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gdCh0KXt2YXIgZT1wYXJzZUZsb2F0KHQpLGk9LTE9PXQuaW5kZXhPZihcIiVcIikmJiFpc05hTihlKTtyZXR1cm4gaSYmZX1mdW5jdGlvbiBlKCl7fWZ1bmN0aW9uIGkoKXtmb3IodmFyIHQ9e3dpZHRoOjAsaGVpZ2h0OjAsaW5uZXJXaWR0aDowLGlubmVySGVpZ2h0OjAsb3V0ZXJXaWR0aDowLG91dGVySGVpZ2h0OjB9LGU9MDt1PmU7ZSsrKXt2YXIgaT1oW2VdO3RbaV09MH1yZXR1cm4gdH1mdW5jdGlvbiBuKHQpe3ZhciBlPWdldENvbXB1dGVkU3R5bGUodCk7cmV0dXJuIGV8fGEoXCJTdHlsZSByZXR1cm5lZCBcIitlK1wiLiBBcmUgeW91IHJ1bm5pbmcgdGhpcyBjb2RlIGluIGEgaGlkZGVuIGlmcmFtZSBvbiBGaXJlZm94PyBTZWUgaHR0cDovL2JpdC5seS9nZXRzaXplYnVnMVwiKSxlfWZ1bmN0aW9uIG8oKXtpZighZCl7ZD0hMDt2YXIgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO2Uuc3R5bGUud2lkdGg9XCIyMDBweFwiLGUuc3R5bGUucGFkZGluZz1cIjFweCAycHggM3B4IDRweFwiLGUuc3R5bGUuYm9yZGVyU3R5bGU9XCJzb2xpZFwiLGUuc3R5bGUuYm9yZGVyV2lkdGg9XCIxcHggMnB4IDNweCA0cHhcIixlLnN0eWxlLmJveFNpemluZz1cImJvcmRlci1ib3hcIjt2YXIgaT1kb2N1bWVudC5ib2R5fHxkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7aS5hcHBlbmRDaGlsZChlKTt2YXIgbz1uKGUpO3IuaXNCb3hTaXplT3V0ZXI9cz0yMDA9PXQoby53aWR0aCksaS5yZW1vdmVDaGlsZChlKX19ZnVuY3Rpb24gcihlKXtpZihvKCksXCJzdHJpbmdcIj09dHlwZW9mIGUmJihlPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZSkpLGUmJlwib2JqZWN0XCI9PXR5cGVvZiBlJiZlLm5vZGVUeXBlKXt2YXIgcj1uKGUpO2lmKFwibm9uZVwiPT1yLmRpc3BsYXkpcmV0dXJuIGkoKTt2YXIgYT17fTthLndpZHRoPWUub2Zmc2V0V2lkdGgsYS5oZWlnaHQ9ZS5vZmZzZXRIZWlnaHQ7Zm9yKHZhciBkPWEuaXNCb3JkZXJCb3g9XCJib3JkZXItYm94XCI9PXIuYm94U2l6aW5nLGw9MDt1Pmw7bCsrKXt2YXIgYz1oW2xdLGY9cltjXSxtPXBhcnNlRmxvYXQoZik7YVtjXT1pc05hTihtKT8wOm19dmFyIHA9YS5wYWRkaW5nTGVmdCthLnBhZGRpbmdSaWdodCxnPWEucGFkZGluZ1RvcCthLnBhZGRpbmdCb3R0b20seT1hLm1hcmdpbkxlZnQrYS5tYXJnaW5SaWdodCx2PWEubWFyZ2luVG9wK2EubWFyZ2luQm90dG9tLF89YS5ib3JkZXJMZWZ0V2lkdGgrYS5ib3JkZXJSaWdodFdpZHRoLHo9YS5ib3JkZXJUb3BXaWR0aCthLmJvcmRlckJvdHRvbVdpZHRoLEU9ZCYmcyxiPXQoci53aWR0aCk7YiE9PSExJiYoYS53aWR0aD1iKyhFPzA6cCtfKSk7dmFyIHg9dChyLmhlaWdodCk7cmV0dXJuIHghPT0hMSYmKGEuaGVpZ2h0PXgrKEU/MDpnK3opKSxhLmlubmVyV2lkdGg9YS53aWR0aC0ocCtfKSxhLmlubmVySGVpZ2h0PWEuaGVpZ2h0LShnK3opLGEub3V0ZXJXaWR0aD1hLndpZHRoK3ksYS5vdXRlckhlaWdodD1hLmhlaWdodCt2LGF9fXZhciBzLGE9XCJ1bmRlZmluZWRcIj09dHlwZW9mIGNvbnNvbGU/ZTpmdW5jdGlvbih0KXtjb25zb2xlLmVycm9yKHQpfSxoPVtcInBhZGRpbmdMZWZ0XCIsXCJwYWRkaW5nUmlnaHRcIixcInBhZGRpbmdUb3BcIixcInBhZGRpbmdCb3R0b21cIixcIm1hcmdpbkxlZnRcIixcIm1hcmdpblJpZ2h0XCIsXCJtYXJnaW5Ub3BcIixcIm1hcmdpbkJvdHRvbVwiLFwiYm9yZGVyTGVmdFdpZHRoXCIsXCJib3JkZXJSaWdodFdpZHRoXCIsXCJib3JkZXJUb3BXaWR0aFwiLFwiYm9yZGVyQm90dG9tV2lkdGhcIl0sdT1oLmxlbmd0aCxkPSExO3JldHVybiByfSksZnVuY3Rpb24odCxlKXtcInVzZSBzdHJpY3RcIjtcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFwiZGVzYW5kcm8tbWF0Y2hlcy1zZWxlY3Rvci9tYXRjaGVzLXNlbGVjdG9yXCIsZSk6XCJvYmplY3RcIj09dHlwZW9mIG1vZHVsZSYmbW9kdWxlLmV4cG9ydHM/bW9kdWxlLmV4cG9ydHM9ZSgpOnQubWF0Y2hlc1NlbGVjdG9yPWUoKX0od2luZG93LGZ1bmN0aW9uKCl7XCJ1c2Ugc3RyaWN0XCI7dmFyIHQ9ZnVuY3Rpb24oKXt2YXIgdD13aW5kb3cuRWxlbWVudC5wcm90b3R5cGU7aWYodC5tYXRjaGVzKXJldHVyblwibWF0Y2hlc1wiO2lmKHQubWF0Y2hlc1NlbGVjdG9yKXJldHVyblwibWF0Y2hlc1NlbGVjdG9yXCI7Zm9yKHZhciBlPVtcIndlYmtpdFwiLFwibW96XCIsXCJtc1wiLFwib1wiXSxpPTA7aTxlLmxlbmd0aDtpKyspe3ZhciBuPWVbaV0sbz1uK1wiTWF0Y2hlc1NlbGVjdG9yXCI7aWYodFtvXSlyZXR1cm4gb319KCk7cmV0dXJuIGZ1bmN0aW9uKGUsaSl7cmV0dXJuIGVbdF0oaSl9fSksZnVuY3Rpb24odCxlKXtcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFwiZml6enktdWktdXRpbHMvdXRpbHNcIixbXCJkZXNhbmRyby1tYXRjaGVzLXNlbGVjdG9yL21hdGNoZXMtc2VsZWN0b3JcIl0sZnVuY3Rpb24oaSl7cmV0dXJuIGUodCxpKX0pOlwib2JqZWN0XCI9PXR5cGVvZiBtb2R1bGUmJm1vZHVsZS5leHBvcnRzP21vZHVsZS5leHBvcnRzPWUodCxyZXF1aXJlKFwiZGVzYW5kcm8tbWF0Y2hlcy1zZWxlY3RvclwiKSk6dC5maXp6eVVJVXRpbHM9ZSh0LHQubWF0Y2hlc1NlbGVjdG9yKX0od2luZG93LGZ1bmN0aW9uKHQsZSl7dmFyIGk9e307aS5leHRlbmQ9ZnVuY3Rpb24odCxlKXtmb3IodmFyIGkgaW4gZSl0W2ldPWVbaV07cmV0dXJuIHR9LGkubW9kdWxvPWZ1bmN0aW9uKHQsZSl7cmV0dXJuKHQlZStlKSVlfSxpLm1ha2VBcnJheT1mdW5jdGlvbih0KXt2YXIgZT1bXTtpZihBcnJheS5pc0FycmF5KHQpKWU9dDtlbHNlIGlmKHQmJlwib2JqZWN0XCI9PXR5cGVvZiB0JiZcIm51bWJlclwiPT10eXBlb2YgdC5sZW5ndGgpZm9yKHZhciBpPTA7aTx0Lmxlbmd0aDtpKyspZS5wdXNoKHRbaV0pO2Vsc2UgZS5wdXNoKHQpO3JldHVybiBlfSxpLnJlbW92ZUZyb209ZnVuY3Rpb24odCxlKXt2YXIgaT10LmluZGV4T2YoZSk7LTEhPWkmJnQuc3BsaWNlKGksMSl9LGkuZ2V0UGFyZW50PWZ1bmN0aW9uKHQsaSl7Zm9yKDt0LnBhcmVudE5vZGUmJnQhPWRvY3VtZW50LmJvZHk7KWlmKHQ9dC5wYXJlbnROb2RlLGUodCxpKSlyZXR1cm4gdH0saS5nZXRRdWVyeUVsZW1lbnQ9ZnVuY3Rpb24odCl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIHQ/ZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0KTp0fSxpLmhhbmRsZUV2ZW50PWZ1bmN0aW9uKHQpe3ZhciBlPVwib25cIit0LnR5cGU7dGhpc1tlXSYmdGhpc1tlXSh0KX0saS5maWx0ZXJGaW5kRWxlbWVudHM9ZnVuY3Rpb24odCxuKXt0PWkubWFrZUFycmF5KHQpO3ZhciBvPVtdO3JldHVybiB0LmZvckVhY2goZnVuY3Rpb24odCl7aWYodCBpbnN0YW5jZW9mIEhUTUxFbGVtZW50KXtpZighbilyZXR1cm4gdm9pZCBvLnB1c2godCk7ZSh0LG4pJiZvLnB1c2godCk7Zm9yKHZhciBpPXQucXVlcnlTZWxlY3RvckFsbChuKSxyPTA7cjxpLmxlbmd0aDtyKyspby5wdXNoKGlbcl0pfX0pLG99LGkuZGVib3VuY2VNZXRob2Q9ZnVuY3Rpb24odCxlLGkpe3ZhciBuPXQucHJvdG90eXBlW2VdLG89ZStcIlRpbWVvdXRcIjt0LnByb3RvdHlwZVtlXT1mdW5jdGlvbigpe3ZhciB0PXRoaXNbb107dCYmY2xlYXJUaW1lb3V0KHQpO3ZhciBlPWFyZ3VtZW50cyxyPXRoaXM7dGhpc1tvXT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7bi5hcHBseShyLGUpLGRlbGV0ZSByW29dfSxpfHwxMDApfX0saS5kb2NSZWFkeT1mdW5jdGlvbih0KXt2YXIgZT1kb2N1bWVudC5yZWFkeVN0YXRlO1wiY29tcGxldGVcIj09ZXx8XCJpbnRlcmFjdGl2ZVwiPT1lP3NldFRpbWVvdXQodCk6ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIix0KX0saS50b0Rhc2hlZD1mdW5jdGlvbih0KXtyZXR1cm4gdC5yZXBsYWNlKC8oLikoW0EtWl0pL2csZnVuY3Rpb24odCxlLGkpe3JldHVybiBlK1wiLVwiK2l9KS50b0xvd2VyQ2FzZSgpfTt2YXIgbj10LmNvbnNvbGU7cmV0dXJuIGkuaHRtbEluaXQ9ZnVuY3Rpb24oZSxvKXtpLmRvY1JlYWR5KGZ1bmN0aW9uKCl7dmFyIHI9aS50b0Rhc2hlZChvKSxzPVwiZGF0YS1cIityLGE9ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIltcIitzK1wiXVwiKSxoPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuanMtXCIrciksdT1pLm1ha2VBcnJheShhKS5jb25jYXQoaS5tYWtlQXJyYXkoaCkpLGQ9cytcIi1vcHRpb25zXCIsbD10LmpRdWVyeTt1LmZvckVhY2goZnVuY3Rpb24odCl7dmFyIGkscj10LmdldEF0dHJpYnV0ZShzKXx8dC5nZXRBdHRyaWJ1dGUoZCk7dHJ5e2k9ciYmSlNPTi5wYXJzZShyKX1jYXRjaChhKXtyZXR1cm4gdm9pZChuJiZuLmVycm9yKFwiRXJyb3IgcGFyc2luZyBcIitzK1wiIG9uIFwiK3QuY2xhc3NOYW1lK1wiOiBcIithKSl9dmFyIGg9bmV3IGUodCxpKTtsJiZsLmRhdGEodCxvLGgpfSl9KX0saX0pLGZ1bmN0aW9uKHQsZSl7XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShcIm91dGxheWVyL2l0ZW1cIixbXCJldi1lbWl0dGVyL2V2LWVtaXR0ZXJcIixcImdldC1zaXplL2dldC1zaXplXCJdLGUpOlwib2JqZWN0XCI9PXR5cGVvZiBtb2R1bGUmJm1vZHVsZS5leHBvcnRzP21vZHVsZS5leHBvcnRzPWUocmVxdWlyZShcImV2LWVtaXR0ZXJcIikscmVxdWlyZShcImdldC1zaXplXCIpKToodC5PdXRsYXllcj17fSx0Lk91dGxheWVyLkl0ZW09ZSh0LkV2RW1pdHRlcix0LmdldFNpemUpKX0od2luZG93LGZ1bmN0aW9uKHQsZSl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gaSh0KXtmb3IodmFyIGUgaW4gdClyZXR1cm4hMTtyZXR1cm4gZT1udWxsLCEwfWZ1bmN0aW9uIG4odCxlKXt0JiYodGhpcy5lbGVtZW50PXQsdGhpcy5sYXlvdXQ9ZSx0aGlzLnBvc2l0aW9uPXt4OjAseTowfSx0aGlzLl9jcmVhdGUoKSl9ZnVuY3Rpb24gbyh0KXtyZXR1cm4gdC5yZXBsYWNlKC8oW0EtWl0pL2csZnVuY3Rpb24odCl7cmV0dXJuXCItXCIrdC50b0xvd2VyQ2FzZSgpfSl9dmFyIHI9ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlLHM9XCJzdHJpbmdcIj09dHlwZW9mIHIudHJhbnNpdGlvbj9cInRyYW5zaXRpb25cIjpcIldlYmtpdFRyYW5zaXRpb25cIixhPVwic3RyaW5nXCI9PXR5cGVvZiByLnRyYW5zZm9ybT9cInRyYW5zZm9ybVwiOlwiV2Via2l0VHJhbnNmb3JtXCIsaD17V2Via2l0VHJhbnNpdGlvbjpcIndlYmtpdFRyYW5zaXRpb25FbmRcIix0cmFuc2l0aW9uOlwidHJhbnNpdGlvbmVuZFwifVtzXSx1PXt0cmFuc2Zvcm06YSx0cmFuc2l0aW9uOnMsdHJhbnNpdGlvbkR1cmF0aW9uOnMrXCJEdXJhdGlvblwiLHRyYW5zaXRpb25Qcm9wZXJ0eTpzK1wiUHJvcGVydHlcIix0cmFuc2l0aW9uRGVsYXk6cytcIkRlbGF5XCJ9LGQ9bi5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0LnByb3RvdHlwZSk7ZC5jb25zdHJ1Y3Rvcj1uLGQuX2NyZWF0ZT1mdW5jdGlvbigpe3RoaXMuX3RyYW5zbj17aW5nUHJvcGVydGllczp7fSxjbGVhbjp7fSxvbkVuZDp7fX0sdGhpcy5jc3Moe3Bvc2l0aW9uOlwiYWJzb2x1dGVcIn0pfSxkLmhhbmRsZUV2ZW50PWZ1bmN0aW9uKHQpe3ZhciBlPVwib25cIit0LnR5cGU7dGhpc1tlXSYmdGhpc1tlXSh0KX0sZC5nZXRTaXplPWZ1bmN0aW9uKCl7dGhpcy5zaXplPWUodGhpcy5lbGVtZW50KX0sZC5jc3M9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5lbGVtZW50LnN0eWxlO2Zvcih2YXIgaSBpbiB0KXt2YXIgbj11W2ldfHxpO2Vbbl09dFtpXX19LGQuZ2V0UG9zaXRpb249ZnVuY3Rpb24oKXt2YXIgdD1nZXRDb21wdXRlZFN0eWxlKHRoaXMuZWxlbWVudCksZT10aGlzLmxheW91dC5fZ2V0T3B0aW9uKFwib3JpZ2luTGVmdFwiKSxpPXRoaXMubGF5b3V0Ll9nZXRPcHRpb24oXCJvcmlnaW5Ub3BcIiksbj10W2U/XCJsZWZ0XCI6XCJyaWdodFwiXSxvPXRbaT9cInRvcFwiOlwiYm90dG9tXCJdLHI9dGhpcy5sYXlvdXQuc2l6ZSxzPS0xIT1uLmluZGV4T2YoXCIlXCIpP3BhcnNlRmxvYXQobikvMTAwKnIud2lkdGg6cGFyc2VJbnQobiwxMCksYT0tMSE9by5pbmRleE9mKFwiJVwiKT9wYXJzZUZsb2F0KG8pLzEwMCpyLmhlaWdodDpwYXJzZUludChvLDEwKTtzPWlzTmFOKHMpPzA6cyxhPWlzTmFOKGEpPzA6YSxzLT1lP3IucGFkZGluZ0xlZnQ6ci5wYWRkaW5nUmlnaHQsYS09aT9yLnBhZGRpbmdUb3A6ci5wYWRkaW5nQm90dG9tLHRoaXMucG9zaXRpb24ueD1zLHRoaXMucG9zaXRpb24ueT1hfSxkLmxheW91dFBvc2l0aW9uPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5sYXlvdXQuc2l6ZSxlPXt9LGk9dGhpcy5sYXlvdXQuX2dldE9wdGlvbihcIm9yaWdpbkxlZnRcIiksbj10aGlzLmxheW91dC5fZ2V0T3B0aW9uKFwib3JpZ2luVG9wXCIpLG89aT9cInBhZGRpbmdMZWZ0XCI6XCJwYWRkaW5nUmlnaHRcIixyPWk/XCJsZWZ0XCI6XCJyaWdodFwiLHM9aT9cInJpZ2h0XCI6XCJsZWZ0XCIsYT10aGlzLnBvc2l0aW9uLngrdFtvXTtlW3JdPXRoaXMuZ2V0WFZhbHVlKGEpLGVbc109XCJcIjt2YXIgaD1uP1wicGFkZGluZ1RvcFwiOlwicGFkZGluZ0JvdHRvbVwiLHU9bj9cInRvcFwiOlwiYm90dG9tXCIsZD1uP1wiYm90dG9tXCI6XCJ0b3BcIixsPXRoaXMucG9zaXRpb24ueSt0W2hdO2VbdV09dGhpcy5nZXRZVmFsdWUobCksZVtkXT1cIlwiLHRoaXMuY3NzKGUpLHRoaXMuZW1pdEV2ZW50KFwibGF5b3V0XCIsW3RoaXNdKX0sZC5nZXRYVmFsdWU9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5sYXlvdXQuX2dldE9wdGlvbihcImhvcml6b250YWxcIik7cmV0dXJuIHRoaXMubGF5b3V0Lm9wdGlvbnMucGVyY2VudFBvc2l0aW9uJiYhZT90L3RoaXMubGF5b3V0LnNpemUud2lkdGgqMTAwK1wiJVwiOnQrXCJweFwifSxkLmdldFlWYWx1ZT1mdW5jdGlvbih0KXt2YXIgZT10aGlzLmxheW91dC5fZ2V0T3B0aW9uKFwiaG9yaXpvbnRhbFwiKTtyZXR1cm4gdGhpcy5sYXlvdXQub3B0aW9ucy5wZXJjZW50UG9zaXRpb24mJmU/dC90aGlzLmxheW91dC5zaXplLmhlaWdodCoxMDArXCIlXCI6dCtcInB4XCJ9LGQuX3RyYW5zaXRpb25Ubz1mdW5jdGlvbih0LGUpe3RoaXMuZ2V0UG9zaXRpb24oKTt2YXIgaT10aGlzLnBvc2l0aW9uLngsbj10aGlzLnBvc2l0aW9uLnksbz1wYXJzZUludCh0LDEwKSxyPXBhcnNlSW50KGUsMTApLHM9bz09PXRoaXMucG9zaXRpb24ueCYmcj09PXRoaXMucG9zaXRpb24ueTtpZih0aGlzLnNldFBvc2l0aW9uKHQsZSkscyYmIXRoaXMuaXNUcmFuc2l0aW9uaW5nKXJldHVybiB2b2lkIHRoaXMubGF5b3V0UG9zaXRpb24oKTt2YXIgYT10LWksaD1lLW4sdT17fTt1LnRyYW5zZm9ybT10aGlzLmdldFRyYW5zbGF0ZShhLGgpLHRoaXMudHJhbnNpdGlvbih7dG86dSxvblRyYW5zaXRpb25FbmQ6e3RyYW5zZm9ybTp0aGlzLmxheW91dFBvc2l0aW9ufSxpc0NsZWFuaW5nOiEwfSl9LGQuZ2V0VHJhbnNsYXRlPWZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5sYXlvdXQuX2dldE9wdGlvbihcIm9yaWdpbkxlZnRcIiksbj10aGlzLmxheW91dC5fZ2V0T3B0aW9uKFwib3JpZ2luVG9wXCIpO3JldHVybiB0PWk/dDotdCxlPW4/ZTotZSxcInRyYW5zbGF0ZTNkKFwiK3QrXCJweCwgXCIrZStcInB4LCAwKVwifSxkLmdvVG89ZnVuY3Rpb24odCxlKXt0aGlzLnNldFBvc2l0aW9uKHQsZSksdGhpcy5sYXlvdXRQb3NpdGlvbigpfSxkLm1vdmVUbz1kLl90cmFuc2l0aW9uVG8sZC5zZXRQb3NpdGlvbj1mdW5jdGlvbih0LGUpe3RoaXMucG9zaXRpb24ueD1wYXJzZUludCh0LDEwKSx0aGlzLnBvc2l0aW9uLnk9cGFyc2VJbnQoZSwxMCl9LGQuX25vblRyYW5zaXRpb249ZnVuY3Rpb24odCl7dGhpcy5jc3ModC50byksdC5pc0NsZWFuaW5nJiZ0aGlzLl9yZW1vdmVTdHlsZXModC50byk7Zm9yKHZhciBlIGluIHQub25UcmFuc2l0aW9uRW5kKXQub25UcmFuc2l0aW9uRW5kW2VdLmNhbGwodGhpcyl9LGQudHJhbnNpdGlvbj1mdW5jdGlvbih0KXtpZighcGFyc2VGbG9hdCh0aGlzLmxheW91dC5vcHRpb25zLnRyYW5zaXRpb25EdXJhdGlvbikpcmV0dXJuIHZvaWQgdGhpcy5fbm9uVHJhbnNpdGlvbih0KTt2YXIgZT10aGlzLl90cmFuc247Zm9yKHZhciBpIGluIHQub25UcmFuc2l0aW9uRW5kKWUub25FbmRbaV09dC5vblRyYW5zaXRpb25FbmRbaV07Zm9yKGkgaW4gdC50byllLmluZ1Byb3BlcnRpZXNbaV09ITAsdC5pc0NsZWFuaW5nJiYoZS5jbGVhbltpXT0hMCk7aWYodC5mcm9tKXt0aGlzLmNzcyh0LmZyb20pO3ZhciBuPXRoaXMuZWxlbWVudC5vZmZzZXRIZWlnaHQ7bj1udWxsfXRoaXMuZW5hYmxlVHJhbnNpdGlvbih0LnRvKSx0aGlzLmNzcyh0LnRvKSx0aGlzLmlzVHJhbnNpdGlvbmluZz0hMH07dmFyIGw9XCJvcGFjaXR5LFwiK28oYSk7ZC5lbmFibGVUcmFuc2l0aW9uPWZ1bmN0aW9uKCl7aWYoIXRoaXMuaXNUcmFuc2l0aW9uaW5nKXt2YXIgdD10aGlzLmxheW91dC5vcHRpb25zLnRyYW5zaXRpb25EdXJhdGlvbjt0PVwibnVtYmVyXCI9PXR5cGVvZiB0P3QrXCJtc1wiOnQsdGhpcy5jc3Moe3RyYW5zaXRpb25Qcm9wZXJ0eTpsLHRyYW5zaXRpb25EdXJhdGlvbjp0LHRyYW5zaXRpb25EZWxheTp0aGlzLnN0YWdnZXJEZWxheXx8MH0pLHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKGgsdGhpcywhMSl9fSxkLm9ud2Via2l0VHJhbnNpdGlvbkVuZD1mdW5jdGlvbih0KXt0aGlzLm9udHJhbnNpdGlvbmVuZCh0KX0sZC5vbm90cmFuc2l0aW9uZW5kPWZ1bmN0aW9uKHQpe3RoaXMub250cmFuc2l0aW9uZW5kKHQpfTt2YXIgYz17XCItd2Via2l0LXRyYW5zZm9ybVwiOlwidHJhbnNmb3JtXCJ9O2Qub250cmFuc2l0aW9uZW5kPWZ1bmN0aW9uKHQpe2lmKHQudGFyZ2V0PT09dGhpcy5lbGVtZW50KXt2YXIgZT10aGlzLl90cmFuc24sbj1jW3QucHJvcGVydHlOYW1lXXx8dC5wcm9wZXJ0eU5hbWU7aWYoZGVsZXRlIGUuaW5nUHJvcGVydGllc1tuXSxpKGUuaW5nUHJvcGVydGllcykmJnRoaXMuZGlzYWJsZVRyYW5zaXRpb24oKSxuIGluIGUuY2xlYW4mJih0aGlzLmVsZW1lbnQuc3R5bGVbdC5wcm9wZXJ0eU5hbWVdPVwiXCIsZGVsZXRlIGUuY2xlYW5bbl0pLG4gaW4gZS5vbkVuZCl7dmFyIG89ZS5vbkVuZFtuXTtvLmNhbGwodGhpcyksZGVsZXRlIGUub25FbmRbbl19dGhpcy5lbWl0RXZlbnQoXCJ0cmFuc2l0aW9uRW5kXCIsW3RoaXNdKX19LGQuZGlzYWJsZVRyYW5zaXRpb249ZnVuY3Rpb24oKXt0aGlzLnJlbW92ZVRyYW5zaXRpb25TdHlsZXMoKSx0aGlzLmVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihoLHRoaXMsITEpLHRoaXMuaXNUcmFuc2l0aW9uaW5nPSExfSxkLl9yZW1vdmVTdHlsZXM9ZnVuY3Rpb24odCl7dmFyIGU9e307Zm9yKHZhciBpIGluIHQpZVtpXT1cIlwiO3RoaXMuY3NzKGUpfTt2YXIgZj17dHJhbnNpdGlvblByb3BlcnR5OlwiXCIsdHJhbnNpdGlvbkR1cmF0aW9uOlwiXCIsdHJhbnNpdGlvbkRlbGF5OlwiXCJ9O3JldHVybiBkLnJlbW92ZVRyYW5zaXRpb25TdHlsZXM9ZnVuY3Rpb24oKXt0aGlzLmNzcyhmKX0sZC5zdGFnZ2VyPWZ1bmN0aW9uKHQpe3Q9aXNOYU4odCk/MDp0LHRoaXMuc3RhZ2dlckRlbGF5PXQrXCJtc1wifSxkLnJlbW92ZUVsZW09ZnVuY3Rpb24oKXt0aGlzLmVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzLmVsZW1lbnQpLHRoaXMuY3NzKHtkaXNwbGF5OlwiXCJ9KSx0aGlzLmVtaXRFdmVudChcInJlbW92ZVwiLFt0aGlzXSl9LGQucmVtb3ZlPWZ1bmN0aW9uKCl7cmV0dXJuIHMmJnBhcnNlRmxvYXQodGhpcy5sYXlvdXQub3B0aW9ucy50cmFuc2l0aW9uRHVyYXRpb24pPyh0aGlzLm9uY2UoXCJ0cmFuc2l0aW9uRW5kXCIsZnVuY3Rpb24oKXt0aGlzLnJlbW92ZUVsZW0oKX0pLHZvaWQgdGhpcy5oaWRlKCkpOnZvaWQgdGhpcy5yZW1vdmVFbGVtKCl9LGQucmV2ZWFsPWZ1bmN0aW9uKCl7ZGVsZXRlIHRoaXMuaXNIaWRkZW4sdGhpcy5jc3Moe2Rpc3BsYXk6XCJcIn0pO3ZhciB0PXRoaXMubGF5b3V0Lm9wdGlvbnMsZT17fSxpPXRoaXMuZ2V0SGlkZVJldmVhbFRyYW5zaXRpb25FbmRQcm9wZXJ0eShcInZpc2libGVTdHlsZVwiKTtlW2ldPXRoaXMub25SZXZlYWxUcmFuc2l0aW9uRW5kLHRoaXMudHJhbnNpdGlvbih7ZnJvbTp0LmhpZGRlblN0eWxlLHRvOnQudmlzaWJsZVN0eWxlLGlzQ2xlYW5pbmc6ITAsb25UcmFuc2l0aW9uRW5kOmV9KX0sZC5vblJldmVhbFRyYW5zaXRpb25FbmQ9ZnVuY3Rpb24oKXt0aGlzLmlzSGlkZGVufHx0aGlzLmVtaXRFdmVudChcInJldmVhbFwiKX0sZC5nZXRIaWRlUmV2ZWFsVHJhbnNpdGlvbkVuZFByb3BlcnR5PWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMubGF5b3V0Lm9wdGlvbnNbdF07aWYoZS5vcGFjaXR5KXJldHVyblwib3BhY2l0eVwiO2Zvcih2YXIgaSBpbiBlKXJldHVybiBpfSxkLmhpZGU9ZnVuY3Rpb24oKXt0aGlzLmlzSGlkZGVuPSEwLHRoaXMuY3NzKHtkaXNwbGF5OlwiXCJ9KTt2YXIgdD10aGlzLmxheW91dC5vcHRpb25zLGU9e30saT10aGlzLmdldEhpZGVSZXZlYWxUcmFuc2l0aW9uRW5kUHJvcGVydHkoXCJoaWRkZW5TdHlsZVwiKTtlW2ldPXRoaXMub25IaWRlVHJhbnNpdGlvbkVuZCx0aGlzLnRyYW5zaXRpb24oe2Zyb206dC52aXNpYmxlU3R5bGUsdG86dC5oaWRkZW5TdHlsZSxpc0NsZWFuaW5nOiEwLG9uVHJhbnNpdGlvbkVuZDplfSl9LGQub25IaWRlVHJhbnNpdGlvbkVuZD1mdW5jdGlvbigpe3RoaXMuaXNIaWRkZW4mJih0aGlzLmNzcyh7ZGlzcGxheTpcIm5vbmVcIn0pLHRoaXMuZW1pdEV2ZW50KFwiaGlkZVwiKSl9LGQuZGVzdHJveT1mdW5jdGlvbigpe3RoaXMuY3NzKHtwb3NpdGlvbjpcIlwiLGxlZnQ6XCJcIixyaWdodDpcIlwiLHRvcDpcIlwiLGJvdHRvbTpcIlwiLHRyYW5zaXRpb246XCJcIix0cmFuc2Zvcm06XCJcIn0pfSxufSksZnVuY3Rpb24odCxlKXtcInVzZSBzdHJpY3RcIjtcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFwib3V0bGF5ZXIvb3V0bGF5ZXJcIixbXCJldi1lbWl0dGVyL2V2LWVtaXR0ZXJcIixcImdldC1zaXplL2dldC1zaXplXCIsXCJmaXp6eS11aS11dGlscy91dGlsc1wiLFwiLi9pdGVtXCJdLGZ1bmN0aW9uKGksbixvLHIpe3JldHVybiBlKHQsaSxuLG8scil9KTpcIm9iamVjdFwiPT10eXBlb2YgbW9kdWxlJiZtb2R1bGUuZXhwb3J0cz9tb2R1bGUuZXhwb3J0cz1lKHQscmVxdWlyZShcImV2LWVtaXR0ZXJcIikscmVxdWlyZShcImdldC1zaXplXCIpLHJlcXVpcmUoXCJmaXp6eS11aS11dGlsc1wiKSxyZXF1aXJlKFwiLi9pdGVtXCIpKTp0Lk91dGxheWVyPWUodCx0LkV2RW1pdHRlcix0LmdldFNpemUsdC5maXp6eVVJVXRpbHMsdC5PdXRsYXllci5JdGVtKX0od2luZG93LGZ1bmN0aW9uKHQsZSxpLG4sbyl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0LGUpe3ZhciBpPW4uZ2V0UXVlcnlFbGVtZW50KHQpO2lmKCFpKXJldHVybiB2b2lkKGgmJmguZXJyb3IoXCJCYWQgZWxlbWVudCBmb3IgXCIrdGhpcy5jb25zdHJ1Y3Rvci5uYW1lc3BhY2UrXCI6IFwiKyhpfHx0KSkpO3RoaXMuZWxlbWVudD1pLHUmJih0aGlzLiRlbGVtZW50PXUodGhpcy5lbGVtZW50KSksdGhpcy5vcHRpb25zPW4uZXh0ZW5kKHt9LHRoaXMuY29uc3RydWN0b3IuZGVmYXVsdHMpLHRoaXMub3B0aW9uKGUpO3ZhciBvPSsrbDt0aGlzLmVsZW1lbnQub3V0bGF5ZXJHVUlEPW8sY1tvXT10aGlzLHRoaXMuX2NyZWF0ZSgpO3ZhciByPXRoaXMuX2dldE9wdGlvbihcImluaXRMYXlvdXRcIik7ciYmdGhpcy5sYXlvdXQoKX1mdW5jdGlvbiBzKHQpe2Z1bmN0aW9uIGUoKXt0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX1yZXR1cm4gZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0LnByb3RvdHlwZSksZS5wcm90b3R5cGUuY29uc3RydWN0b3I9ZSxlfWZ1bmN0aW9uIGEodCl7aWYoXCJudW1iZXJcIj09dHlwZW9mIHQpcmV0dXJuIHQ7dmFyIGU9dC5tYXRjaCgvKF5cXGQqXFwuP1xcZCopKFxcdyopLyksaT1lJiZlWzFdLG49ZSYmZVsyXTtpZighaS5sZW5ndGgpcmV0dXJuIDA7aT1wYXJzZUZsb2F0KGkpO3ZhciBvPW1bbl18fDE7cmV0dXJuIGkqb312YXIgaD10LmNvbnNvbGUsdT10LmpRdWVyeSxkPWZ1bmN0aW9uKCl7fSxsPTAsYz17fTtyLm5hbWVzcGFjZT1cIm91dGxheWVyXCIsci5JdGVtPW8sci5kZWZhdWx0cz17Y29udGFpbmVyU3R5bGU6e3Bvc2l0aW9uOlwicmVsYXRpdmVcIn0saW5pdExheW91dDohMCxvcmlnaW5MZWZ0OiEwLG9yaWdpblRvcDohMCxyZXNpemU6ITAscmVzaXplQ29udGFpbmVyOiEwLHRyYW5zaXRpb25EdXJhdGlvbjpcIjAuNHNcIixoaWRkZW5TdHlsZTp7b3BhY2l0eTowLHRyYW5zZm9ybTpcInNjYWxlKDAuMDAxKVwifSx2aXNpYmxlU3R5bGU6e29wYWNpdHk6MSx0cmFuc2Zvcm06XCJzY2FsZSgxKVwifX07dmFyIGY9ci5wcm90b3R5cGU7bi5leHRlbmQoZixlLnByb3RvdHlwZSksZi5vcHRpb249ZnVuY3Rpb24odCl7bi5leHRlbmQodGhpcy5vcHRpb25zLHQpfSxmLl9nZXRPcHRpb249ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5jb25zdHJ1Y3Rvci5jb21wYXRPcHRpb25zW3RdO3JldHVybiBlJiZ2b2lkIDAhPT10aGlzLm9wdGlvbnNbZV0/dGhpcy5vcHRpb25zW2VdOnRoaXMub3B0aW9uc1t0XX0sci5jb21wYXRPcHRpb25zPXtpbml0TGF5b3V0OlwiaXNJbml0TGF5b3V0XCIsaG9yaXpvbnRhbDpcImlzSG9yaXpvbnRhbFwiLGxheW91dEluc3RhbnQ6XCJpc0xheW91dEluc3RhbnRcIixvcmlnaW5MZWZ0OlwiaXNPcmlnaW5MZWZ0XCIsb3JpZ2luVG9wOlwiaXNPcmlnaW5Ub3BcIixyZXNpemU6XCJpc1Jlc2l6ZUJvdW5kXCIscmVzaXplQ29udGFpbmVyOlwiaXNSZXNpemluZ0NvbnRhaW5lclwifSxmLl9jcmVhdGU9ZnVuY3Rpb24oKXt0aGlzLnJlbG9hZEl0ZW1zKCksdGhpcy5zdGFtcHM9W10sdGhpcy5zdGFtcCh0aGlzLm9wdGlvbnMuc3RhbXApLG4uZXh0ZW5kKHRoaXMuZWxlbWVudC5zdHlsZSx0aGlzLm9wdGlvbnMuY29udGFpbmVyU3R5bGUpO3ZhciB0PXRoaXMuX2dldE9wdGlvbihcInJlc2l6ZVwiKTt0JiZ0aGlzLmJpbmRSZXNpemUoKX0sZi5yZWxvYWRJdGVtcz1mdW5jdGlvbigpe3RoaXMuaXRlbXM9dGhpcy5faXRlbWl6ZSh0aGlzLmVsZW1lbnQuY2hpbGRyZW4pfSxmLl9pdGVtaXplPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLl9maWx0ZXJGaW5kSXRlbUVsZW1lbnRzKHQpLGk9dGhpcy5jb25zdHJ1Y3Rvci5JdGVtLG49W10sbz0wO288ZS5sZW5ndGg7bysrKXt2YXIgcj1lW29dLHM9bmV3IGkocix0aGlzKTtuLnB1c2gocyl9cmV0dXJuIG59LGYuX2ZpbHRlckZpbmRJdGVtRWxlbWVudHM9ZnVuY3Rpb24odCl7cmV0dXJuIG4uZmlsdGVyRmluZEVsZW1lbnRzKHQsdGhpcy5vcHRpb25zLml0ZW1TZWxlY3Rvcil9LGYuZ2V0SXRlbUVsZW1lbnRzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaXRlbXMubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0LmVsZW1lbnR9KX0sZi5sYXlvdXQ9ZnVuY3Rpb24oKXt0aGlzLl9yZXNldExheW91dCgpLHRoaXMuX21hbmFnZVN0YW1wcygpO3ZhciB0PXRoaXMuX2dldE9wdGlvbihcImxheW91dEluc3RhbnRcIiksZT12b2lkIDAhPT10P3Q6IXRoaXMuX2lzTGF5b3V0SW5pdGVkO3RoaXMubGF5b3V0SXRlbXModGhpcy5pdGVtcyxlKSx0aGlzLl9pc0xheW91dEluaXRlZD0hMH0sZi5faW5pdD1mLmxheW91dCxmLl9yZXNldExheW91dD1mdW5jdGlvbigpe3RoaXMuZ2V0U2l6ZSgpfSxmLmdldFNpemU9ZnVuY3Rpb24oKXt0aGlzLnNpemU9aSh0aGlzLmVsZW1lbnQpfSxmLl9nZXRNZWFzdXJlbWVudD1mdW5jdGlvbih0LGUpe3ZhciBuLG89dGhpcy5vcHRpb25zW3RdO28/KFwic3RyaW5nXCI9PXR5cGVvZiBvP249dGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3Iobyk6byBpbnN0YW5jZW9mIEhUTUxFbGVtZW50JiYobj1vKSx0aGlzW3RdPW4/aShuKVtlXTpvKTp0aGlzW3RdPTB9LGYubGF5b3V0SXRlbXM9ZnVuY3Rpb24odCxlKXt0PXRoaXMuX2dldEl0ZW1zRm9yTGF5b3V0KHQpLHRoaXMuX2xheW91dEl0ZW1zKHQsZSksdGhpcy5fcG9zdExheW91dCgpfSxmLl9nZXRJdGVtc0ZvckxheW91dD1mdW5jdGlvbih0KXtyZXR1cm4gdC5maWx0ZXIoZnVuY3Rpb24odCl7cmV0dXJuIXQuaXNJZ25vcmVkfSl9LGYuX2xheW91dEl0ZW1zPWZ1bmN0aW9uKHQsZSl7aWYodGhpcy5fZW1pdENvbXBsZXRlT25JdGVtcyhcImxheW91dFwiLHQpLHQmJnQubGVuZ3RoKXt2YXIgaT1bXTt0LmZvckVhY2goZnVuY3Rpb24odCl7dmFyIG49dGhpcy5fZ2V0SXRlbUxheW91dFBvc2l0aW9uKHQpO24uaXRlbT10LG4uaXNJbnN0YW50PWV8fHQuaXNMYXlvdXRJbnN0YW50LGkucHVzaChuKX0sdGhpcyksdGhpcy5fcHJvY2Vzc0xheW91dFF1ZXVlKGkpfX0sZi5fZ2V0SXRlbUxheW91dFBvc2l0aW9uPWZ1bmN0aW9uKCl7cmV0dXJue3g6MCx5OjB9fSxmLl9wcm9jZXNzTGF5b3V0UXVldWU9ZnVuY3Rpb24odCl7dGhpcy51cGRhdGVTdGFnZ2VyKCksdC5mb3JFYWNoKGZ1bmN0aW9uKHQsZSl7dGhpcy5fcG9zaXRpb25JdGVtKHQuaXRlbSx0LngsdC55LHQuaXNJbnN0YW50LGUpfSx0aGlzKX0sZi51cGRhdGVTdGFnZ2VyPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5vcHRpb25zLnN0YWdnZXI7cmV0dXJuIG51bGw9PT10fHx2b2lkIDA9PT10P3ZvaWQodGhpcy5zdGFnZ2VyPTApOih0aGlzLnN0YWdnZXI9YSh0KSx0aGlzLnN0YWdnZXIpfSxmLl9wb3NpdGlvbkl0ZW09ZnVuY3Rpb24odCxlLGksbixvKXtuP3QuZ29UbyhlLGkpOih0LnN0YWdnZXIobyp0aGlzLnN0YWdnZXIpLHQubW92ZVRvKGUsaSkpfSxmLl9wb3N0TGF5b3V0PWZ1bmN0aW9uKCl7dGhpcy5yZXNpemVDb250YWluZXIoKX0sZi5yZXNpemVDb250YWluZXI9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9nZXRPcHRpb24oXCJyZXNpemVDb250YWluZXJcIik7aWYodCl7dmFyIGU9dGhpcy5fZ2V0Q29udGFpbmVyU2l6ZSgpO2UmJih0aGlzLl9zZXRDb250YWluZXJNZWFzdXJlKGUud2lkdGgsITApLHRoaXMuX3NldENvbnRhaW5lck1lYXN1cmUoZS5oZWlnaHQsITEpKX19LGYuX2dldENvbnRhaW5lclNpemU9ZCxmLl9zZXRDb250YWluZXJNZWFzdXJlPWZ1bmN0aW9uKHQsZSl7aWYodm9pZCAwIT09dCl7dmFyIGk9dGhpcy5zaXplO2kuaXNCb3JkZXJCb3gmJih0Kz1lP2kucGFkZGluZ0xlZnQraS5wYWRkaW5nUmlnaHQraS5ib3JkZXJMZWZ0V2lkdGgraS5ib3JkZXJSaWdodFdpZHRoOmkucGFkZGluZ0JvdHRvbStpLnBhZGRpbmdUb3AraS5ib3JkZXJUb3BXaWR0aCtpLmJvcmRlckJvdHRvbVdpZHRoKSx0PU1hdGgubWF4KHQsMCksdGhpcy5lbGVtZW50LnN0eWxlW2U/XCJ3aWR0aFwiOlwiaGVpZ2h0XCJdPXQrXCJweFwifX0sZi5fZW1pdENvbXBsZXRlT25JdGVtcz1mdW5jdGlvbih0LGUpe2Z1bmN0aW9uIGkoKXtvLmRpc3BhdGNoRXZlbnQodCtcIkNvbXBsZXRlXCIsbnVsbCxbZV0pfWZ1bmN0aW9uIG4oKXtzKysscz09ciYmaSgpfXZhciBvPXRoaXMscj1lLmxlbmd0aDtpZighZXx8IXIpcmV0dXJuIHZvaWQgaSgpO3ZhciBzPTA7ZS5mb3JFYWNoKGZ1bmN0aW9uKGUpe2Uub25jZSh0LG4pfSl9LGYuZGlzcGF0Y2hFdmVudD1mdW5jdGlvbih0LGUsaSl7dmFyIG49ZT9bZV0uY29uY2F0KGkpOmk7aWYodGhpcy5lbWl0RXZlbnQodCxuKSx1KWlmKHRoaXMuJGVsZW1lbnQ9dGhpcy4kZWxlbWVudHx8dSh0aGlzLmVsZW1lbnQpLGUpe3ZhciBvPXUuRXZlbnQoZSk7by50eXBlPXQsdGhpcy4kZWxlbWVudC50cmlnZ2VyKG8saSl9ZWxzZSB0aGlzLiRlbGVtZW50LnRyaWdnZXIodCxpKX0sZi5pZ25vcmU9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXRJdGVtKHQpO2UmJihlLmlzSWdub3JlZD0hMCl9LGYudW5pZ25vcmU9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXRJdGVtKHQpO2UmJmRlbGV0ZSBlLmlzSWdub3JlZH0sZi5zdGFtcD1mdW5jdGlvbih0KXt0PXRoaXMuX2ZpbmQodCksdCYmKHRoaXMuc3RhbXBzPXRoaXMuc3RhbXBzLmNvbmNhdCh0KSx0LmZvckVhY2godGhpcy5pZ25vcmUsdGhpcykpfSxmLnVuc3RhbXA9ZnVuY3Rpb24odCl7dD10aGlzLl9maW5kKHQpLHQmJnQuZm9yRWFjaChmdW5jdGlvbih0KXtuLnJlbW92ZUZyb20odGhpcy5zdGFtcHMsdCksdGhpcy51bmlnbm9yZSh0KX0sdGhpcyl9LGYuX2ZpbmQ9ZnVuY3Rpb24odCl7cmV0dXJuIHQ/KFwic3RyaW5nXCI9PXR5cGVvZiB0JiYodD10aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0KSksdD1uLm1ha2VBcnJheSh0KSk6dm9pZCAwfSxmLl9tYW5hZ2VTdGFtcHM9ZnVuY3Rpb24oKXt0aGlzLnN0YW1wcyYmdGhpcy5zdGFtcHMubGVuZ3RoJiYodGhpcy5fZ2V0Qm91bmRpbmdSZWN0KCksdGhpcy5zdGFtcHMuZm9yRWFjaCh0aGlzLl9tYW5hZ2VTdGFtcCx0aGlzKSl9LGYuX2dldEJvdW5kaW5nUmVjdD1mdW5jdGlvbigpe3ZhciB0PXRoaXMuZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxlPXRoaXMuc2l6ZTt0aGlzLl9ib3VuZGluZ1JlY3Q9e2xlZnQ6dC5sZWZ0K2UucGFkZGluZ0xlZnQrZS5ib3JkZXJMZWZ0V2lkdGgsdG9wOnQudG9wK2UucGFkZGluZ1RvcCtlLmJvcmRlclRvcFdpZHRoLHJpZ2h0OnQucmlnaHQtKGUucGFkZGluZ1JpZ2h0K2UuYm9yZGVyUmlnaHRXaWR0aCksYm90dG9tOnQuYm90dG9tLShlLnBhZGRpbmdCb3R0b20rZS5ib3JkZXJCb3R0b21XaWR0aCl9fSxmLl9tYW5hZ2VTdGFtcD1kLGYuX2dldEVsZW1lbnRPZmZzZXQ9ZnVuY3Rpb24odCl7dmFyIGU9dC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxuPXRoaXMuX2JvdW5kaW5nUmVjdCxvPWkodCkscj17bGVmdDplLmxlZnQtbi5sZWZ0LW8ubWFyZ2luTGVmdCx0b3A6ZS50b3Atbi50b3Atby5tYXJnaW5Ub3AscmlnaHQ6bi5yaWdodC1lLnJpZ2h0LW8ubWFyZ2luUmlnaHQsYm90dG9tOm4uYm90dG9tLWUuYm90dG9tLW8ubWFyZ2luQm90dG9tfTtyZXR1cm4gcn0sZi5oYW5kbGVFdmVudD1uLmhhbmRsZUV2ZW50LGYuYmluZFJlc2l6ZT1mdW5jdGlvbigpe3QuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLHRoaXMpLHRoaXMuaXNSZXNpemVCb3VuZD0hMH0sZi51bmJpbmRSZXNpemU9ZnVuY3Rpb24oKXt0LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIix0aGlzKSx0aGlzLmlzUmVzaXplQm91bmQ9ITF9LGYub25yZXNpemU9ZnVuY3Rpb24oKXt0aGlzLnJlc2l6ZSgpfSxuLmRlYm91bmNlTWV0aG9kKHIsXCJvbnJlc2l6ZVwiLDEwMCksZi5yZXNpemU9ZnVuY3Rpb24oKXt0aGlzLmlzUmVzaXplQm91bmQmJnRoaXMubmVlZHNSZXNpemVMYXlvdXQoKSYmdGhpcy5sYXlvdXQoKX0sZi5uZWVkc1Jlc2l6ZUxheW91dD1mdW5jdGlvbigpe3ZhciB0PWkodGhpcy5lbGVtZW50KSxlPXRoaXMuc2l6ZSYmdDtyZXR1cm4gZSYmdC5pbm5lcldpZHRoIT09dGhpcy5zaXplLmlubmVyV2lkdGh9LGYuYWRkSXRlbXM9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5faXRlbWl6ZSh0KTtyZXR1cm4gZS5sZW5ndGgmJih0aGlzLml0ZW1zPXRoaXMuaXRlbXMuY29uY2F0KGUpKSxlfSxmLmFwcGVuZGVkPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuYWRkSXRlbXModCk7ZS5sZW5ndGgmJih0aGlzLmxheW91dEl0ZW1zKGUsITApLHRoaXMucmV2ZWFsKGUpKX0sZi5wcmVwZW5kZWQ9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5faXRlbWl6ZSh0KTtpZihlLmxlbmd0aCl7dmFyIGk9dGhpcy5pdGVtcy5zbGljZSgwKTt0aGlzLml0ZW1zPWUuY29uY2F0KGkpLHRoaXMuX3Jlc2V0TGF5b3V0KCksdGhpcy5fbWFuYWdlU3RhbXBzKCksdGhpcy5sYXlvdXRJdGVtcyhlLCEwKSx0aGlzLnJldmVhbChlKSx0aGlzLmxheW91dEl0ZW1zKGkpfX0sZi5yZXZlYWw9ZnVuY3Rpb24odCl7aWYodGhpcy5fZW1pdENvbXBsZXRlT25JdGVtcyhcInJldmVhbFwiLHQpLHQmJnQubGVuZ3RoKXt2YXIgZT10aGlzLnVwZGF0ZVN0YWdnZXIoKTt0LmZvckVhY2goZnVuY3Rpb24odCxpKXt0LnN0YWdnZXIoaSplKSx0LnJldmVhbCgpfSl9fSxmLmhpZGU9ZnVuY3Rpb24odCl7aWYodGhpcy5fZW1pdENvbXBsZXRlT25JdGVtcyhcImhpZGVcIix0KSx0JiZ0Lmxlbmd0aCl7dmFyIGU9dGhpcy51cGRhdGVTdGFnZ2VyKCk7dC5mb3JFYWNoKGZ1bmN0aW9uKHQsaSl7dC5zdGFnZ2VyKGkqZSksdC5oaWRlKCl9KX19LGYucmV2ZWFsSXRlbUVsZW1lbnRzPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0SXRlbXModCk7dGhpcy5yZXZlYWwoZSl9LGYuaGlkZUl0ZW1FbGVtZW50cz1mdW5jdGlvbih0KXt2YXIgZT10aGlzLmdldEl0ZW1zKHQpO3RoaXMuaGlkZShlKX0sZi5nZXRJdGVtPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0wO2U8dGhpcy5pdGVtcy5sZW5ndGg7ZSsrKXt2YXIgaT10aGlzLml0ZW1zW2VdO2lmKGkuZWxlbWVudD09dClyZXR1cm4gaX19LGYuZ2V0SXRlbXM9ZnVuY3Rpb24odCl7dD1uLm1ha2VBcnJheSh0KTt2YXIgZT1bXTtyZXR1cm4gdC5mb3JFYWNoKGZ1bmN0aW9uKHQpe3ZhciBpPXRoaXMuZ2V0SXRlbSh0KTtpJiZlLnB1c2goaSl9LHRoaXMpLGV9LGYucmVtb3ZlPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0SXRlbXModCk7dGhpcy5fZW1pdENvbXBsZXRlT25JdGVtcyhcInJlbW92ZVwiLGUpLGUmJmUubGVuZ3RoJiZlLmZvckVhY2goZnVuY3Rpb24odCl7dC5yZW1vdmUoKSxuLnJlbW92ZUZyb20odGhpcy5pdGVtcyx0KX0sdGhpcyl9LGYuZGVzdHJveT1mdW5jdGlvbigpe3ZhciB0PXRoaXMuZWxlbWVudC5zdHlsZTt0LmhlaWdodD1cIlwiLHQucG9zaXRpb249XCJcIix0LndpZHRoPVwiXCIsdGhpcy5pdGVtcy5mb3JFYWNoKGZ1bmN0aW9uKHQpe3QuZGVzdHJveSgpfSksdGhpcy51bmJpbmRSZXNpemUoKTt2YXIgZT10aGlzLmVsZW1lbnQub3V0bGF5ZXJHVUlEO2RlbGV0ZSBjW2VdLGRlbGV0ZSB0aGlzLmVsZW1lbnQub3V0bGF5ZXJHVUlELHUmJnUucmVtb3ZlRGF0YSh0aGlzLmVsZW1lbnQsdGhpcy5jb25zdHJ1Y3Rvci5uYW1lc3BhY2UpfSxyLmRhdGE9ZnVuY3Rpb24odCl7dD1uLmdldFF1ZXJ5RWxlbWVudCh0KTt2YXIgZT10JiZ0Lm91dGxheWVyR1VJRDtyZXR1cm4gZSYmY1tlXX0sci5jcmVhdGU9ZnVuY3Rpb24odCxlKXt2YXIgaT1zKHIpO3JldHVybiBpLmRlZmF1bHRzPW4uZXh0ZW5kKHt9LHIuZGVmYXVsdHMpLG4uZXh0ZW5kKGkuZGVmYXVsdHMsZSksaS5jb21wYXRPcHRpb25zPW4uZXh0ZW5kKHt9LHIuY29tcGF0T3B0aW9ucyksaS5uYW1lc3BhY2U9dCxpLmRhdGE9ci5kYXRhLGkuSXRlbT1zKG8pLG4uaHRtbEluaXQoaSx0KSx1JiZ1LmJyaWRnZXQmJnUuYnJpZGdldCh0LGkpLGl9O3ZhciBtPXttczoxLHM6MWUzfTtyZXR1cm4gci5JdGVtPW8scn0pLGZ1bmN0aW9uKHQsZSl7XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShbXCJvdXRsYXllci9vdXRsYXllclwiLFwiZ2V0LXNpemUvZ2V0LXNpemVcIl0sZSk6XCJvYmplY3RcIj09dHlwZW9mIG1vZHVsZSYmbW9kdWxlLmV4cG9ydHM/bW9kdWxlLmV4cG9ydHM9ZShyZXF1aXJlKFwib3V0bGF5ZXJcIikscmVxdWlyZShcImdldC1zaXplXCIpKTp0Lk1hc29ucnk9ZSh0Lk91dGxheWVyLHQuZ2V0U2l6ZSl9KHdpbmRvdyxmdW5jdGlvbih0LGUpe3ZhciBpPXQuY3JlYXRlKFwibWFzb25yeVwiKTtpLmNvbXBhdE9wdGlvbnMuZml0V2lkdGg9XCJpc0ZpdFdpZHRoXCI7dmFyIG49aS5wcm90b3R5cGU7cmV0dXJuIG4uX3Jlc2V0TGF5b3V0PWZ1bmN0aW9uKCl7dGhpcy5nZXRTaXplKCksdGhpcy5fZ2V0TWVhc3VyZW1lbnQoXCJjb2x1bW5XaWR0aFwiLFwib3V0ZXJXaWR0aFwiKSx0aGlzLl9nZXRNZWFzdXJlbWVudChcImd1dHRlclwiLFwib3V0ZXJXaWR0aFwiKSx0aGlzLm1lYXN1cmVDb2x1bW5zKCksdGhpcy5jb2xZcz1bXTtmb3IodmFyIHQ9MDt0PHRoaXMuY29sczt0KyspdGhpcy5jb2xZcy5wdXNoKDApO3RoaXMubWF4WT0wLHRoaXMuaG9yaXpvbnRhbENvbEluZGV4PTB9LG4ubWVhc3VyZUNvbHVtbnM9ZnVuY3Rpb24oKXtpZih0aGlzLmdldENvbnRhaW5lcldpZHRoKCksIXRoaXMuY29sdW1uV2lkdGgpe3ZhciB0PXRoaXMuaXRlbXNbMF0saT10JiZ0LmVsZW1lbnQ7dGhpcy5jb2x1bW5XaWR0aD1pJiZlKGkpLm91dGVyV2lkdGh8fHRoaXMuY29udGFpbmVyV2lkdGh9dmFyIG49dGhpcy5jb2x1bW5XaWR0aCs9dGhpcy5ndXR0ZXIsbz10aGlzLmNvbnRhaW5lcldpZHRoK3RoaXMuZ3V0dGVyLHI9by9uLHM9bi1vJW4sYT1zJiYxPnM/XCJyb3VuZFwiOlwiZmxvb3JcIjtyPU1hdGhbYV0ociksdGhpcy5jb2xzPU1hdGgubWF4KHIsMSl9LG4uZ2V0Q29udGFpbmVyV2lkdGg9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9nZXRPcHRpb24oXCJmaXRXaWR0aFwiKSxpPXQ/dGhpcy5lbGVtZW50LnBhcmVudE5vZGU6dGhpcy5lbGVtZW50LG49ZShpKTt0aGlzLmNvbnRhaW5lcldpZHRoPW4mJm4uaW5uZXJXaWR0aH0sbi5fZ2V0SXRlbUxheW91dFBvc2l0aW9uPWZ1bmN0aW9uKHQpe3QuZ2V0U2l6ZSgpO3ZhciBlPXQuc2l6ZS5vdXRlcldpZHRoJXRoaXMuY29sdW1uV2lkdGgsaT1lJiYxPmU/XCJyb3VuZFwiOlwiY2VpbFwiLG49TWF0aFtpXSh0LnNpemUub3V0ZXJXaWR0aC90aGlzLmNvbHVtbldpZHRoKTtuPU1hdGgubWluKG4sdGhpcy5jb2xzKTtmb3IodmFyIG89dGhpcy5vcHRpb25zLmhvcml6b250YWxPcmRlcj9cIl9nZXRIb3Jpem9udGFsQ29sUG9zaXRpb25cIjpcIl9nZXRUb3BDb2xQb3NpdGlvblwiLHI9dGhpc1tvXShuLHQpLHM9e3g6dGhpcy5jb2x1bW5XaWR0aCpyLmNvbCx5OnIueX0sYT1yLnkrdC5zaXplLm91dGVySGVpZ2h0LGg9bityLmNvbCx1PXIuY29sO2g+dTt1KyspdGhpcy5jb2xZc1t1XT1hO3JldHVybiBzfSxuLl9nZXRUb3BDb2xQb3NpdGlvbj1mdW5jdGlvbih0KXt2YXIgZT10aGlzLl9nZXRUb3BDb2xHcm91cCh0KSxpPU1hdGgubWluLmFwcGx5KE1hdGgsZSk7cmV0dXJue2NvbDplLmluZGV4T2YoaSkseTppfX0sbi5fZ2V0VG9wQ29sR3JvdXA9ZnVuY3Rpb24odCl7aWYoMj50KXJldHVybiB0aGlzLmNvbFlzO2Zvcih2YXIgZT1bXSxpPXRoaXMuY29scysxLXQsbj0wO2k+bjtuKyspZVtuXT10aGlzLl9nZXRDb2xHcm91cFkobix0KTtyZXR1cm4gZX0sbi5fZ2V0Q29sR3JvdXBZPWZ1bmN0aW9uKHQsZSl7aWYoMj5lKXJldHVybiB0aGlzLmNvbFlzW3RdO3ZhciBpPXRoaXMuY29sWXMuc2xpY2UodCx0K2UpO3JldHVybiBNYXRoLm1heC5hcHBseShNYXRoLGkpfSxuLl9nZXRIb3Jpem9udGFsQ29sUG9zaXRpb249ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLmhvcml6b250YWxDb2xJbmRleCV0aGlzLmNvbHMsbj10PjEmJmkrdD50aGlzLmNvbHM7aT1uPzA6aTt2YXIgbz1lLnNpemUub3V0ZXJXaWR0aCYmZS5zaXplLm91dGVySGVpZ2h0O3JldHVybiB0aGlzLmhvcml6b250YWxDb2xJbmRleD1vP2krdDp0aGlzLmhvcml6b250YWxDb2xJbmRleCx7Y29sOmkseTp0aGlzLl9nZXRDb2xHcm91cFkoaSx0KX19LG4uX21hbmFnZVN0YW1wPWZ1bmN0aW9uKHQpe3ZhciBpPWUodCksbj10aGlzLl9nZXRFbGVtZW50T2Zmc2V0KHQpLG89dGhpcy5fZ2V0T3B0aW9uKFwib3JpZ2luTGVmdFwiKSxyPW8/bi5sZWZ0Om4ucmlnaHQscz1yK2kub3V0ZXJXaWR0aCxhPU1hdGguZmxvb3Ioci90aGlzLmNvbHVtbldpZHRoKTthPU1hdGgubWF4KDAsYSk7dmFyIGg9TWF0aC5mbG9vcihzL3RoaXMuY29sdW1uV2lkdGgpO2gtPXMldGhpcy5jb2x1bW5XaWR0aD8wOjEsaD1NYXRoLm1pbih0aGlzLmNvbHMtMSxoKTtmb3IodmFyIHU9dGhpcy5fZ2V0T3B0aW9uKFwib3JpZ2luVG9wXCIpLGQ9KHU/bi50b3A6bi5ib3R0b20pK2kub3V0ZXJIZWlnaHQsbD1hO2g+PWw7bCsrKXRoaXMuY29sWXNbbF09TWF0aC5tYXgoZCx0aGlzLmNvbFlzW2xdKX0sbi5fZ2V0Q29udGFpbmVyU2l6ZT1mdW5jdGlvbigpe3RoaXMubWF4WT1NYXRoLm1heC5hcHBseShNYXRoLHRoaXMuY29sWXMpO3ZhciB0PXtoZWlnaHQ6dGhpcy5tYXhZfTtyZXR1cm4gdGhpcy5fZ2V0T3B0aW9uKFwiZml0V2lkdGhcIikmJih0LndpZHRoPXRoaXMuX2dldENvbnRhaW5lckZpdFdpZHRoKCkpLHR9LG4uX2dldENvbnRhaW5lckZpdFdpZHRoPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PTAsZT10aGlzLmNvbHM7LS1lJiYwPT09dGhpcy5jb2xZc1tlXTspdCsrO3JldHVybih0aGlzLmNvbHMtdCkqdGhpcy5jb2x1bW5XaWR0aC10aGlzLmd1dHRlcn0sbi5uZWVkc1Jlc2l6ZUxheW91dD1mdW5jdGlvbigpe3ZhciB0PXRoaXMuY29udGFpbmVyV2lkdGg7cmV0dXJuIHRoaXMuZ2V0Q29udGFpbmVyV2lkdGgoKSx0IT10aGlzLmNvbnRhaW5lcldpZHRofSxpfSk7IiwiLyoqXHJcbiAqIFN3aXBlciA0LjQuNlxyXG4gKiBNb3N0IG1vZGVybiBtb2JpbGUgdG91Y2ggc2xpZGVyIGFuZCBmcmFtZXdvcmsgd2l0aCBoYXJkd2FyZSBhY2NlbGVyYXRlZCB0cmFuc2l0aW9uc1xyXG4gKiBodHRwOi8vd3d3LmlkYW5nZXJvLnVzL3N3aXBlci9cclxuICpcclxuICogQ29weXJpZ2h0IDIwMTQtMjAxOCBWbGFkaW1pciBLaGFybGFtcGlkaVxyXG4gKlxyXG4gKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2VcclxuICpcclxuICogUmVsZWFzZWQgb246IERlY2VtYmVyIDE5LCAyMDE4XHJcbiAqL1xyXG4hZnVuY3Rpb24oZSx0KXtcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cyYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIG1vZHVsZT9tb2R1bGUuZXhwb3J0cz10KCk6XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZSh0KTplLlN3aXBlcj10KCl9KHRoaXMsZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjt2YXIgZT1cInVuZGVmaW5lZFwiPT10eXBlb2YgZG9jdW1lbnQ/e2JvZHk6e30sYWRkRXZlbnRMaXN0ZW5lcjpmdW5jdGlvbigpe30scmVtb3ZlRXZlbnRMaXN0ZW5lcjpmdW5jdGlvbigpe30sYWN0aXZlRWxlbWVudDp7Ymx1cjpmdW5jdGlvbigpe30sbm9kZU5hbWU6XCJcIn0scXVlcnlTZWxlY3RvcjpmdW5jdGlvbigpe3JldHVybiBudWxsfSxxdWVyeVNlbGVjdG9yQWxsOmZ1bmN0aW9uKCl7cmV0dXJuW119LGdldEVsZW1lbnRCeUlkOmZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LGNyZWF0ZUV2ZW50OmZ1bmN0aW9uKCl7cmV0dXJue2luaXRFdmVudDpmdW5jdGlvbigpe319fSxjcmVhdGVFbGVtZW50OmZ1bmN0aW9uKCl7cmV0dXJue2NoaWxkcmVuOltdLGNoaWxkTm9kZXM6W10sc3R5bGU6e30sc2V0QXR0cmlidXRlOmZ1bmN0aW9uKCl7fSxnZXRFbGVtZW50c0J5VGFnTmFtZTpmdW5jdGlvbigpe3JldHVybltdfX19LGxvY2F0aW9uOntoYXNoOlwiXCJ9fTpkb2N1bWVudCx0PVwidW5kZWZpbmVkXCI9PXR5cGVvZiB3aW5kb3c/e2RvY3VtZW50OmUsbmF2aWdhdG9yOnt1c2VyQWdlbnQ6XCJcIn0sbG9jYXRpb246e30saGlzdG9yeTp7fSxDdXN0b21FdmVudDpmdW5jdGlvbigpe3JldHVybiB0aGlzfSxhZGRFdmVudExpc3RlbmVyOmZ1bmN0aW9uKCl7fSxyZW1vdmVFdmVudExpc3RlbmVyOmZ1bmN0aW9uKCl7fSxnZXRDb21wdXRlZFN0eWxlOmZ1bmN0aW9uKCl7cmV0dXJue2dldFByb3BlcnR5VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm5cIlwifX19LEltYWdlOmZ1bmN0aW9uKCl7fSxEYXRlOmZ1bmN0aW9uKCl7fSxzY3JlZW46e30sc2V0VGltZW91dDpmdW5jdGlvbigpe30sY2xlYXJUaW1lb3V0OmZ1bmN0aW9uKCl7fX06d2luZG93LGE9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTA7dDxlLmxlbmd0aDt0Kz0xKXRoaXNbdF09ZVt0XTtyZXR1cm4gdGhpcy5sZW5ndGg9ZS5sZW5ndGgsdGhpc307ZnVuY3Rpb24gaShpLHMpe3ZhciByPVtdLG49MDtpZihpJiYhcyYmaSBpbnN0YW5jZW9mIGEpcmV0dXJuIGk7aWYoaSlpZihcInN0cmluZ1wiPT10eXBlb2YgaSl7dmFyIG8sbCxkPWkudHJpbSgpO2lmKDA8PWQuaW5kZXhPZihcIjxcIikmJjA8PWQuaW5kZXhPZihcIj5cIikpe3ZhciBwPVwiZGl2XCI7Zm9yKDA9PT1kLmluZGV4T2YoXCI8bGlcIikmJihwPVwidWxcIiksMD09PWQuaW5kZXhPZihcIjx0clwiKSYmKHA9XCJ0Ym9keVwiKSwwIT09ZC5pbmRleE9mKFwiPHRkXCIpJiYwIT09ZC5pbmRleE9mKFwiPHRoXCIpfHwocD1cInRyXCIpLDA9PT1kLmluZGV4T2YoXCI8dGJvZHlcIikmJihwPVwidGFibGVcIiksMD09PWQuaW5kZXhPZihcIjxvcHRpb25cIikmJihwPVwic2VsZWN0XCIpLChsPWUuY3JlYXRlRWxlbWVudChwKSkuaW5uZXJIVE1MPWQsbj0wO248bC5jaGlsZE5vZGVzLmxlbmd0aDtuKz0xKXIucHVzaChsLmNoaWxkTm9kZXNbbl0pfWVsc2UgZm9yKG89c3x8XCIjXCIhPT1pWzBdfHxpLm1hdGNoKC9bIC48Pjp+XS8pPyhzfHxlKS5xdWVyeVNlbGVjdG9yQWxsKGkudHJpbSgpKTpbZS5nZXRFbGVtZW50QnlJZChpLnRyaW0oKS5zcGxpdChcIiNcIilbMV0pXSxuPTA7bjxvLmxlbmd0aDtuKz0xKW9bbl0mJnIucHVzaChvW25dKX1lbHNlIGlmKGkubm9kZVR5cGV8fGk9PT10fHxpPT09ZSlyLnB1c2goaSk7ZWxzZSBpZigwPGkubGVuZ3RoJiZpWzBdLm5vZGVUeXBlKWZvcihuPTA7bjxpLmxlbmd0aDtuKz0xKXIucHVzaChpW25dKTtyZXR1cm4gbmV3IGEocil9ZnVuY3Rpb24gcyhlKXtmb3IodmFyIHQ9W10sYT0wO2E8ZS5sZW5ndGg7YSs9MSktMT09PXQuaW5kZXhPZihlW2FdKSYmdC5wdXNoKGVbYV0pO3JldHVybiB0fWkuZm49YS5wcm90b3R5cGUsaS5DbGFzcz1hLGkuRG9tNz1hO3ZhciByPXthZGRDbGFzczpmdW5jdGlvbihlKXtpZih2b2lkIDA9PT1lKXJldHVybiB0aGlzO2Zvcih2YXIgdD1lLnNwbGl0KFwiIFwiKSxhPTA7YTx0Lmxlbmd0aDthKz0xKWZvcih2YXIgaT0wO2k8dGhpcy5sZW5ndGg7aSs9MSl2b2lkIDAhPT10aGlzW2ldJiZ2b2lkIDAhPT10aGlzW2ldLmNsYXNzTGlzdCYmdGhpc1tpXS5jbGFzc0xpc3QuYWRkKHRbYV0pO3JldHVybiB0aGlzfSxyZW1vdmVDbGFzczpmdW5jdGlvbihlKXtmb3IodmFyIHQ9ZS5zcGxpdChcIiBcIiksYT0wO2E8dC5sZW5ndGg7YSs9MSlmb3IodmFyIGk9MDtpPHRoaXMubGVuZ3RoO2krPTEpdm9pZCAwIT09dGhpc1tpXSYmdm9pZCAwIT09dGhpc1tpXS5jbGFzc0xpc3QmJnRoaXNbaV0uY2xhc3NMaXN0LnJlbW92ZSh0W2FdKTtyZXR1cm4gdGhpc30saGFzQ2xhc3M6ZnVuY3Rpb24oZSl7cmV0dXJuISF0aGlzWzBdJiZ0aGlzWzBdLmNsYXNzTGlzdC5jb250YWlucyhlKX0sdG9nZ2xlQ2xhc3M6ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PWUuc3BsaXQoXCIgXCIpLGE9MDthPHQubGVuZ3RoO2ErPTEpZm9yKHZhciBpPTA7aTx0aGlzLmxlbmd0aDtpKz0xKXZvaWQgMCE9PXRoaXNbaV0mJnZvaWQgMCE9PXRoaXNbaV0uY2xhc3NMaXN0JiZ0aGlzW2ldLmNsYXNzTGlzdC50b2dnbGUodFthXSk7cmV0dXJuIHRoaXN9LGF0dHI6ZnVuY3Rpb24oZSx0KXt2YXIgYT1hcmd1bWVudHM7aWYoMT09PWFyZ3VtZW50cy5sZW5ndGgmJlwic3RyaW5nXCI9PXR5cGVvZiBlKXJldHVybiB0aGlzWzBdP3RoaXNbMF0uZ2V0QXR0cmlidXRlKGUpOnZvaWQgMDtmb3IodmFyIGk9MDtpPHRoaXMubGVuZ3RoO2krPTEpaWYoMj09PWEubGVuZ3RoKXRoaXNbaV0uc2V0QXR0cmlidXRlKGUsdCk7ZWxzZSBmb3IodmFyIHMgaW4gZSl0aGlzW2ldW3NdPWVbc10sdGhpc1tpXS5zZXRBdHRyaWJ1dGUocyxlW3NdKTtyZXR1cm4gdGhpc30scmVtb3ZlQXR0cjpmdW5jdGlvbihlKXtmb3IodmFyIHQ9MDt0PHRoaXMubGVuZ3RoO3QrPTEpdGhpc1t0XS5yZW1vdmVBdHRyaWJ1dGUoZSk7cmV0dXJuIHRoaXN9LGRhdGE6ZnVuY3Rpb24oZSx0KXt2YXIgYTtpZih2b2lkIDAhPT10KXtmb3IodmFyIGk9MDtpPHRoaXMubGVuZ3RoO2krPTEpKGE9dGhpc1tpXSkuZG9tN0VsZW1lbnREYXRhU3RvcmFnZXx8KGEuZG9tN0VsZW1lbnREYXRhU3RvcmFnZT17fSksYS5kb203RWxlbWVudERhdGFTdG9yYWdlW2VdPXQ7cmV0dXJuIHRoaXN9aWYoYT10aGlzWzBdKXJldHVybiBhLmRvbTdFbGVtZW50RGF0YVN0b3JhZ2UmJmUgaW4gYS5kb203RWxlbWVudERhdGFTdG9yYWdlP2EuZG9tN0VsZW1lbnREYXRhU3RvcmFnZVtlXTphLmdldEF0dHJpYnV0ZShcImRhdGEtXCIrZSl8fHZvaWQgMH0sdHJhbnNmb3JtOmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0wO3Q8dGhpcy5sZW5ndGg7dCs9MSl7dmFyIGE9dGhpc1t0XS5zdHlsZTthLndlYmtpdFRyYW5zZm9ybT1lLGEudHJhbnNmb3JtPWV9cmV0dXJuIHRoaXN9LHRyYW5zaXRpb246ZnVuY3Rpb24oZSl7XCJzdHJpbmdcIiE9dHlwZW9mIGUmJihlKz1cIm1zXCIpO2Zvcih2YXIgdD0wO3Q8dGhpcy5sZW5ndGg7dCs9MSl7dmFyIGE9dGhpc1t0XS5zdHlsZTthLndlYmtpdFRyYW5zaXRpb25EdXJhdGlvbj1lLGEudHJhbnNpdGlvbkR1cmF0aW9uPWV9cmV0dXJuIHRoaXN9LG9uOmZ1bmN0aW9uKCl7Zm9yKHZhciBlLHQ9W10sYT1hcmd1bWVudHMubGVuZ3RoO2EtLTspdFthXT1hcmd1bWVudHNbYV07dmFyIHM9dFswXSxyPXRbMV0sbj10WzJdLG89dFszXTtmdW5jdGlvbiBsKGUpe3ZhciB0PWUudGFyZ2V0O2lmKHQpe3ZhciBhPWUudGFyZ2V0LmRvbTdFdmVudERhdGF8fFtdO2lmKGEuaW5kZXhPZihlKTwwJiZhLnVuc2hpZnQoZSksaSh0KS5pcyhyKSluLmFwcGx5KHQsYSk7ZWxzZSBmb3IodmFyIHM9aSh0KS5wYXJlbnRzKCksbz0wO288cy5sZW5ndGg7bys9MSlpKHNbb10pLmlzKHIpJiZuLmFwcGx5KHNbb10sYSl9fWZ1bmN0aW9uIGQoZSl7dmFyIHQ9ZSYmZS50YXJnZXQmJmUudGFyZ2V0LmRvbTdFdmVudERhdGF8fFtdO3QuaW5kZXhPZihlKTwwJiZ0LnVuc2hpZnQoZSksbi5hcHBseSh0aGlzLHQpfVwiZnVuY3Rpb25cIj09dHlwZW9mIHRbMV0mJihzPShlPXQpWzBdLG49ZVsxXSxvPWVbMl0scj12b2lkIDApLG98fChvPSExKTtmb3IodmFyIHAsYz1zLnNwbGl0KFwiIFwiKSx1PTA7dTx0aGlzLmxlbmd0aDt1Kz0xKXt2YXIgaD10aGlzW3VdO2lmKHIpZm9yKHA9MDtwPGMubGVuZ3RoO3ArPTEpe3ZhciB2PWNbcF07aC5kb203TGl2ZUxpc3RlbmVyc3x8KGguZG9tN0xpdmVMaXN0ZW5lcnM9e30pLGguZG9tN0xpdmVMaXN0ZW5lcnNbdl18fChoLmRvbTdMaXZlTGlzdGVuZXJzW3ZdPVtdKSxoLmRvbTdMaXZlTGlzdGVuZXJzW3ZdLnB1c2goe2xpc3RlbmVyOm4scHJveHlMaXN0ZW5lcjpsfSksaC5hZGRFdmVudExpc3RlbmVyKHYsbCxvKX1lbHNlIGZvcihwPTA7cDxjLmxlbmd0aDtwKz0xKXt2YXIgZj1jW3BdO2guZG9tN0xpc3RlbmVyc3x8KGguZG9tN0xpc3RlbmVycz17fSksaC5kb203TGlzdGVuZXJzW2ZdfHwoaC5kb203TGlzdGVuZXJzW2ZdPVtdKSxoLmRvbTdMaXN0ZW5lcnNbZl0ucHVzaCh7bGlzdGVuZXI6bixwcm94eUxpc3RlbmVyOmR9KSxoLmFkZEV2ZW50TGlzdGVuZXIoZixkLG8pfX1yZXR1cm4gdGhpc30sb2ZmOmZ1bmN0aW9uKCl7Zm9yKHZhciBlLHQ9W10sYT1hcmd1bWVudHMubGVuZ3RoO2EtLTspdFthXT1hcmd1bWVudHNbYV07dmFyIGk9dFswXSxzPXRbMV0scj10WzJdLG49dFszXTtcImZ1bmN0aW9uXCI9PXR5cGVvZiB0WzFdJiYoaT0oZT10KVswXSxyPWVbMV0sbj1lWzJdLHM9dm9pZCAwKSxufHwobj0hMSk7Zm9yKHZhciBvPWkuc3BsaXQoXCIgXCIpLGw9MDtsPG8ubGVuZ3RoO2wrPTEpZm9yKHZhciBkPW9bbF0scD0wO3A8dGhpcy5sZW5ndGg7cCs9MSl7dmFyIGM9dGhpc1twXSx1PXZvaWQgMDtpZighcyYmYy5kb203TGlzdGVuZXJzP3U9Yy5kb203TGlzdGVuZXJzW2RdOnMmJmMuZG9tN0xpdmVMaXN0ZW5lcnMmJih1PWMuZG9tN0xpdmVMaXN0ZW5lcnNbZF0pLHUmJnUubGVuZ3RoKWZvcih2YXIgaD11Lmxlbmd0aC0xOzA8PWg7aC09MSl7dmFyIHY9dVtoXTtyJiZ2Lmxpc3RlbmVyPT09cj8oYy5yZW1vdmVFdmVudExpc3RlbmVyKGQsdi5wcm94eUxpc3RlbmVyLG4pLHUuc3BsaWNlKGgsMSkpOnJ8fChjLnJlbW92ZUV2ZW50TGlzdGVuZXIoZCx2LnByb3h5TGlzdGVuZXIsbiksdS5zcGxpY2UoaCwxKSl9fXJldHVybiB0aGlzfSx0cmlnZ2VyOmZ1bmN0aW9uKCl7Zm9yKHZhciBhPVtdLGk9YXJndW1lbnRzLmxlbmd0aDtpLS07KWFbaV09YXJndW1lbnRzW2ldO2Zvcih2YXIgcz1hWzBdLnNwbGl0KFwiIFwiKSxyPWFbMV0sbj0wO248cy5sZW5ndGg7bis9MSlmb3IodmFyIG89c1tuXSxsPTA7bDx0aGlzLmxlbmd0aDtsKz0xKXt2YXIgZD10aGlzW2xdLHA9dm9pZCAwO3RyeXtwPW5ldyB0LkN1c3RvbUV2ZW50KG8se2RldGFpbDpyLGJ1YmJsZXM6ITAsY2FuY2VsYWJsZTohMH0pfWNhdGNoKGEpeyhwPWUuY3JlYXRlRXZlbnQoXCJFdmVudFwiKSkuaW5pdEV2ZW50KG8sITAsITApLHAuZGV0YWlsPXJ9ZC5kb203RXZlbnREYXRhPWEuZmlsdGVyKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIDA8dH0pLGQuZGlzcGF0Y2hFdmVudChwKSxkLmRvbTdFdmVudERhdGE9W10sZGVsZXRlIGQuZG9tN0V2ZW50RGF0YX1yZXR1cm4gdGhpc30sdHJhbnNpdGlvbkVuZDpmdW5jdGlvbihlKXt2YXIgdCxhPVtcIndlYmtpdFRyYW5zaXRpb25FbmRcIixcInRyYW5zaXRpb25lbmRcIl0saT10aGlzO2Z1bmN0aW9uIHMocil7aWYoci50YXJnZXQ9PT10aGlzKWZvcihlLmNhbGwodGhpcyxyKSx0PTA7dDxhLmxlbmd0aDt0Kz0xKWkub2ZmKGFbdF0scyl9aWYoZSlmb3IodD0wO3Q8YS5sZW5ndGg7dCs9MSlpLm9uKGFbdF0scyk7cmV0dXJuIHRoaXN9LG91dGVyV2lkdGg6ZnVuY3Rpb24oZSl7aWYoMDx0aGlzLmxlbmd0aCl7aWYoZSl7dmFyIHQ9dGhpcy5zdHlsZXMoKTtyZXR1cm4gdGhpc1swXS5vZmZzZXRXaWR0aCtwYXJzZUZsb2F0KHQuZ2V0UHJvcGVydHlWYWx1ZShcIm1hcmdpbi1yaWdodFwiKSkrcGFyc2VGbG9hdCh0LmdldFByb3BlcnR5VmFsdWUoXCJtYXJnaW4tbGVmdFwiKSl9cmV0dXJuIHRoaXNbMF0ub2Zmc2V0V2lkdGh9cmV0dXJuIG51bGx9LG91dGVySGVpZ2h0OmZ1bmN0aW9uKGUpe2lmKDA8dGhpcy5sZW5ndGgpe2lmKGUpe3ZhciB0PXRoaXMuc3R5bGVzKCk7cmV0dXJuIHRoaXNbMF0ub2Zmc2V0SGVpZ2h0K3BhcnNlRmxvYXQodC5nZXRQcm9wZXJ0eVZhbHVlKFwibWFyZ2luLXRvcFwiKSkrcGFyc2VGbG9hdCh0LmdldFByb3BlcnR5VmFsdWUoXCJtYXJnaW4tYm90dG9tXCIpKX1yZXR1cm4gdGhpc1swXS5vZmZzZXRIZWlnaHR9cmV0dXJuIG51bGx9LG9mZnNldDpmdW5jdGlvbigpe2lmKDA8dGhpcy5sZW5ndGgpe3ZhciBhPXRoaXNbMF0saT1hLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLHM9ZS5ib2R5LHI9YS5jbGllbnRUb3B8fHMuY2xpZW50VG9wfHwwLG49YS5jbGllbnRMZWZ0fHxzLmNsaWVudExlZnR8fDAsbz1hPT09dD90LnNjcm9sbFk6YS5zY3JvbGxUb3AsbD1hPT09dD90LnNjcm9sbFg6YS5zY3JvbGxMZWZ0O3JldHVybnt0b3A6aS50b3Arby1yLGxlZnQ6aS5sZWZ0K2wtbn19cmV0dXJuIG51bGx9LGNzczpmdW5jdGlvbihlLGEpe3ZhciBpO2lmKDE9PT1hcmd1bWVudHMubGVuZ3RoKXtpZihcInN0cmluZ1wiIT10eXBlb2YgZSl7Zm9yKGk9MDtpPHRoaXMubGVuZ3RoO2krPTEpZm9yKHZhciBzIGluIGUpdGhpc1tpXS5zdHlsZVtzXT1lW3NdO3JldHVybiB0aGlzfWlmKHRoaXNbMF0pcmV0dXJuIHQuZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzWzBdLG51bGwpLmdldFByb3BlcnR5VmFsdWUoZSl9aWYoMj09PWFyZ3VtZW50cy5sZW5ndGgmJlwic3RyaW5nXCI9PXR5cGVvZiBlKXtmb3IoaT0wO2k8dGhpcy5sZW5ndGg7aSs9MSl0aGlzW2ldLnN0eWxlW2VdPWE7cmV0dXJuIHRoaXN9cmV0dXJuIHRoaXN9LGVhY2g6ZnVuY3Rpb24oZSl7aWYoIWUpcmV0dXJuIHRoaXM7Zm9yKHZhciB0PTA7dDx0aGlzLmxlbmd0aDt0Kz0xKWlmKCExPT09ZS5jYWxsKHRoaXNbdF0sdCx0aGlzW3RdKSlyZXR1cm4gdGhpcztyZXR1cm4gdGhpc30saHRtbDpmdW5jdGlvbihlKXtpZih2b2lkIDA9PT1lKXJldHVybiB0aGlzWzBdP3RoaXNbMF0uaW5uZXJIVE1MOnZvaWQgMDtmb3IodmFyIHQ9MDt0PHRoaXMubGVuZ3RoO3QrPTEpdGhpc1t0XS5pbm5lckhUTUw9ZTtyZXR1cm4gdGhpc30sdGV4dDpmdW5jdGlvbihlKXtpZih2b2lkIDA9PT1lKXJldHVybiB0aGlzWzBdP3RoaXNbMF0udGV4dENvbnRlbnQudHJpbSgpOm51bGw7Zm9yKHZhciB0PTA7dDx0aGlzLmxlbmd0aDt0Kz0xKXRoaXNbdF0udGV4dENvbnRlbnQ9ZTtyZXR1cm4gdGhpc30saXM6ZnVuY3Rpb24ocyl7dmFyIHIsbixvPXRoaXNbMF07aWYoIW98fHZvaWQgMD09PXMpcmV0dXJuITE7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHMpe2lmKG8ubWF0Y2hlcylyZXR1cm4gby5tYXRjaGVzKHMpO2lmKG8ud2Via2l0TWF0Y2hlc1NlbGVjdG9yKXJldHVybiBvLndlYmtpdE1hdGNoZXNTZWxlY3RvcihzKTtpZihvLm1zTWF0Y2hlc1NlbGVjdG9yKXJldHVybiBvLm1zTWF0Y2hlc1NlbGVjdG9yKHMpO2ZvcihyPWkocyksbj0wO248ci5sZW5ndGg7bis9MSlpZihyW25dPT09bylyZXR1cm4hMDtyZXR1cm4hMX1pZihzPT09ZSlyZXR1cm4gbz09PWU7aWYocz09PXQpcmV0dXJuIG89PT10O2lmKHMubm9kZVR5cGV8fHMgaW5zdGFuY2VvZiBhKXtmb3Iocj1zLm5vZGVUeXBlP1tzXTpzLG49MDtuPHIubGVuZ3RoO24rPTEpaWYocltuXT09PW8pcmV0dXJuITA7cmV0dXJuITF9cmV0dXJuITF9LGluZGV4OmZ1bmN0aW9uKCl7dmFyIGUsdD10aGlzWzBdO2lmKHQpe2ZvcihlPTA7bnVsbCE9PSh0PXQucHJldmlvdXNTaWJsaW5nKTspMT09PXQubm9kZVR5cGUmJihlKz0xKTtyZXR1cm4gZX19LGVxOmZ1bmN0aW9uKGUpe2lmKHZvaWQgMD09PWUpcmV0dXJuIHRoaXM7dmFyIHQsaT10aGlzLmxlbmd0aDtyZXR1cm4gbmV3IGEoaS0xPGU/W106ZTwwPyh0PWkrZSk8MD9bXTpbdGhpc1t0XV06W3RoaXNbZV1dKX0sYXBwZW5kOmZ1bmN0aW9uKCl7Zm9yKHZhciB0LGk9W10scz1hcmd1bWVudHMubGVuZ3RoO3MtLTspaVtzXT1hcmd1bWVudHNbc107Zm9yKHZhciByPTA7cjxpLmxlbmd0aDtyKz0xKXt0PWlbcl07Zm9yKHZhciBuPTA7bjx0aGlzLmxlbmd0aDtuKz0xKWlmKFwic3RyaW5nXCI9PXR5cGVvZiB0KXt2YXIgbz1lLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7Zm9yKG8uaW5uZXJIVE1MPXQ7by5maXJzdENoaWxkOyl0aGlzW25dLmFwcGVuZENoaWxkKG8uZmlyc3RDaGlsZCl9ZWxzZSBpZih0IGluc3RhbmNlb2YgYSlmb3IodmFyIGw9MDtsPHQubGVuZ3RoO2wrPTEpdGhpc1tuXS5hcHBlbmRDaGlsZCh0W2xdKTtlbHNlIHRoaXNbbl0uYXBwZW5kQ2hpbGQodCl9cmV0dXJuIHRoaXN9LHByZXBlbmQ6ZnVuY3Rpb24odCl7dmFyIGkscztmb3IoaT0wO2k8dGhpcy5sZW5ndGg7aSs9MSlpZihcInN0cmluZ1wiPT10eXBlb2YgdCl7dmFyIHI9ZS5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO2ZvcihyLmlubmVySFRNTD10LHM9ci5jaGlsZE5vZGVzLmxlbmd0aC0xOzA8PXM7cy09MSl0aGlzW2ldLmluc2VydEJlZm9yZShyLmNoaWxkTm9kZXNbc10sdGhpc1tpXS5jaGlsZE5vZGVzWzBdKX1lbHNlIGlmKHQgaW5zdGFuY2VvZiBhKWZvcihzPTA7czx0Lmxlbmd0aDtzKz0xKXRoaXNbaV0uaW5zZXJ0QmVmb3JlKHRbc10sdGhpc1tpXS5jaGlsZE5vZGVzWzBdKTtlbHNlIHRoaXNbaV0uaW5zZXJ0QmVmb3JlKHQsdGhpc1tpXS5jaGlsZE5vZGVzWzBdKTtyZXR1cm4gdGhpc30sbmV4dDpmdW5jdGlvbihlKXtyZXR1cm4gMDx0aGlzLmxlbmd0aD9lP3RoaXNbMF0ubmV4dEVsZW1lbnRTaWJsaW5nJiZpKHRoaXNbMF0ubmV4dEVsZW1lbnRTaWJsaW5nKS5pcyhlKT9uZXcgYShbdGhpc1swXS5uZXh0RWxlbWVudFNpYmxpbmddKTpuZXcgYShbXSk6dGhpc1swXS5uZXh0RWxlbWVudFNpYmxpbmc/bmV3IGEoW3RoaXNbMF0ubmV4dEVsZW1lbnRTaWJsaW5nXSk6bmV3IGEoW10pOm5ldyBhKFtdKX0sbmV4dEFsbDpmdW5jdGlvbihlKXt2YXIgdD1bXSxzPXRoaXNbMF07aWYoIXMpcmV0dXJuIG5ldyBhKFtdKTtmb3IoO3MubmV4dEVsZW1lbnRTaWJsaW5nOyl7dmFyIHI9cy5uZXh0RWxlbWVudFNpYmxpbmc7ZT9pKHIpLmlzKGUpJiZ0LnB1c2gocik6dC5wdXNoKHIpLHM9cn1yZXR1cm4gbmV3IGEodCl9LHByZXY6ZnVuY3Rpb24oZSl7aWYoMDx0aGlzLmxlbmd0aCl7dmFyIHQ9dGhpc1swXTtyZXR1cm4gZT90LnByZXZpb3VzRWxlbWVudFNpYmxpbmcmJmkodC5wcmV2aW91c0VsZW1lbnRTaWJsaW5nKS5pcyhlKT9uZXcgYShbdC5wcmV2aW91c0VsZW1lbnRTaWJsaW5nXSk6bmV3IGEoW10pOnQucHJldmlvdXNFbGVtZW50U2libGluZz9uZXcgYShbdC5wcmV2aW91c0VsZW1lbnRTaWJsaW5nXSk6bmV3IGEoW10pfXJldHVybiBuZXcgYShbXSl9LHByZXZBbGw6ZnVuY3Rpb24oZSl7dmFyIHQ9W10scz10aGlzWzBdO2lmKCFzKXJldHVybiBuZXcgYShbXSk7Zm9yKDtzLnByZXZpb3VzRWxlbWVudFNpYmxpbmc7KXt2YXIgcj1zLnByZXZpb3VzRWxlbWVudFNpYmxpbmc7ZT9pKHIpLmlzKGUpJiZ0LnB1c2gocik6dC5wdXNoKHIpLHM9cn1yZXR1cm4gbmV3IGEodCl9LHBhcmVudDpmdW5jdGlvbihlKXtmb3IodmFyIHQ9W10sYT0wO2E8dGhpcy5sZW5ndGg7YSs9MSludWxsIT09dGhpc1thXS5wYXJlbnROb2RlJiYoZT9pKHRoaXNbYV0ucGFyZW50Tm9kZSkuaXMoZSkmJnQucHVzaCh0aGlzW2FdLnBhcmVudE5vZGUpOnQucHVzaCh0aGlzW2FdLnBhcmVudE5vZGUpKTtyZXR1cm4gaShzKHQpKX0scGFyZW50czpmdW5jdGlvbihlKXtmb3IodmFyIHQ9W10sYT0wO2E8dGhpcy5sZW5ndGg7YSs9MSlmb3IodmFyIHI9dGhpc1thXS5wYXJlbnROb2RlO3I7KWU/aShyKS5pcyhlKSYmdC5wdXNoKHIpOnQucHVzaChyKSxyPXIucGFyZW50Tm9kZTtyZXR1cm4gaShzKHQpKX0sY2xvc2VzdDpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3JldHVybiB2b2lkIDA9PT1lP25ldyBhKFtdKToodC5pcyhlKXx8KHQ9dC5wYXJlbnRzKGUpLmVxKDApKSx0KX0sZmluZDpmdW5jdGlvbihlKXtmb3IodmFyIHQ9W10saT0wO2k8dGhpcy5sZW5ndGg7aSs9MSlmb3IodmFyIHM9dGhpc1tpXS5xdWVyeVNlbGVjdG9yQWxsKGUpLHI9MDtyPHMubGVuZ3RoO3IrPTEpdC5wdXNoKHNbcl0pO3JldHVybiBuZXcgYSh0KX0sY2hpbGRyZW46ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PVtdLHI9MDtyPHRoaXMubGVuZ3RoO3IrPTEpZm9yKHZhciBuPXRoaXNbcl0uY2hpbGROb2RlcyxvPTA7bzxuLmxlbmd0aDtvKz0xKWU/MT09PW5bb10ubm9kZVR5cGUmJmkobltvXSkuaXMoZSkmJnQucHVzaChuW29dKToxPT09bltvXS5ub2RlVHlwZSYmdC5wdXNoKG5bb10pO3JldHVybiBuZXcgYShzKHQpKX0scmVtb3ZlOmZ1bmN0aW9uKCl7Zm9yKHZhciBlPTA7ZTx0aGlzLmxlbmd0aDtlKz0xKXRoaXNbZV0ucGFyZW50Tm9kZSYmdGhpc1tlXS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXNbZV0pO3JldHVybiB0aGlzfSxhZGQ6ZnVuY3Rpb24oKXtmb3IodmFyIGU9W10sdD1hcmd1bWVudHMubGVuZ3RoO3QtLTspZVt0XT1hcmd1bWVudHNbdF07dmFyIGEscztmb3IoYT0wO2E8ZS5sZW5ndGg7YSs9MSl7dmFyIHI9aShlW2FdKTtmb3Iocz0wO3M8ci5sZW5ndGg7cys9MSl0aGlzW3RoaXMubGVuZ3RoXT1yW3NdLHRoaXMubGVuZ3RoKz0xfXJldHVybiB0aGlzfSxzdHlsZXM6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1swXT90LmdldENvbXB1dGVkU3R5bGUodGhpc1swXSxudWxsKTp7fX19O09iamVjdC5rZXlzKHIpLmZvckVhY2goZnVuY3Rpb24oZSl7aS5mbltlXT1yW2VdfSk7dmFyIG4sbyxsLGQ9e2RlbGV0ZVByb3BzOmZ1bmN0aW9uKGUpe3ZhciB0PWU7T2JqZWN0LmtleXModCkuZm9yRWFjaChmdW5jdGlvbihlKXt0cnl7dFtlXT1udWxsfWNhdGNoKGUpe310cnl7ZGVsZXRlIHRbZV19Y2F0Y2goZSl7fX0pfSxuZXh0VGljazpmdW5jdGlvbihlLHQpe3JldHVybiB2b2lkIDA9PT10JiYodD0wKSxzZXRUaW1lb3V0KGUsdCl9LG5vdzpmdW5jdGlvbigpe3JldHVybiBEYXRlLm5vdygpfSxnZXRUcmFuc2xhdGU6ZnVuY3Rpb24oZSxhKXt2YXIgaSxzLHI7dm9pZCAwPT09YSYmKGE9XCJ4XCIpO3ZhciBuPXQuZ2V0Q29tcHV0ZWRTdHlsZShlLG51bGwpO3JldHVybiB0LldlYktpdENTU01hdHJpeD8oNjwocz1uLnRyYW5zZm9ybXx8bi53ZWJraXRUcmFuc2Zvcm0pLnNwbGl0KFwiLFwiKS5sZW5ndGgmJihzPXMuc3BsaXQoXCIsIFwiKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIGUucmVwbGFjZShcIixcIixcIi5cIil9KS5qb2luKFwiLCBcIikpLHI9bmV3IHQuV2ViS2l0Q1NTTWF0cml4KFwibm9uZVwiPT09cz9cIlwiOnMpKTppPShyPW4uTW96VHJhbnNmb3JtfHxuLk9UcmFuc2Zvcm18fG4uTXNUcmFuc2Zvcm18fG4ubXNUcmFuc2Zvcm18fG4udHJhbnNmb3JtfHxuLmdldFByb3BlcnR5VmFsdWUoXCJ0cmFuc2Zvcm1cIikucmVwbGFjZShcInRyYW5zbGF0ZShcIixcIm1hdHJpeCgxLCAwLCAwLCAxLFwiKSkudG9TdHJpbmcoKS5zcGxpdChcIixcIiksXCJ4XCI9PT1hJiYocz10LldlYktpdENTU01hdHJpeD9yLm00MToxNj09PWkubGVuZ3RoP3BhcnNlRmxvYXQoaVsxMl0pOnBhcnNlRmxvYXQoaVs0XSkpLFwieVwiPT09YSYmKHM9dC5XZWJLaXRDU1NNYXRyaXg/ci5tNDI6MTY9PT1pLmxlbmd0aD9wYXJzZUZsb2F0KGlbMTNdKTpwYXJzZUZsb2F0KGlbNV0pKSxzfHwwfSxwYXJzZVVybFF1ZXJ5OmZ1bmN0aW9uKGUpe3ZhciBhLGkscyxyLG49e30sbz1lfHx0LmxvY2F0aW9uLmhyZWY7aWYoXCJzdHJpbmdcIj09dHlwZW9mIG8mJm8ubGVuZ3RoKWZvcihyPShpPShvPS0xPG8uaW5kZXhPZihcIj9cIik/by5yZXBsYWNlKC9cXFMqXFw/LyxcIlwiKTpcIlwiKS5zcGxpdChcIiZcIikuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVyblwiXCIhPT1lfSkpLmxlbmd0aCxhPTA7YTxyO2ErPTEpcz1pW2FdLnJlcGxhY2UoLyNcXFMrL2csXCJcIikuc3BsaXQoXCI9XCIpLG5bZGVjb2RlVVJJQ29tcG9uZW50KHNbMF0pXT12b2lkIDA9PT1zWzFdP3ZvaWQgMDpkZWNvZGVVUklDb21wb25lbnQoc1sxXSl8fFwiXCI7cmV0dXJuIG59LGlzT2JqZWN0OmZ1bmN0aW9uKGUpe3JldHVyblwib2JqZWN0XCI9PXR5cGVvZiBlJiZudWxsIT09ZSYmZS5jb25zdHJ1Y3RvciYmZS5jb25zdHJ1Y3Rvcj09PU9iamVjdH0sZXh0ZW5kOmZ1bmN0aW9uKCl7Zm9yKHZhciBlPVtdLHQ9YXJndW1lbnRzLmxlbmd0aDt0LS07KWVbdF09YXJndW1lbnRzW3RdO2Zvcih2YXIgYT1PYmplY3QoZVswXSksaT0xO2k8ZS5sZW5ndGg7aSs9MSl7dmFyIHM9ZVtpXTtpZihudWxsIT1zKWZvcih2YXIgcj1PYmplY3Qua2V5cyhPYmplY3QocykpLG49MCxvPXIubGVuZ3RoO248bztuKz0xKXt2YXIgbD1yW25dLHA9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzLGwpO3ZvaWQgMCE9PXAmJnAuZW51bWVyYWJsZSYmKGQuaXNPYmplY3QoYVtsXSkmJmQuaXNPYmplY3Qoc1tsXSk/ZC5leHRlbmQoYVtsXSxzW2xdKTohZC5pc09iamVjdChhW2xdKSYmZC5pc09iamVjdChzW2xdKT8oYVtsXT17fSxkLmV4dGVuZChhW2xdLHNbbF0pKTphW2xdPXNbbF0pfX1yZXR1cm4gYX19LHA9KGw9ZS5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLHt0b3VjaDp0Lk1vZGVybml6ciYmITA9PT10Lk1vZGVybml6ci50b3VjaHx8ISEoMDx0Lm5hdmlnYXRvci5tYXhUb3VjaFBvaW50c3x8XCJvbnRvdWNoc3RhcnRcImluIHR8fHQuRG9jdW1lbnRUb3VjaCYmZSBpbnN0YW5jZW9mIHQuRG9jdW1lbnRUb3VjaCkscG9pbnRlckV2ZW50czohISh0Lm5hdmlnYXRvci5wb2ludGVyRW5hYmxlZHx8dC5Qb2ludGVyRXZlbnR8fFwibWF4VG91Y2hQb2ludHNcImluIHQubmF2aWdhdG9yKSxwcmVmaXhlZFBvaW50ZXJFdmVudHM6ISF0Lm5hdmlnYXRvci5tc1BvaW50ZXJFbmFibGVkLHRyYW5zaXRpb246KG89bC5zdHlsZSxcInRyYW5zaXRpb25cImluIG98fFwid2Via2l0VHJhbnNpdGlvblwiaW4gb3x8XCJNb3pUcmFuc2l0aW9uXCJpbiBvKSx0cmFuc2Zvcm1zM2Q6dC5Nb2Rlcm5penImJiEwPT09dC5Nb2Rlcm5penIuY3NzdHJhbnNmb3JtczNkfHwobj1sLnN0eWxlLFwid2Via2l0UGVyc3BlY3RpdmVcImluIG58fFwiTW96UGVyc3BlY3RpdmVcImluIG58fFwiT1BlcnNwZWN0aXZlXCJpbiBufHxcIk1zUGVyc3BlY3RpdmVcImluIG58fFwicGVyc3BlY3RpdmVcImluIG4pLGZsZXhib3g6ZnVuY3Rpb24oKXtmb3IodmFyIGU9bC5zdHlsZSx0PVwiYWxpZ25JdGVtcyB3ZWJraXRBbGlnbkl0ZW1zIHdlYmtpdEJveEFsaWduIG1zRmxleEFsaWduIG1vekJveEFsaWduIHdlYmtpdEZsZXhEaXJlY3Rpb24gbXNGbGV4RGlyZWN0aW9uIG1vekJveERpcmVjdGlvbiBtb3pCb3hPcmllbnQgd2Via2l0Qm94RGlyZWN0aW9uIHdlYmtpdEJveE9yaWVudFwiLnNwbGl0KFwiIFwiKSxhPTA7YTx0Lmxlbmd0aDthKz0xKWlmKHRbYV1pbiBlKXJldHVybiEwO3JldHVybiExfSgpLG9ic2VydmVyOlwiTXV0YXRpb25PYnNlcnZlclwiaW4gdHx8XCJXZWJraXRNdXRhdGlvbk9ic2VydmVyXCJpbiB0LHBhc3NpdmVMaXN0ZW5lcjpmdW5jdGlvbigpe3ZhciBlPSExO3RyeXt2YXIgYT1PYmplY3QuZGVmaW5lUHJvcGVydHkoe30sXCJwYXNzaXZlXCIse2dldDpmdW5jdGlvbigpe2U9ITB9fSk7dC5hZGRFdmVudExpc3RlbmVyKFwidGVzdFBhc3NpdmVMaXN0ZW5lclwiLG51bGwsYSl9Y2F0Y2goZSl7fXJldHVybiBlfSgpLGdlc3R1cmVzOlwib25nZXN0dXJlc3RhcnRcImluIHR9KSxjPWZ1bmN0aW9uKGUpe3ZvaWQgMD09PWUmJihlPXt9KTt2YXIgdD10aGlzO3QucGFyYW1zPWUsdC5ldmVudHNMaXN0ZW5lcnM9e30sdC5wYXJhbXMmJnQucGFyYW1zLm9uJiZPYmplY3Qua2V5cyh0LnBhcmFtcy5vbikuZm9yRWFjaChmdW5jdGlvbihlKXt0Lm9uKGUsdC5wYXJhbXMub25bZV0pfSl9LHU9e2NvbXBvbmVudHM6e2NvbmZpZ3VyYWJsZTohMH19O2MucHJvdG90eXBlLm9uPWZ1bmN0aW9uKGUsdCxhKXt2YXIgaT10aGlzO2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQpcmV0dXJuIGk7dmFyIHM9YT9cInVuc2hpZnRcIjpcInB1c2hcIjtyZXR1cm4gZS5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihlKXtpLmV2ZW50c0xpc3RlbmVyc1tlXXx8KGkuZXZlbnRzTGlzdGVuZXJzW2VdPVtdKSxpLmV2ZW50c0xpc3RlbmVyc1tlXVtzXSh0KX0pLGl9LGMucHJvdG90eXBlLm9uY2U9ZnVuY3Rpb24oZSx0LGEpe3ZhciBpPXRoaXM7cmV0dXJuXCJmdW5jdGlvblwiIT10eXBlb2YgdD9pOmkub24oZSxmdW5jdGlvbiBhKCl7Zm9yKHZhciBzPVtdLHI9YXJndW1lbnRzLmxlbmd0aDtyLS07KXNbcl09YXJndW1lbnRzW3JdO3QuYXBwbHkoaSxzKSxpLm9mZihlLGEpfSxhKX0sYy5wcm90b3R5cGUub2ZmPWZ1bmN0aW9uKGUsdCl7dmFyIGE9dGhpcztyZXR1cm4gYS5ldmVudHNMaXN0ZW5lcnMmJmUuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oZSl7dm9pZCAwPT09dD9hLmV2ZW50c0xpc3RlbmVyc1tlXT1bXTphLmV2ZW50c0xpc3RlbmVyc1tlXSYmYS5ldmVudHNMaXN0ZW5lcnNbZV0ubGVuZ3RoJiZhLmV2ZW50c0xpc3RlbmVyc1tlXS5mb3JFYWNoKGZ1bmN0aW9uKGkscyl7aT09PXQmJmEuZXZlbnRzTGlzdGVuZXJzW2VdLnNwbGljZShzLDEpfSl9KSxhfSxjLnByb3RvdHlwZS5lbWl0PWZ1bmN0aW9uKCl7Zm9yKHZhciBlPVtdLHQ9YXJndW1lbnRzLmxlbmd0aDt0LS07KWVbdF09YXJndW1lbnRzW3RdO3ZhciBhLGkscyxyPXRoaXM7cmV0dXJuIHIuZXZlbnRzTGlzdGVuZXJzJiYoXCJzdHJpbmdcIj09dHlwZW9mIGVbMF18fEFycmF5LmlzQXJyYXkoZVswXSk/KGE9ZVswXSxpPWUuc2xpY2UoMSxlLmxlbmd0aCkscz1yKTooYT1lWzBdLmV2ZW50cyxpPWVbMF0uZGF0YSxzPWVbMF0uY29udGV4dHx8ciksKEFycmF5LmlzQXJyYXkoYSk/YTphLnNwbGl0KFwiIFwiKSkuZm9yRWFjaChmdW5jdGlvbihlKXtpZihyLmV2ZW50c0xpc3RlbmVycyYmci5ldmVudHNMaXN0ZW5lcnNbZV0pe3ZhciB0PVtdO3IuZXZlbnRzTGlzdGVuZXJzW2VdLmZvckVhY2goZnVuY3Rpb24oZSl7dC5wdXNoKGUpfSksdC5mb3JFYWNoKGZ1bmN0aW9uKGUpe2UuYXBwbHkocyxpKX0pfX0pKSxyfSxjLnByb3RvdHlwZS51c2VNb2R1bGVzUGFyYW1zPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7dC5tb2R1bGVzJiZPYmplY3Qua2V5cyh0Lm1vZHVsZXMpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGk9dC5tb2R1bGVzW2FdO2kucGFyYW1zJiZkLmV4dGVuZChlLGkucGFyYW1zKX0pfSxjLnByb3RvdHlwZS51c2VNb2R1bGVzPWZ1bmN0aW9uKGUpe3ZvaWQgMD09PWUmJihlPXt9KTt2YXIgdD10aGlzO3QubW9kdWxlcyYmT2JqZWN0LmtleXModC5tb2R1bGVzKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBpPXQubW9kdWxlc1thXSxzPWVbYV18fHt9O2kuaW5zdGFuY2UmJk9iamVjdC5rZXlzKGkuaW5zdGFuY2UpLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIGE9aS5pbnN0YW5jZVtlXTt0W2VdPVwiZnVuY3Rpb25cIj09dHlwZW9mIGE/YS5iaW5kKHQpOmF9KSxpLm9uJiZ0Lm9uJiZPYmplY3Qua2V5cyhpLm9uKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3Qub24oZSxpLm9uW2VdKX0pLGkuY3JlYXRlJiZpLmNyZWF0ZS5iaW5kKHQpKHMpfSl9LHUuY29tcG9uZW50cy5zZXQ9ZnVuY3Rpb24oZSl7dGhpcy51c2UmJnRoaXMudXNlKGUpfSxjLmluc3RhbGxNb2R1bGU9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PVtdLGE9YXJndW1lbnRzLmxlbmd0aC0xOzA8YS0tOyl0W2FdPWFyZ3VtZW50c1thKzFdO3ZhciBpPXRoaXM7aS5wcm90b3R5cGUubW9kdWxlc3x8KGkucHJvdG90eXBlLm1vZHVsZXM9e30pO3ZhciBzPWUubmFtZXx8T2JqZWN0LmtleXMoaS5wcm90b3R5cGUubW9kdWxlcykubGVuZ3RoK1wiX1wiK2Qubm93KCk7cmV0dXJuKGkucHJvdG90eXBlLm1vZHVsZXNbc109ZSkucHJvdG8mJk9iamVjdC5rZXlzKGUucHJvdG8pLmZvckVhY2goZnVuY3Rpb24odCl7aS5wcm90b3R5cGVbdF09ZS5wcm90b1t0XX0pLGUuc3RhdGljJiZPYmplY3Qua2V5cyhlLnN0YXRpYykuZm9yRWFjaChmdW5jdGlvbih0KXtpW3RdPWUuc3RhdGljW3RdfSksZS5pbnN0YWxsJiZlLmluc3RhbGwuYXBwbHkoaSx0KSxpfSxjLnVzZT1mdW5jdGlvbihlKXtmb3IodmFyIHQ9W10sYT1hcmd1bWVudHMubGVuZ3RoLTE7MDxhLS07KXRbYV09YXJndW1lbnRzW2ErMV07dmFyIGk9dGhpcztyZXR1cm4gQXJyYXkuaXNBcnJheShlKT8oZS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3JldHVybiBpLmluc3RhbGxNb2R1bGUoZSl9KSxpKTppLmluc3RhbGxNb2R1bGUuYXBwbHkoaSxbZV0uY29uY2F0KHQpKX0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoYyx1KTt2YXIgaD17dXBkYXRlU2l6ZTpmdW5jdGlvbigpe3ZhciBlLHQsYT10aGlzLGk9YS4kZWw7ZT12b2lkIDAhPT1hLnBhcmFtcy53aWR0aD9hLnBhcmFtcy53aWR0aDppWzBdLmNsaWVudFdpZHRoLHQ9dm9pZCAwIT09YS5wYXJhbXMuaGVpZ2h0P2EucGFyYW1zLmhlaWdodDppWzBdLmNsaWVudEhlaWdodCwwPT09ZSYmYS5pc0hvcml6b250YWwoKXx8MD09PXQmJmEuaXNWZXJ0aWNhbCgpfHwoZT1lLXBhcnNlSW50KGkuY3NzKFwicGFkZGluZy1sZWZ0XCIpLDEwKS1wYXJzZUludChpLmNzcyhcInBhZGRpbmctcmlnaHRcIiksMTApLHQ9dC1wYXJzZUludChpLmNzcyhcInBhZGRpbmctdG9wXCIpLDEwKS1wYXJzZUludChpLmNzcyhcInBhZGRpbmctYm90dG9tXCIpLDEwKSxkLmV4dGVuZChhLHt3aWR0aDplLGhlaWdodDp0LHNpemU6YS5pc0hvcml6b250YWwoKT9lOnR9KSl9LHVwZGF0ZVNsaWRlczpmdW5jdGlvbigpe3ZhciBlPXRoaXMsYT1lLnBhcmFtcyxpPWUuJHdyYXBwZXJFbCxzPWUuc2l6ZSxyPWUucnRsVHJhbnNsYXRlLG49ZS53cm9uZ1JUTCxvPWUudmlydHVhbCYmYS52aXJ0dWFsLmVuYWJsZWQsbD1vP2UudmlydHVhbC5zbGlkZXMubGVuZ3RoOmUuc2xpZGVzLmxlbmd0aCxjPWkuY2hpbGRyZW4oXCIuXCIrZS5wYXJhbXMuc2xpZGVDbGFzcyksdT1vP2UudmlydHVhbC5zbGlkZXMubGVuZ3RoOmMubGVuZ3RoLGg9W10sdj1bXSxmPVtdLG09YS5zbGlkZXNPZmZzZXRCZWZvcmU7XCJmdW5jdGlvblwiPT10eXBlb2YgbSYmKG09YS5zbGlkZXNPZmZzZXRCZWZvcmUuY2FsbChlKSk7dmFyIGc9YS5zbGlkZXNPZmZzZXRBZnRlcjtcImZ1bmN0aW9uXCI9PXR5cGVvZiBnJiYoZz1hLnNsaWRlc09mZnNldEFmdGVyLmNhbGwoZSkpO3ZhciBiPWUuc25hcEdyaWQubGVuZ3RoLHc9ZS5zbmFwR3JpZC5sZW5ndGgseT1hLnNwYWNlQmV0d2Vlbix4PS1tLFQ9MCxFPTA7aWYodm9pZCAwIT09cyl7dmFyIFMsQztcInN0cmluZ1wiPT10eXBlb2YgeSYmMDw9eS5pbmRleE9mKFwiJVwiKSYmKHk9cGFyc2VGbG9hdCh5LnJlcGxhY2UoXCIlXCIsXCJcIikpLzEwMCpzKSxlLnZpcnR1YWxTaXplPS15LHI/Yy5jc3Moe21hcmdpbkxlZnQ6XCJcIixtYXJnaW5Ub3A6XCJcIn0pOmMuY3NzKHttYXJnaW5SaWdodDpcIlwiLG1hcmdpbkJvdHRvbTpcIlwifSksMTxhLnNsaWRlc1BlckNvbHVtbiYmKFM9TWF0aC5mbG9vcih1L2Euc2xpZGVzUGVyQ29sdW1uKT09PXUvZS5wYXJhbXMuc2xpZGVzUGVyQ29sdW1uP3U6TWF0aC5jZWlsKHUvYS5zbGlkZXNQZXJDb2x1bW4pKmEuc2xpZGVzUGVyQ29sdW1uLFwiYXV0b1wiIT09YS5zbGlkZXNQZXJWaWV3JiZcInJvd1wiPT09YS5zbGlkZXNQZXJDb2x1bW5GaWxsJiYoUz1NYXRoLm1heChTLGEuc2xpZGVzUGVyVmlldyphLnNsaWRlc1BlckNvbHVtbikpKTtmb3IodmFyIE0saz1hLnNsaWRlc1BlckNvbHVtbixQPVMvayx6PU1hdGguZmxvb3IodS9hLnNsaWRlc1BlckNvbHVtbiksJD0wOyQ8dTskKz0xKXtDPTA7dmFyIEw9Yy5lcSgkKTtpZigxPGEuc2xpZGVzUGVyQ29sdW1uKXt2YXIgST12b2lkIDAsRD12b2lkIDAsTz12b2lkIDA7XCJjb2x1bW5cIj09PWEuc2xpZGVzUGVyQ29sdW1uRmlsbD8oTz0kLShEPU1hdGguZmxvb3IoJC9rKSkqaywoejxEfHxEPT09eiYmTz09PWstMSkmJms8PShPKz0xKSYmKE89MCxEKz0xKSxJPUQrTypTL2ssTC5jc3Moe1wiLXdlYmtpdC1ib3gtb3JkaW5hbC1ncm91cFwiOkksXCItbW96LWJveC1vcmRpbmFsLWdyb3VwXCI6SSxcIi1tcy1mbGV4LW9yZGVyXCI6SSxcIi13ZWJraXQtb3JkZXJcIjpJLG9yZGVyOkl9KSk6RD0kLShPPU1hdGguZmxvb3IoJC9QKSkqUCxMLmNzcyhcIm1hcmdpbi1cIisoZS5pc0hvcml6b250YWwoKT9cInRvcFwiOlwibGVmdFwiKSwwIT09TyYmYS5zcGFjZUJldHdlZW4mJmEuc3BhY2VCZXR3ZWVuK1wicHhcIikuYXR0cihcImRhdGEtc3dpcGVyLWNvbHVtblwiLEQpLmF0dHIoXCJkYXRhLXN3aXBlci1yb3dcIixPKX1pZihcIm5vbmVcIiE9PUwuY3NzKFwiZGlzcGxheVwiKSl7aWYoXCJhdXRvXCI9PT1hLnNsaWRlc1BlclZpZXcpe3ZhciBBPXQuZ2V0Q29tcHV0ZWRTdHlsZShMWzBdLG51bGwpLE49TFswXS5zdHlsZS50cmFuc2Zvcm0sSD1MWzBdLnN0eWxlLndlYmtpdFRyYW5zZm9ybTtpZihOJiYoTFswXS5zdHlsZS50cmFuc2Zvcm09XCJub25lXCIpLEgmJihMWzBdLnN0eWxlLndlYmtpdFRyYW5zZm9ybT1cIm5vbmVcIiksYS5yb3VuZExlbmd0aHMpQz1lLmlzSG9yaXpvbnRhbCgpP0wub3V0ZXJXaWR0aCghMCk6TC5vdXRlckhlaWdodCghMCk7ZWxzZSBpZihlLmlzSG9yaXpvbnRhbCgpKXt2YXIgRz1wYXJzZUZsb2F0KEEuZ2V0UHJvcGVydHlWYWx1ZShcIndpZHRoXCIpKSxCPXBhcnNlRmxvYXQoQS5nZXRQcm9wZXJ0eVZhbHVlKFwicGFkZGluZy1sZWZ0XCIpKSxYPXBhcnNlRmxvYXQoQS5nZXRQcm9wZXJ0eVZhbHVlKFwicGFkZGluZy1yaWdodFwiKSksWT1wYXJzZUZsb2F0KEEuZ2V0UHJvcGVydHlWYWx1ZShcIm1hcmdpbi1sZWZ0XCIpKSxWPXBhcnNlRmxvYXQoQS5nZXRQcm9wZXJ0eVZhbHVlKFwibWFyZ2luLXJpZ2h0XCIpKSxGPUEuZ2V0UHJvcGVydHlWYWx1ZShcImJveC1zaXppbmdcIik7Qz1GJiZcImJvcmRlci1ib3hcIj09PUY/RytZK1Y6RytCK1grWStWfWVsc2V7dmFyIFI9cGFyc2VGbG9hdChBLmdldFByb3BlcnR5VmFsdWUoXCJoZWlnaHRcIikpLHE9cGFyc2VGbG9hdChBLmdldFByb3BlcnR5VmFsdWUoXCJwYWRkaW5nLXRvcFwiKSksVz1wYXJzZUZsb2F0KEEuZ2V0UHJvcGVydHlWYWx1ZShcInBhZGRpbmctYm90dG9tXCIpKSxqPXBhcnNlRmxvYXQoQS5nZXRQcm9wZXJ0eVZhbHVlKFwibWFyZ2luLXRvcFwiKSksVT1wYXJzZUZsb2F0KEEuZ2V0UHJvcGVydHlWYWx1ZShcIm1hcmdpbi1ib3R0b21cIikpLEs9QS5nZXRQcm9wZXJ0eVZhbHVlKFwiYm94LXNpemluZ1wiKTtDPUsmJlwiYm9yZGVyLWJveFwiPT09Sz9SK2orVTpSK3ErVytqK1V9TiYmKExbMF0uc3R5bGUudHJhbnNmb3JtPU4pLEgmJihMWzBdLnN0eWxlLndlYmtpdFRyYW5zZm9ybT1IKSxhLnJvdW5kTGVuZ3RocyYmKEM9TWF0aC5mbG9vcihDKSl9ZWxzZSBDPShzLShhLnNsaWRlc1BlclZpZXctMSkqeSkvYS5zbGlkZXNQZXJWaWV3LGEucm91bmRMZW5ndGhzJiYoQz1NYXRoLmZsb29yKEMpKSxjWyRdJiYoZS5pc0hvcml6b250YWwoKT9jWyRdLnN0eWxlLndpZHRoPUMrXCJweFwiOmNbJF0uc3R5bGUuaGVpZ2h0PUMrXCJweFwiKTtjWyRdJiYoY1skXS5zd2lwZXJTbGlkZVNpemU9QyksZi5wdXNoKEMpLGEuY2VudGVyZWRTbGlkZXM/KHg9eCtDLzIrVC8yK3ksMD09PVQmJjAhPT0kJiYoeD14LXMvMi15KSwwPT09JCYmKHg9eC1zLzIteSksTWF0aC5hYnMoeCk8LjAwMSYmKHg9MCksYS5yb3VuZExlbmd0aHMmJih4PU1hdGguZmxvb3IoeCkpLEUlYS5zbGlkZXNQZXJHcm91cD09MCYmaC5wdXNoKHgpLHYucHVzaCh4KSk6KGEucm91bmRMZW5ndGhzJiYoeD1NYXRoLmZsb29yKHgpKSxFJWEuc2xpZGVzUGVyR3JvdXA9PTAmJmgucHVzaCh4KSx2LnB1c2goeCkseD14K0MreSksZS52aXJ0dWFsU2l6ZSs9Qyt5LFQ9QyxFKz0xfX1pZihlLnZpcnR1YWxTaXplPU1hdGgubWF4KGUudmlydHVhbFNpemUscykrZyxyJiZuJiYoXCJzbGlkZVwiPT09YS5lZmZlY3R8fFwiY292ZXJmbG93XCI9PT1hLmVmZmVjdCkmJmkuY3NzKHt3aWR0aDplLnZpcnR1YWxTaXplK2Euc3BhY2VCZXR3ZWVuK1wicHhcIn0pLHAuZmxleGJveCYmIWEuc2V0V3JhcHBlclNpemV8fChlLmlzSG9yaXpvbnRhbCgpP2kuY3NzKHt3aWR0aDplLnZpcnR1YWxTaXplK2Euc3BhY2VCZXR3ZWVuK1wicHhcIn0pOmkuY3NzKHtoZWlnaHQ6ZS52aXJ0dWFsU2l6ZSthLnNwYWNlQmV0d2VlbitcInB4XCJ9KSksMTxhLnNsaWRlc1BlckNvbHVtbiYmKGUudmlydHVhbFNpemU9KEMrYS5zcGFjZUJldHdlZW4pKlMsZS52aXJ0dWFsU2l6ZT1NYXRoLmNlaWwoZS52aXJ0dWFsU2l6ZS9hLnNsaWRlc1BlckNvbHVtbiktYS5zcGFjZUJldHdlZW4sZS5pc0hvcml6b250YWwoKT9pLmNzcyh7d2lkdGg6ZS52aXJ0dWFsU2l6ZSthLnNwYWNlQmV0d2VlbitcInB4XCJ9KTppLmNzcyh7aGVpZ2h0OmUudmlydHVhbFNpemUrYS5zcGFjZUJldHdlZW4rXCJweFwifSksYS5jZW50ZXJlZFNsaWRlcykpe009W107Zm9yKHZhciBfPTA7XzxoLmxlbmd0aDtfKz0xKXt2YXIgWj1oW19dO2Eucm91bmRMZW5ndGhzJiYoWj1NYXRoLmZsb29yKFopKSxoW19dPGUudmlydHVhbFNpemUraFswXSYmTS5wdXNoKFopfWg9TX1pZighYS5jZW50ZXJlZFNsaWRlcyl7TT1bXTtmb3IodmFyIFE9MDtRPGgubGVuZ3RoO1ErPTEpe3ZhciBKPWhbUV07YS5yb3VuZExlbmd0aHMmJihKPU1hdGguZmxvb3IoSikpLGhbUV08PWUudmlydHVhbFNpemUtcyYmTS5wdXNoKEopfWg9TSwxPE1hdGguZmxvb3IoZS52aXJ0dWFsU2l6ZS1zKS1NYXRoLmZsb29yKGhbaC5sZW5ndGgtMV0pJiZoLnB1c2goZS52aXJ0dWFsU2l6ZS1zKX1pZigwPT09aC5sZW5ndGgmJihoPVswXSksMCE9PWEuc3BhY2VCZXR3ZWVuJiYoZS5pc0hvcml6b250YWwoKT9yP2MuY3NzKHttYXJnaW5MZWZ0OnkrXCJweFwifSk6Yy5jc3Moe21hcmdpblJpZ2h0OnkrXCJweFwifSk6Yy5jc3Moe21hcmdpbkJvdHRvbTp5K1wicHhcIn0pKSxhLmNlbnRlckluc3VmZmljaWVudFNsaWRlcyl7dmFyIGVlPTA7aWYoZi5mb3JFYWNoKGZ1bmN0aW9uKGUpe2VlKz1lKyhhLnNwYWNlQmV0d2Vlbj9hLnNwYWNlQmV0d2VlbjowKX0pLChlZS09YS5zcGFjZUJldHdlZW4pPHMpe3ZhciB0ZT0ocy1lZSkvMjtoLmZvckVhY2goZnVuY3Rpb24oZSx0KXtoW3RdPWUtdGV9KSx2LmZvckVhY2goZnVuY3Rpb24oZSx0KXt2W3RdPWUrdGV9KX19ZC5leHRlbmQoZSx7c2xpZGVzOmMsc25hcEdyaWQ6aCxzbGlkZXNHcmlkOnYsc2xpZGVzU2l6ZXNHcmlkOmZ9KSx1IT09bCYmZS5lbWl0KFwic2xpZGVzTGVuZ3RoQ2hhbmdlXCIpLGgubGVuZ3RoIT09YiYmKGUucGFyYW1zLndhdGNoT3ZlcmZsb3cmJmUuY2hlY2tPdmVyZmxvdygpLGUuZW1pdChcInNuYXBHcmlkTGVuZ3RoQ2hhbmdlXCIpKSx2Lmxlbmd0aCE9PXcmJmUuZW1pdChcInNsaWRlc0dyaWRMZW5ndGhDaGFuZ2VcIiksKGEud2F0Y2hTbGlkZXNQcm9ncmVzc3x8YS53YXRjaFNsaWRlc1Zpc2liaWxpdHkpJiZlLnVwZGF0ZVNsaWRlc09mZnNldCgpfX0sdXBkYXRlQXV0b0hlaWdodDpmdW5jdGlvbihlKXt2YXIgdCxhPXRoaXMsaT1bXSxzPTA7aWYoXCJudW1iZXJcIj09dHlwZW9mIGU/YS5zZXRUcmFuc2l0aW9uKGUpOiEwPT09ZSYmYS5zZXRUcmFuc2l0aW9uKGEucGFyYW1zLnNwZWVkKSxcImF1dG9cIiE9PWEucGFyYW1zLnNsaWRlc1BlclZpZXcmJjE8YS5wYXJhbXMuc2xpZGVzUGVyVmlldylmb3IodD0wO3Q8TWF0aC5jZWlsKGEucGFyYW1zLnNsaWRlc1BlclZpZXcpO3QrPTEpe3ZhciByPWEuYWN0aXZlSW5kZXgrdDtpZihyPmEuc2xpZGVzLmxlbmd0aClicmVhaztpLnB1c2goYS5zbGlkZXMuZXEocilbMF0pfWVsc2UgaS5wdXNoKGEuc2xpZGVzLmVxKGEuYWN0aXZlSW5kZXgpWzBdKTtmb3IodD0wO3Q8aS5sZW5ndGg7dCs9MSlpZih2b2lkIDAhPT1pW3RdKXt2YXIgbj1pW3RdLm9mZnNldEhlaWdodDtzPXM8bj9uOnN9cyYmYS4kd3JhcHBlckVsLmNzcyhcImhlaWdodFwiLHMrXCJweFwiKX0sdXBkYXRlU2xpZGVzT2Zmc2V0OmZ1bmN0aW9uKCl7Zm9yKHZhciBlPXRoaXMuc2xpZGVzLHQ9MDt0PGUubGVuZ3RoO3QrPTEpZVt0XS5zd2lwZXJTbGlkZU9mZnNldD10aGlzLmlzSG9yaXpvbnRhbCgpP2VbdF0ub2Zmc2V0TGVmdDplW3RdLm9mZnNldFRvcH0sdXBkYXRlU2xpZGVzUHJvZ3Jlc3M6ZnVuY3Rpb24oZSl7dm9pZCAwPT09ZSYmKGU9dGhpcyYmdGhpcy50cmFuc2xhdGV8fDApO3ZhciB0PXRoaXMsYT10LnBhcmFtcyxzPXQuc2xpZGVzLHI9dC5ydGxUcmFuc2xhdGU7aWYoMCE9PXMubGVuZ3RoKXt2b2lkIDA9PT1zWzBdLnN3aXBlclNsaWRlT2Zmc2V0JiZ0LnVwZGF0ZVNsaWRlc09mZnNldCgpO3ZhciBuPS1lO3ImJihuPWUpLHMucmVtb3ZlQ2xhc3MoYS5zbGlkZVZpc2libGVDbGFzcyksdC52aXNpYmxlU2xpZGVzSW5kZXhlcz1bXSx0LnZpc2libGVTbGlkZXM9W107Zm9yKHZhciBvPTA7bzxzLmxlbmd0aDtvKz0xKXt2YXIgbD1zW29dLGQ9KG4rKGEuY2VudGVyZWRTbGlkZXM/dC5taW5UcmFuc2xhdGUoKTowKS1sLnN3aXBlclNsaWRlT2Zmc2V0KS8obC5zd2lwZXJTbGlkZVNpemUrYS5zcGFjZUJldHdlZW4pO2lmKGEud2F0Y2hTbGlkZXNWaXNpYmlsaXR5KXt2YXIgcD0tKG4tbC5zd2lwZXJTbGlkZU9mZnNldCksYz1wK3Quc2xpZGVzU2l6ZXNHcmlkW29dOygwPD1wJiZwPHQuc2l6ZXx8MDxjJiZjPD10LnNpemV8fHA8PTAmJmM+PXQuc2l6ZSkmJih0LnZpc2libGVTbGlkZXMucHVzaChsKSx0LnZpc2libGVTbGlkZXNJbmRleGVzLnB1c2gobykscy5lcShvKS5hZGRDbGFzcyhhLnNsaWRlVmlzaWJsZUNsYXNzKSl9bC5wcm9ncmVzcz1yPy1kOmR9dC52aXNpYmxlU2xpZGVzPWkodC52aXNpYmxlU2xpZGVzKX19LHVwZGF0ZVByb2dyZXNzOmZ1bmN0aW9uKGUpe3ZvaWQgMD09PWUmJihlPXRoaXMmJnRoaXMudHJhbnNsYXRlfHwwKTt2YXIgdD10aGlzLGE9dC5wYXJhbXMsaT10Lm1heFRyYW5zbGF0ZSgpLXQubWluVHJhbnNsYXRlKCkscz10LnByb2dyZXNzLHI9dC5pc0JlZ2lubmluZyxuPXQuaXNFbmQsbz1yLGw9bjswPT09aT9uPXI9IShzPTApOihyPShzPShlLXQubWluVHJhbnNsYXRlKCkpL2kpPD0wLG49MTw9cyksZC5leHRlbmQodCx7cHJvZ3Jlc3M6cyxpc0JlZ2lubmluZzpyLGlzRW5kOm59KSwoYS53YXRjaFNsaWRlc1Byb2dyZXNzfHxhLndhdGNoU2xpZGVzVmlzaWJpbGl0eSkmJnQudXBkYXRlU2xpZGVzUHJvZ3Jlc3MoZSksciYmIW8mJnQuZW1pdChcInJlYWNoQmVnaW5uaW5nIHRvRWRnZVwiKSxuJiYhbCYmdC5lbWl0KFwicmVhY2hFbmQgdG9FZGdlXCIpLChvJiYhcnx8bCYmIW4pJiZ0LmVtaXQoXCJmcm9tRWRnZVwiKSx0LmVtaXQoXCJwcm9ncmVzc1wiLHMpfSx1cGRhdGVTbGlkZXNDbGFzc2VzOmZ1bmN0aW9uKCl7dmFyIGUsdD10aGlzLGE9dC5zbGlkZXMsaT10LnBhcmFtcyxzPXQuJHdyYXBwZXJFbCxyPXQuYWN0aXZlSW5kZXgsbj10LnJlYWxJbmRleCxvPXQudmlydHVhbCYmaS52aXJ0dWFsLmVuYWJsZWQ7YS5yZW1vdmVDbGFzcyhpLnNsaWRlQWN0aXZlQ2xhc3MrXCIgXCIraS5zbGlkZU5leHRDbGFzcytcIiBcIitpLnNsaWRlUHJldkNsYXNzK1wiIFwiK2kuc2xpZGVEdXBsaWNhdGVBY3RpdmVDbGFzcytcIiBcIitpLnNsaWRlRHVwbGljYXRlTmV4dENsYXNzK1wiIFwiK2kuc2xpZGVEdXBsaWNhdGVQcmV2Q2xhc3MpLChlPW8/dC4kd3JhcHBlckVsLmZpbmQoXCIuXCIraS5zbGlkZUNsYXNzKydbZGF0YS1zd2lwZXItc2xpZGUtaW5kZXg9XCInK3IrJ1wiXScpOmEuZXEocikpLmFkZENsYXNzKGkuc2xpZGVBY3RpdmVDbGFzcyksaS5sb29wJiYoZS5oYXNDbGFzcyhpLnNsaWRlRHVwbGljYXRlQ2xhc3MpP3MuY2hpbGRyZW4oXCIuXCIraS5zbGlkZUNsYXNzK1wiOm5vdCguXCIraS5zbGlkZUR1cGxpY2F0ZUNsYXNzKycpW2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4PVwiJytuKydcIl0nKS5hZGRDbGFzcyhpLnNsaWRlRHVwbGljYXRlQWN0aXZlQ2xhc3MpOnMuY2hpbGRyZW4oXCIuXCIraS5zbGlkZUNsYXNzK1wiLlwiK2kuc2xpZGVEdXBsaWNhdGVDbGFzcysnW2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4PVwiJytuKydcIl0nKS5hZGRDbGFzcyhpLnNsaWRlRHVwbGljYXRlQWN0aXZlQ2xhc3MpKTt2YXIgbD1lLm5leHRBbGwoXCIuXCIraS5zbGlkZUNsYXNzKS5lcSgwKS5hZGRDbGFzcyhpLnNsaWRlTmV4dENsYXNzKTtpLmxvb3AmJjA9PT1sLmxlbmd0aCYmKGw9YS5lcSgwKSkuYWRkQ2xhc3MoaS5zbGlkZU5leHRDbGFzcyk7dmFyIGQ9ZS5wcmV2QWxsKFwiLlwiK2kuc2xpZGVDbGFzcykuZXEoMCkuYWRkQ2xhc3MoaS5zbGlkZVByZXZDbGFzcyk7aS5sb29wJiYwPT09ZC5sZW5ndGgmJihkPWEuZXEoLTEpKS5hZGRDbGFzcyhpLnNsaWRlUHJldkNsYXNzKSxpLmxvb3AmJihsLmhhc0NsYXNzKGkuc2xpZGVEdXBsaWNhdGVDbGFzcyk/cy5jaGlsZHJlbihcIi5cIitpLnNsaWRlQ2xhc3MrXCI6bm90KC5cIitpLnNsaWRlRHVwbGljYXRlQ2xhc3MrJylbZGF0YS1zd2lwZXItc2xpZGUtaW5kZXg9XCInK2wuYXR0cihcImRhdGEtc3dpcGVyLXNsaWRlLWluZGV4XCIpKydcIl0nKS5hZGRDbGFzcyhpLnNsaWRlRHVwbGljYXRlTmV4dENsYXNzKTpzLmNoaWxkcmVuKFwiLlwiK2kuc2xpZGVDbGFzcytcIi5cIitpLnNsaWRlRHVwbGljYXRlQ2xhc3MrJ1tkYXRhLXN3aXBlci1zbGlkZS1pbmRleD1cIicrbC5hdHRyKFwiZGF0YS1zd2lwZXItc2xpZGUtaW5kZXhcIikrJ1wiXScpLmFkZENsYXNzKGkuc2xpZGVEdXBsaWNhdGVOZXh0Q2xhc3MpLGQuaGFzQ2xhc3MoaS5zbGlkZUR1cGxpY2F0ZUNsYXNzKT9zLmNoaWxkcmVuKFwiLlwiK2kuc2xpZGVDbGFzcytcIjpub3QoLlwiK2kuc2xpZGVEdXBsaWNhdGVDbGFzcysnKVtkYXRhLXN3aXBlci1zbGlkZS1pbmRleD1cIicrZC5hdHRyKFwiZGF0YS1zd2lwZXItc2xpZGUtaW5kZXhcIikrJ1wiXScpLmFkZENsYXNzKGkuc2xpZGVEdXBsaWNhdGVQcmV2Q2xhc3MpOnMuY2hpbGRyZW4oXCIuXCIraS5zbGlkZUNsYXNzK1wiLlwiK2kuc2xpZGVEdXBsaWNhdGVDbGFzcysnW2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4PVwiJytkLmF0dHIoXCJkYXRhLXN3aXBlci1zbGlkZS1pbmRleFwiKSsnXCJdJykuYWRkQ2xhc3MoaS5zbGlkZUR1cGxpY2F0ZVByZXZDbGFzcykpfSx1cGRhdGVBY3RpdmVJbmRleDpmdW5jdGlvbihlKXt2YXIgdCxhPXRoaXMsaT1hLnJ0bFRyYW5zbGF0ZT9hLnRyYW5zbGF0ZTotYS50cmFuc2xhdGUscz1hLnNsaWRlc0dyaWQscj1hLnNuYXBHcmlkLG49YS5wYXJhbXMsbz1hLmFjdGl2ZUluZGV4LGw9YS5yZWFsSW5kZXgscD1hLnNuYXBJbmRleCxjPWU7aWYodm9pZCAwPT09Yyl7Zm9yKHZhciB1PTA7dTxzLmxlbmd0aDt1Kz0xKXZvaWQgMCE9PXNbdSsxXT9pPj1zW3VdJiZpPHNbdSsxXS0oc1t1KzFdLXNbdV0pLzI/Yz11Omk+PXNbdV0mJmk8c1t1KzFdJiYoYz11KzEpOmk+PXNbdV0mJihjPXUpO24ubm9ybWFsaXplU2xpZGVJbmRleCYmKGM8MHx8dm9pZCAwPT09YykmJihjPTApfWlmKCh0PTA8PXIuaW5kZXhPZihpKT9yLmluZGV4T2YoaSk6TWF0aC5mbG9vcihjL24uc2xpZGVzUGVyR3JvdXApKT49ci5sZW5ndGgmJih0PXIubGVuZ3RoLTEpLGMhPT1vKXt2YXIgaD1wYXJzZUludChhLnNsaWRlcy5lcShjKS5hdHRyKFwiZGF0YS1zd2lwZXItc2xpZGUtaW5kZXhcIil8fGMsMTApO2QuZXh0ZW5kKGEse3NuYXBJbmRleDp0LHJlYWxJbmRleDpoLHByZXZpb3VzSW5kZXg6byxhY3RpdmVJbmRleDpjfSksYS5lbWl0KFwiYWN0aXZlSW5kZXhDaGFuZ2VcIiksYS5lbWl0KFwic25hcEluZGV4Q2hhbmdlXCIpLGwhPT1oJiZhLmVtaXQoXCJyZWFsSW5kZXhDaGFuZ2VcIiksYS5lbWl0KFwic2xpZGVDaGFuZ2VcIil9ZWxzZSB0IT09cCYmKGEuc25hcEluZGV4PXQsYS5lbWl0KFwic25hcEluZGV4Q2hhbmdlXCIpKX0sdXBkYXRlQ2xpY2tlZFNsaWRlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMsYT10LnBhcmFtcyxzPWkoZS50YXJnZXQpLmNsb3Nlc3QoXCIuXCIrYS5zbGlkZUNsYXNzKVswXSxyPSExO2lmKHMpZm9yKHZhciBuPTA7bjx0LnNsaWRlcy5sZW5ndGg7bis9MSl0LnNsaWRlc1tuXT09PXMmJihyPSEwKTtpZighc3x8IXIpcmV0dXJuIHQuY2xpY2tlZFNsaWRlPXZvaWQgMCx2b2lkKHQuY2xpY2tlZEluZGV4PXZvaWQgMCk7dC5jbGlja2VkU2xpZGU9cyx0LnZpcnR1YWwmJnQucGFyYW1zLnZpcnR1YWwuZW5hYmxlZD90LmNsaWNrZWRJbmRleD1wYXJzZUludChpKHMpLmF0dHIoXCJkYXRhLXN3aXBlci1zbGlkZS1pbmRleFwiKSwxMCk6dC5jbGlja2VkSW5kZXg9aShzKS5pbmRleCgpLGEuc2xpZGVUb0NsaWNrZWRTbGlkZSYmdm9pZCAwIT09dC5jbGlja2VkSW5kZXgmJnQuY2xpY2tlZEluZGV4IT09dC5hY3RpdmVJbmRleCYmdC5zbGlkZVRvQ2xpY2tlZFNsaWRlKCl9fSx2PXtnZXRUcmFuc2xhdGU6ZnVuY3Rpb24oZSl7dm9pZCAwPT09ZSYmKGU9dGhpcy5pc0hvcml6b250YWwoKT9cInhcIjpcInlcIik7dmFyIHQ9dGhpcy5wYXJhbXMsYT10aGlzLnJ0bFRyYW5zbGF0ZSxpPXRoaXMudHJhbnNsYXRlLHM9dGhpcy4kd3JhcHBlckVsO2lmKHQudmlydHVhbFRyYW5zbGF0ZSlyZXR1cm4gYT8taTppO3ZhciByPWQuZ2V0VHJhbnNsYXRlKHNbMF0sZSk7cmV0dXJuIGEmJihyPS1yKSxyfHwwfSxzZXRUcmFuc2xhdGU6ZnVuY3Rpb24oZSx0KXt2YXIgYT10aGlzLGk9YS5ydGxUcmFuc2xhdGUscz1hLnBhcmFtcyxyPWEuJHdyYXBwZXJFbCxuPWEucHJvZ3Jlc3Msbz0wLGw9MDthLmlzSG9yaXpvbnRhbCgpP289aT8tZTplOmw9ZSxzLnJvdW5kTGVuZ3RocyYmKG89TWF0aC5mbG9vcihvKSxsPU1hdGguZmxvb3IobCkpLHMudmlydHVhbFRyYW5zbGF0ZXx8KHAudHJhbnNmb3JtczNkLHIudHJhbnNmb3JtKFwidHJhbnNsYXRlKFwiK28rXCJweCwgXCIrbCtcInB4KVwiKSksYS5wcmV2aW91c1RyYW5zbGF0ZT1hLnRyYW5zbGF0ZSxhLnRyYW5zbGF0ZT1hLmlzSG9yaXpvbnRhbCgpP286bDt2YXIgZD1hLm1heFRyYW5zbGF0ZSgpLWEubWluVHJhbnNsYXRlKCk7KDA9PT1kPzA6KGUtYS5taW5UcmFuc2xhdGUoKSkvZCkhPT1uJiZhLnVwZGF0ZVByb2dyZXNzKGUpLGEuZW1pdChcInNldFRyYW5zbGF0ZVwiLGEudHJhbnNsYXRlLHQpfSxtaW5UcmFuc2xhdGU6ZnVuY3Rpb24oKXtyZXR1cm4tdGhpcy5zbmFwR3JpZFswXX0sbWF4VHJhbnNsYXRlOmZ1bmN0aW9uKCl7cmV0dXJuLXRoaXMuc25hcEdyaWRbdGhpcy5zbmFwR3JpZC5sZW5ndGgtMV19fSxmPXtzbGlkZVRvOmZ1bmN0aW9uKGUsdCxhLGkpe3ZvaWQgMD09PWUmJihlPTApLHZvaWQgMD09PXQmJih0PXRoaXMucGFyYW1zLnNwZWVkKSx2b2lkIDA9PT1hJiYoYT0hMCk7dmFyIHM9dGhpcyxyPWU7cjwwJiYocj0wKTt2YXIgbj1zLnBhcmFtcyxvPXMuc25hcEdyaWQsbD1zLnNsaWRlc0dyaWQsZD1zLnByZXZpb3VzSW5kZXgsYz1zLmFjdGl2ZUluZGV4LHU9cy5ydGxUcmFuc2xhdGU7aWYocy5hbmltYXRpbmcmJm4ucHJldmVudEludGVyYWN0aW9uT25UcmFuc2l0aW9uKXJldHVybiExO3ZhciBoPU1hdGguZmxvb3Ioci9uLnNsaWRlc1Blckdyb3VwKTtoPj1vLmxlbmd0aCYmKGg9by5sZW5ndGgtMSksKGN8fG4uaW5pdGlhbFNsaWRlfHwwKT09PShkfHwwKSYmYSYmcy5lbWl0KFwiYmVmb3JlU2xpZGVDaGFuZ2VTdGFydFwiKTt2YXIgdixmPS1vW2hdO2lmKHMudXBkYXRlUHJvZ3Jlc3MoZiksbi5ub3JtYWxpemVTbGlkZUluZGV4KWZvcih2YXIgbT0wO208bC5sZW5ndGg7bSs9MSktTWF0aC5mbG9vcigxMDAqZik+PU1hdGguZmxvb3IoMTAwKmxbbV0pJiYocj1tKTtpZihzLmluaXRpYWxpemVkJiZyIT09Yyl7aWYoIXMuYWxsb3dTbGlkZU5leHQmJmY8cy50cmFuc2xhdGUmJmY8cy5taW5UcmFuc2xhdGUoKSlyZXR1cm4hMTtpZighcy5hbGxvd1NsaWRlUHJldiYmZj5zLnRyYW5zbGF0ZSYmZj5zLm1heFRyYW5zbGF0ZSgpJiYoY3x8MCkhPT1yKXJldHVybiExfXJldHVybiB2PWM8cj9cIm5leHRcIjpyPGM/XCJwcmV2XCI6XCJyZXNldFwiLHUmJi1mPT09cy50cmFuc2xhdGV8fCF1JiZmPT09cy50cmFuc2xhdGU/KHMudXBkYXRlQWN0aXZlSW5kZXgociksbi5hdXRvSGVpZ2h0JiZzLnVwZGF0ZUF1dG9IZWlnaHQoKSxzLnVwZGF0ZVNsaWRlc0NsYXNzZXMoKSxcInNsaWRlXCIhPT1uLmVmZmVjdCYmcy5zZXRUcmFuc2xhdGUoZiksXCJyZXNldFwiIT09diYmKHMudHJhbnNpdGlvblN0YXJ0KGEsdikscy50cmFuc2l0aW9uRW5kKGEsdikpLCExKTooMCE9PXQmJnAudHJhbnNpdGlvbj8ocy5zZXRUcmFuc2l0aW9uKHQpLHMuc2V0VHJhbnNsYXRlKGYpLHMudXBkYXRlQWN0aXZlSW5kZXgocikscy51cGRhdGVTbGlkZXNDbGFzc2VzKCkscy5lbWl0KFwiYmVmb3JlVHJhbnNpdGlvblN0YXJ0XCIsdCxpKSxzLnRyYW5zaXRpb25TdGFydChhLHYpLHMuYW5pbWF0aW5nfHwocy5hbmltYXRpbmc9ITAscy5vblNsaWRlVG9XcmFwcGVyVHJhbnNpdGlvbkVuZHx8KHMub25TbGlkZVRvV3JhcHBlclRyYW5zaXRpb25FbmQ9ZnVuY3Rpb24oZSl7cyYmIXMuZGVzdHJveWVkJiZlLnRhcmdldD09PXRoaXMmJihzLiR3cmFwcGVyRWxbMF0ucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRyYW5zaXRpb25lbmRcIixzLm9uU2xpZGVUb1dyYXBwZXJUcmFuc2l0aW9uRW5kKSxzLiR3cmFwcGVyRWxbMF0ucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIndlYmtpdFRyYW5zaXRpb25FbmRcIixzLm9uU2xpZGVUb1dyYXBwZXJUcmFuc2l0aW9uRW5kKSxzLm9uU2xpZGVUb1dyYXBwZXJUcmFuc2l0aW9uRW5kPW51bGwsZGVsZXRlIHMub25TbGlkZVRvV3JhcHBlclRyYW5zaXRpb25FbmQscy50cmFuc2l0aW9uRW5kKGEsdikpfSkscy4kd3JhcHBlckVsWzBdLmFkZEV2ZW50TGlzdGVuZXIoXCJ0cmFuc2l0aW9uZW5kXCIscy5vblNsaWRlVG9XcmFwcGVyVHJhbnNpdGlvbkVuZCkscy4kd3JhcHBlckVsWzBdLmFkZEV2ZW50TGlzdGVuZXIoXCJ3ZWJraXRUcmFuc2l0aW9uRW5kXCIscy5vblNsaWRlVG9XcmFwcGVyVHJhbnNpdGlvbkVuZCkpKToocy5zZXRUcmFuc2l0aW9uKDApLHMuc2V0VHJhbnNsYXRlKGYpLHMudXBkYXRlQWN0aXZlSW5kZXgocikscy51cGRhdGVTbGlkZXNDbGFzc2VzKCkscy5lbWl0KFwiYmVmb3JlVHJhbnNpdGlvblN0YXJ0XCIsdCxpKSxzLnRyYW5zaXRpb25TdGFydChhLHYpLHMudHJhbnNpdGlvbkVuZChhLHYpKSwhMCl9LHNsaWRlVG9Mb29wOmZ1bmN0aW9uKGUsdCxhLGkpe3ZvaWQgMD09PWUmJihlPTApLHZvaWQgMD09PXQmJih0PXRoaXMucGFyYW1zLnNwZWVkKSx2b2lkIDA9PT1hJiYoYT0hMCk7dmFyIHM9ZTtyZXR1cm4gdGhpcy5wYXJhbXMubG9vcCYmKHMrPXRoaXMubG9vcGVkU2xpZGVzKSx0aGlzLnNsaWRlVG8ocyx0LGEsaSl9LHNsaWRlTmV4dDpmdW5jdGlvbihlLHQsYSl7dm9pZCAwPT09ZSYmKGU9dGhpcy5wYXJhbXMuc3BlZWQpLHZvaWQgMD09PXQmJih0PSEwKTt2YXIgaT10aGlzLHM9aS5wYXJhbXMscj1pLmFuaW1hdGluZztyZXR1cm4gcy5sb29wPyFyJiYoaS5sb29wRml4KCksaS5fY2xpZW50TGVmdD1pLiR3cmFwcGVyRWxbMF0uY2xpZW50TGVmdCxpLnNsaWRlVG8oaS5hY3RpdmVJbmRleCtzLnNsaWRlc1Blckdyb3VwLGUsdCxhKSk6aS5zbGlkZVRvKGkuYWN0aXZlSW5kZXgrcy5zbGlkZXNQZXJHcm91cCxlLHQsYSl9LHNsaWRlUHJldjpmdW5jdGlvbihlLHQsYSl7dm9pZCAwPT09ZSYmKGU9dGhpcy5wYXJhbXMuc3BlZWQpLHZvaWQgMD09PXQmJih0PSEwKTt2YXIgaT10aGlzLHM9aS5wYXJhbXMscj1pLmFuaW1hdGluZyxuPWkuc25hcEdyaWQsbz1pLnNsaWRlc0dyaWQsbD1pLnJ0bFRyYW5zbGF0ZTtpZihzLmxvb3Ape2lmKHIpcmV0dXJuITE7aS5sb29wRml4KCksaS5fY2xpZW50TGVmdD1pLiR3cmFwcGVyRWxbMF0uY2xpZW50TGVmdH1mdW5jdGlvbiBkKGUpe3JldHVybiBlPDA/LU1hdGguZmxvb3IoTWF0aC5hYnMoZSkpOk1hdGguZmxvb3IoZSl9dmFyIHAsYz1kKGw/aS50cmFuc2xhdGU6LWkudHJhbnNsYXRlKSx1PW4ubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBkKGUpfSksaD0oby5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIGQoZSl9KSxuW3UuaW5kZXhPZihjKV0sblt1LmluZGV4T2YoYyktMV0pO3JldHVybiB2b2lkIDAhPT1oJiYocD1vLmluZGV4T2YoaCkpPDAmJihwPWkuYWN0aXZlSW5kZXgtMSksaS5zbGlkZVRvKHAsZSx0LGEpfSxzbGlkZVJlc2V0OmZ1bmN0aW9uKGUsdCxhKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9dGhpcy5wYXJhbXMuc3BlZWQpLHZvaWQgMD09PXQmJih0PSEwKSx0aGlzLnNsaWRlVG8odGhpcy5hY3RpdmVJbmRleCxlLHQsYSl9LHNsaWRlVG9DbG9zZXN0OmZ1bmN0aW9uKGUsdCxhKXt2b2lkIDA9PT1lJiYoZT10aGlzLnBhcmFtcy5zcGVlZCksdm9pZCAwPT09dCYmKHQ9ITApO3ZhciBpPXRoaXMscz1pLmFjdGl2ZUluZGV4LHI9TWF0aC5mbG9vcihzL2kucGFyYW1zLnNsaWRlc1Blckdyb3VwKTtpZihyPGkuc25hcEdyaWQubGVuZ3RoLTEpe3ZhciBuPWkucnRsVHJhbnNsYXRlP2kudHJhbnNsYXRlOi1pLnRyYW5zbGF0ZSxvPWkuc25hcEdyaWRbcl07KGkuc25hcEdyaWRbcisxXS1vKS8yPG4tbyYmKHM9aS5wYXJhbXMuc2xpZGVzUGVyR3JvdXApfXJldHVybiBpLnNsaWRlVG8ocyxlLHQsYSl9LHNsaWRlVG9DbGlja2VkU2xpZGU6ZnVuY3Rpb24oKXt2YXIgZSx0PXRoaXMsYT10LnBhcmFtcyxzPXQuJHdyYXBwZXJFbCxyPVwiYXV0b1wiPT09YS5zbGlkZXNQZXJWaWV3P3Quc2xpZGVzUGVyVmlld0R5bmFtaWMoKTphLnNsaWRlc1BlclZpZXcsbj10LmNsaWNrZWRJbmRleDtpZihhLmxvb3Ape2lmKHQuYW5pbWF0aW5nKXJldHVybjtlPXBhcnNlSW50KGkodC5jbGlja2VkU2xpZGUpLmF0dHIoXCJkYXRhLXN3aXBlci1zbGlkZS1pbmRleFwiKSwxMCksYS5jZW50ZXJlZFNsaWRlcz9uPHQubG9vcGVkU2xpZGVzLXIvMnx8bj50LnNsaWRlcy5sZW5ndGgtdC5sb29wZWRTbGlkZXMrci8yPyh0Lmxvb3BGaXgoKSxuPXMuY2hpbGRyZW4oXCIuXCIrYS5zbGlkZUNsYXNzKydbZGF0YS1zd2lwZXItc2xpZGUtaW5kZXg9XCInK2UrJ1wiXTpub3QoLicrYS5zbGlkZUR1cGxpY2F0ZUNsYXNzK1wiKVwiKS5lcSgwKS5pbmRleCgpLGQubmV4dFRpY2soZnVuY3Rpb24oKXt0LnNsaWRlVG8obil9KSk6dC5zbGlkZVRvKG4pOm4+dC5zbGlkZXMubGVuZ3RoLXI/KHQubG9vcEZpeCgpLG49cy5jaGlsZHJlbihcIi5cIithLnNsaWRlQ2xhc3MrJ1tkYXRhLXN3aXBlci1zbGlkZS1pbmRleD1cIicrZSsnXCJdOm5vdCguJythLnNsaWRlRHVwbGljYXRlQ2xhc3MrXCIpXCIpLmVxKDApLmluZGV4KCksZC5uZXh0VGljayhmdW5jdGlvbigpe3Quc2xpZGVUbyhuKX0pKTp0LnNsaWRlVG8obil9ZWxzZSB0LnNsaWRlVG8obil9fSxtPXtsb29wQ3JlYXRlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxhPXQucGFyYW1zLHM9dC4kd3JhcHBlckVsO3MuY2hpbGRyZW4oXCIuXCIrYS5zbGlkZUNsYXNzK1wiLlwiK2Euc2xpZGVEdXBsaWNhdGVDbGFzcykucmVtb3ZlKCk7dmFyIHI9cy5jaGlsZHJlbihcIi5cIithLnNsaWRlQ2xhc3MpO2lmKGEubG9vcEZpbGxHcm91cFdpdGhCbGFuayl7dmFyIG49YS5zbGlkZXNQZXJHcm91cC1yLmxlbmd0aCVhLnNsaWRlc1Blckdyb3VwO2lmKG4hPT1hLnNsaWRlc1Blckdyb3VwKXtmb3IodmFyIG89MDtvPG47bys9MSl7dmFyIGw9aShlLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikpLmFkZENsYXNzKGEuc2xpZGVDbGFzcytcIiBcIithLnNsaWRlQmxhbmtDbGFzcyk7cy5hcHBlbmQobCl9cj1zLmNoaWxkcmVuKFwiLlwiK2Euc2xpZGVDbGFzcyl9fVwiYXV0b1wiIT09YS5zbGlkZXNQZXJWaWV3fHxhLmxvb3BlZFNsaWRlc3x8KGEubG9vcGVkU2xpZGVzPXIubGVuZ3RoKSx0Lmxvb3BlZFNsaWRlcz1wYXJzZUludChhLmxvb3BlZFNsaWRlc3x8YS5zbGlkZXNQZXJWaWV3LDEwKSx0Lmxvb3BlZFNsaWRlcys9YS5sb29wQWRkaXRpb25hbFNsaWRlcyx0Lmxvb3BlZFNsaWRlcz5yLmxlbmd0aCYmKHQubG9vcGVkU2xpZGVzPXIubGVuZ3RoKTt2YXIgZD1bXSxwPVtdO3IuZWFjaChmdW5jdGlvbihlLGEpe3ZhciBzPWkoYSk7ZTx0Lmxvb3BlZFNsaWRlcyYmcC5wdXNoKGEpLGU8ci5sZW5ndGgmJmU+PXIubGVuZ3RoLXQubG9vcGVkU2xpZGVzJiZkLnB1c2goYSkscy5hdHRyKFwiZGF0YS1zd2lwZXItc2xpZGUtaW5kZXhcIixlKX0pO2Zvcih2YXIgYz0wO2M8cC5sZW5ndGg7Yys9MSlzLmFwcGVuZChpKHBbY10uY2xvbmVOb2RlKCEwKSkuYWRkQ2xhc3MoYS5zbGlkZUR1cGxpY2F0ZUNsYXNzKSk7Zm9yKHZhciB1PWQubGVuZ3RoLTE7MDw9dTt1LT0xKXMucHJlcGVuZChpKGRbdV0uY2xvbmVOb2RlKCEwKSkuYWRkQ2xhc3MoYS5zbGlkZUR1cGxpY2F0ZUNsYXNzKSl9LGxvb3BGaXg6ZnVuY3Rpb24oKXt2YXIgZSx0PXRoaXMsYT10LnBhcmFtcyxpPXQuYWN0aXZlSW5kZXgscz10LnNsaWRlcyxyPXQubG9vcGVkU2xpZGVzLG49dC5hbGxvd1NsaWRlUHJldixvPXQuYWxsb3dTbGlkZU5leHQsbD10LnNuYXBHcmlkLGQ9dC5ydGxUcmFuc2xhdGU7dC5hbGxvd1NsaWRlUHJldj0hMCx0LmFsbG93U2xpZGVOZXh0PSEwO3ZhciBwPS1sW2ldLXQuZ2V0VHJhbnNsYXRlKCk7aTxyPyhlPXMubGVuZ3RoLTMqcitpLGUrPXIsdC5zbGlkZVRvKGUsMCwhMSwhMCkmJjAhPT1wJiZ0LnNldFRyYW5zbGF0ZSgoZD8tdC50cmFuc2xhdGU6dC50cmFuc2xhdGUpLXApKTooXCJhdXRvXCI9PT1hLnNsaWRlc1BlclZpZXcmJjIqcjw9aXx8aT49cy5sZW5ndGgtcikmJihlPS1zLmxlbmd0aCtpK3IsZSs9cix0LnNsaWRlVG8oZSwwLCExLCEwKSYmMCE9PXAmJnQuc2V0VHJhbnNsYXRlKChkPy10LnRyYW5zbGF0ZTp0LnRyYW5zbGF0ZSktcCkpLHQuYWxsb3dTbGlkZVByZXY9bix0LmFsbG93U2xpZGVOZXh0PW99LGxvb3BEZXN0cm95OmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy4kd3JhcHBlckVsLHQ9dGhpcy5wYXJhbXMsYT10aGlzLnNsaWRlcztlLmNoaWxkcmVuKFwiLlwiK3Quc2xpZGVDbGFzcytcIi5cIit0LnNsaWRlRHVwbGljYXRlQ2xhc3MrXCIsLlwiK3Quc2xpZGVDbGFzcytcIi5cIit0LnNsaWRlQmxhbmtDbGFzcykucmVtb3ZlKCksYS5yZW1vdmVBdHRyKFwiZGF0YS1zd2lwZXItc2xpZGUtaW5kZXhcIil9fSxnPXtzZXRHcmFiQ3Vyc29yOmZ1bmN0aW9uKGUpe2lmKCEocC50b3VjaHx8IXRoaXMucGFyYW1zLnNpbXVsYXRlVG91Y2h8fHRoaXMucGFyYW1zLndhdGNoT3ZlcmZsb3cmJnRoaXMuaXNMb2NrZWQpKXt2YXIgdD10aGlzLmVsO3Quc3R5bGUuY3Vyc29yPVwibW92ZVwiLHQuc3R5bGUuY3Vyc29yPWU/XCItd2Via2l0LWdyYWJiaW5nXCI6XCItd2Via2l0LWdyYWJcIix0LnN0eWxlLmN1cnNvcj1lP1wiLW1vei1ncmFiYmluXCI6XCItbW96LWdyYWJcIix0LnN0eWxlLmN1cnNvcj1lP1wiZ3JhYmJpbmdcIjpcImdyYWJcIn19LHVuc2V0R3JhYkN1cnNvcjpmdW5jdGlvbigpe3AudG91Y2h8fHRoaXMucGFyYW1zLndhdGNoT3ZlcmZsb3cmJnRoaXMuaXNMb2NrZWR8fCh0aGlzLmVsLnN0eWxlLmN1cnNvcj1cIlwiKX19LGI9e2FwcGVuZFNsaWRlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMsYT10LiR3cmFwcGVyRWwsaT10LnBhcmFtcztpZihpLmxvb3AmJnQubG9vcERlc3Ryb3koKSxcIm9iamVjdFwiPT10eXBlb2YgZSYmXCJsZW5ndGhcImluIGUpZm9yKHZhciBzPTA7czxlLmxlbmd0aDtzKz0xKWVbc10mJmEuYXBwZW5kKGVbc10pO2Vsc2UgYS5hcHBlbmQoZSk7aS5sb29wJiZ0Lmxvb3BDcmVhdGUoKSxpLm9ic2VydmVyJiZwLm9ic2VydmVyfHx0LnVwZGF0ZSgpfSxwcmVwZW5kU2xpZGU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxhPXQucGFyYW1zLGk9dC4kd3JhcHBlckVsLHM9dC5hY3RpdmVJbmRleDthLmxvb3AmJnQubG9vcERlc3Ryb3koKTt2YXIgcj1zKzE7aWYoXCJvYmplY3RcIj09dHlwZW9mIGUmJlwibGVuZ3RoXCJpbiBlKXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rPTEpZVtuXSYmaS5wcmVwZW5kKGVbbl0pO3I9cytlLmxlbmd0aH1lbHNlIGkucHJlcGVuZChlKTthLmxvb3AmJnQubG9vcENyZWF0ZSgpLGEub2JzZXJ2ZXImJnAub2JzZXJ2ZXJ8fHQudXBkYXRlKCksdC5zbGlkZVRvKHIsMCwhMSl9LGFkZFNsaWRlOmZ1bmN0aW9uKGUsdCl7dmFyIGE9dGhpcyxpPWEuJHdyYXBwZXJFbCxzPWEucGFyYW1zLHI9YS5hY3RpdmVJbmRleDtzLmxvb3AmJihyLT1hLmxvb3BlZFNsaWRlcyxhLmxvb3BEZXN0cm95KCksYS5zbGlkZXM9aS5jaGlsZHJlbihcIi5cIitzLnNsaWRlQ2xhc3MpKTt2YXIgbj1hLnNsaWRlcy5sZW5ndGg7aWYoZTw9MClhLnByZXBlbmRTbGlkZSh0KTtlbHNlIGlmKG48PWUpYS5hcHBlbmRTbGlkZSh0KTtlbHNle2Zvcih2YXIgbz1lPHI/cisxOnIsbD1bXSxkPW4tMTtlPD1kO2QtPTEpe3ZhciBjPWEuc2xpZGVzLmVxKGQpO2MucmVtb3ZlKCksbC51bnNoaWZ0KGMpfWlmKFwib2JqZWN0XCI9PXR5cGVvZiB0JiZcImxlbmd0aFwiaW4gdCl7Zm9yKHZhciB1PTA7dTx0Lmxlbmd0aDt1Kz0xKXRbdV0mJmkuYXBwZW5kKHRbdV0pO289ZTxyP3IrdC5sZW5ndGg6cn1lbHNlIGkuYXBwZW5kKHQpO2Zvcih2YXIgaD0wO2g8bC5sZW5ndGg7aCs9MSlpLmFwcGVuZChsW2hdKTtzLmxvb3AmJmEubG9vcENyZWF0ZSgpLHMub2JzZXJ2ZXImJnAub2JzZXJ2ZXJ8fGEudXBkYXRlKCkscy5sb29wP2Euc2xpZGVUbyhvK2EubG9vcGVkU2xpZGVzLDAsITEpOmEuc2xpZGVUbyhvLDAsITEpfX0scmVtb3ZlU2xpZGU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxhPXQucGFyYW1zLGk9dC4kd3JhcHBlckVsLHM9dC5hY3RpdmVJbmRleDthLmxvb3AmJihzLT10Lmxvb3BlZFNsaWRlcyx0Lmxvb3BEZXN0cm95KCksdC5zbGlkZXM9aS5jaGlsZHJlbihcIi5cIithLnNsaWRlQ2xhc3MpKTt2YXIgcixuPXM7aWYoXCJvYmplY3RcIj09dHlwZW9mIGUmJlwibGVuZ3RoXCJpbiBlKXtmb3IodmFyIG89MDtvPGUubGVuZ3RoO28rPTEpcj1lW29dLHQuc2xpZGVzW3JdJiZ0LnNsaWRlcy5lcShyKS5yZW1vdmUoKSxyPG4mJihuLT0xKTtuPU1hdGgubWF4KG4sMCl9ZWxzZSByPWUsdC5zbGlkZXNbcl0mJnQuc2xpZGVzLmVxKHIpLnJlbW92ZSgpLHI8biYmKG4tPTEpLG49TWF0aC5tYXgobiwwKTthLmxvb3AmJnQubG9vcENyZWF0ZSgpLGEub2JzZXJ2ZXImJnAub2JzZXJ2ZXJ8fHQudXBkYXRlKCksYS5sb29wP3Quc2xpZGVUbyhuK3QubG9vcGVkU2xpZGVzLDAsITEpOnQuc2xpZGVUbyhuLDAsITEpfSxyZW1vdmVBbGxTbGlkZXM6ZnVuY3Rpb24oKXtmb3IodmFyIGU9W10sdD0wO3Q8dGhpcy5zbGlkZXMubGVuZ3RoO3QrPTEpZS5wdXNoKHQpO3RoaXMucmVtb3ZlU2xpZGUoZSl9fSx3PWZ1bmN0aW9uKCl7dmFyIGE9dC5uYXZpZ2F0b3IudXNlckFnZW50LGk9e2lvczohMSxhbmRyb2lkOiExLGFuZHJvaWRDaHJvbWU6ITEsZGVza3RvcDohMSx3aW5kb3dzOiExLGlwaG9uZTohMSxpcG9kOiExLGlwYWQ6ITEsY29yZG92YTp0LmNvcmRvdmF8fHQucGhvbmVnYXAscGhvbmVnYXA6dC5jb3Jkb3ZhfHx0LnBob25lZ2FwfSxzPWEubWF0Y2goLyhXaW5kb3dzIFBob25lKTs/W1xcc1xcL10rKFtcXGQuXSspPy8pLHI9YS5tYXRjaCgvKEFuZHJvaWQpOz9bXFxzXFwvXSsoW1xcZC5dKyk/Lyksbj1hLm1hdGNoKC8oaVBhZCkuKk9TXFxzKFtcXGRfXSspLyksbz1hLm1hdGNoKC8oaVBvZCkoLipPU1xccyhbXFxkX10rKSk/LyksbD0hbiYmYS5tYXRjaCgvKGlQaG9uZVxcc09TfGlPUylcXHMoW1xcZF9dKykvKTtpZihzJiYoaS5vcz1cIndpbmRvd3NcIixpLm9zVmVyc2lvbj1zWzJdLGkud2luZG93cz0hMCksciYmIXMmJihpLm9zPVwiYW5kcm9pZFwiLGkub3NWZXJzaW9uPXJbMl0saS5hbmRyb2lkPSEwLGkuYW5kcm9pZENocm9tZT0wPD1hLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihcImNocm9tZVwiKSksKG58fGx8fG8pJiYoaS5vcz1cImlvc1wiLGkuaW9zPSEwKSxsJiYhbyYmKGkub3NWZXJzaW9uPWxbMl0ucmVwbGFjZSgvXy9nLFwiLlwiKSxpLmlwaG9uZT0hMCksbiYmKGkub3NWZXJzaW9uPW5bMl0ucmVwbGFjZSgvXy9nLFwiLlwiKSxpLmlwYWQ9ITApLG8mJihpLm9zVmVyc2lvbj1vWzNdP29bM10ucmVwbGFjZSgvXy9nLFwiLlwiKTpudWxsLGkuaXBob25lPSEwKSxpLmlvcyYmaS5vc1ZlcnNpb24mJjA8PWEuaW5kZXhPZihcIlZlcnNpb24vXCIpJiZcIjEwXCI9PT1pLm9zVmVyc2lvbi5zcGxpdChcIi5cIilbMF0mJihpLm9zVmVyc2lvbj1hLnRvTG93ZXJDYXNlKCkuc3BsaXQoXCJ2ZXJzaW9uL1wiKVsxXS5zcGxpdChcIiBcIilbMF0pLGkuZGVza3RvcD0hKGkub3N8fGkuYW5kcm9pZHx8aS53ZWJWaWV3KSxpLndlYlZpZXc9KGx8fG58fG8pJiZhLm1hdGNoKC8uKkFwcGxlV2ViS2l0KD8hLipTYWZhcmkpL2kpLGkub3MmJlwiaW9zXCI9PT1pLm9zKXt2YXIgZD1pLm9zVmVyc2lvbi5zcGxpdChcIi5cIikscD1lLnF1ZXJ5U2VsZWN0b3IoJ21ldGFbbmFtZT1cInZpZXdwb3J0XCJdJyk7aS5taW5pbWFsVWk9IWkud2ViVmlldyYmKG98fGwpJiYoMSpkWzBdPT03PzE8PTEqZFsxXTo3PDEqZFswXSkmJnAmJjA8PXAuZ2V0QXR0cmlidXRlKFwiY29udGVudFwiKS5pbmRleE9mKFwibWluaW1hbC11aVwiKX1yZXR1cm4gaS5waXhlbFJhdGlvPXQuZGV2aWNlUGl4ZWxSYXRpb3x8MSxpfSgpO2Z1bmN0aW9uIHkoKXt2YXIgZT10aGlzLHQ9ZS5wYXJhbXMsYT1lLmVsO2lmKCFhfHwwIT09YS5vZmZzZXRXaWR0aCl7dC5icmVha3BvaW50cyYmZS5zZXRCcmVha3BvaW50KCk7dmFyIGk9ZS5hbGxvd1NsaWRlTmV4dCxzPWUuYWxsb3dTbGlkZVByZXYscj1lLnNuYXBHcmlkO2lmKGUuYWxsb3dTbGlkZU5leHQ9ITAsZS5hbGxvd1NsaWRlUHJldj0hMCxlLnVwZGF0ZVNpemUoKSxlLnVwZGF0ZVNsaWRlcygpLHQuZnJlZU1vZGUpe3ZhciBuPU1hdGgubWluKE1hdGgubWF4KGUudHJhbnNsYXRlLGUubWF4VHJhbnNsYXRlKCkpLGUubWluVHJhbnNsYXRlKCkpO2Uuc2V0VHJhbnNsYXRlKG4pLGUudXBkYXRlQWN0aXZlSW5kZXgoKSxlLnVwZGF0ZVNsaWRlc0NsYXNzZXMoKSx0LmF1dG9IZWlnaHQmJmUudXBkYXRlQXV0b0hlaWdodCgpfWVsc2UgZS51cGRhdGVTbGlkZXNDbGFzc2VzKCksKFwiYXV0b1wiPT09dC5zbGlkZXNQZXJWaWV3fHwxPHQuc2xpZGVzUGVyVmlldykmJmUuaXNFbmQmJiFlLnBhcmFtcy5jZW50ZXJlZFNsaWRlcz9lLnNsaWRlVG8oZS5zbGlkZXMubGVuZ3RoLTEsMCwhMSwhMCk6ZS5zbGlkZVRvKGUuYWN0aXZlSW5kZXgsMCwhMSwhMCk7ZS5hbGxvd1NsaWRlUHJldj1zLGUuYWxsb3dTbGlkZU5leHQ9aSxlLnBhcmFtcy53YXRjaE92ZXJmbG93JiZyIT09ZS5zbmFwR3JpZCYmZS5jaGVja092ZXJmbG93KCl9fXZhciB4LFQ9e2F0dGFjaEV2ZW50czpmdW5jdGlvbigpe3ZhciBhPXRoaXMscz1hLnBhcmFtcyxyPWEudG91Y2hFdmVudHMsbj1hLmVsLG89YS53cmFwcGVyRWw7YS5vblRvdWNoU3RhcnQ9ZnVuY3Rpb24oYSl7dmFyIHM9dGhpcyxyPXMudG91Y2hFdmVudHNEYXRhLG49cy5wYXJhbXMsbz1zLnRvdWNoZXM7aWYoIXMuYW5pbWF0aW5nfHwhbi5wcmV2ZW50SW50ZXJhY3Rpb25PblRyYW5zaXRpb24pe3ZhciBsPWE7aWYobC5vcmlnaW5hbEV2ZW50JiYobD1sLm9yaWdpbmFsRXZlbnQpLHIuaXNUb3VjaEV2ZW50PVwidG91Y2hzdGFydFwiPT09bC50eXBlLChyLmlzVG91Y2hFdmVudHx8IShcIndoaWNoXCJpbiBsKXx8MyE9PWwud2hpY2gpJiYhKCFyLmlzVG91Y2hFdmVudCYmXCJidXR0b25cImluIGwmJjA8bC5idXR0b258fHIuaXNUb3VjaGVkJiZyLmlzTW92ZWQpKWlmKG4ubm9Td2lwaW5nJiZpKGwudGFyZ2V0KS5jbG9zZXN0KG4ubm9Td2lwaW5nU2VsZWN0b3I/bi5ub1N3aXBpbmdTZWxlY3RvcjpcIi5cIituLm5vU3dpcGluZ0NsYXNzKVswXSlzLmFsbG93Q2xpY2s9ITA7ZWxzZSBpZighbi5zd2lwZUhhbmRsZXJ8fGkobCkuY2xvc2VzdChuLnN3aXBlSGFuZGxlcilbMF0pe28uY3VycmVudFg9XCJ0b3VjaHN0YXJ0XCI9PT1sLnR5cGU/bC50YXJnZXRUb3VjaGVzWzBdLnBhZ2VYOmwucGFnZVgsby5jdXJyZW50WT1cInRvdWNoc3RhcnRcIj09PWwudHlwZT9sLnRhcmdldFRvdWNoZXNbMF0ucGFnZVk6bC5wYWdlWTt2YXIgcD1vLmN1cnJlbnRYLGM9by5jdXJyZW50WSx1PW4uZWRnZVN3aXBlRGV0ZWN0aW9ufHxuLmlPU0VkZ2VTd2lwZURldGVjdGlvbixoPW4uZWRnZVN3aXBlVGhyZXNob2xkfHxuLmlPU0VkZ2VTd2lwZVRocmVzaG9sZDtpZighdXx8IShwPD1ofHxwPj10LnNjcmVlbi53aWR0aC1oKSl7aWYoZC5leHRlbmQocix7aXNUb3VjaGVkOiEwLGlzTW92ZWQ6ITEsYWxsb3dUb3VjaENhbGxiYWNrczohMCxpc1Njcm9sbGluZzp2b2lkIDAsc3RhcnRNb3Zpbmc6dm9pZCAwfSksby5zdGFydFg9cCxvLnN0YXJ0WT1jLHIudG91Y2hTdGFydFRpbWU9ZC5ub3coKSxzLmFsbG93Q2xpY2s9ITAscy51cGRhdGVTaXplKCkscy5zd2lwZURpcmVjdGlvbj12b2lkIDAsMDxuLnRocmVzaG9sZCYmKHIuYWxsb3dUaHJlc2hvbGRNb3ZlPSExKSxcInRvdWNoc3RhcnRcIiE9PWwudHlwZSl7dmFyIHY9ITA7aShsLnRhcmdldCkuaXMoci5mb3JtRWxlbWVudHMpJiYodj0hMSksZS5hY3RpdmVFbGVtZW50JiZpKGUuYWN0aXZlRWxlbWVudCkuaXMoci5mb3JtRWxlbWVudHMpJiZlLmFjdGl2ZUVsZW1lbnQhPT1sLnRhcmdldCYmZS5hY3RpdmVFbGVtZW50LmJsdXIoKTt2YXIgZj12JiZzLmFsbG93VG91Y2hNb3ZlJiZuLnRvdWNoU3RhcnRQcmV2ZW50RGVmYXVsdDsobi50b3VjaFN0YXJ0Rm9yY2VQcmV2ZW50RGVmYXVsdHx8ZikmJmwucHJldmVudERlZmF1bHQoKX1zLmVtaXQoXCJ0b3VjaFN0YXJ0XCIsbCl9fX19LmJpbmQoYSksYS5vblRvdWNoTW92ZT1mdW5jdGlvbih0KXt2YXIgYT10aGlzLHM9YS50b3VjaEV2ZW50c0RhdGEscj1hLnBhcmFtcyxuPWEudG91Y2hlcyxvPWEucnRsVHJhbnNsYXRlLGw9dDtpZihsLm9yaWdpbmFsRXZlbnQmJihsPWwub3JpZ2luYWxFdmVudCkscy5pc1RvdWNoZWQpe2lmKCFzLmlzVG91Y2hFdmVudHx8XCJtb3VzZW1vdmVcIiE9PWwudHlwZSl7dmFyIHA9XCJ0b3VjaG1vdmVcIj09PWwudHlwZT9sLnRhcmdldFRvdWNoZXNbMF0ucGFnZVg6bC5wYWdlWCxjPVwidG91Y2htb3ZlXCI9PT1sLnR5cGU/bC50YXJnZXRUb3VjaGVzWzBdLnBhZ2VZOmwucGFnZVk7aWYobC5wcmV2ZW50ZWRCeU5lc3RlZFN3aXBlcilyZXR1cm4gbi5zdGFydFg9cCx2b2lkKG4uc3RhcnRZPWMpO2lmKCFhLmFsbG93VG91Y2hNb3ZlKXJldHVybiBhLmFsbG93Q2xpY2s9ITEsdm9pZChzLmlzVG91Y2hlZCYmKGQuZXh0ZW5kKG4se3N0YXJ0WDpwLHN0YXJ0WTpjLGN1cnJlbnRYOnAsY3VycmVudFk6Y30pLHMudG91Y2hTdGFydFRpbWU9ZC5ub3coKSkpO2lmKHMuaXNUb3VjaEV2ZW50JiZyLnRvdWNoUmVsZWFzZU9uRWRnZXMmJiFyLmxvb3ApaWYoYS5pc1ZlcnRpY2FsKCkpe2lmKGM8bi5zdGFydFkmJmEudHJhbnNsYXRlPD1hLm1heFRyYW5zbGF0ZSgpfHxjPm4uc3RhcnRZJiZhLnRyYW5zbGF0ZT49YS5taW5UcmFuc2xhdGUoKSlyZXR1cm4gcy5pc1RvdWNoZWQ9ITEsdm9pZChzLmlzTW92ZWQ9ITEpfWVsc2UgaWYocDxuLnN0YXJ0WCYmYS50cmFuc2xhdGU8PWEubWF4VHJhbnNsYXRlKCl8fHA+bi5zdGFydFgmJmEudHJhbnNsYXRlPj1hLm1pblRyYW5zbGF0ZSgpKXJldHVybjtpZihzLmlzVG91Y2hFdmVudCYmZS5hY3RpdmVFbGVtZW50JiZsLnRhcmdldD09PWUuYWN0aXZlRWxlbWVudCYmaShsLnRhcmdldCkuaXMocy5mb3JtRWxlbWVudHMpKXJldHVybiBzLmlzTW92ZWQ9ITAsdm9pZChhLmFsbG93Q2xpY2s9ITEpO2lmKHMuYWxsb3dUb3VjaENhbGxiYWNrcyYmYS5lbWl0KFwidG91Y2hNb3ZlXCIsbCksIShsLnRhcmdldFRvdWNoZXMmJjE8bC50YXJnZXRUb3VjaGVzLmxlbmd0aCkpe24uY3VycmVudFg9cCxuLmN1cnJlbnRZPWM7dmFyIHUsaD1uLmN1cnJlbnRYLW4uc3RhcnRYLHY9bi5jdXJyZW50WS1uLnN0YXJ0WTtpZighKGEucGFyYW1zLnRocmVzaG9sZCYmTWF0aC5zcXJ0KE1hdGgucG93KGgsMikrTWF0aC5wb3codiwyKSk8YS5wYXJhbXMudGhyZXNob2xkKSlpZih2b2lkIDA9PT1zLmlzU2Nyb2xsaW5nJiYoYS5pc0hvcml6b250YWwoKSYmbi5jdXJyZW50WT09PW4uc3RhcnRZfHxhLmlzVmVydGljYWwoKSYmbi5jdXJyZW50WD09PW4uc3RhcnRYP3MuaXNTY3JvbGxpbmc9ITE6MjU8PWgqaCt2KnYmJih1PTE4MCpNYXRoLmF0YW4yKE1hdGguYWJzKHYpLE1hdGguYWJzKGgpKS9NYXRoLlBJLHMuaXNTY3JvbGxpbmc9YS5pc0hvcml6b250YWwoKT91PnIudG91Y2hBbmdsZTo5MC11PnIudG91Y2hBbmdsZSkpLHMuaXNTY3JvbGxpbmcmJmEuZW1pdChcInRvdWNoTW92ZU9wcG9zaXRlXCIsbCksdm9pZCAwPT09cy5zdGFydE1vdmluZyYmKG4uY3VycmVudFg9PT1uLnN0YXJ0WCYmbi5jdXJyZW50WT09PW4uc3RhcnRZfHwocy5zdGFydE1vdmluZz0hMCkpLHMuaXNTY3JvbGxpbmcpcy5pc1RvdWNoZWQ9ITE7ZWxzZSBpZihzLnN0YXJ0TW92aW5nKXthLmFsbG93Q2xpY2s9ITEsbC5wcmV2ZW50RGVmYXVsdCgpLHIudG91Y2hNb3ZlU3RvcFByb3BhZ2F0aW9uJiYhci5uZXN0ZWQmJmwuc3RvcFByb3BhZ2F0aW9uKCkscy5pc01vdmVkfHwoci5sb29wJiZhLmxvb3BGaXgoKSxzLnN0YXJ0VHJhbnNsYXRlPWEuZ2V0VHJhbnNsYXRlKCksYS5zZXRUcmFuc2l0aW9uKDApLGEuYW5pbWF0aW5nJiZhLiR3cmFwcGVyRWwudHJpZ2dlcihcIndlYmtpdFRyYW5zaXRpb25FbmQgdHJhbnNpdGlvbmVuZFwiKSxzLmFsbG93TW9tZW50dW1Cb3VuY2U9ITEsIXIuZ3JhYkN1cnNvcnx8ITAhPT1hLmFsbG93U2xpZGVOZXh0JiYhMCE9PWEuYWxsb3dTbGlkZVByZXZ8fGEuc2V0R3JhYkN1cnNvcighMCksYS5lbWl0KFwic2xpZGVyRmlyc3RNb3ZlXCIsbCkpLGEuZW1pdChcInNsaWRlck1vdmVcIixsKSxzLmlzTW92ZWQ9ITA7dmFyIGY9YS5pc0hvcml6b250YWwoKT9oOnY7bi5kaWZmPWYsZio9ci50b3VjaFJhdGlvLG8mJihmPS1mKSxhLnN3aXBlRGlyZWN0aW9uPTA8Zj9cInByZXZcIjpcIm5leHRcIixzLmN1cnJlbnRUcmFuc2xhdGU9ZitzLnN0YXJ0VHJhbnNsYXRlO3ZhciBtPSEwLGc9ci5yZXNpc3RhbmNlUmF0aW87aWYoci50b3VjaFJlbGVhc2VPbkVkZ2VzJiYoZz0wKSwwPGYmJnMuY3VycmVudFRyYW5zbGF0ZT5hLm1pblRyYW5zbGF0ZSgpPyhtPSExLHIucmVzaXN0YW5jZSYmKHMuY3VycmVudFRyYW5zbGF0ZT1hLm1pblRyYW5zbGF0ZSgpLTErTWF0aC5wb3coLWEubWluVHJhbnNsYXRlKCkrcy5zdGFydFRyYW5zbGF0ZStmLGcpKSk6ZjwwJiZzLmN1cnJlbnRUcmFuc2xhdGU8YS5tYXhUcmFuc2xhdGUoKSYmKG09ITEsci5yZXNpc3RhbmNlJiYocy5jdXJyZW50VHJhbnNsYXRlPWEubWF4VHJhbnNsYXRlKCkrMS1NYXRoLnBvdyhhLm1heFRyYW5zbGF0ZSgpLXMuc3RhcnRUcmFuc2xhdGUtZixnKSkpLG0mJihsLnByZXZlbnRlZEJ5TmVzdGVkU3dpcGVyPSEwKSwhYS5hbGxvd1NsaWRlTmV4dCYmXCJuZXh0XCI9PT1hLnN3aXBlRGlyZWN0aW9uJiZzLmN1cnJlbnRUcmFuc2xhdGU8cy5zdGFydFRyYW5zbGF0ZSYmKHMuY3VycmVudFRyYW5zbGF0ZT1zLnN0YXJ0VHJhbnNsYXRlKSwhYS5hbGxvd1NsaWRlUHJldiYmXCJwcmV2XCI9PT1hLnN3aXBlRGlyZWN0aW9uJiZzLmN1cnJlbnRUcmFuc2xhdGU+cy5zdGFydFRyYW5zbGF0ZSYmKHMuY3VycmVudFRyYW5zbGF0ZT1zLnN0YXJ0VHJhbnNsYXRlKSwwPHIudGhyZXNob2xkKXtpZighKE1hdGguYWJzKGYpPnIudGhyZXNob2xkfHxzLmFsbG93VGhyZXNob2xkTW92ZSkpcmV0dXJuIHZvaWQocy5jdXJyZW50VHJhbnNsYXRlPXMuc3RhcnRUcmFuc2xhdGUpO2lmKCFzLmFsbG93VGhyZXNob2xkTW92ZSlyZXR1cm4gcy5hbGxvd1RocmVzaG9sZE1vdmU9ITAsbi5zdGFydFg9bi5jdXJyZW50WCxuLnN0YXJ0WT1uLmN1cnJlbnRZLHMuY3VycmVudFRyYW5zbGF0ZT1zLnN0YXJ0VHJhbnNsYXRlLHZvaWQobi5kaWZmPWEuaXNIb3Jpem9udGFsKCk/bi5jdXJyZW50WC1uLnN0YXJ0WDpuLmN1cnJlbnRZLW4uc3RhcnRZKX1yLmZvbGxvd0ZpbmdlciYmKChyLmZyZWVNb2RlfHxyLndhdGNoU2xpZGVzUHJvZ3Jlc3N8fHIud2F0Y2hTbGlkZXNWaXNpYmlsaXR5KSYmKGEudXBkYXRlQWN0aXZlSW5kZXgoKSxhLnVwZGF0ZVNsaWRlc0NsYXNzZXMoKSksci5mcmVlTW9kZSYmKDA9PT1zLnZlbG9jaXRpZXMubGVuZ3RoJiZzLnZlbG9jaXRpZXMucHVzaCh7cG9zaXRpb246blthLmlzSG9yaXpvbnRhbCgpP1wic3RhcnRYXCI6XCJzdGFydFlcIl0sdGltZTpzLnRvdWNoU3RhcnRUaW1lfSkscy52ZWxvY2l0aWVzLnB1c2goe3Bvc2l0aW9uOm5bYS5pc0hvcml6b250YWwoKT9cImN1cnJlbnRYXCI6XCJjdXJyZW50WVwiXSx0aW1lOmQubm93KCl9KSksYS51cGRhdGVQcm9ncmVzcyhzLmN1cnJlbnRUcmFuc2xhdGUpLGEuc2V0VHJhbnNsYXRlKHMuY3VycmVudFRyYW5zbGF0ZSkpfX19fWVsc2Ugcy5zdGFydE1vdmluZyYmcy5pc1Njcm9sbGluZyYmYS5lbWl0KFwidG91Y2hNb3ZlT3Bwb3NpdGVcIixsKX0uYmluZChhKSxhLm9uVG91Y2hFbmQ9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxhPXQudG91Y2hFdmVudHNEYXRhLGk9dC5wYXJhbXMscz10LnRvdWNoZXMscj10LnJ0bFRyYW5zbGF0ZSxuPXQuJHdyYXBwZXJFbCxvPXQuc2xpZGVzR3JpZCxsPXQuc25hcEdyaWQscD1lO2lmKHAub3JpZ2luYWxFdmVudCYmKHA9cC5vcmlnaW5hbEV2ZW50KSxhLmFsbG93VG91Y2hDYWxsYmFja3MmJnQuZW1pdChcInRvdWNoRW5kXCIscCksYS5hbGxvd1RvdWNoQ2FsbGJhY2tzPSExLCFhLmlzVG91Y2hlZClyZXR1cm4gYS5pc01vdmVkJiZpLmdyYWJDdXJzb3ImJnQuc2V0R3JhYkN1cnNvcighMSksYS5pc01vdmVkPSExLHZvaWQoYS5zdGFydE1vdmluZz0hMSk7aS5ncmFiQ3Vyc29yJiZhLmlzTW92ZWQmJmEuaXNUb3VjaGVkJiYoITA9PT10LmFsbG93U2xpZGVOZXh0fHwhMD09PXQuYWxsb3dTbGlkZVByZXYpJiZ0LnNldEdyYWJDdXJzb3IoITEpO3ZhciBjLHU9ZC5ub3coKSxoPXUtYS50b3VjaFN0YXJ0VGltZTtpZih0LmFsbG93Q2xpY2smJih0LnVwZGF0ZUNsaWNrZWRTbGlkZShwKSx0LmVtaXQoXCJ0YXBcIixwKSxoPDMwMCYmMzAwPHUtYS5sYXN0Q2xpY2tUaW1lJiYoYS5jbGlja1RpbWVvdXQmJmNsZWFyVGltZW91dChhLmNsaWNrVGltZW91dCksYS5jbGlja1RpbWVvdXQ9ZC5uZXh0VGljayhmdW5jdGlvbigpe3QmJiF0LmRlc3Ryb3llZCYmdC5lbWl0KFwiY2xpY2tcIixwKX0sMzAwKSksaDwzMDAmJnUtYS5sYXN0Q2xpY2tUaW1lPDMwMCYmKGEuY2xpY2tUaW1lb3V0JiZjbGVhclRpbWVvdXQoYS5jbGlja1RpbWVvdXQpLHQuZW1pdChcImRvdWJsZVRhcFwiLHApKSksYS5sYXN0Q2xpY2tUaW1lPWQubm93KCksZC5uZXh0VGljayhmdW5jdGlvbigpe3QuZGVzdHJveWVkfHwodC5hbGxvd0NsaWNrPSEwKX0pLCFhLmlzVG91Y2hlZHx8IWEuaXNNb3ZlZHx8IXQuc3dpcGVEaXJlY3Rpb258fDA9PT1zLmRpZmZ8fGEuY3VycmVudFRyYW5zbGF0ZT09PWEuc3RhcnRUcmFuc2xhdGUpcmV0dXJuIGEuaXNUb3VjaGVkPSExLGEuaXNNb3ZlZD0hMSx2b2lkKGEuc3RhcnRNb3Zpbmc9ITEpO2lmKGEuaXNUb3VjaGVkPSExLGEuaXNNb3ZlZD0hMSxhLnN0YXJ0TW92aW5nPSExLGM9aS5mb2xsb3dGaW5nZXI/cj90LnRyYW5zbGF0ZTotdC50cmFuc2xhdGU6LWEuY3VycmVudFRyYW5zbGF0ZSxpLmZyZWVNb2RlKXtpZihjPC10Lm1pblRyYW5zbGF0ZSgpKXJldHVybiB2b2lkIHQuc2xpZGVUbyh0LmFjdGl2ZUluZGV4KTtpZihjPi10Lm1heFRyYW5zbGF0ZSgpKXJldHVybiB2b2lkKHQuc2xpZGVzLmxlbmd0aDxsLmxlbmd0aD90LnNsaWRlVG8obC5sZW5ndGgtMSk6dC5zbGlkZVRvKHQuc2xpZGVzLmxlbmd0aC0xKSk7aWYoaS5mcmVlTW9kZU1vbWVudHVtKXtpZigxPGEudmVsb2NpdGllcy5sZW5ndGgpe3ZhciB2PWEudmVsb2NpdGllcy5wb3AoKSxmPWEudmVsb2NpdGllcy5wb3AoKSxtPXYucG9zaXRpb24tZi5wb3NpdGlvbixnPXYudGltZS1mLnRpbWU7dC52ZWxvY2l0eT1tL2csdC52ZWxvY2l0eS89MixNYXRoLmFicyh0LnZlbG9jaXR5KTxpLmZyZWVNb2RlTWluaW11bVZlbG9jaXR5JiYodC52ZWxvY2l0eT0wKSwoMTUwPGd8fDMwMDxkLm5vdygpLXYudGltZSkmJih0LnZlbG9jaXR5PTApfWVsc2UgdC52ZWxvY2l0eT0wO3QudmVsb2NpdHkqPWkuZnJlZU1vZGVNb21lbnR1bVZlbG9jaXR5UmF0aW8sYS52ZWxvY2l0aWVzLmxlbmd0aD0wO3ZhciBiPTFlMyppLmZyZWVNb2RlTW9tZW50dW1SYXRpbyx3PXQudmVsb2NpdHkqYix5PXQudHJhbnNsYXRlK3c7ciYmKHk9LXkpO3ZhciB4LFQsRT0hMSxTPTIwKk1hdGguYWJzKHQudmVsb2NpdHkpKmkuZnJlZU1vZGVNb21lbnR1bUJvdW5jZVJhdGlvO2lmKHk8dC5tYXhUcmFuc2xhdGUoKSlpLmZyZWVNb2RlTW9tZW50dW1Cb3VuY2U/KHkrdC5tYXhUcmFuc2xhdGUoKTwtUyYmKHk9dC5tYXhUcmFuc2xhdGUoKS1TKSx4PXQubWF4VHJhbnNsYXRlKCksRT0hMCxhLmFsbG93TW9tZW50dW1Cb3VuY2U9ITApOnk9dC5tYXhUcmFuc2xhdGUoKSxpLmxvb3AmJmkuY2VudGVyZWRTbGlkZXMmJihUPSEwKTtlbHNlIGlmKHk+dC5taW5UcmFuc2xhdGUoKSlpLmZyZWVNb2RlTW9tZW50dW1Cb3VuY2U/KHktdC5taW5UcmFuc2xhdGUoKT5TJiYoeT10Lm1pblRyYW5zbGF0ZSgpK1MpLHg9dC5taW5UcmFuc2xhdGUoKSxFPSEwLGEuYWxsb3dNb21lbnR1bUJvdW5jZT0hMCk6eT10Lm1pblRyYW5zbGF0ZSgpLGkubG9vcCYmaS5jZW50ZXJlZFNsaWRlcyYmKFQ9ITApO2Vsc2UgaWYoaS5mcmVlTW9kZVN0aWNreSl7Zm9yKHZhciBDLE09MDtNPGwubGVuZ3RoO00rPTEpaWYobFtNXT4teSl7Qz1NO2JyZWFrfXk9LSh5PU1hdGguYWJzKGxbQ10teSk8TWF0aC5hYnMobFtDLTFdLXkpfHxcIm5leHRcIj09PXQuc3dpcGVEaXJlY3Rpb24/bFtDXTpsW0MtMV0pfWlmKFQmJnQub25jZShcInRyYW5zaXRpb25FbmRcIixmdW5jdGlvbigpe3QubG9vcEZpeCgpfSksMCE9PXQudmVsb2NpdHkpYj1yP01hdGguYWJzKCgteS10LnRyYW5zbGF0ZSkvdC52ZWxvY2l0eSk6TWF0aC5hYnMoKHktdC50cmFuc2xhdGUpL3QudmVsb2NpdHkpO2Vsc2UgaWYoaS5mcmVlTW9kZVN0aWNreSlyZXR1cm4gdm9pZCB0LnNsaWRlVG9DbG9zZXN0KCk7aS5mcmVlTW9kZU1vbWVudHVtQm91bmNlJiZFPyh0LnVwZGF0ZVByb2dyZXNzKHgpLHQuc2V0VHJhbnNpdGlvbihiKSx0LnNldFRyYW5zbGF0ZSh5KSx0LnRyYW5zaXRpb25TdGFydCghMCx0LnN3aXBlRGlyZWN0aW9uKSx0LmFuaW1hdGluZz0hMCxuLnRyYW5zaXRpb25FbmQoZnVuY3Rpb24oKXt0JiYhdC5kZXN0cm95ZWQmJmEuYWxsb3dNb21lbnR1bUJvdW5jZSYmKHQuZW1pdChcIm1vbWVudHVtQm91bmNlXCIpLHQuc2V0VHJhbnNpdGlvbihpLnNwZWVkKSx0LnNldFRyYW5zbGF0ZSh4KSxuLnRyYW5zaXRpb25FbmQoZnVuY3Rpb24oKXt0JiYhdC5kZXN0cm95ZWQmJnQudHJhbnNpdGlvbkVuZCgpfSkpfSkpOnQudmVsb2NpdHk/KHQudXBkYXRlUHJvZ3Jlc3MoeSksdC5zZXRUcmFuc2l0aW9uKGIpLHQuc2V0VHJhbnNsYXRlKHkpLHQudHJhbnNpdGlvblN0YXJ0KCEwLHQuc3dpcGVEaXJlY3Rpb24pLHQuYW5pbWF0aW5nfHwodC5hbmltYXRpbmc9ITAsbi50cmFuc2l0aW9uRW5kKGZ1bmN0aW9uKCl7dCYmIXQuZGVzdHJveWVkJiZ0LnRyYW5zaXRpb25FbmQoKX0pKSk6dC51cGRhdGVQcm9ncmVzcyh5KSx0LnVwZGF0ZUFjdGl2ZUluZGV4KCksdC51cGRhdGVTbGlkZXNDbGFzc2VzKCl9ZWxzZSBpZihpLmZyZWVNb2RlU3RpY2t5KXJldHVybiB2b2lkIHQuc2xpZGVUb0Nsb3Nlc3QoKTsoIWkuZnJlZU1vZGVNb21lbnR1bXx8aD49aS5sb25nU3dpcGVzTXMpJiYodC51cGRhdGVQcm9ncmVzcygpLHQudXBkYXRlQWN0aXZlSW5kZXgoKSx0LnVwZGF0ZVNsaWRlc0NsYXNzZXMoKSl9ZWxzZXtmb3IodmFyIGs9MCxQPXQuc2xpZGVzU2l6ZXNHcmlkWzBdLHo9MDt6PG8ubGVuZ3RoO3orPWkuc2xpZGVzUGVyR3JvdXApdm9pZCAwIT09b1t6K2kuc2xpZGVzUGVyR3JvdXBdP2M+PW9bel0mJmM8b1t6K2kuc2xpZGVzUGVyR3JvdXBdJiYoUD1vWyhrPXopK2kuc2xpZGVzUGVyR3JvdXBdLW9bel0pOmM+PW9bel0mJihrPXosUD1vW28ubGVuZ3RoLTFdLW9bby5sZW5ndGgtMl0pO3ZhciAkPShjLW9ba10pL1A7aWYoaD5pLmxvbmdTd2lwZXNNcyl7aWYoIWkubG9uZ1N3aXBlcylyZXR1cm4gdm9pZCB0LnNsaWRlVG8odC5hY3RpdmVJbmRleCk7XCJuZXh0XCI9PT10LnN3aXBlRGlyZWN0aW9uJiYoJD49aS5sb25nU3dpcGVzUmF0aW8/dC5zbGlkZVRvKGsraS5zbGlkZXNQZXJHcm91cCk6dC5zbGlkZVRvKGspKSxcInByZXZcIj09PXQuc3dpcGVEaXJlY3Rpb24mJigkPjEtaS5sb25nU3dpcGVzUmF0aW8/dC5zbGlkZVRvKGsraS5zbGlkZXNQZXJHcm91cCk6dC5zbGlkZVRvKGspKX1lbHNle2lmKCFpLnNob3J0U3dpcGVzKXJldHVybiB2b2lkIHQuc2xpZGVUbyh0LmFjdGl2ZUluZGV4KTtcIm5leHRcIj09PXQuc3dpcGVEaXJlY3Rpb24mJnQuc2xpZGVUbyhrK2kuc2xpZGVzUGVyR3JvdXApLFwicHJldlwiPT09dC5zd2lwZURpcmVjdGlvbiYmdC5zbGlkZVRvKGspfX19LmJpbmQoYSksYS5vbkNsaWNrPWZ1bmN0aW9uKGUpe3RoaXMuYWxsb3dDbGlja3x8KHRoaXMucGFyYW1zLnByZXZlbnRDbGlja3MmJmUucHJldmVudERlZmF1bHQoKSx0aGlzLnBhcmFtcy5wcmV2ZW50Q2xpY2tzUHJvcGFnYXRpb24mJnRoaXMuYW5pbWF0aW5nJiYoZS5zdG9wUHJvcGFnYXRpb24oKSxlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpKSl9LmJpbmQoYSk7dmFyIGw9XCJjb250YWluZXJcIj09PXMudG91Y2hFdmVudHNUYXJnZXQ/bjpvLGM9ISFzLm5lc3RlZDtpZihwLnRvdWNofHwhcC5wb2ludGVyRXZlbnRzJiYhcC5wcmVmaXhlZFBvaW50ZXJFdmVudHMpe2lmKHAudG91Y2gpe3ZhciB1PSEoXCJ0b3VjaHN0YXJ0XCIhPT1yLnN0YXJ0fHwhcC5wYXNzaXZlTGlzdGVuZXJ8fCFzLnBhc3NpdmVMaXN0ZW5lcnMpJiZ7cGFzc2l2ZTohMCxjYXB0dXJlOiExfTtsLmFkZEV2ZW50TGlzdGVuZXIoci5zdGFydCxhLm9uVG91Y2hTdGFydCx1KSxsLmFkZEV2ZW50TGlzdGVuZXIoci5tb3ZlLGEub25Ub3VjaE1vdmUscC5wYXNzaXZlTGlzdGVuZXI/e3Bhc3NpdmU6ITEsY2FwdHVyZTpjfTpjKSxsLmFkZEV2ZW50TGlzdGVuZXIoci5lbmQsYS5vblRvdWNoRW5kLHUpfShzLnNpbXVsYXRlVG91Y2gmJiF3LmlvcyYmIXcuYW5kcm9pZHx8cy5zaW11bGF0ZVRvdWNoJiYhcC50b3VjaCYmdy5pb3MpJiYobC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsYS5vblRvdWNoU3RhcnQsITEpLGUuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLGEub25Ub3VjaE1vdmUsYyksZS5hZGRFdmVudExpc3RlbmVyKFwibW91c2V1cFwiLGEub25Ub3VjaEVuZCwhMSkpfWVsc2UgbC5hZGRFdmVudExpc3RlbmVyKHIuc3RhcnQsYS5vblRvdWNoU3RhcnQsITEpLGUuYWRkRXZlbnRMaXN0ZW5lcihyLm1vdmUsYS5vblRvdWNoTW92ZSxjKSxlLmFkZEV2ZW50TGlzdGVuZXIoci5lbmQsYS5vblRvdWNoRW5kLCExKTsocy5wcmV2ZW50Q2xpY2tzfHxzLnByZXZlbnRDbGlja3NQcm9wYWdhdGlvbikmJmwuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsYS5vbkNsaWNrLCEwKSxhLm9uKHcuaW9zfHx3LmFuZHJvaWQ/XCJyZXNpemUgb3JpZW50YXRpb25jaGFuZ2Ugb2JzZXJ2ZXJVcGRhdGVcIjpcInJlc2l6ZSBvYnNlcnZlclVwZGF0ZVwiLHksITApfSxkZXRhY2hFdmVudHM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGE9dC5wYXJhbXMsaT10LnRvdWNoRXZlbnRzLHM9dC5lbCxyPXQud3JhcHBlckVsLG49XCJjb250YWluZXJcIj09PWEudG91Y2hFdmVudHNUYXJnZXQ/czpyLG89ISFhLm5lc3RlZDtpZihwLnRvdWNofHwhcC5wb2ludGVyRXZlbnRzJiYhcC5wcmVmaXhlZFBvaW50ZXJFdmVudHMpe2lmKHAudG91Y2gpe3ZhciBsPSEoXCJvblRvdWNoU3RhcnRcIiE9PWkuc3RhcnR8fCFwLnBhc3NpdmVMaXN0ZW5lcnx8IWEucGFzc2l2ZUxpc3RlbmVycykmJntwYXNzaXZlOiEwLGNhcHR1cmU6ITF9O24ucmVtb3ZlRXZlbnRMaXN0ZW5lcihpLnN0YXJ0LHQub25Ub3VjaFN0YXJ0LGwpLG4ucmVtb3ZlRXZlbnRMaXN0ZW5lcihpLm1vdmUsdC5vblRvdWNoTW92ZSxvKSxuLnJlbW92ZUV2ZW50TGlzdGVuZXIoaS5lbmQsdC5vblRvdWNoRW5kLGwpfShhLnNpbXVsYXRlVG91Y2gmJiF3LmlvcyYmIXcuYW5kcm9pZHx8YS5zaW11bGF0ZVRvdWNoJiYhcC50b3VjaCYmdy5pb3MpJiYobi5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsdC5vblRvdWNoU3RhcnQsITEpLGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLHQub25Ub3VjaE1vdmUsbyksZS5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2V1cFwiLHQub25Ub3VjaEVuZCwhMSkpfWVsc2Ugbi5yZW1vdmVFdmVudExpc3RlbmVyKGkuc3RhcnQsdC5vblRvdWNoU3RhcnQsITEpLGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihpLm1vdmUsdC5vblRvdWNoTW92ZSxvKSxlLnJlbW92ZUV2ZW50TGlzdGVuZXIoaS5lbmQsdC5vblRvdWNoRW5kLCExKTsoYS5wcmV2ZW50Q2xpY2tzfHxhLnByZXZlbnRDbGlja3NQcm9wYWdhdGlvbikmJm4ucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsdC5vbkNsaWNrLCEwKSx0Lm9mZih3Lmlvc3x8dy5hbmRyb2lkP1wicmVzaXplIG9yaWVudGF0aW9uY2hhbmdlIG9ic2VydmVyVXBkYXRlXCI6XCJyZXNpemUgb2JzZXJ2ZXJVcGRhdGVcIix5KX19LEU9e3NldEJyZWFrcG9pbnQ6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9ZS5hY3RpdmVJbmRleCxhPWUuaW5pdGlhbGl6ZWQsaT1lLmxvb3BlZFNsaWRlczt2b2lkIDA9PT1pJiYoaT0wKTt2YXIgcz1lLnBhcmFtcyxyPXMuYnJlYWtwb2ludHM7aWYociYmKCFyfHwwIT09T2JqZWN0LmtleXMocikubGVuZ3RoKSl7dmFyIG49ZS5nZXRCcmVha3BvaW50KHIpO2lmKG4mJmUuY3VycmVudEJyZWFrcG9pbnQhPT1uKXt2YXIgbz1uIGluIHI/cltuXTp2b2lkIDA7byYmW1wic2xpZGVzUGVyVmlld1wiLFwic3BhY2VCZXR3ZWVuXCIsXCJzbGlkZXNQZXJHcm91cFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciB0PW9bZV07dm9pZCAwIT09dCYmKG9bZV09XCJzbGlkZXNQZXJWaWV3XCIhPT1lfHxcIkFVVE9cIiE9PXQmJlwiYXV0b1wiIT09dD9cInNsaWRlc1BlclZpZXdcIj09PWU/cGFyc2VGbG9hdCh0KTpwYXJzZUludCh0LDEwKTpcImF1dG9cIil9KTt2YXIgbD1vfHxlLm9yaWdpbmFsUGFyYW1zLHA9cy5sb29wJiZsLnNsaWRlc1BlclZpZXchPT1zLnNsaWRlc1BlclZpZXc7ZC5leHRlbmQoZS5wYXJhbXMsbCksZC5leHRlbmQoZSx7YWxsb3dUb3VjaE1vdmU6ZS5wYXJhbXMuYWxsb3dUb3VjaE1vdmUsYWxsb3dTbGlkZU5leHQ6ZS5wYXJhbXMuYWxsb3dTbGlkZU5leHQsYWxsb3dTbGlkZVByZXY6ZS5wYXJhbXMuYWxsb3dTbGlkZVByZXZ9KSxlLmN1cnJlbnRCcmVha3BvaW50PW4scCYmYSYmKGUubG9vcERlc3Ryb3koKSxlLmxvb3BDcmVhdGUoKSxlLnVwZGF0ZVNsaWRlcygpLGUuc2xpZGVUbyh0LWkrZS5sb29wZWRTbGlkZXMsMCwhMSkpLGUuZW1pdChcImJyZWFrcG9pbnRcIixsKX19fSxnZXRCcmVha3BvaW50OmZ1bmN0aW9uKGUpe2lmKGUpe3ZhciBhPSExLGk9W107T2JqZWN0LmtleXMoZSkuZm9yRWFjaChmdW5jdGlvbihlKXtpLnB1c2goZSl9KSxpLnNvcnQoZnVuY3Rpb24oZSx0KXtyZXR1cm4gcGFyc2VJbnQoZSwxMCktcGFyc2VJbnQodCwxMCl9KTtmb3IodmFyIHM9MDtzPGkubGVuZ3RoO3MrPTEpe3ZhciByPWlbc107dGhpcy5wYXJhbXMuYnJlYWtwb2ludHNJbnZlcnNlP3I8PXQuaW5uZXJXaWR0aCYmKGE9cik6cj49dC5pbm5lcldpZHRoJiYhYSYmKGE9cil9cmV0dXJuIGF8fFwibWF4XCJ9fX0sUz17aXNJRTohIXQubmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvVHJpZGVudC9nKXx8ISF0Lm5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL01TSUUvZyksaXNFZGdlOiEhdC5uYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC9FZGdlL2cpLGlzU2FmYXJpOih4PXQubmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpLDA8PXguaW5kZXhPZihcInNhZmFyaVwiKSYmeC5pbmRleE9mKFwiY2hyb21lXCIpPDAmJnguaW5kZXhPZihcImFuZHJvaWRcIik8MCksaXNVaVdlYlZpZXc6LyhpUGhvbmV8aVBvZHxpUGFkKS4qQXBwbGVXZWJLaXQoPyEuKlNhZmFyaSkvaS50ZXN0KHQubmF2aWdhdG9yLnVzZXJBZ2VudCl9LEM9e2luaXQ6ITAsZGlyZWN0aW9uOlwiaG9yaXpvbnRhbFwiLHRvdWNoRXZlbnRzVGFyZ2V0OlwiY29udGFpbmVyXCIsaW5pdGlhbFNsaWRlOjAsc3BlZWQ6MzAwLHByZXZlbnRJbnRlcmFjdGlvbk9uVHJhbnNpdGlvbjohMSxlZGdlU3dpcGVEZXRlY3Rpb246ITEsZWRnZVN3aXBlVGhyZXNob2xkOjIwLGZyZWVNb2RlOiExLGZyZWVNb2RlTW9tZW50dW06ITAsZnJlZU1vZGVNb21lbnR1bVJhdGlvOjEsZnJlZU1vZGVNb21lbnR1bUJvdW5jZTohMCxmcmVlTW9kZU1vbWVudHVtQm91bmNlUmF0aW86MSxmcmVlTW9kZU1vbWVudHVtVmVsb2NpdHlSYXRpbzoxLGZyZWVNb2RlU3RpY2t5OiExLGZyZWVNb2RlTWluaW11bVZlbG9jaXR5Oi4wMixhdXRvSGVpZ2h0OiExLHNldFdyYXBwZXJTaXplOiExLHZpcnR1YWxUcmFuc2xhdGU6ITEsZWZmZWN0Olwic2xpZGVcIixicmVha3BvaW50czp2b2lkIDAsYnJlYWtwb2ludHNJbnZlcnNlOiExLHNwYWNlQmV0d2VlbjowLHNsaWRlc1BlclZpZXc6MSxzbGlkZXNQZXJDb2x1bW46MSxzbGlkZXNQZXJDb2x1bW5GaWxsOlwiY29sdW1uXCIsc2xpZGVzUGVyR3JvdXA6MSxjZW50ZXJlZFNsaWRlczohMSxzbGlkZXNPZmZzZXRCZWZvcmU6MCxzbGlkZXNPZmZzZXRBZnRlcjowLG5vcm1hbGl6ZVNsaWRlSW5kZXg6ITAsY2VudGVySW5zdWZmaWNpZW50U2xpZGVzOiExLHdhdGNoT3ZlcmZsb3c6ITEscm91bmRMZW5ndGhzOiExLHRvdWNoUmF0aW86MSx0b3VjaEFuZ2xlOjQ1LHNpbXVsYXRlVG91Y2g6ITAsc2hvcnRTd2lwZXM6ITAsbG9uZ1N3aXBlczohMCxsb25nU3dpcGVzUmF0aW86LjUsbG9uZ1N3aXBlc01zOjMwMCxmb2xsb3dGaW5nZXI6ITAsYWxsb3dUb3VjaE1vdmU6ITAsdGhyZXNob2xkOjAsdG91Y2hNb3ZlU3RvcFByb3BhZ2F0aW9uOiEwLHRvdWNoU3RhcnRQcmV2ZW50RGVmYXVsdDohMCx0b3VjaFN0YXJ0Rm9yY2VQcmV2ZW50RGVmYXVsdDohMSx0b3VjaFJlbGVhc2VPbkVkZ2VzOiExLHVuaXF1ZU5hdkVsZW1lbnRzOiEwLHJlc2lzdGFuY2U6ITAscmVzaXN0YW5jZVJhdGlvOi44NSx3YXRjaFNsaWRlc1Byb2dyZXNzOiExLHdhdGNoU2xpZGVzVmlzaWJpbGl0eTohMSxncmFiQ3Vyc29yOiExLHByZXZlbnRDbGlja3M6ITAscHJldmVudENsaWNrc1Byb3BhZ2F0aW9uOiEwLHNsaWRlVG9DbGlja2VkU2xpZGU6ITEscHJlbG9hZEltYWdlczohMCx1cGRhdGVPbkltYWdlc1JlYWR5OiEwLGxvb3A6ITEsbG9vcEFkZGl0aW9uYWxTbGlkZXM6MCxsb29wZWRTbGlkZXM6bnVsbCxsb29wRmlsbEdyb3VwV2l0aEJsYW5rOiExLGFsbG93U2xpZGVQcmV2OiEwLGFsbG93U2xpZGVOZXh0OiEwLHN3aXBlSGFuZGxlcjpudWxsLG5vU3dpcGluZzohMCxub1N3aXBpbmdDbGFzczpcInN3aXBlci1uby1zd2lwaW5nXCIsbm9Td2lwaW5nU2VsZWN0b3I6bnVsbCxwYXNzaXZlTGlzdGVuZXJzOiEwLGNvbnRhaW5lck1vZGlmaWVyQ2xhc3M6XCJzd2lwZXItY29udGFpbmVyLVwiLHNsaWRlQ2xhc3M6XCJzd2lwZXItc2xpZGVcIixzbGlkZUJsYW5rQ2xhc3M6XCJzd2lwZXItc2xpZGUtaW52aXNpYmxlLWJsYW5rXCIsc2xpZGVBY3RpdmVDbGFzczpcInN3aXBlci1zbGlkZS1hY3RpdmVcIixzbGlkZUR1cGxpY2F0ZUFjdGl2ZUNsYXNzOlwic3dpcGVyLXNsaWRlLWR1cGxpY2F0ZS1hY3RpdmVcIixzbGlkZVZpc2libGVDbGFzczpcInN3aXBlci1zbGlkZS12aXNpYmxlXCIsc2xpZGVEdXBsaWNhdGVDbGFzczpcInN3aXBlci1zbGlkZS1kdXBsaWNhdGVcIixzbGlkZU5leHRDbGFzczpcInN3aXBlci1zbGlkZS1uZXh0XCIsc2xpZGVEdXBsaWNhdGVOZXh0Q2xhc3M6XCJzd2lwZXItc2xpZGUtZHVwbGljYXRlLW5leHRcIixzbGlkZVByZXZDbGFzczpcInN3aXBlci1zbGlkZS1wcmV2XCIsc2xpZGVEdXBsaWNhdGVQcmV2Q2xhc3M6XCJzd2lwZXItc2xpZGUtZHVwbGljYXRlLXByZXZcIix3cmFwcGVyQ2xhc3M6XCJzd2lwZXItd3JhcHBlclwiLHJ1bkNhbGxiYWNrc09uSW5pdDohMH0sTT17dXBkYXRlOmgsdHJhbnNsYXRlOnYsdHJhbnNpdGlvbjp7c2V0VHJhbnNpdGlvbjpmdW5jdGlvbihlLHQpe3RoaXMuJHdyYXBwZXJFbC50cmFuc2l0aW9uKGUpLHRoaXMuZW1pdChcInNldFRyYW5zaXRpb25cIixlLHQpfSx0cmFuc2l0aW9uU3RhcnQ6ZnVuY3Rpb24oZSx0KXt2b2lkIDA9PT1lJiYoZT0hMCk7dmFyIGE9dGhpcyxpPWEuYWN0aXZlSW5kZXgscz1hLnBhcmFtcyxyPWEucHJldmlvdXNJbmRleDtzLmF1dG9IZWlnaHQmJmEudXBkYXRlQXV0b0hlaWdodCgpO3ZhciBuPXQ7aWYobnx8KG49cjxpP1wibmV4dFwiOmk8cj9cInByZXZcIjpcInJlc2V0XCIpLGEuZW1pdChcInRyYW5zaXRpb25TdGFydFwiKSxlJiZpIT09cil7aWYoXCJyZXNldFwiPT09bilyZXR1cm4gdm9pZCBhLmVtaXQoXCJzbGlkZVJlc2V0VHJhbnNpdGlvblN0YXJ0XCIpO2EuZW1pdChcInNsaWRlQ2hhbmdlVHJhbnNpdGlvblN0YXJ0XCIpLFwibmV4dFwiPT09bj9hLmVtaXQoXCJzbGlkZU5leHRUcmFuc2l0aW9uU3RhcnRcIik6YS5lbWl0KFwic2xpZGVQcmV2VHJhbnNpdGlvblN0YXJ0XCIpfX0sdHJhbnNpdGlvbkVuZDpmdW5jdGlvbihlLHQpe3ZvaWQgMD09PWUmJihlPSEwKTt2YXIgYT10aGlzLGk9YS5hY3RpdmVJbmRleCxzPWEucHJldmlvdXNJbmRleDthLmFuaW1hdGluZz0hMSxhLnNldFRyYW5zaXRpb24oMCk7dmFyIHI9dDtpZihyfHwocj1zPGk/XCJuZXh0XCI6aTxzP1wicHJldlwiOlwicmVzZXRcIiksYS5lbWl0KFwidHJhbnNpdGlvbkVuZFwiKSxlJiZpIT09cyl7aWYoXCJyZXNldFwiPT09cilyZXR1cm4gdm9pZCBhLmVtaXQoXCJzbGlkZVJlc2V0VHJhbnNpdGlvbkVuZFwiKTthLmVtaXQoXCJzbGlkZUNoYW5nZVRyYW5zaXRpb25FbmRcIiksXCJuZXh0XCI9PT1yP2EuZW1pdChcInNsaWRlTmV4dFRyYW5zaXRpb25FbmRcIik6YS5lbWl0KFwic2xpZGVQcmV2VHJhbnNpdGlvbkVuZFwiKX19fSxzbGlkZTpmLGxvb3A6bSxncmFiQ3Vyc29yOmcsbWFuaXB1bGF0aW9uOmIsZXZlbnRzOlQsYnJlYWtwb2ludHM6RSxjaGVja092ZXJmbG93OntjaGVja092ZXJmbG93OmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PWUuaXNMb2NrZWQ7ZS5pc0xvY2tlZD0xPT09ZS5zbmFwR3JpZC5sZW5ndGgsZS5hbGxvd1NsaWRlTmV4dD0hZS5pc0xvY2tlZCxlLmFsbG93U2xpZGVQcmV2PSFlLmlzTG9ja2VkLHQhPT1lLmlzTG9ja2VkJiZlLmVtaXQoZS5pc0xvY2tlZD9cImxvY2tcIjpcInVubG9ja1wiKSx0JiZ0IT09ZS5pc0xvY2tlZCYmKGUuaXNFbmQ9ITEsZS5uYXZpZ2F0aW9uLnVwZGF0ZSgpKX19LGNsYXNzZXM6e2FkZENsYXNzZXM6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLmNsYXNzTmFtZXMsdD10aGlzLnBhcmFtcyxhPXRoaXMucnRsLGk9dGhpcy4kZWwscz1bXTtzLnB1c2godC5kaXJlY3Rpb24pLHQuZnJlZU1vZGUmJnMucHVzaChcImZyZWUtbW9kZVwiKSxwLmZsZXhib3h8fHMucHVzaChcIm5vLWZsZXhib3hcIiksdC5hdXRvSGVpZ2h0JiZzLnB1c2goXCJhdXRvaGVpZ2h0XCIpLGEmJnMucHVzaChcInJ0bFwiKSwxPHQuc2xpZGVzUGVyQ29sdW1uJiZzLnB1c2goXCJtdWx0aXJvd1wiKSx3LmFuZHJvaWQmJnMucHVzaChcImFuZHJvaWRcIiksdy5pb3MmJnMucHVzaChcImlvc1wiKSwoUy5pc0lFfHxTLmlzRWRnZSkmJihwLnBvaW50ZXJFdmVudHN8fHAucHJlZml4ZWRQb2ludGVyRXZlbnRzKSYmcy5wdXNoKFwid3A4LVwiK3QuZGlyZWN0aW9uKSxzLmZvckVhY2goZnVuY3Rpb24oYSl7ZS5wdXNoKHQuY29udGFpbmVyTW9kaWZpZXJDbGFzcythKX0pLGkuYWRkQ2xhc3MoZS5qb2luKFwiIFwiKSl9LHJlbW92ZUNsYXNzZXM6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLiRlbCx0PXRoaXMuY2xhc3NOYW1lcztlLnJlbW92ZUNsYXNzKHQuam9pbihcIiBcIikpfX0saW1hZ2VzOntsb2FkSW1hZ2U6ZnVuY3Rpb24oZSxhLGkscyxyLG4pe3ZhciBvO2Z1bmN0aW9uIGwoKXtuJiZuKCl9ZS5jb21wbGV0ZSYmcj9sKCk6YT8oKG89bmV3IHQuSW1hZ2UpLm9ubG9hZD1sLG8ub25lcnJvcj1sLHMmJihvLnNpemVzPXMpLGkmJihvLnNyY3NldD1pKSxhJiYoby5zcmM9YSkpOmwoKX0scHJlbG9hZEltYWdlczpmdW5jdGlvbigpe3ZhciBlPXRoaXM7ZnVuY3Rpb24gdCgpe251bGwhPWUmJmUmJiFlLmRlc3Ryb3llZCYmKHZvaWQgMCE9PWUuaW1hZ2VzTG9hZGVkJiYoZS5pbWFnZXNMb2FkZWQrPTEpLGUuaW1hZ2VzTG9hZGVkPT09ZS5pbWFnZXNUb0xvYWQubGVuZ3RoJiYoZS5wYXJhbXMudXBkYXRlT25JbWFnZXNSZWFkeSYmZS51cGRhdGUoKSxlLmVtaXQoXCJpbWFnZXNSZWFkeVwiKSkpfWUuaW1hZ2VzVG9Mb2FkPWUuJGVsLmZpbmQoXCJpbWdcIik7Zm9yKHZhciBhPTA7YTxlLmltYWdlc1RvTG9hZC5sZW5ndGg7YSs9MSl7dmFyIGk9ZS5pbWFnZXNUb0xvYWRbYV07ZS5sb2FkSW1hZ2UoaSxpLmN1cnJlbnRTcmN8fGkuZ2V0QXR0cmlidXRlKFwic3JjXCIpLGkuc3Jjc2V0fHxpLmdldEF0dHJpYnV0ZShcInNyY3NldFwiKSxpLnNpemVzfHxpLmdldEF0dHJpYnV0ZShcInNpemVzXCIpLCEwLHQpfX19fSxrPXt9LFA9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCgpe2Zvcih2YXIgYSxzLHIsbj1bXSxvPWFyZ3VtZW50cy5sZW5ndGg7by0tOyluW29dPWFyZ3VtZW50c1tvXTsxPT09bi5sZW5ndGgmJm5bMF0uY29uc3RydWN0b3ImJm5bMF0uY29uc3RydWN0b3I9PT1PYmplY3Q/cj1uWzBdOihzPShhPW4pWzBdLHI9YVsxXSkscnx8KHI9e30pLHI9ZC5leHRlbmQoe30scikscyYmIXIuZWwmJihyLmVsPXMpLGUuY2FsbCh0aGlzLHIpLE9iamVjdC5rZXlzKE0pLmZvckVhY2goZnVuY3Rpb24oZSl7T2JqZWN0LmtleXMoTVtlXSkuZm9yRWFjaChmdW5jdGlvbihhKXt0LnByb3RvdHlwZVthXXx8KHQucHJvdG90eXBlW2FdPU1bZV1bYV0pfSl9KTt2YXIgbD10aGlzO3ZvaWQgMD09PWwubW9kdWxlcyYmKGwubW9kdWxlcz17fSksT2JqZWN0LmtleXMobC5tb2R1bGVzKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciB0PWwubW9kdWxlc1tlXTtpZih0LnBhcmFtcyl7dmFyIGE9T2JqZWN0LmtleXModC5wYXJhbXMpWzBdLGk9dC5wYXJhbXNbYV07aWYoXCJvYmplY3RcIiE9dHlwZW9mIGl8fG51bGw9PT1pKXJldHVybjtpZighKGEgaW4gciYmXCJlbmFibGVkXCJpbiBpKSlyZXR1cm47ITA9PT1yW2FdJiYoclthXT17ZW5hYmxlZDohMH0pLFwib2JqZWN0XCIhPXR5cGVvZiByW2FdfHxcImVuYWJsZWRcImluIHJbYV18fChyW2FdLmVuYWJsZWQ9ITApLHJbYV18fChyW2FdPXtlbmFibGVkOiExfSl9fSk7dmFyIGM9ZC5leHRlbmQoe30sQyk7bC51c2VNb2R1bGVzUGFyYW1zKGMpLGwucGFyYW1zPWQuZXh0ZW5kKHt9LGMsayxyKSxsLm9yaWdpbmFsUGFyYW1zPWQuZXh0ZW5kKHt9LGwucGFyYW1zKSxsLnBhc3NlZFBhcmFtcz1kLmV4dGVuZCh7fSxyKTt2YXIgdT0obC4kPWkpKGwucGFyYW1zLmVsKTtpZihzPXVbMF0pe2lmKDE8dS5sZW5ndGgpe3ZhciBoPVtdO3JldHVybiB1LmVhY2goZnVuY3Rpb24oZSxhKXt2YXIgaT1kLmV4dGVuZCh7fSxyLHtlbDphfSk7aC5wdXNoKG5ldyB0KGkpKX0pLGh9cy5zd2lwZXI9bCx1LmRhdGEoXCJzd2lwZXJcIixsKTt2YXIgdixmLG09dS5jaGlsZHJlbihcIi5cIitsLnBhcmFtcy53cmFwcGVyQ2xhc3MpO3JldHVybiBkLmV4dGVuZChsLHskZWw6dSxlbDpzLCR3cmFwcGVyRWw6bSx3cmFwcGVyRWw6bVswXSxjbGFzc05hbWVzOltdLHNsaWRlczppKCksc2xpZGVzR3JpZDpbXSxzbmFwR3JpZDpbXSxzbGlkZXNTaXplc0dyaWQ6W10saXNIb3Jpem9udGFsOmZ1bmN0aW9uKCl7cmV0dXJuXCJob3Jpem9udGFsXCI9PT1sLnBhcmFtcy5kaXJlY3Rpb259LGlzVmVydGljYWw6ZnVuY3Rpb24oKXtyZXR1cm5cInZlcnRpY2FsXCI9PT1sLnBhcmFtcy5kaXJlY3Rpb259LHJ0bDpcInJ0bFwiPT09cy5kaXIudG9Mb3dlckNhc2UoKXx8XCJydGxcIj09PXUuY3NzKFwiZGlyZWN0aW9uXCIpLHJ0bFRyYW5zbGF0ZTpcImhvcml6b250YWxcIj09PWwucGFyYW1zLmRpcmVjdGlvbiYmKFwicnRsXCI9PT1zLmRpci50b0xvd2VyQ2FzZSgpfHxcInJ0bFwiPT09dS5jc3MoXCJkaXJlY3Rpb25cIikpLHdyb25nUlRMOlwiLXdlYmtpdC1ib3hcIj09PW0uY3NzKFwiZGlzcGxheVwiKSxhY3RpdmVJbmRleDowLHJlYWxJbmRleDowLGlzQmVnaW5uaW5nOiEwLGlzRW5kOiExLHRyYW5zbGF0ZTowLHByZXZpb3VzVHJhbnNsYXRlOjAscHJvZ3Jlc3M6MCx2ZWxvY2l0eTowLGFuaW1hdGluZzohMSxhbGxvd1NsaWRlTmV4dDpsLnBhcmFtcy5hbGxvd1NsaWRlTmV4dCxhbGxvd1NsaWRlUHJldjpsLnBhcmFtcy5hbGxvd1NsaWRlUHJldix0b3VjaEV2ZW50czoodj1bXCJ0b3VjaHN0YXJ0XCIsXCJ0b3VjaG1vdmVcIixcInRvdWNoZW5kXCJdLGY9W1wibW91c2Vkb3duXCIsXCJtb3VzZW1vdmVcIixcIm1vdXNldXBcIl0scC5wb2ludGVyRXZlbnRzP2Y9W1wicG9pbnRlcmRvd25cIixcInBvaW50ZXJtb3ZlXCIsXCJwb2ludGVydXBcIl06cC5wcmVmaXhlZFBvaW50ZXJFdmVudHMmJihmPVtcIk1TUG9pbnRlckRvd25cIixcIk1TUG9pbnRlck1vdmVcIixcIk1TUG9pbnRlclVwXCJdKSxsLnRvdWNoRXZlbnRzVG91Y2g9e3N0YXJ0OnZbMF0sbW92ZTp2WzFdLGVuZDp2WzJdfSxsLnRvdWNoRXZlbnRzRGVza3RvcD17c3RhcnQ6ZlswXSxtb3ZlOmZbMV0sZW5kOmZbMl19LHAudG91Y2h8fCFsLnBhcmFtcy5zaW11bGF0ZVRvdWNoP2wudG91Y2hFdmVudHNUb3VjaDpsLnRvdWNoRXZlbnRzRGVza3RvcCksdG91Y2hFdmVudHNEYXRhOntpc1RvdWNoZWQ6dm9pZCAwLGlzTW92ZWQ6dm9pZCAwLGFsbG93VG91Y2hDYWxsYmFja3M6dm9pZCAwLHRvdWNoU3RhcnRUaW1lOnZvaWQgMCxpc1Njcm9sbGluZzp2b2lkIDAsY3VycmVudFRyYW5zbGF0ZTp2b2lkIDAsc3RhcnRUcmFuc2xhdGU6dm9pZCAwLGFsbG93VGhyZXNob2xkTW92ZTp2b2lkIDAsZm9ybUVsZW1lbnRzOlwiaW5wdXQsIHNlbGVjdCwgb3B0aW9uLCB0ZXh0YXJlYSwgYnV0dG9uLCB2aWRlb1wiLGxhc3RDbGlja1RpbWU6ZC5ub3coKSxjbGlja1RpbWVvdXQ6dm9pZCAwLHZlbG9jaXRpZXM6W10sYWxsb3dNb21lbnR1bUJvdW5jZTp2b2lkIDAsaXNUb3VjaEV2ZW50OnZvaWQgMCxzdGFydE1vdmluZzp2b2lkIDB9LGFsbG93Q2xpY2s6ITAsYWxsb3dUb3VjaE1vdmU6bC5wYXJhbXMuYWxsb3dUb3VjaE1vdmUsdG91Y2hlczp7c3RhcnRYOjAsc3RhcnRZOjAsY3VycmVudFg6MCxjdXJyZW50WTowLGRpZmY6MH0saW1hZ2VzVG9Mb2FkOltdLGltYWdlc0xvYWRlZDowfSksbC51c2VNb2R1bGVzKCksbC5wYXJhbXMuaW5pdCYmbC5pbml0KCksbH19ZSYmKHQuX19wcm90b19fPWUpO3ZhciBhPXtleHRlbmRlZERlZmF1bHRzOntjb25maWd1cmFibGU6ITB9LGRlZmF1bHRzOntjb25maWd1cmFibGU6ITB9LENsYXNzOntjb25maWd1cmFibGU6ITB9LCQ6e2NvbmZpZ3VyYWJsZTohMH19O3JldHVybigodC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlJiZlLnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPXQpLnByb3RvdHlwZS5zbGlkZXNQZXJWaWV3RHluYW1pYz1mdW5jdGlvbigpe3ZhciBlPXRoaXMsdD1lLnBhcmFtcyxhPWUuc2xpZGVzLGk9ZS5zbGlkZXNHcmlkLHM9ZS5zaXplLHI9ZS5hY3RpdmVJbmRleCxuPTE7aWYodC5jZW50ZXJlZFNsaWRlcyl7Zm9yKHZhciBvLGw9YVtyXS5zd2lwZXJTbGlkZVNpemUsZD1yKzE7ZDxhLmxlbmd0aDtkKz0xKWFbZF0mJiFvJiYobis9MSxzPChsKz1hW2RdLnN3aXBlclNsaWRlU2l6ZSkmJihvPSEwKSk7Zm9yKHZhciBwPXItMTswPD1wO3AtPTEpYVtwXSYmIW8mJihuKz0xLHM8KGwrPWFbcF0uc3dpcGVyU2xpZGVTaXplKSYmKG89ITApKX1lbHNlIGZvcih2YXIgYz1yKzE7YzxhLmxlbmd0aDtjKz0xKWlbY10taVtyXTxzJiYobis9MSk7cmV0dXJuIG59LHQucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbigpe3ZhciBlPXRoaXM7aWYoZSYmIWUuZGVzdHJveWVkKXt2YXIgdD1lLnNuYXBHcmlkLGE9ZS5wYXJhbXM7YS5icmVha3BvaW50cyYmZS5zZXRCcmVha3BvaW50KCksZS51cGRhdGVTaXplKCksZS51cGRhdGVTbGlkZXMoKSxlLnVwZGF0ZVByb2dyZXNzKCksZS51cGRhdGVTbGlkZXNDbGFzc2VzKCksZS5wYXJhbXMuZnJlZU1vZGU/KGkoKSxlLnBhcmFtcy5hdXRvSGVpZ2h0JiZlLnVwZGF0ZUF1dG9IZWlnaHQoKSk6KChcImF1dG9cIj09PWUucGFyYW1zLnNsaWRlc1BlclZpZXd8fDE8ZS5wYXJhbXMuc2xpZGVzUGVyVmlldykmJmUuaXNFbmQmJiFlLnBhcmFtcy5jZW50ZXJlZFNsaWRlcz9lLnNsaWRlVG8oZS5zbGlkZXMubGVuZ3RoLTEsMCwhMSwhMCk6ZS5zbGlkZVRvKGUuYWN0aXZlSW5kZXgsMCwhMSwhMCkpfHxpKCksYS53YXRjaE92ZXJmbG93JiZ0IT09ZS5zbmFwR3JpZCYmZS5jaGVja092ZXJmbG93KCksZS5lbWl0KFwidXBkYXRlXCIpfWZ1bmN0aW9uIGkoKXt2YXIgdD1lLnJ0bFRyYW5zbGF0ZT8tMSplLnRyYW5zbGF0ZTplLnRyYW5zbGF0ZSxhPU1hdGgubWluKE1hdGgubWF4KHQsZS5tYXhUcmFuc2xhdGUoKSksZS5taW5UcmFuc2xhdGUoKSk7ZS5zZXRUcmFuc2xhdGUoYSksZS51cGRhdGVBY3RpdmVJbmRleCgpLGUudXBkYXRlU2xpZGVzQ2xhc3NlcygpfX0sdC5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3ZhciBlPXRoaXM7ZS5pbml0aWFsaXplZHx8KGUuZW1pdChcImJlZm9yZUluaXRcIiksZS5wYXJhbXMuYnJlYWtwb2ludHMmJmUuc2V0QnJlYWtwb2ludCgpLGUuYWRkQ2xhc3NlcygpLGUucGFyYW1zLmxvb3AmJmUubG9vcENyZWF0ZSgpLGUudXBkYXRlU2l6ZSgpLGUudXBkYXRlU2xpZGVzKCksZS5wYXJhbXMud2F0Y2hPdmVyZmxvdyYmZS5jaGVja092ZXJmbG93KCksZS5wYXJhbXMuZ3JhYkN1cnNvciYmZS5zZXRHcmFiQ3Vyc29yKCksZS5wYXJhbXMucHJlbG9hZEltYWdlcyYmZS5wcmVsb2FkSW1hZ2VzKCksZS5wYXJhbXMubG9vcD9lLnNsaWRlVG8oZS5wYXJhbXMuaW5pdGlhbFNsaWRlK2UubG9vcGVkU2xpZGVzLDAsZS5wYXJhbXMucnVuQ2FsbGJhY2tzT25Jbml0KTplLnNsaWRlVG8oZS5wYXJhbXMuaW5pdGlhbFNsaWRlLDAsZS5wYXJhbXMucnVuQ2FsbGJhY2tzT25Jbml0KSxlLmF0dGFjaEV2ZW50cygpLGUuaW5pdGlhbGl6ZWQ9ITAsZS5lbWl0KFwiaW5pdFwiKSl9LHQucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oZSx0KXt2b2lkIDA9PT1lJiYoZT0hMCksdm9pZCAwPT09dCYmKHQ9ITApO3ZhciBhPXRoaXMsaT1hLnBhcmFtcyxzPWEuJGVsLHI9YS4kd3JhcHBlckVsLG49YS5zbGlkZXM7cmV0dXJuIHZvaWQgMD09PWEucGFyYW1zfHxhLmRlc3Ryb3llZHx8KGEuZW1pdChcImJlZm9yZURlc3Ryb3lcIiksYS5pbml0aWFsaXplZD0hMSxhLmRldGFjaEV2ZW50cygpLGkubG9vcCYmYS5sb29wRGVzdHJveSgpLHQmJihhLnJlbW92ZUNsYXNzZXMoKSxzLnJlbW92ZUF0dHIoXCJzdHlsZVwiKSxyLnJlbW92ZUF0dHIoXCJzdHlsZVwiKSxuJiZuLmxlbmd0aCYmbi5yZW1vdmVDbGFzcyhbaS5zbGlkZVZpc2libGVDbGFzcyxpLnNsaWRlQWN0aXZlQ2xhc3MsaS5zbGlkZU5leHRDbGFzcyxpLnNsaWRlUHJldkNsYXNzXS5qb2luKFwiIFwiKSkucmVtb3ZlQXR0cihcInN0eWxlXCIpLnJlbW92ZUF0dHIoXCJkYXRhLXN3aXBlci1zbGlkZS1pbmRleFwiKS5yZW1vdmVBdHRyKFwiZGF0YS1zd2lwZXItY29sdW1uXCIpLnJlbW92ZUF0dHIoXCJkYXRhLXN3aXBlci1yb3dcIikpLGEuZW1pdChcImRlc3Ryb3lcIiksT2JqZWN0LmtleXMoYS5ldmVudHNMaXN0ZW5lcnMpLmZvckVhY2goZnVuY3Rpb24oZSl7YS5vZmYoZSl9KSwhMSE9PWUmJihhLiRlbFswXS5zd2lwZXI9bnVsbCxhLiRlbC5kYXRhKFwic3dpcGVyXCIsbnVsbCksZC5kZWxldGVQcm9wcyhhKSksYS5kZXN0cm95ZWQ9ITApLG51bGx9LHQuZXh0ZW5kRGVmYXVsdHM9ZnVuY3Rpb24oZSl7ZC5leHRlbmQoayxlKX0sYS5leHRlbmRlZERlZmF1bHRzLmdldD1mdW5jdGlvbigpe3JldHVybiBrfSxhLmRlZmF1bHRzLmdldD1mdW5jdGlvbigpe3JldHVybiBDfSxhLkNsYXNzLmdldD1mdW5jdGlvbigpe3JldHVybiBlfSxhLiQuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIGl9LE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHQsYSksdH0oYyksej17bmFtZTpcImRldmljZVwiLHByb3RvOntkZXZpY2U6d30sc3RhdGljOntkZXZpY2U6d319LCQ9e25hbWU6XCJzdXBwb3J0XCIscHJvdG86e3N1cHBvcnQ6cH0sc3RhdGljOntzdXBwb3J0OnB9fSxMPXtuYW1lOlwiYnJvd3NlclwiLHByb3RvOnticm93c2VyOlN9LHN0YXRpYzp7YnJvd3NlcjpTfX0sST17bmFtZTpcInJlc2l6ZVwiLGNyZWF0ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7ZC5leHRlbmQoZSx7cmVzaXplOntyZXNpemVIYW5kbGVyOmZ1bmN0aW9uKCl7ZSYmIWUuZGVzdHJveWVkJiZlLmluaXRpYWxpemVkJiYoZS5lbWl0KFwiYmVmb3JlUmVzaXplXCIpLGUuZW1pdChcInJlc2l6ZVwiKSl9LG9yaWVudGF0aW9uQ2hhbmdlSGFuZGxlcjpmdW5jdGlvbigpe2UmJiFlLmRlc3Ryb3llZCYmZS5pbml0aWFsaXplZCYmZS5lbWl0KFwib3JpZW50YXRpb25jaGFuZ2VcIil9fX0pfSxvbjp7aW5pdDpmdW5jdGlvbigpe3QuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLHRoaXMucmVzaXplLnJlc2l6ZUhhbmRsZXIpLHQuYWRkRXZlbnRMaXN0ZW5lcihcIm9yaWVudGF0aW9uY2hhbmdlXCIsdGhpcy5yZXNpemUub3JpZW50YXRpb25DaGFuZ2VIYW5kbGVyKX0sZGVzdHJveTpmdW5jdGlvbigpe3QucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLHRoaXMucmVzaXplLnJlc2l6ZUhhbmRsZXIpLHQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm9yaWVudGF0aW9uY2hhbmdlXCIsdGhpcy5yZXNpemUub3JpZW50YXRpb25DaGFuZ2VIYW5kbGVyKX19fSxEPXtmdW5jOnQuTXV0YXRpb25PYnNlcnZlcnx8dC5XZWJraXRNdXRhdGlvbk9ic2VydmVyLGF0dGFjaDpmdW5jdGlvbihlLGEpe3ZvaWQgMD09PWEmJihhPXt9KTt2YXIgaT10aGlzLHM9bmV3IEQuZnVuYyhmdW5jdGlvbihlKXtpZigxIT09ZS5sZW5ndGgpe3ZhciBhPWZ1bmN0aW9uKCl7aS5lbWl0KFwib2JzZXJ2ZXJVcGRhdGVcIixlWzBdKX07dC5yZXF1ZXN0QW5pbWF0aW9uRnJhbWU/dC5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoYSk6dC5zZXRUaW1lb3V0KGEsMCl9ZWxzZSBpLmVtaXQoXCJvYnNlcnZlclVwZGF0ZVwiLGVbMF0pfSk7cy5vYnNlcnZlKGUse2F0dHJpYnV0ZXM6dm9pZCAwPT09YS5hdHRyaWJ1dGVzfHxhLmF0dHJpYnV0ZXMsY2hpbGRMaXN0OnZvaWQgMD09PWEuY2hpbGRMaXN0fHxhLmNoaWxkTGlzdCxjaGFyYWN0ZXJEYXRhOnZvaWQgMD09PWEuY2hhcmFjdGVyRGF0YXx8YS5jaGFyYWN0ZXJEYXRhfSksaS5vYnNlcnZlci5vYnNlcnZlcnMucHVzaChzKX0saW5pdDpmdW5jdGlvbigpe3ZhciBlPXRoaXM7aWYocC5vYnNlcnZlciYmZS5wYXJhbXMub2JzZXJ2ZXIpe2lmKGUucGFyYW1zLm9ic2VydmVQYXJlbnRzKWZvcih2YXIgdD1lLiRlbC5wYXJlbnRzKCksYT0wO2E8dC5sZW5ndGg7YSs9MSllLm9ic2VydmVyLmF0dGFjaCh0W2FdKTtlLm9ic2VydmVyLmF0dGFjaChlLiRlbFswXSx7Y2hpbGRMaXN0OmUucGFyYW1zLm9ic2VydmVTbGlkZUNoaWxkcmVufSksZS5vYnNlcnZlci5hdHRhY2goZS4kd3JhcHBlckVsWzBdLHthdHRyaWJ1dGVzOiExfSl9fSxkZXN0cm95OmZ1bmN0aW9uKCl7dGhpcy5vYnNlcnZlci5vYnNlcnZlcnMuZm9yRWFjaChmdW5jdGlvbihlKXtlLmRpc2Nvbm5lY3QoKX0pLHRoaXMub2JzZXJ2ZXIub2JzZXJ2ZXJzPVtdfX0sTz17bmFtZTpcIm9ic2VydmVyXCIscGFyYW1zOntvYnNlcnZlcjohMSxvYnNlcnZlUGFyZW50czohMSxvYnNlcnZlU2xpZGVDaGlsZHJlbjohMX0sY3JlYXRlOmZ1bmN0aW9uKCl7ZC5leHRlbmQodGhpcyx7b2JzZXJ2ZXI6e2luaXQ6RC5pbml0LmJpbmQodGhpcyksYXR0YWNoOkQuYXR0YWNoLmJpbmQodGhpcyksZGVzdHJveTpELmRlc3Ryb3kuYmluZCh0aGlzKSxvYnNlcnZlcnM6W119fSl9LG9uOntpbml0OmZ1bmN0aW9uKCl7dGhpcy5vYnNlcnZlci5pbml0KCl9LGRlc3Ryb3k6ZnVuY3Rpb24oKXt0aGlzLm9ic2VydmVyLmRlc3Ryb3koKX19fSxBPXt1cGRhdGU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxhPXQucGFyYW1zLGk9YS5zbGlkZXNQZXJWaWV3LHM9YS5zbGlkZXNQZXJHcm91cCxyPWEuY2VudGVyZWRTbGlkZXMsbj10LnBhcmFtcy52aXJ0dWFsLG89bi5hZGRTbGlkZXNCZWZvcmUsbD1uLmFkZFNsaWRlc0FmdGVyLHA9dC52aXJ0dWFsLGM9cC5mcm9tLHU9cC50byxoPXAuc2xpZGVzLHY9cC5zbGlkZXNHcmlkLGY9cC5yZW5kZXJTbGlkZSxtPXAub2Zmc2V0O3QudXBkYXRlQWN0aXZlSW5kZXgoKTt2YXIgZyxiLHcseT10LmFjdGl2ZUluZGV4fHwwO2c9dC5ydGxUcmFuc2xhdGU/XCJyaWdodFwiOnQuaXNIb3Jpem9udGFsKCk/XCJsZWZ0XCI6XCJ0b3BcIixyPyhiPU1hdGguZmxvb3IoaS8yKStzK28sdz1NYXRoLmZsb29yKGkvMikrcytsKTooYj1pKyhzLTEpK28sdz1zK2wpO3ZhciB4PU1hdGgubWF4KCh5fHwwKS13LDApLFQ9TWF0aC5taW4oKHl8fDApK2IsaC5sZW5ndGgtMSksRT0odC5zbGlkZXNHcmlkW3hdfHwwKS0odC5zbGlkZXNHcmlkWzBdfHwwKTtmdW5jdGlvbiBTKCl7dC51cGRhdGVTbGlkZXMoKSx0LnVwZGF0ZVByb2dyZXNzKCksdC51cGRhdGVTbGlkZXNDbGFzc2VzKCksdC5sYXp5JiZ0LnBhcmFtcy5sYXp5LmVuYWJsZWQmJnQubGF6eS5sb2FkKCl9aWYoZC5leHRlbmQodC52aXJ0dWFsLHtmcm9tOngsdG86VCxvZmZzZXQ6RSxzbGlkZXNHcmlkOnQuc2xpZGVzR3JpZH0pLGM9PT14JiZ1PT09VCYmIWUpcmV0dXJuIHQuc2xpZGVzR3JpZCE9PXYmJkUhPT1tJiZ0LnNsaWRlcy5jc3MoZyxFK1wicHhcIiksdm9pZCB0LnVwZGF0ZVByb2dyZXNzKCk7aWYodC5wYXJhbXMudmlydHVhbC5yZW5kZXJFeHRlcm5hbClyZXR1cm4gdC5wYXJhbXMudmlydHVhbC5yZW5kZXJFeHRlcm5hbC5jYWxsKHQse29mZnNldDpFLGZyb206eCx0bzpULHNsaWRlczpmdW5jdGlvbigpe2Zvcih2YXIgZT1bXSx0PXg7dDw9VDt0Kz0xKWUucHVzaChoW3RdKTtyZXR1cm4gZX0oKX0pLHZvaWQgUygpO3ZhciBDPVtdLE09W107aWYoZSl0LiR3cmFwcGVyRWwuZmluZChcIi5cIit0LnBhcmFtcy5zbGlkZUNsYXNzKS5yZW1vdmUoKTtlbHNlIGZvcih2YXIgaz1jO2s8PXU7ays9MSkoazx4fHxUPGspJiZ0LiR3cmFwcGVyRWwuZmluZChcIi5cIit0LnBhcmFtcy5zbGlkZUNsYXNzKydbZGF0YS1zd2lwZXItc2xpZGUtaW5kZXg9XCInK2srJ1wiXScpLnJlbW92ZSgpO2Zvcih2YXIgUD0wO1A8aC5sZW5ndGg7UCs9MSl4PD1QJiZQPD1UJiYodm9pZCAwPT09dXx8ZT9NLnB1c2goUCk6KHU8UCYmTS5wdXNoKFApLFA8YyYmQy5wdXNoKFApKSk7TS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3QuJHdyYXBwZXJFbC5hcHBlbmQoZihoW2VdLGUpKX0pLEMuc29ydChmdW5jdGlvbihlLHQpe3JldHVybiB0LWV9KS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3QuJHdyYXBwZXJFbC5wcmVwZW5kKGYoaFtlXSxlKSl9KSx0LiR3cmFwcGVyRWwuY2hpbGRyZW4oXCIuc3dpcGVyLXNsaWRlXCIpLmNzcyhnLEUrXCJweFwiKSxTKCl9LHJlbmRlclNsaWRlOmZ1bmN0aW9uKGUsdCl7dmFyIGE9dGhpcyxzPWEucGFyYW1zLnZpcnR1YWw7aWYocy5jYWNoZSYmYS52aXJ0dWFsLmNhY2hlW3RdKXJldHVybiBhLnZpcnR1YWwuY2FjaGVbdF07dmFyIHI9cy5yZW5kZXJTbGlkZT9pKHMucmVuZGVyU2xpZGUuY2FsbChhLGUsdCkpOmkoJzxkaXYgY2xhc3M9XCInK2EucGFyYW1zLnNsaWRlQ2xhc3MrJ1wiIGRhdGEtc3dpcGVyLXNsaWRlLWluZGV4PVwiJyt0KydcIj4nK2UrXCI8L2Rpdj5cIik7cmV0dXJuIHIuYXR0cihcImRhdGEtc3dpcGVyLXNsaWRlLWluZGV4XCIpfHxyLmF0dHIoXCJkYXRhLXN3aXBlci1zbGlkZS1pbmRleFwiLHQpLHMuY2FjaGUmJihhLnZpcnR1YWwuY2FjaGVbdF09cikscn0sYXBwZW5kU2xpZGU6ZnVuY3Rpb24oZSl7dGhpcy52aXJ0dWFsLnNsaWRlcy5wdXNoKGUpLHRoaXMudmlydHVhbC51cGRhdGUoITApfSxwcmVwZW5kU2xpZGU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztpZih0LnZpcnR1YWwuc2xpZGVzLnVuc2hpZnQoZSksdC5wYXJhbXMudmlydHVhbC5jYWNoZSl7dmFyIGE9dC52aXJ0dWFsLmNhY2hlLGk9e307T2JqZWN0LmtleXMoYSkuZm9yRWFjaChmdW5jdGlvbihlKXtpW2UrMV09YVtlXX0pLHQudmlydHVhbC5jYWNoZT1pfXQudmlydHVhbC51cGRhdGUoITApLHQuc2xpZGVOZXh0KDApfX0sTj17bmFtZTpcInZpcnR1YWxcIixwYXJhbXM6e3ZpcnR1YWw6e2VuYWJsZWQ6ITEsc2xpZGVzOltdLGNhY2hlOiEwLHJlbmRlclNsaWRlOm51bGwscmVuZGVyRXh0ZXJuYWw6bnVsbCxhZGRTbGlkZXNCZWZvcmU6MCxhZGRTbGlkZXNBZnRlcjowfX0sY3JlYXRlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztkLmV4dGVuZChlLHt2aXJ0dWFsOnt1cGRhdGU6QS51cGRhdGUuYmluZChlKSxhcHBlbmRTbGlkZTpBLmFwcGVuZFNsaWRlLmJpbmQoZSkscHJlcGVuZFNsaWRlOkEucHJlcGVuZFNsaWRlLmJpbmQoZSkscmVuZGVyU2xpZGU6QS5yZW5kZXJTbGlkZS5iaW5kKGUpLHNsaWRlczplLnBhcmFtcy52aXJ0dWFsLnNsaWRlcyxjYWNoZTp7fX19KX0sb246e2JlZm9yZUluaXQ6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2lmKGUucGFyYW1zLnZpcnR1YWwuZW5hYmxlZCl7ZS5jbGFzc05hbWVzLnB1c2goZS5wYXJhbXMuY29udGFpbmVyTW9kaWZpZXJDbGFzcytcInZpcnR1YWxcIik7dmFyIHQ9e3dhdGNoU2xpZGVzUHJvZ3Jlc3M6ITB9O2QuZXh0ZW5kKGUucGFyYW1zLHQpLGQuZXh0ZW5kKGUub3JpZ2luYWxQYXJhbXMsdCksZS5wYXJhbXMuaW5pdGlhbFNsaWRlfHxlLnZpcnR1YWwudXBkYXRlKCl9fSxzZXRUcmFuc2xhdGU6ZnVuY3Rpb24oKXt0aGlzLnBhcmFtcy52aXJ0dWFsLmVuYWJsZWQmJnRoaXMudmlydHVhbC51cGRhdGUoKX19fSxIPXtoYW5kbGU6ZnVuY3Rpb24oYSl7dmFyIGk9dGhpcyxzPWkucnRsVHJhbnNsYXRlLHI9YTtyLm9yaWdpbmFsRXZlbnQmJihyPXIub3JpZ2luYWxFdmVudCk7dmFyIG49ci5rZXlDb2RlfHxyLmNoYXJDb2RlO2lmKCFpLmFsbG93U2xpZGVOZXh0JiYoaS5pc0hvcml6b250YWwoKSYmMzk9PT1ufHxpLmlzVmVydGljYWwoKSYmNDA9PT1uKSlyZXR1cm4hMTtpZighaS5hbGxvd1NsaWRlUHJldiYmKGkuaXNIb3Jpem9udGFsKCkmJjM3PT09bnx8aS5pc1ZlcnRpY2FsKCkmJjM4PT09bikpcmV0dXJuITE7aWYoIShyLnNoaWZ0S2V5fHxyLmFsdEtleXx8ci5jdHJsS2V5fHxyLm1ldGFLZXl8fGUuYWN0aXZlRWxlbWVudCYmZS5hY3RpdmVFbGVtZW50Lm5vZGVOYW1lJiYoXCJpbnB1dFwiPT09ZS5hY3RpdmVFbGVtZW50Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCl8fFwidGV4dGFyZWFcIj09PWUuYWN0aXZlRWxlbWVudC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpKSkpe2lmKGkucGFyYW1zLmtleWJvYXJkLm9ubHlJblZpZXdwb3J0JiYoMzc9PT1ufHwzOT09PW58fDM4PT09bnx8NDA9PT1uKSl7dmFyIG89ITE7aWYoMDxpLiRlbC5wYXJlbnRzKFwiLlwiK2kucGFyYW1zLnNsaWRlQ2xhc3MpLmxlbmd0aCYmMD09PWkuJGVsLnBhcmVudHMoXCIuXCIraS5wYXJhbXMuc2xpZGVBY3RpdmVDbGFzcykubGVuZ3RoKXJldHVybjt2YXIgbD10LmlubmVyV2lkdGgsZD10LmlubmVySGVpZ2h0LHA9aS4kZWwub2Zmc2V0KCk7cyYmKHAubGVmdC09aS4kZWxbMF0uc2Nyb2xsTGVmdCk7Zm9yKHZhciBjPVtbcC5sZWZ0LHAudG9wXSxbcC5sZWZ0K2kud2lkdGgscC50b3BdLFtwLmxlZnQscC50b3AraS5oZWlnaHRdLFtwLmxlZnQraS53aWR0aCxwLnRvcCtpLmhlaWdodF1dLHU9MDt1PGMubGVuZ3RoO3UrPTEpe3ZhciBoPWNbdV07MDw9aFswXSYmaFswXTw9bCYmMDw9aFsxXSYmaFsxXTw9ZCYmKG89ITApfWlmKCFvKXJldHVybn1pLmlzSG9yaXpvbnRhbCgpPygzNyE9PW4mJjM5IT09bnx8KHIucHJldmVudERlZmF1bHQ/ci5wcmV2ZW50RGVmYXVsdCgpOnIucmV0dXJuVmFsdWU9ITEpLCgzOT09PW4mJiFzfHwzNz09PW4mJnMpJiZpLnNsaWRlTmV4dCgpLCgzNz09PW4mJiFzfHwzOT09PW4mJnMpJiZpLnNsaWRlUHJldigpKTooMzghPT1uJiY0MCE9PW58fChyLnByZXZlbnREZWZhdWx0P3IucHJldmVudERlZmF1bHQoKTpyLnJldHVyblZhbHVlPSExKSw0MD09PW4mJmkuc2xpZGVOZXh0KCksMzg9PT1uJiZpLnNsaWRlUHJldigpKSxpLmVtaXQoXCJrZXlQcmVzc1wiLG4pfX0sZW5hYmxlOmZ1bmN0aW9uKCl7dGhpcy5rZXlib2FyZC5lbmFibGVkfHwoaShlKS5vbihcImtleWRvd25cIix0aGlzLmtleWJvYXJkLmhhbmRsZSksdGhpcy5rZXlib2FyZC5lbmFibGVkPSEwKX0sZGlzYWJsZTpmdW5jdGlvbigpe3RoaXMua2V5Ym9hcmQuZW5hYmxlZCYmKGkoZSkub2ZmKFwia2V5ZG93blwiLHRoaXMua2V5Ym9hcmQuaGFuZGxlKSx0aGlzLmtleWJvYXJkLmVuYWJsZWQ9ITEpfX0sRz17bmFtZTpcImtleWJvYXJkXCIscGFyYW1zOntrZXlib2FyZDp7ZW5hYmxlZDohMSxvbmx5SW5WaWV3cG9ydDohMH19LGNyZWF0ZTpmdW5jdGlvbigpe2QuZXh0ZW5kKHRoaXMse2tleWJvYXJkOntlbmFibGVkOiExLGVuYWJsZTpILmVuYWJsZS5iaW5kKHRoaXMpLGRpc2FibGU6SC5kaXNhYmxlLmJpbmQodGhpcyksaGFuZGxlOkguaGFuZGxlLmJpbmQodGhpcyl9fSl9LG9uOntpbml0OmZ1bmN0aW9uKCl7dGhpcy5wYXJhbXMua2V5Ym9hcmQuZW5hYmxlZCYmdGhpcy5rZXlib2FyZC5lbmFibGUoKX0sZGVzdHJveTpmdW5jdGlvbigpe3RoaXMua2V5Ym9hcmQuZW5hYmxlZCYmdGhpcy5rZXlib2FyZC5kaXNhYmxlKCl9fX0sQj17bGFzdFNjcm9sbFRpbWU6ZC5ub3coKSxldmVudDotMTx0Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZihcImZpcmVmb3hcIik/XCJET01Nb3VzZVNjcm9sbFwiOmZ1bmN0aW9uKCl7dmFyIHQ9XCJvbndoZWVsXCIsYT10IGluIGU7aWYoIWEpe3ZhciBpPWUuY3JlYXRlRWxlbWVudChcImRpdlwiKTtpLnNldEF0dHJpYnV0ZSh0LFwicmV0dXJuO1wiKSxhPVwiZnVuY3Rpb25cIj09dHlwZW9mIGlbdF19cmV0dXJuIWEmJmUuaW1wbGVtZW50YXRpb24mJmUuaW1wbGVtZW50YXRpb24uaGFzRmVhdHVyZSYmITAhPT1lLmltcGxlbWVudGF0aW9uLmhhc0ZlYXR1cmUoXCJcIixcIlwiKSYmKGE9ZS5pbXBsZW1lbnRhdGlvbi5oYXNGZWF0dXJlKFwiRXZlbnRzLndoZWVsXCIsXCIzLjBcIikpLGF9KCk/XCJ3aGVlbFwiOlwibW91c2V3aGVlbFwiLG5vcm1hbGl6ZTpmdW5jdGlvbihlKXt2YXIgdD0wLGE9MCxpPTAscz0wO3JldHVyblwiZGV0YWlsXCJpbiBlJiYoYT1lLmRldGFpbCksXCJ3aGVlbERlbHRhXCJpbiBlJiYoYT0tZS53aGVlbERlbHRhLzEyMCksXCJ3aGVlbERlbHRhWVwiaW4gZSYmKGE9LWUud2hlZWxEZWx0YVkvMTIwKSxcIndoZWVsRGVsdGFYXCJpbiBlJiYodD0tZS53aGVlbERlbHRhWC8xMjApLFwiYXhpc1wiaW4gZSYmZS5heGlzPT09ZS5IT1JJWk9OVEFMX0FYSVMmJih0PWEsYT0wKSxpPTEwKnQscz0xMCphLFwiZGVsdGFZXCJpbiBlJiYocz1lLmRlbHRhWSksXCJkZWx0YVhcImluIGUmJihpPWUuZGVsdGFYKSwoaXx8cykmJmUuZGVsdGFNb2RlJiYoMT09PWUuZGVsdGFNb2RlPyhpKj00MCxzKj00MCk6KGkqPTgwMCxzKj04MDApKSxpJiYhdCYmKHQ9aTwxPy0xOjEpLHMmJiFhJiYoYT1zPDE/LTE6MSkse3NwaW5YOnQsc3Bpblk6YSxwaXhlbFg6aSxwaXhlbFk6c319LGhhbmRsZU1vdXNlRW50ZXI6ZnVuY3Rpb24oKXt0aGlzLm1vdXNlRW50ZXJlZD0hMH0saGFuZGxlTW91c2VMZWF2ZTpmdW5jdGlvbigpe3RoaXMubW91c2VFbnRlcmVkPSExfSxoYW5kbGU6ZnVuY3Rpb24oZSl7dmFyIGE9ZSxpPXRoaXMscz1pLnBhcmFtcy5tb3VzZXdoZWVsO2lmKCFpLm1vdXNlRW50ZXJlZCYmIXMucmVsZWFzZU9uRWRnZXMpcmV0dXJuITA7YS5vcmlnaW5hbEV2ZW50JiYoYT1hLm9yaWdpbmFsRXZlbnQpO3ZhciByPTAsbj1pLnJ0bFRyYW5zbGF0ZT8tMToxLG89Qi5ub3JtYWxpemUoYSk7aWYocy5mb3JjZVRvQXhpcylpZihpLmlzSG9yaXpvbnRhbCgpKXtpZighKE1hdGguYWJzKG8ucGl4ZWxYKT5NYXRoLmFicyhvLnBpeGVsWSkpKXJldHVybiEwO3I9by5waXhlbFgqbn1lbHNle2lmKCEoTWF0aC5hYnMoby5waXhlbFkpPk1hdGguYWJzKG8ucGl4ZWxYKSkpcmV0dXJuITA7cj1vLnBpeGVsWX1lbHNlIHI9TWF0aC5hYnMoby5waXhlbFgpPk1hdGguYWJzKG8ucGl4ZWxZKT8tby5waXhlbFgqbjotby5waXhlbFk7aWYoMD09PXIpcmV0dXJuITA7aWYocy5pbnZlcnQmJihyPS1yKSxpLnBhcmFtcy5mcmVlTW9kZSl7aS5wYXJhbXMubG9vcCYmaS5sb29wRml4KCk7dmFyIGw9aS5nZXRUcmFuc2xhdGUoKStyKnMuc2Vuc2l0aXZpdHkscD1pLmlzQmVnaW5uaW5nLGM9aS5pc0VuZDtpZihsPj1pLm1pblRyYW5zbGF0ZSgpJiYobD1pLm1pblRyYW5zbGF0ZSgpKSxsPD1pLm1heFRyYW5zbGF0ZSgpJiYobD1pLm1heFRyYW5zbGF0ZSgpKSxpLnNldFRyYW5zaXRpb24oMCksaS5zZXRUcmFuc2xhdGUobCksaS51cGRhdGVQcm9ncmVzcygpLGkudXBkYXRlQWN0aXZlSW5kZXgoKSxpLnVwZGF0ZVNsaWRlc0NsYXNzZXMoKSwoIXAmJmkuaXNCZWdpbm5pbmd8fCFjJiZpLmlzRW5kKSYmaS51cGRhdGVTbGlkZXNDbGFzc2VzKCksaS5wYXJhbXMuZnJlZU1vZGVTdGlja3kmJihjbGVhclRpbWVvdXQoaS5tb3VzZXdoZWVsLnRpbWVvdXQpLGkubW91c2V3aGVlbC50aW1lb3V0PWQubmV4dFRpY2soZnVuY3Rpb24oKXtpLnNsaWRlVG9DbG9zZXN0KCl9LDMwMCkpLGkuZW1pdChcInNjcm9sbFwiLGEpLGkucGFyYW1zLmF1dG9wbGF5JiZpLnBhcmFtcy5hdXRvcGxheURpc2FibGVPbkludGVyYWN0aW9uJiZpLmF1dG9wbGF5LnN0b3AoKSxsPT09aS5taW5UcmFuc2xhdGUoKXx8bD09PWkubWF4VHJhbnNsYXRlKCkpcmV0dXJuITB9ZWxzZXtpZig2MDxkLm5vdygpLWkubW91c2V3aGVlbC5sYXN0U2Nyb2xsVGltZSlpZihyPDApaWYoaS5pc0VuZCYmIWkucGFyYW1zLmxvb3B8fGkuYW5pbWF0aW5nKXtpZihzLnJlbGVhc2VPbkVkZ2VzKXJldHVybiEwfWVsc2UgaS5zbGlkZU5leHQoKSxpLmVtaXQoXCJzY3JvbGxcIixhKTtlbHNlIGlmKGkuaXNCZWdpbm5pbmcmJiFpLnBhcmFtcy5sb29wfHxpLmFuaW1hdGluZyl7aWYocy5yZWxlYXNlT25FZGdlcylyZXR1cm4hMH1lbHNlIGkuc2xpZGVQcmV2KCksaS5lbWl0KFwic2Nyb2xsXCIsYSk7aS5tb3VzZXdoZWVsLmxhc3RTY3JvbGxUaW1lPShuZXcgdC5EYXRlKS5nZXRUaW1lKCl9cmV0dXJuIGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOmEucmV0dXJuVmFsdWU9ITEsITF9LGVuYWJsZTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7aWYoIUIuZXZlbnQpcmV0dXJuITE7aWYoZS5tb3VzZXdoZWVsLmVuYWJsZWQpcmV0dXJuITE7dmFyIHQ9ZS4kZWw7cmV0dXJuXCJjb250YWluZXJcIiE9PWUucGFyYW1zLm1vdXNld2hlZWwuZXZlbnRzVGFyZ2VkJiYodD1pKGUucGFyYW1zLm1vdXNld2hlZWwuZXZlbnRzVGFyZ2VkKSksdC5vbihcIm1vdXNlZW50ZXJcIixlLm1vdXNld2hlZWwuaGFuZGxlTW91c2VFbnRlciksdC5vbihcIm1vdXNlbGVhdmVcIixlLm1vdXNld2hlZWwuaGFuZGxlTW91c2VMZWF2ZSksdC5vbihCLmV2ZW50LGUubW91c2V3aGVlbC5oYW5kbGUpLGUubW91c2V3aGVlbC5lbmFibGVkPSEwfSxkaXNhYmxlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztpZighQi5ldmVudClyZXR1cm4hMTtpZighZS5tb3VzZXdoZWVsLmVuYWJsZWQpcmV0dXJuITE7dmFyIHQ9ZS4kZWw7cmV0dXJuXCJjb250YWluZXJcIiE9PWUucGFyYW1zLm1vdXNld2hlZWwuZXZlbnRzVGFyZ2VkJiYodD1pKGUucGFyYW1zLm1vdXNld2hlZWwuZXZlbnRzVGFyZ2VkKSksdC5vZmYoQi5ldmVudCxlLm1vdXNld2hlZWwuaGFuZGxlKSwhKGUubW91c2V3aGVlbC5lbmFibGVkPSExKX19LFg9e3VwZGF0ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD1lLnBhcmFtcy5uYXZpZ2F0aW9uO2lmKCFlLnBhcmFtcy5sb29wKXt2YXIgYT1lLm5hdmlnYXRpb24saT1hLiRuZXh0RWwscz1hLiRwcmV2RWw7cyYmMDxzLmxlbmd0aCYmKGUuaXNCZWdpbm5pbmc/cy5hZGRDbGFzcyh0LmRpc2FibGVkQ2xhc3MpOnMucmVtb3ZlQ2xhc3ModC5kaXNhYmxlZENsYXNzKSxzW2UucGFyYW1zLndhdGNoT3ZlcmZsb3cmJmUuaXNMb2NrZWQ/XCJhZGRDbGFzc1wiOlwicmVtb3ZlQ2xhc3NcIl0odC5sb2NrQ2xhc3MpKSxpJiYwPGkubGVuZ3RoJiYoZS5pc0VuZD9pLmFkZENsYXNzKHQuZGlzYWJsZWRDbGFzcyk6aS5yZW1vdmVDbGFzcyh0LmRpc2FibGVkQ2xhc3MpLGlbZS5wYXJhbXMud2F0Y2hPdmVyZmxvdyYmZS5pc0xvY2tlZD9cImFkZENsYXNzXCI6XCJyZW1vdmVDbGFzc1wiXSh0LmxvY2tDbGFzcykpfX0sb25QcmV2Q2xpY2s6ZnVuY3Rpb24oZSl7ZS5wcmV2ZW50RGVmYXVsdCgpLHRoaXMuaXNCZWdpbm5pbmcmJiF0aGlzLnBhcmFtcy5sb29wfHx0aGlzLnNsaWRlUHJldigpfSxvbk5leHRDbGljazpmdW5jdGlvbihlKXtlLnByZXZlbnREZWZhdWx0KCksdGhpcy5pc0VuZCYmIXRoaXMucGFyYW1zLmxvb3B8fHRoaXMuc2xpZGVOZXh0KCl9LGluaXQ6ZnVuY3Rpb24oKXt2YXIgZSx0LGE9dGhpcyxzPWEucGFyYW1zLm5hdmlnYXRpb247KHMubmV4dEVsfHxzLnByZXZFbCkmJihzLm5leHRFbCYmKGU9aShzLm5leHRFbCksYS5wYXJhbXMudW5pcXVlTmF2RWxlbWVudHMmJlwic3RyaW5nXCI9PXR5cGVvZiBzLm5leHRFbCYmMTxlLmxlbmd0aCYmMT09PWEuJGVsLmZpbmQocy5uZXh0RWwpLmxlbmd0aCYmKGU9YS4kZWwuZmluZChzLm5leHRFbCkpKSxzLnByZXZFbCYmKHQ9aShzLnByZXZFbCksYS5wYXJhbXMudW5pcXVlTmF2RWxlbWVudHMmJlwic3RyaW5nXCI9PXR5cGVvZiBzLnByZXZFbCYmMTx0Lmxlbmd0aCYmMT09PWEuJGVsLmZpbmQocy5wcmV2RWwpLmxlbmd0aCYmKHQ9YS4kZWwuZmluZChzLnByZXZFbCkpKSxlJiYwPGUubGVuZ3RoJiZlLm9uKFwiY2xpY2tcIixhLm5hdmlnYXRpb24ub25OZXh0Q2xpY2spLHQmJjA8dC5sZW5ndGgmJnQub24oXCJjbGlja1wiLGEubmF2aWdhdGlvbi5vblByZXZDbGljayksZC5leHRlbmQoYS5uYXZpZ2F0aW9uLHskbmV4dEVsOmUsbmV4dEVsOmUmJmVbMF0sJHByZXZFbDp0LHByZXZFbDp0JiZ0WzBdfSkpfSxkZXN0cm95OmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PWUubmF2aWdhdGlvbixhPXQuJG5leHRFbCxpPXQuJHByZXZFbDthJiZhLmxlbmd0aCYmKGEub2ZmKFwiY2xpY2tcIixlLm5hdmlnYXRpb24ub25OZXh0Q2xpY2spLGEucmVtb3ZlQ2xhc3MoZS5wYXJhbXMubmF2aWdhdGlvbi5kaXNhYmxlZENsYXNzKSksaSYmaS5sZW5ndGgmJihpLm9mZihcImNsaWNrXCIsZS5uYXZpZ2F0aW9uLm9uUHJldkNsaWNrKSxpLnJlbW92ZUNsYXNzKGUucGFyYW1zLm5hdmlnYXRpb24uZGlzYWJsZWRDbGFzcykpfX0sWT17dXBkYXRlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PWUucnRsLGE9ZS5wYXJhbXMucGFnaW5hdGlvbjtpZihhLmVsJiZlLnBhZ2luYXRpb24uZWwmJmUucGFnaW5hdGlvbi4kZWwmJjAhPT1lLnBhZ2luYXRpb24uJGVsLmxlbmd0aCl7dmFyIHMscj1lLnZpcnR1YWwmJmUucGFyYW1zLnZpcnR1YWwuZW5hYmxlZD9lLnZpcnR1YWwuc2xpZGVzLmxlbmd0aDplLnNsaWRlcy5sZW5ndGgsbj1lLnBhZ2luYXRpb24uJGVsLG89ZS5wYXJhbXMubG9vcD9NYXRoLmNlaWwoKHItMiplLmxvb3BlZFNsaWRlcykvZS5wYXJhbXMuc2xpZGVzUGVyR3JvdXApOmUuc25hcEdyaWQubGVuZ3RoO2lmKGUucGFyYW1zLmxvb3A/KChzPU1hdGguY2VpbCgoZS5hY3RpdmVJbmRleC1lLmxvb3BlZFNsaWRlcykvZS5wYXJhbXMuc2xpZGVzUGVyR3JvdXApKT5yLTEtMiplLmxvb3BlZFNsaWRlcyYmKHMtPXItMiplLmxvb3BlZFNsaWRlcyksby0xPHMmJihzLT1vKSxzPDAmJlwiYnVsbGV0c1wiIT09ZS5wYXJhbXMucGFnaW5hdGlvblR5cGUmJihzPW8rcykpOnM9dm9pZCAwIT09ZS5zbmFwSW5kZXg/ZS5zbmFwSW5kZXg6ZS5hY3RpdmVJbmRleHx8MCxcImJ1bGxldHNcIj09PWEudHlwZSYmZS5wYWdpbmF0aW9uLmJ1bGxldHMmJjA8ZS5wYWdpbmF0aW9uLmJ1bGxldHMubGVuZ3RoKXt2YXIgbCxkLHAsYz1lLnBhZ2luYXRpb24uYnVsbGV0cztpZihhLmR5bmFtaWNCdWxsZXRzJiYoZS5wYWdpbmF0aW9uLmJ1bGxldFNpemU9Yy5lcSgwKVtlLmlzSG9yaXpvbnRhbCgpP1wib3V0ZXJXaWR0aFwiOlwib3V0ZXJIZWlnaHRcIl0oITApLG4uY3NzKGUuaXNIb3Jpem9udGFsKCk/XCJ3aWR0aFwiOlwiaGVpZ2h0XCIsZS5wYWdpbmF0aW9uLmJ1bGxldFNpemUqKGEuZHluYW1pY01haW5CdWxsZXRzKzQpK1wicHhcIiksMTxhLmR5bmFtaWNNYWluQnVsbGV0cyYmdm9pZCAwIT09ZS5wcmV2aW91c0luZGV4JiYoZS5wYWdpbmF0aW9uLmR5bmFtaWNCdWxsZXRJbmRleCs9cy1lLnByZXZpb3VzSW5kZXgsZS5wYWdpbmF0aW9uLmR5bmFtaWNCdWxsZXRJbmRleD5hLmR5bmFtaWNNYWluQnVsbGV0cy0xP2UucGFnaW5hdGlvbi5keW5hbWljQnVsbGV0SW5kZXg9YS5keW5hbWljTWFpbkJ1bGxldHMtMTplLnBhZ2luYXRpb24uZHluYW1pY0J1bGxldEluZGV4PDAmJihlLnBhZ2luYXRpb24uZHluYW1pY0J1bGxldEluZGV4PTApKSxsPXMtZS5wYWdpbmF0aW9uLmR5bmFtaWNCdWxsZXRJbmRleCxwPSgoZD1sKyhNYXRoLm1pbihjLmxlbmd0aCxhLmR5bmFtaWNNYWluQnVsbGV0cyktMSkpK2wpLzIpLGMucmVtb3ZlQ2xhc3MoYS5idWxsZXRBY3RpdmVDbGFzcytcIiBcIithLmJ1bGxldEFjdGl2ZUNsYXNzK1wiLW5leHQgXCIrYS5idWxsZXRBY3RpdmVDbGFzcytcIi1uZXh0LW5leHQgXCIrYS5idWxsZXRBY3RpdmVDbGFzcytcIi1wcmV2IFwiK2EuYnVsbGV0QWN0aXZlQ2xhc3MrXCItcHJldi1wcmV2IFwiK2EuYnVsbGV0QWN0aXZlQ2xhc3MrXCItbWFpblwiKSwxPG4ubGVuZ3RoKWMuZWFjaChmdW5jdGlvbihlLHQpe3ZhciByPWkodCksbj1yLmluZGV4KCk7bj09PXMmJnIuYWRkQ2xhc3MoYS5idWxsZXRBY3RpdmVDbGFzcyksYS5keW5hbWljQnVsbGV0cyYmKGw8PW4mJm48PWQmJnIuYWRkQ2xhc3MoYS5idWxsZXRBY3RpdmVDbGFzcytcIi1tYWluXCIpLG49PT1sJiZyLnByZXYoKS5hZGRDbGFzcyhhLmJ1bGxldEFjdGl2ZUNsYXNzK1wiLXByZXZcIikucHJldigpLmFkZENsYXNzKGEuYnVsbGV0QWN0aXZlQ2xhc3MrXCItcHJldi1wcmV2XCIpLG49PT1kJiZyLm5leHQoKS5hZGRDbGFzcyhhLmJ1bGxldEFjdGl2ZUNsYXNzK1wiLW5leHRcIikubmV4dCgpLmFkZENsYXNzKGEuYnVsbGV0QWN0aXZlQ2xhc3MrXCItbmV4dC1uZXh0XCIpKX0pO2Vsc2UgaWYoYy5lcShzKS5hZGRDbGFzcyhhLmJ1bGxldEFjdGl2ZUNsYXNzKSxhLmR5bmFtaWNCdWxsZXRzKXtmb3IodmFyIHU9Yy5lcShsKSxoPWMuZXEoZCksdj1sO3Y8PWQ7dis9MSljLmVxKHYpLmFkZENsYXNzKGEuYnVsbGV0QWN0aXZlQ2xhc3MrXCItbWFpblwiKTt1LnByZXYoKS5hZGRDbGFzcyhhLmJ1bGxldEFjdGl2ZUNsYXNzK1wiLXByZXZcIikucHJldigpLmFkZENsYXNzKGEuYnVsbGV0QWN0aXZlQ2xhc3MrXCItcHJldi1wcmV2XCIpLGgubmV4dCgpLmFkZENsYXNzKGEuYnVsbGV0QWN0aXZlQ2xhc3MrXCItbmV4dFwiKS5uZXh0KCkuYWRkQ2xhc3MoYS5idWxsZXRBY3RpdmVDbGFzcytcIi1uZXh0LW5leHRcIil9aWYoYS5keW5hbWljQnVsbGV0cyl7dmFyIGY9TWF0aC5taW4oYy5sZW5ndGgsYS5keW5hbWljTWFpbkJ1bGxldHMrNCksbT0oZS5wYWdpbmF0aW9uLmJ1bGxldFNpemUqZi1lLnBhZ2luYXRpb24uYnVsbGV0U2l6ZSkvMi1wKmUucGFnaW5hdGlvbi5idWxsZXRTaXplLGc9dD9cInJpZ2h0XCI6XCJsZWZ0XCI7Yy5jc3MoZS5pc0hvcml6b250YWwoKT9nOlwidG9wXCIsbStcInB4XCIpfX1pZihcImZyYWN0aW9uXCI9PT1hLnR5cGUmJihuLmZpbmQoXCIuXCIrYS5jdXJyZW50Q2xhc3MpLnRleHQoYS5mb3JtYXRGcmFjdGlvbkN1cnJlbnQocysxKSksbi5maW5kKFwiLlwiK2EudG90YWxDbGFzcykudGV4dChhLmZvcm1hdEZyYWN0aW9uVG90YWwobykpKSxcInByb2dyZXNzYmFyXCI9PT1hLnR5cGUpe3ZhciBiO2I9YS5wcm9ncmVzc2Jhck9wcG9zaXRlP2UuaXNIb3Jpem9udGFsKCk/XCJ2ZXJ0aWNhbFwiOlwiaG9yaXpvbnRhbFwiOmUuaXNIb3Jpem9udGFsKCk/XCJob3Jpem9udGFsXCI6XCJ2ZXJ0aWNhbFwiO3ZhciB3PShzKzEpL28seT0xLHg9MTtcImhvcml6b250YWxcIj09PWI/eT13Ong9dyxuLmZpbmQoXCIuXCIrYS5wcm9ncmVzc2JhckZpbGxDbGFzcykudHJhbnNmb3JtKFwidHJhbnNsYXRlM2QoMCwwLDApIHNjYWxlWChcIit5K1wiKSBzY2FsZVkoXCIreCtcIilcIikudHJhbnNpdGlvbihlLnBhcmFtcy5zcGVlZCl9XCJjdXN0b21cIj09PWEudHlwZSYmYS5yZW5kZXJDdXN0b20/KG4uaHRtbChhLnJlbmRlckN1c3RvbShlLHMrMSxvKSksZS5lbWl0KFwicGFnaW5hdGlvblJlbmRlclwiLGUsblswXSkpOmUuZW1pdChcInBhZ2luYXRpb25VcGRhdGVcIixlLG5bMF0pLG5bZS5wYXJhbXMud2F0Y2hPdmVyZmxvdyYmZS5pc0xvY2tlZD9cImFkZENsYXNzXCI6XCJyZW1vdmVDbGFzc1wiXShhLmxvY2tDbGFzcyl9fSxyZW5kZXI6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9ZS5wYXJhbXMucGFnaW5hdGlvbjtpZih0LmVsJiZlLnBhZ2luYXRpb24uZWwmJmUucGFnaW5hdGlvbi4kZWwmJjAhPT1lLnBhZ2luYXRpb24uJGVsLmxlbmd0aCl7dmFyIGE9ZS52aXJ0dWFsJiZlLnBhcmFtcy52aXJ0dWFsLmVuYWJsZWQ/ZS52aXJ0dWFsLnNsaWRlcy5sZW5ndGg6ZS5zbGlkZXMubGVuZ3RoLGk9ZS5wYWdpbmF0aW9uLiRlbCxzPVwiXCI7aWYoXCJidWxsZXRzXCI9PT10LnR5cGUpe2Zvcih2YXIgcj1lLnBhcmFtcy5sb29wP01hdGguY2VpbCgoYS0yKmUubG9vcGVkU2xpZGVzKS9lLnBhcmFtcy5zbGlkZXNQZXJHcm91cCk6ZS5zbmFwR3JpZC5sZW5ndGgsbj0wO248cjtuKz0xKXQucmVuZGVyQnVsbGV0P3MrPXQucmVuZGVyQnVsbGV0LmNhbGwoZSxuLHQuYnVsbGV0Q2xhc3MpOnMrPVwiPFwiK3QuYnVsbGV0RWxlbWVudCsnIGNsYXNzPVwiJyt0LmJ1bGxldENsYXNzKydcIj48LycrdC5idWxsZXRFbGVtZW50K1wiPlwiO2kuaHRtbChzKSxlLnBhZ2luYXRpb24uYnVsbGV0cz1pLmZpbmQoXCIuXCIrdC5idWxsZXRDbGFzcyl9XCJmcmFjdGlvblwiPT09dC50eXBlJiYocz10LnJlbmRlckZyYWN0aW9uP3QucmVuZGVyRnJhY3Rpb24uY2FsbChlLHQuY3VycmVudENsYXNzLHQudG90YWxDbGFzcyk6JzxzcGFuIGNsYXNzPVwiJyt0LmN1cnJlbnRDbGFzcysnXCI+PC9zcGFuPiAvIDxzcGFuIGNsYXNzPVwiJyt0LnRvdGFsQ2xhc3MrJ1wiPjwvc3Bhbj4nLGkuaHRtbChzKSksXCJwcm9ncmVzc2JhclwiPT09dC50eXBlJiYocz10LnJlbmRlclByb2dyZXNzYmFyP3QucmVuZGVyUHJvZ3Jlc3NiYXIuY2FsbChlLHQucHJvZ3Jlc3NiYXJGaWxsQ2xhc3MpOic8c3BhbiBjbGFzcz1cIicrdC5wcm9ncmVzc2JhckZpbGxDbGFzcysnXCI+PC9zcGFuPicsaS5odG1sKHMpKSxcImN1c3RvbVwiIT09dC50eXBlJiZlLmVtaXQoXCJwYWdpbmF0aW9uUmVuZGVyXCIsZS5wYWdpbmF0aW9uLiRlbFswXSl9fSxpbml0OmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PWUucGFyYW1zLnBhZ2luYXRpb247aWYodC5lbCl7dmFyIGE9aSh0LmVsKTswIT09YS5sZW5ndGgmJihlLnBhcmFtcy51bmlxdWVOYXZFbGVtZW50cyYmXCJzdHJpbmdcIj09dHlwZW9mIHQuZWwmJjE8YS5sZW5ndGgmJjE9PT1lLiRlbC5maW5kKHQuZWwpLmxlbmd0aCYmKGE9ZS4kZWwuZmluZCh0LmVsKSksXCJidWxsZXRzXCI9PT10LnR5cGUmJnQuY2xpY2thYmxlJiZhLmFkZENsYXNzKHQuY2xpY2thYmxlQ2xhc3MpLGEuYWRkQ2xhc3ModC5tb2RpZmllckNsYXNzK3QudHlwZSksXCJidWxsZXRzXCI9PT10LnR5cGUmJnQuZHluYW1pY0J1bGxldHMmJihhLmFkZENsYXNzKFwiXCIrdC5tb2RpZmllckNsYXNzK3QudHlwZStcIi1keW5hbWljXCIpLGUucGFnaW5hdGlvbi5keW5hbWljQnVsbGV0SW5kZXg9MCx0LmR5bmFtaWNNYWluQnVsbGV0czwxJiYodC5keW5hbWljTWFpbkJ1bGxldHM9MSkpLFwicHJvZ3Jlc3NiYXJcIj09PXQudHlwZSYmdC5wcm9ncmVzc2Jhck9wcG9zaXRlJiZhLmFkZENsYXNzKHQucHJvZ3Jlc3NiYXJPcHBvc2l0ZUNsYXNzKSx0LmNsaWNrYWJsZSYmYS5vbihcImNsaWNrXCIsXCIuXCIrdC5idWxsZXRDbGFzcyxmdW5jdGlvbih0KXt0LnByZXZlbnREZWZhdWx0KCk7dmFyIGE9aSh0aGlzKS5pbmRleCgpKmUucGFyYW1zLnNsaWRlc1Blckdyb3VwO2UucGFyYW1zLmxvb3AmJihhKz1lLmxvb3BlZFNsaWRlcyksZS5zbGlkZVRvKGEpfSksZC5leHRlbmQoZS5wYWdpbmF0aW9uLHskZWw6YSxlbDphWzBdfSkpfX0sZGVzdHJveTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD1lLnBhcmFtcy5wYWdpbmF0aW9uO2lmKHQuZWwmJmUucGFnaW5hdGlvbi5lbCYmZS5wYWdpbmF0aW9uLiRlbCYmMCE9PWUucGFnaW5hdGlvbi4kZWwubGVuZ3RoKXt2YXIgYT1lLnBhZ2luYXRpb24uJGVsO2EucmVtb3ZlQ2xhc3ModC5oaWRkZW5DbGFzcyksYS5yZW1vdmVDbGFzcyh0Lm1vZGlmaWVyQ2xhc3MrdC50eXBlKSxlLnBhZ2luYXRpb24uYnVsbGV0cyYmZS5wYWdpbmF0aW9uLmJ1bGxldHMucmVtb3ZlQ2xhc3ModC5idWxsZXRBY3RpdmVDbGFzcyksdC5jbGlja2FibGUmJmEub2ZmKFwiY2xpY2tcIixcIi5cIit0LmJ1bGxldENsYXNzKX19fSxWPXtzZXRUcmFuc2xhdGU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2lmKGUucGFyYW1zLnNjcm9sbGJhci5lbCYmZS5zY3JvbGxiYXIuZWwpe3ZhciB0PWUuc2Nyb2xsYmFyLGE9ZS5ydGxUcmFuc2xhdGUsaT1lLnByb2dyZXNzLHM9dC5kcmFnU2l6ZSxyPXQudHJhY2tTaXplLG49dC4kZHJhZ0VsLG89dC4kZWwsbD1lLnBhcmFtcy5zY3JvbGxiYXIsZD1zLGM9KHItcykqaTthPzA8KGM9LWMpPyhkPXMtYyxjPTApOnI8LWMrcyYmKGQ9citjKTpjPDA/KGQ9cytjLGM9MCk6cjxjK3MmJihkPXItYyksZS5pc0hvcml6b250YWwoKT8ocC50cmFuc2Zvcm1zM2Q/bi50cmFuc2Zvcm0oXCJ0cmFuc2xhdGUzZChcIitjK1wicHgsIDAsIDApXCIpOm4udHJhbnNmb3JtKFwidHJhbnNsYXRlWChcIitjK1wicHgpXCIpLG5bMF0uc3R5bGUud2lkdGg9ZCtcInB4XCIpOihwLnRyYW5zZm9ybXMzZD9uLnRyYW5zZm9ybShcInRyYW5zbGF0ZTNkKDBweCwgXCIrYytcInB4LCAwKVwiKTpuLnRyYW5zZm9ybShcInRyYW5zbGF0ZVkoXCIrYytcInB4KVwiKSxuWzBdLnN0eWxlLmhlaWdodD1kK1wicHhcIiksbC5oaWRlJiYoY2xlYXJUaW1lb3V0KGUuc2Nyb2xsYmFyLnRpbWVvdXQpLG9bMF0uc3R5bGUub3BhY2l0eT0xLGUuc2Nyb2xsYmFyLnRpbWVvdXQ9c2V0VGltZW91dChmdW5jdGlvbigpe29bMF0uc3R5bGUub3BhY2l0eT0wLG8udHJhbnNpdGlvbig0MDApfSwxZTMpKX19LHNldFRyYW5zaXRpb246ZnVuY3Rpb24oZSl7dGhpcy5wYXJhbXMuc2Nyb2xsYmFyLmVsJiZ0aGlzLnNjcm9sbGJhci5lbCYmdGhpcy5zY3JvbGxiYXIuJGRyYWdFbC50cmFuc2l0aW9uKGUpfSx1cGRhdGVTaXplOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztpZihlLnBhcmFtcy5zY3JvbGxiYXIuZWwmJmUuc2Nyb2xsYmFyLmVsKXt2YXIgdD1lLnNjcm9sbGJhcixhPXQuJGRyYWdFbCxpPXQuJGVsO2FbMF0uc3R5bGUud2lkdGg9XCJcIixhWzBdLnN0eWxlLmhlaWdodD1cIlwiO3ZhciBzLHI9ZS5pc0hvcml6b250YWwoKT9pWzBdLm9mZnNldFdpZHRoOmlbMF0ub2Zmc2V0SGVpZ2h0LG49ZS5zaXplL2UudmlydHVhbFNpemUsbz1uKihyL2Uuc2l6ZSk7cz1cImF1dG9cIj09PWUucGFyYW1zLnNjcm9sbGJhci5kcmFnU2l6ZT9yKm46cGFyc2VJbnQoZS5wYXJhbXMuc2Nyb2xsYmFyLmRyYWdTaXplLDEwKSxlLmlzSG9yaXpvbnRhbCgpP2FbMF0uc3R5bGUud2lkdGg9cytcInB4XCI6YVswXS5zdHlsZS5oZWlnaHQ9cytcInB4XCIsaVswXS5zdHlsZS5kaXNwbGF5PTE8PW4/XCJub25lXCI6XCJcIixlLnBhcmFtcy5zY3JvbGxiYXJIaWRlJiYoaVswXS5zdHlsZS5vcGFjaXR5PTApLGQuZXh0ZW5kKHQse3RyYWNrU2l6ZTpyLGRpdmlkZXI6bixtb3ZlRGl2aWRlcjpvLGRyYWdTaXplOnN9KSx0LiRlbFtlLnBhcmFtcy53YXRjaE92ZXJmbG93JiZlLmlzTG9ja2VkP1wiYWRkQ2xhc3NcIjpcInJlbW92ZUNsYXNzXCJdKGUucGFyYW1zLnNjcm9sbGJhci5sb2NrQ2xhc3MpfX0sc2V0RHJhZ1Bvc2l0aW9uOmZ1bmN0aW9uKGUpe3ZhciB0LGE9dGhpcyxpPWEuc2Nyb2xsYmFyLHM9YS5ydGxUcmFuc2xhdGUscj1pLiRlbCxuPWkuZHJhZ1NpemUsbz1pLnRyYWNrU2l6ZTt0PSgoYS5pc0hvcml6b250YWwoKT9cInRvdWNoc3RhcnRcIj09PWUudHlwZXx8XCJ0b3VjaG1vdmVcIj09PWUudHlwZT9lLnRhcmdldFRvdWNoZXNbMF0ucGFnZVg6ZS5wYWdlWHx8ZS5jbGllbnRYOlwidG91Y2hzdGFydFwiPT09ZS50eXBlfHxcInRvdWNobW92ZVwiPT09ZS50eXBlP2UudGFyZ2V0VG91Y2hlc1swXS5wYWdlWTplLnBhZ2VZfHxlLmNsaWVudFkpLXIub2Zmc2V0KClbYS5pc0hvcml6b250YWwoKT9cImxlZnRcIjpcInRvcFwiXS1uLzIpLyhvLW4pLHQ9TWF0aC5tYXgoTWF0aC5taW4odCwxKSwwKSxzJiYodD0xLXQpO3ZhciBsPWEubWluVHJhbnNsYXRlKCkrKGEubWF4VHJhbnNsYXRlKCktYS5taW5UcmFuc2xhdGUoKSkqdDthLnVwZGF0ZVByb2dyZXNzKGwpLGEuc2V0VHJhbnNsYXRlKGwpLGEudXBkYXRlQWN0aXZlSW5kZXgoKSxhLnVwZGF0ZVNsaWRlc0NsYXNzZXMoKX0sb25EcmFnU3RhcnQ6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxhPXQucGFyYW1zLnNjcm9sbGJhcixpPXQuc2Nyb2xsYmFyLHM9dC4kd3JhcHBlckVsLHI9aS4kZWwsbj1pLiRkcmFnRWw7dC5zY3JvbGxiYXIuaXNUb3VjaGVkPSEwLGUucHJldmVudERlZmF1bHQoKSxlLnN0b3BQcm9wYWdhdGlvbigpLHMudHJhbnNpdGlvbigxMDApLG4udHJhbnNpdGlvbigxMDApLGkuc2V0RHJhZ1Bvc2l0aW9uKGUpLGNsZWFyVGltZW91dCh0LnNjcm9sbGJhci5kcmFnVGltZW91dCksci50cmFuc2l0aW9uKDApLGEuaGlkZSYmci5jc3MoXCJvcGFjaXR5XCIsMSksdC5lbWl0KFwic2Nyb2xsYmFyRHJhZ1N0YXJ0XCIsZSl9LG9uRHJhZ01vdmU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5zY3JvbGxiYXIsYT10aGlzLiR3cmFwcGVyRWwsaT10LiRlbCxzPXQuJGRyYWdFbDt0aGlzLnNjcm9sbGJhci5pc1RvdWNoZWQmJihlLnByZXZlbnREZWZhdWx0P2UucHJldmVudERlZmF1bHQoKTplLnJldHVyblZhbHVlPSExLHQuc2V0RHJhZ1Bvc2l0aW9uKGUpLGEudHJhbnNpdGlvbigwKSxpLnRyYW5zaXRpb24oMCkscy50cmFuc2l0aW9uKDApLHRoaXMuZW1pdChcInNjcm9sbGJhckRyYWdNb3ZlXCIsZSkpfSxvbkRyYWdFbmQ6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxhPXQucGFyYW1zLnNjcm9sbGJhcixpPXQuc2Nyb2xsYmFyLiRlbDt0LnNjcm9sbGJhci5pc1RvdWNoZWQmJih0LnNjcm9sbGJhci5pc1RvdWNoZWQ9ITEsYS5oaWRlJiYoY2xlYXJUaW1lb3V0KHQuc2Nyb2xsYmFyLmRyYWdUaW1lb3V0KSx0LnNjcm9sbGJhci5kcmFnVGltZW91dD1kLm5leHRUaWNrKGZ1bmN0aW9uKCl7aS5jc3MoXCJvcGFjaXR5XCIsMCksaS50cmFuc2l0aW9uKDQwMCl9LDFlMykpLHQuZW1pdChcInNjcm9sbGJhckRyYWdFbmRcIixlKSxhLnNuYXBPblJlbGVhc2UmJnQuc2xpZGVUb0Nsb3Nlc3QoKSl9LGVuYWJsZURyYWdnYWJsZTpmdW5jdGlvbigpe3ZhciB0PXRoaXM7aWYodC5wYXJhbXMuc2Nyb2xsYmFyLmVsKXt2YXIgYT10LnNjcm9sbGJhcixpPXQudG91Y2hFdmVudHNUb3VjaCxzPXQudG91Y2hFdmVudHNEZXNrdG9wLHI9dC5wYXJhbXMsbj1hLiRlbFswXSxvPSEoIXAucGFzc2l2ZUxpc3RlbmVyfHwhci5wYXNzaXZlTGlzdGVuZXJzKSYme3Bhc3NpdmU6ITEsY2FwdHVyZTohMX0sbD0hKCFwLnBhc3NpdmVMaXN0ZW5lcnx8IXIucGFzc2l2ZUxpc3RlbmVycykmJntwYXNzaXZlOiEwLGNhcHR1cmU6ITF9O3AudG91Y2g/KG4uYWRkRXZlbnRMaXN0ZW5lcihpLnN0YXJ0LHQuc2Nyb2xsYmFyLm9uRHJhZ1N0YXJ0LG8pLG4uYWRkRXZlbnRMaXN0ZW5lcihpLm1vdmUsdC5zY3JvbGxiYXIub25EcmFnTW92ZSxvKSxuLmFkZEV2ZW50TGlzdGVuZXIoaS5lbmQsdC5zY3JvbGxiYXIub25EcmFnRW5kLGwpKToobi5hZGRFdmVudExpc3RlbmVyKHMuc3RhcnQsdC5zY3JvbGxiYXIub25EcmFnU3RhcnQsbyksZS5hZGRFdmVudExpc3RlbmVyKHMubW92ZSx0LnNjcm9sbGJhci5vbkRyYWdNb3ZlLG8pLGUuYWRkRXZlbnRMaXN0ZW5lcihzLmVuZCx0LnNjcm9sbGJhci5vbkRyYWdFbmQsbCkpfX0sZGlzYWJsZURyYWdnYWJsZTpmdW5jdGlvbigpe3ZhciB0PXRoaXM7aWYodC5wYXJhbXMuc2Nyb2xsYmFyLmVsKXt2YXIgYT10LnNjcm9sbGJhcixpPXQudG91Y2hFdmVudHNUb3VjaCxzPXQudG91Y2hFdmVudHNEZXNrdG9wLHI9dC5wYXJhbXMsbj1hLiRlbFswXSxvPSEoIXAucGFzc2l2ZUxpc3RlbmVyfHwhci5wYXNzaXZlTGlzdGVuZXJzKSYme3Bhc3NpdmU6ITEsY2FwdHVyZTohMX0sbD0hKCFwLnBhc3NpdmVMaXN0ZW5lcnx8IXIucGFzc2l2ZUxpc3RlbmVycykmJntwYXNzaXZlOiEwLGNhcHR1cmU6ITF9O3AudG91Y2g/KG4ucmVtb3ZlRXZlbnRMaXN0ZW5lcihpLnN0YXJ0LHQuc2Nyb2xsYmFyLm9uRHJhZ1N0YXJ0LG8pLG4ucmVtb3ZlRXZlbnRMaXN0ZW5lcihpLm1vdmUsdC5zY3JvbGxiYXIub25EcmFnTW92ZSxvKSxuLnJlbW92ZUV2ZW50TGlzdGVuZXIoaS5lbmQsdC5zY3JvbGxiYXIub25EcmFnRW5kLGwpKToobi5yZW1vdmVFdmVudExpc3RlbmVyKHMuc3RhcnQsdC5zY3JvbGxiYXIub25EcmFnU3RhcnQsbyksZS5yZW1vdmVFdmVudExpc3RlbmVyKHMubW92ZSx0LnNjcm9sbGJhci5vbkRyYWdNb3ZlLG8pLGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihzLmVuZCx0LnNjcm9sbGJhci5vbkRyYWdFbmQsbCkpfX0saW5pdDpmdW5jdGlvbigpe3ZhciBlPXRoaXM7aWYoZS5wYXJhbXMuc2Nyb2xsYmFyLmVsKXt2YXIgdD1lLnNjcm9sbGJhcixhPWUuJGVsLHM9ZS5wYXJhbXMuc2Nyb2xsYmFyLHI9aShzLmVsKTtlLnBhcmFtcy51bmlxdWVOYXZFbGVtZW50cyYmXCJzdHJpbmdcIj09dHlwZW9mIHMuZWwmJjE8ci5sZW5ndGgmJjE9PT1hLmZpbmQocy5lbCkubGVuZ3RoJiYocj1hLmZpbmQocy5lbCkpO3ZhciBuPXIuZmluZChcIi5cIitlLnBhcmFtcy5zY3JvbGxiYXIuZHJhZ0NsYXNzKTswPT09bi5sZW5ndGgmJihuPWkoJzxkaXYgY2xhc3M9XCInK2UucGFyYW1zLnNjcm9sbGJhci5kcmFnQ2xhc3MrJ1wiPjwvZGl2PicpLHIuYXBwZW5kKG4pKSxkLmV4dGVuZCh0LHskZWw6cixlbDpyWzBdLCRkcmFnRWw6bixkcmFnRWw6blswXX0pLHMuZHJhZ2dhYmxlJiZ0LmVuYWJsZURyYWdnYWJsZSgpfX0sZGVzdHJveTpmdW5jdGlvbigpe3RoaXMuc2Nyb2xsYmFyLmRpc2FibGVEcmFnZ2FibGUoKX19LEY9e3NldFRyYW5zZm9ybTpmdW5jdGlvbihlLHQpe3ZhciBhPXRoaXMucnRsLHM9aShlKSxyPWE/LTE6MSxuPXMuYXR0cihcImRhdGEtc3dpcGVyLXBhcmFsbGF4XCIpfHxcIjBcIixvPXMuYXR0cihcImRhdGEtc3dpcGVyLXBhcmFsbGF4LXhcIiksbD1zLmF0dHIoXCJkYXRhLXN3aXBlci1wYXJhbGxheC15XCIpLGQ9cy5hdHRyKFwiZGF0YS1zd2lwZXItcGFyYWxsYXgtc2NhbGVcIikscD1zLmF0dHIoXCJkYXRhLXN3aXBlci1wYXJhbGxheC1vcGFjaXR5XCIpO2lmKG98fGw/KG89b3x8XCIwXCIsbD1sfHxcIjBcIik6dGhpcy5pc0hvcml6b250YWwoKT8obz1uLGw9XCIwXCIpOihsPW4sbz1cIjBcIiksbz0wPD1vLmluZGV4T2YoXCIlXCIpP3BhcnNlSW50KG8sMTApKnQqcitcIiVcIjpvKnQqcitcInB4XCIsbD0wPD1sLmluZGV4T2YoXCIlXCIpP3BhcnNlSW50KGwsMTApKnQrXCIlXCI6bCp0K1wicHhcIixudWxsIT1wKXt2YXIgYz1wLShwLTEpKigxLU1hdGguYWJzKHQpKTtzWzBdLnN0eWxlLm9wYWNpdHk9Y31pZihudWxsPT1kKXMudHJhbnNmb3JtKFwidHJhbnNsYXRlM2QoXCIrbytcIiwgXCIrbCtcIiwgMHB4KVwiKTtlbHNle3ZhciB1PWQtKGQtMSkqKDEtTWF0aC5hYnModCkpO3MudHJhbnNmb3JtKFwidHJhbnNsYXRlM2QoXCIrbytcIiwgXCIrbCtcIiwgMHB4KSBzY2FsZShcIit1K1wiKVwiKX19LHNldFRyYW5zbGF0ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD1lLiRlbCxhPWUuc2xpZGVzLHM9ZS5wcm9ncmVzcyxyPWUuc25hcEdyaWQ7dC5jaGlsZHJlbihcIltkYXRhLXN3aXBlci1wYXJhbGxheF0sIFtkYXRhLXN3aXBlci1wYXJhbGxheC14XSwgW2RhdGEtc3dpcGVyLXBhcmFsbGF4LXldXCIpLmVhY2goZnVuY3Rpb24odCxhKXtlLnBhcmFsbGF4LnNldFRyYW5zZm9ybShhLHMpfSksYS5lYWNoKGZ1bmN0aW9uKHQsYSl7dmFyIG49YS5wcm9ncmVzczsxPGUucGFyYW1zLnNsaWRlc1Blckdyb3VwJiZcImF1dG9cIiE9PWUucGFyYW1zLnNsaWRlc1BlclZpZXcmJihuKz1NYXRoLmNlaWwodC8yKS1zKihyLmxlbmd0aC0xKSksbj1NYXRoLm1pbihNYXRoLm1heChuLC0xKSwxKSxpKGEpLmZpbmQoXCJbZGF0YS1zd2lwZXItcGFyYWxsYXhdLCBbZGF0YS1zd2lwZXItcGFyYWxsYXgteF0sIFtkYXRhLXN3aXBlci1wYXJhbGxheC15XVwiKS5lYWNoKGZ1bmN0aW9uKHQsYSl7ZS5wYXJhbGxheC5zZXRUcmFuc2Zvcm0oYSxuKX0pfSl9LHNldFRyYW5zaXRpb246ZnVuY3Rpb24oZSl7dm9pZCAwPT09ZSYmKGU9dGhpcy5wYXJhbXMuc3BlZWQpLHRoaXMuJGVsLmZpbmQoXCJbZGF0YS1zd2lwZXItcGFyYWxsYXhdLCBbZGF0YS1zd2lwZXItcGFyYWxsYXgteF0sIFtkYXRhLXN3aXBlci1wYXJhbGxheC15XVwiKS5lYWNoKGZ1bmN0aW9uKHQsYSl7dmFyIHM9aShhKSxyPXBhcnNlSW50KHMuYXR0cihcImRhdGEtc3dpcGVyLXBhcmFsbGF4LWR1cmF0aW9uXCIpLDEwKXx8ZTswPT09ZSYmKHI9MCkscy50cmFuc2l0aW9uKHIpfSl9fSxSPXtnZXREaXN0YW5jZUJldHdlZW5Ub3VjaGVzOmZ1bmN0aW9uKGUpe2lmKGUudGFyZ2V0VG91Y2hlcy5sZW5ndGg8MilyZXR1cm4gMTt2YXIgdD1lLnRhcmdldFRvdWNoZXNbMF0ucGFnZVgsYT1lLnRhcmdldFRvdWNoZXNbMF0ucGFnZVksaT1lLnRhcmdldFRvdWNoZXNbMV0ucGFnZVgscz1lLnRhcmdldFRvdWNoZXNbMV0ucGFnZVk7cmV0dXJuIE1hdGguc3FydChNYXRoLnBvdyhpLXQsMikrTWF0aC5wb3cocy1hLDIpKX0sb25HZXN0dXJlU3RhcnQ6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxhPXQucGFyYW1zLnpvb20scz10Lnpvb20scj1zLmdlc3R1cmU7aWYocy5mYWtlR2VzdHVyZVRvdWNoZWQ9ITEscy5mYWtlR2VzdHVyZU1vdmVkPSExLCFwLmdlc3R1cmVzKXtpZihcInRvdWNoc3RhcnRcIiE9PWUudHlwZXx8XCJ0b3VjaHN0YXJ0XCI9PT1lLnR5cGUmJmUudGFyZ2V0VG91Y2hlcy5sZW5ndGg8MilyZXR1cm47cy5mYWtlR2VzdHVyZVRvdWNoZWQ9ITAsci5zY2FsZVN0YXJ0PVIuZ2V0RGlzdGFuY2VCZXR3ZWVuVG91Y2hlcyhlKX1yLiRzbGlkZUVsJiZyLiRzbGlkZUVsLmxlbmd0aHx8KHIuJHNsaWRlRWw9aShlLnRhcmdldCkuY2xvc2VzdChcIi5zd2lwZXItc2xpZGVcIiksMD09PXIuJHNsaWRlRWwubGVuZ3RoJiYoci4kc2xpZGVFbD10LnNsaWRlcy5lcSh0LmFjdGl2ZUluZGV4KSksci4kaW1hZ2VFbD1yLiRzbGlkZUVsLmZpbmQoXCJpbWcsIHN2ZywgY2FudmFzXCIpLHIuJGltYWdlV3JhcEVsPXIuJGltYWdlRWwucGFyZW50KFwiLlwiK2EuY29udGFpbmVyQ2xhc3MpLHIubWF4UmF0aW89ci4kaW1hZ2VXcmFwRWwuYXR0cihcImRhdGEtc3dpcGVyLXpvb21cIil8fGEubWF4UmF0aW8sMCE9PXIuJGltYWdlV3JhcEVsLmxlbmd0aCk/KHIuJGltYWdlRWwudHJhbnNpdGlvbigwKSx0Lnpvb20uaXNTY2FsaW5nPSEwKTpyLiRpbWFnZUVsPXZvaWQgMH0sb25HZXN0dXJlQ2hhbmdlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMucGFyYW1zLnpvb20sYT10aGlzLnpvb20saT1hLmdlc3R1cmU7aWYoIXAuZ2VzdHVyZXMpe2lmKFwidG91Y2htb3ZlXCIhPT1lLnR5cGV8fFwidG91Y2htb3ZlXCI9PT1lLnR5cGUmJmUudGFyZ2V0VG91Y2hlcy5sZW5ndGg8MilyZXR1cm47YS5mYWtlR2VzdHVyZU1vdmVkPSEwLGkuc2NhbGVNb3ZlPVIuZ2V0RGlzdGFuY2VCZXR3ZWVuVG91Y2hlcyhlKX1pLiRpbWFnZUVsJiYwIT09aS4kaW1hZ2VFbC5sZW5ndGgmJihhLnNjYWxlPXAuZ2VzdHVyZXM/ZS5zY2FsZSphLmN1cnJlbnRTY2FsZTppLnNjYWxlTW92ZS9pLnNjYWxlU3RhcnQqYS5jdXJyZW50U2NhbGUsYS5zY2FsZT5pLm1heFJhdGlvJiYoYS5zY2FsZT1pLm1heFJhdGlvLTErTWF0aC5wb3coYS5zY2FsZS1pLm1heFJhdGlvKzEsLjUpKSxhLnNjYWxlPHQubWluUmF0aW8mJihhLnNjYWxlPXQubWluUmF0aW8rMS1NYXRoLnBvdyh0Lm1pblJhdGlvLWEuc2NhbGUrMSwuNSkpLGkuJGltYWdlRWwudHJhbnNmb3JtKFwidHJhbnNsYXRlM2QoMCwwLDApIHNjYWxlKFwiK2Euc2NhbGUrXCIpXCIpKX0sb25HZXN0dXJlRW5kOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMucGFyYW1zLnpvb20sYT10aGlzLnpvb20saT1hLmdlc3R1cmU7aWYoIXAuZ2VzdHVyZXMpe2lmKCFhLmZha2VHZXN0dXJlVG91Y2hlZHx8IWEuZmFrZUdlc3R1cmVNb3ZlZClyZXR1cm47aWYoXCJ0b3VjaGVuZFwiIT09ZS50eXBlfHxcInRvdWNoZW5kXCI9PT1lLnR5cGUmJmUuY2hhbmdlZFRvdWNoZXMubGVuZ3RoPDImJiF3LmFuZHJvaWQpcmV0dXJuO2EuZmFrZUdlc3R1cmVUb3VjaGVkPSExLGEuZmFrZUdlc3R1cmVNb3ZlZD0hMX1pLiRpbWFnZUVsJiYwIT09aS4kaW1hZ2VFbC5sZW5ndGgmJihhLnNjYWxlPU1hdGgubWF4KE1hdGgubWluKGEuc2NhbGUsaS5tYXhSYXRpbyksdC5taW5SYXRpbyksaS4kaW1hZ2VFbC50cmFuc2l0aW9uKHRoaXMucGFyYW1zLnNwZWVkKS50cmFuc2Zvcm0oXCJ0cmFuc2xhdGUzZCgwLDAsMCkgc2NhbGUoXCIrYS5zY2FsZStcIilcIiksYS5jdXJyZW50U2NhbGU9YS5zY2FsZSxhLmlzU2NhbGluZz0hMSwxPT09YS5zY2FsZSYmKGkuJHNsaWRlRWw9dm9pZCAwKSl9LG9uVG91Y2hTdGFydDpmdW5jdGlvbihlKXt2YXIgdD10aGlzLnpvb20sYT10Lmdlc3R1cmUsaT10LmltYWdlO2EuJGltYWdlRWwmJjAhPT1hLiRpbWFnZUVsLmxlbmd0aCYmKGkuaXNUb3VjaGVkfHwody5hbmRyb2lkJiZlLnByZXZlbnREZWZhdWx0KCksaS5pc1RvdWNoZWQ9ITAsaS50b3VjaGVzU3RhcnQueD1cInRvdWNoc3RhcnRcIj09PWUudHlwZT9lLnRhcmdldFRvdWNoZXNbMF0ucGFnZVg6ZS5wYWdlWCxpLnRvdWNoZXNTdGFydC55PVwidG91Y2hzdGFydFwiPT09ZS50eXBlP2UudGFyZ2V0VG91Y2hlc1swXS5wYWdlWTplLnBhZ2VZKSl9LG9uVG91Y2hNb3ZlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMsYT10Lnpvb20saT1hLmdlc3R1cmUscz1hLmltYWdlLHI9YS52ZWxvY2l0eTtpZihpLiRpbWFnZUVsJiYwIT09aS4kaW1hZ2VFbC5sZW5ndGgmJih0LmFsbG93Q2xpY2s9ITEscy5pc1RvdWNoZWQmJmkuJHNsaWRlRWwpKXtzLmlzTW92ZWR8fChzLndpZHRoPWkuJGltYWdlRWxbMF0ub2Zmc2V0V2lkdGgscy5oZWlnaHQ9aS4kaW1hZ2VFbFswXS5vZmZzZXRIZWlnaHQscy5zdGFydFg9ZC5nZXRUcmFuc2xhdGUoaS4kaW1hZ2VXcmFwRWxbMF0sXCJ4XCIpfHwwLHMuc3RhcnRZPWQuZ2V0VHJhbnNsYXRlKGkuJGltYWdlV3JhcEVsWzBdLFwieVwiKXx8MCxpLnNsaWRlV2lkdGg9aS4kc2xpZGVFbFswXS5vZmZzZXRXaWR0aCxpLnNsaWRlSGVpZ2h0PWkuJHNsaWRlRWxbMF0ub2Zmc2V0SGVpZ2h0LGkuJGltYWdlV3JhcEVsLnRyYW5zaXRpb24oMCksdC5ydGwmJihzLnN0YXJ0WD0tcy5zdGFydFgscy5zdGFydFk9LXMuc3RhcnRZKSk7dmFyIG49cy53aWR0aCphLnNjYWxlLG89cy5oZWlnaHQqYS5zY2FsZTtpZighKG48aS5zbGlkZVdpZHRoJiZvPGkuc2xpZGVIZWlnaHQpKXtpZihzLm1pblg9TWF0aC5taW4oaS5zbGlkZVdpZHRoLzItbi8yLDApLHMubWF4WD0tcy5taW5YLHMubWluWT1NYXRoLm1pbihpLnNsaWRlSGVpZ2h0LzItby8yLDApLHMubWF4WT0tcy5taW5ZLHMudG91Y2hlc0N1cnJlbnQueD1cInRvdWNobW92ZVwiPT09ZS50eXBlP2UudGFyZ2V0VG91Y2hlc1swXS5wYWdlWDplLnBhZ2VYLHMudG91Y2hlc0N1cnJlbnQueT1cInRvdWNobW92ZVwiPT09ZS50eXBlP2UudGFyZ2V0VG91Y2hlc1swXS5wYWdlWTplLnBhZ2VZLCFzLmlzTW92ZWQmJiFhLmlzU2NhbGluZyl7aWYodC5pc0hvcml6b250YWwoKSYmKE1hdGguZmxvb3Iocy5taW5YKT09PU1hdGguZmxvb3Iocy5zdGFydFgpJiZzLnRvdWNoZXNDdXJyZW50Lng8cy50b3VjaGVzU3RhcnQueHx8TWF0aC5mbG9vcihzLm1heFgpPT09TWF0aC5mbG9vcihzLnN0YXJ0WCkmJnMudG91Y2hlc0N1cnJlbnQueD5zLnRvdWNoZXNTdGFydC54KSlyZXR1cm4gdm9pZChzLmlzVG91Y2hlZD0hMSk7aWYoIXQuaXNIb3Jpem9udGFsKCkmJihNYXRoLmZsb29yKHMubWluWSk9PT1NYXRoLmZsb29yKHMuc3RhcnRZKSYmcy50b3VjaGVzQ3VycmVudC55PHMudG91Y2hlc1N0YXJ0Lnl8fE1hdGguZmxvb3Iocy5tYXhZKT09PU1hdGguZmxvb3Iocy5zdGFydFkpJiZzLnRvdWNoZXNDdXJyZW50Lnk+cy50b3VjaGVzU3RhcnQueSkpcmV0dXJuIHZvaWQocy5pc1RvdWNoZWQ9ITEpfWUucHJldmVudERlZmF1bHQoKSxlLnN0b3BQcm9wYWdhdGlvbigpLHMuaXNNb3ZlZD0hMCxzLmN1cnJlbnRYPXMudG91Y2hlc0N1cnJlbnQueC1zLnRvdWNoZXNTdGFydC54K3Muc3RhcnRYLHMuY3VycmVudFk9cy50b3VjaGVzQ3VycmVudC55LXMudG91Y2hlc1N0YXJ0Lnkrcy5zdGFydFkscy5jdXJyZW50WDxzLm1pblgmJihzLmN1cnJlbnRYPXMubWluWCsxLU1hdGgucG93KHMubWluWC1zLmN1cnJlbnRYKzEsLjgpKSxzLmN1cnJlbnRYPnMubWF4WCYmKHMuY3VycmVudFg9cy5tYXhYLTErTWF0aC5wb3cocy5jdXJyZW50WC1zLm1heFgrMSwuOCkpLHMuY3VycmVudFk8cy5taW5ZJiYocy5jdXJyZW50WT1zLm1pblkrMS1NYXRoLnBvdyhzLm1pblktcy5jdXJyZW50WSsxLC44KSkscy5jdXJyZW50WT5zLm1heFkmJihzLmN1cnJlbnRZPXMubWF4WS0xK01hdGgucG93KHMuY3VycmVudFktcy5tYXhZKzEsLjgpKSxyLnByZXZQb3NpdGlvblh8fChyLnByZXZQb3NpdGlvblg9cy50b3VjaGVzQ3VycmVudC54KSxyLnByZXZQb3NpdGlvbll8fChyLnByZXZQb3NpdGlvblk9cy50b3VjaGVzQ3VycmVudC55KSxyLnByZXZUaW1lfHwoci5wcmV2VGltZT1EYXRlLm5vdygpKSxyLng9KHMudG91Y2hlc0N1cnJlbnQueC1yLnByZXZQb3NpdGlvblgpLyhEYXRlLm5vdygpLXIucHJldlRpbWUpLzIsci55PShzLnRvdWNoZXNDdXJyZW50Lnktci5wcmV2UG9zaXRpb25ZKS8oRGF0ZS5ub3coKS1yLnByZXZUaW1lKS8yLE1hdGguYWJzKHMudG91Y2hlc0N1cnJlbnQueC1yLnByZXZQb3NpdGlvblgpPDImJihyLng9MCksTWF0aC5hYnMocy50b3VjaGVzQ3VycmVudC55LXIucHJldlBvc2l0aW9uWSk8MiYmKHIueT0wKSxyLnByZXZQb3NpdGlvblg9cy50b3VjaGVzQ3VycmVudC54LHIucHJldlBvc2l0aW9uWT1zLnRvdWNoZXNDdXJyZW50Lnksci5wcmV2VGltZT1EYXRlLm5vdygpLGkuJGltYWdlV3JhcEVsLnRyYW5zZm9ybShcInRyYW5zbGF0ZTNkKFwiK3MuY3VycmVudFgrXCJweCwgXCIrcy5jdXJyZW50WStcInB4LDApXCIpfX19LG9uVG91Y2hFbmQ6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnpvb20sdD1lLmdlc3R1cmUsYT1lLmltYWdlLGk9ZS52ZWxvY2l0eTtpZih0LiRpbWFnZUVsJiYwIT09dC4kaW1hZ2VFbC5sZW5ndGgpe2lmKCFhLmlzVG91Y2hlZHx8IWEuaXNNb3ZlZClyZXR1cm4gYS5pc1RvdWNoZWQ9ITEsdm9pZChhLmlzTW92ZWQ9ITEpO2EuaXNUb3VjaGVkPSExLGEuaXNNb3ZlZD0hMTt2YXIgcz0zMDAscj0zMDAsbj1pLngqcyxvPWEuY3VycmVudFgrbixsPWkueSpyLGQ9YS5jdXJyZW50WStsOzAhPT1pLngmJihzPU1hdGguYWJzKChvLWEuY3VycmVudFgpL2kueCkpLDAhPT1pLnkmJihyPU1hdGguYWJzKChkLWEuY3VycmVudFkpL2kueSkpO3ZhciBwPU1hdGgubWF4KHMscik7YS5jdXJyZW50WD1vLGEuY3VycmVudFk9ZDt2YXIgYz1hLndpZHRoKmUuc2NhbGUsdT1hLmhlaWdodCplLnNjYWxlO2EubWluWD1NYXRoLm1pbih0LnNsaWRlV2lkdGgvMi1jLzIsMCksYS5tYXhYPS1hLm1pblgsYS5taW5ZPU1hdGgubWluKHQuc2xpZGVIZWlnaHQvMi11LzIsMCksYS5tYXhZPS1hLm1pblksYS5jdXJyZW50WD1NYXRoLm1heChNYXRoLm1pbihhLmN1cnJlbnRYLGEubWF4WCksYS5taW5YKSxhLmN1cnJlbnRZPU1hdGgubWF4KE1hdGgubWluKGEuY3VycmVudFksYS5tYXhZKSxhLm1pblkpLHQuJGltYWdlV3JhcEVsLnRyYW5zaXRpb24ocCkudHJhbnNmb3JtKFwidHJhbnNsYXRlM2QoXCIrYS5jdXJyZW50WCtcInB4LCBcIithLmN1cnJlbnRZK1wicHgsMClcIil9fSxvblRyYW5zaXRpb25FbmQ6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnpvb20sdD1lLmdlc3R1cmU7dC4kc2xpZGVFbCYmdGhpcy5wcmV2aW91c0luZGV4IT09dGhpcy5hY3RpdmVJbmRleCYmKHQuJGltYWdlRWwudHJhbnNmb3JtKFwidHJhbnNsYXRlM2QoMCwwLDApIHNjYWxlKDEpXCIpLHQuJGltYWdlV3JhcEVsLnRyYW5zZm9ybShcInRyYW5zbGF0ZTNkKDAsMCwwKVwiKSxlLnNjYWxlPTEsZS5jdXJyZW50U2NhbGU9MSx0LiRzbGlkZUVsPXZvaWQgMCx0LiRpbWFnZUVsPXZvaWQgMCx0LiRpbWFnZVdyYXBFbD12b2lkIDApfSx0b2dnbGU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy56b29tO3Quc2NhbGUmJjEhPT10LnNjYWxlP3Qub3V0KCk6dC5pbihlKX0saW46ZnVuY3Rpb24oZSl7dmFyIHQsYSxzLHIsbixvLGwsZCxwLGMsdSxoLHYsZixtLGcsYj10aGlzLHc9Yi56b29tLHk9Yi5wYXJhbXMuem9vbSx4PXcuZ2VzdHVyZSxUPXcuaW1hZ2U7eC4kc2xpZGVFbHx8KHguJHNsaWRlRWw9Yi5jbGlja2VkU2xpZGU/aShiLmNsaWNrZWRTbGlkZSk6Yi5zbGlkZXMuZXEoYi5hY3RpdmVJbmRleCkseC4kaW1hZ2VFbD14LiRzbGlkZUVsLmZpbmQoXCJpbWcsIHN2ZywgY2FudmFzXCIpLHguJGltYWdlV3JhcEVsPXguJGltYWdlRWwucGFyZW50KFwiLlwiK3kuY29udGFpbmVyQ2xhc3MpKSx4LiRpbWFnZUVsJiYwIT09eC4kaW1hZ2VFbC5sZW5ndGgmJih4LiRzbGlkZUVsLmFkZENsYXNzKFwiXCIreS56b29tZWRTbGlkZUNsYXNzKSx2b2lkIDA9PT1ULnRvdWNoZXNTdGFydC54JiZlPyh0PVwidG91Y2hlbmRcIj09PWUudHlwZT9lLmNoYW5nZWRUb3VjaGVzWzBdLnBhZ2VYOmUucGFnZVgsYT1cInRvdWNoZW5kXCI9PT1lLnR5cGU/ZS5jaGFuZ2VkVG91Y2hlc1swXS5wYWdlWTplLnBhZ2VZKToodD1ULnRvdWNoZXNTdGFydC54LGE9VC50b3VjaGVzU3RhcnQueSksdy5zY2FsZT14LiRpbWFnZVdyYXBFbC5hdHRyKFwiZGF0YS1zd2lwZXItem9vbVwiKXx8eS5tYXhSYXRpbyx3LmN1cnJlbnRTY2FsZT14LiRpbWFnZVdyYXBFbC5hdHRyKFwiZGF0YS1zd2lwZXItem9vbVwiKXx8eS5tYXhSYXRpbyxlPyhtPXguJHNsaWRlRWxbMF0ub2Zmc2V0V2lkdGgsZz14LiRzbGlkZUVsWzBdLm9mZnNldEhlaWdodCxzPXguJHNsaWRlRWwub2Zmc2V0KCkubGVmdCttLzItdCxyPXguJHNsaWRlRWwub2Zmc2V0KCkudG9wK2cvMi1hLGw9eC4kaW1hZ2VFbFswXS5vZmZzZXRXaWR0aCxkPXguJGltYWdlRWxbMF0ub2Zmc2V0SGVpZ2h0LHA9bCp3LnNjYWxlLGM9ZCp3LnNjYWxlLHY9LSh1PU1hdGgubWluKG0vMi1wLzIsMCkpLGY9LShoPU1hdGgubWluKGcvMi1jLzIsMCkpLChuPXMqdy5zY2FsZSk8dSYmKG49dSksdjxuJiYobj12KSwobz1yKncuc2NhbGUpPGgmJihvPWgpLGY8byYmKG89ZikpOm89bj0wLHguJGltYWdlV3JhcEVsLnRyYW5zaXRpb24oMzAwKS50cmFuc2Zvcm0oXCJ0cmFuc2xhdGUzZChcIituK1wicHgsIFwiK28rXCJweCwwKVwiKSx4LiRpbWFnZUVsLnRyYW5zaXRpb24oMzAwKS50cmFuc2Zvcm0oXCJ0cmFuc2xhdGUzZCgwLDAsMCkgc2NhbGUoXCIrdy5zY2FsZStcIilcIikpfSxvdXQ6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9ZS56b29tLGE9ZS5wYXJhbXMuem9vbSxzPXQuZ2VzdHVyZTtzLiRzbGlkZUVsfHwocy4kc2xpZGVFbD1lLmNsaWNrZWRTbGlkZT9pKGUuY2xpY2tlZFNsaWRlKTplLnNsaWRlcy5lcShlLmFjdGl2ZUluZGV4KSxzLiRpbWFnZUVsPXMuJHNsaWRlRWwuZmluZChcImltZywgc3ZnLCBjYW52YXNcIikscy4kaW1hZ2VXcmFwRWw9cy4kaW1hZ2VFbC5wYXJlbnQoXCIuXCIrYS5jb250YWluZXJDbGFzcykpLHMuJGltYWdlRWwmJjAhPT1zLiRpbWFnZUVsLmxlbmd0aCYmKHQuc2NhbGU9MSx0LmN1cnJlbnRTY2FsZT0xLHMuJGltYWdlV3JhcEVsLnRyYW5zaXRpb24oMzAwKS50cmFuc2Zvcm0oXCJ0cmFuc2xhdGUzZCgwLDAsMClcIikscy4kaW1hZ2VFbC50cmFuc2l0aW9uKDMwMCkudHJhbnNmb3JtKFwidHJhbnNsYXRlM2QoMCwwLDApIHNjYWxlKDEpXCIpLHMuJHNsaWRlRWwucmVtb3ZlQ2xhc3MoXCJcIithLnpvb21lZFNsaWRlQ2xhc3MpLHMuJHNsaWRlRWw9dm9pZCAwKX0sZW5hYmxlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PWUuem9vbTtpZighdC5lbmFibGVkKXt0LmVuYWJsZWQ9ITA7dmFyIGE9IShcInRvdWNoc3RhcnRcIiE9PWUudG91Y2hFdmVudHMuc3RhcnR8fCFwLnBhc3NpdmVMaXN0ZW5lcnx8IWUucGFyYW1zLnBhc3NpdmVMaXN0ZW5lcnMpJiZ7cGFzc2l2ZTohMCxjYXB0dXJlOiExfTtwLmdlc3R1cmVzPyhlLiR3cmFwcGVyRWwub24oXCJnZXN0dXJlc3RhcnRcIixcIi5zd2lwZXItc2xpZGVcIix0Lm9uR2VzdHVyZVN0YXJ0LGEpLGUuJHdyYXBwZXJFbC5vbihcImdlc3R1cmVjaGFuZ2VcIixcIi5zd2lwZXItc2xpZGVcIix0Lm9uR2VzdHVyZUNoYW5nZSxhKSxlLiR3cmFwcGVyRWwub24oXCJnZXN0dXJlZW5kXCIsXCIuc3dpcGVyLXNsaWRlXCIsdC5vbkdlc3R1cmVFbmQsYSkpOlwidG91Y2hzdGFydFwiPT09ZS50b3VjaEV2ZW50cy5zdGFydCYmKGUuJHdyYXBwZXJFbC5vbihlLnRvdWNoRXZlbnRzLnN0YXJ0LFwiLnN3aXBlci1zbGlkZVwiLHQub25HZXN0dXJlU3RhcnQsYSksZS4kd3JhcHBlckVsLm9uKGUudG91Y2hFdmVudHMubW92ZSxcIi5zd2lwZXItc2xpZGVcIix0Lm9uR2VzdHVyZUNoYW5nZSxhKSxlLiR3cmFwcGVyRWwub24oZS50b3VjaEV2ZW50cy5lbmQsXCIuc3dpcGVyLXNsaWRlXCIsdC5vbkdlc3R1cmVFbmQsYSkpLGUuJHdyYXBwZXJFbC5vbihlLnRvdWNoRXZlbnRzLm1vdmUsXCIuXCIrZS5wYXJhbXMuem9vbS5jb250YWluZXJDbGFzcyx0Lm9uVG91Y2hNb3ZlKX19LGRpc2FibGU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9ZS56b29tO2lmKHQuZW5hYmxlZCl7ZS56b29tLmVuYWJsZWQ9ITE7dmFyIGE9IShcInRvdWNoc3RhcnRcIiE9PWUudG91Y2hFdmVudHMuc3RhcnR8fCFwLnBhc3NpdmVMaXN0ZW5lcnx8IWUucGFyYW1zLnBhc3NpdmVMaXN0ZW5lcnMpJiZ7cGFzc2l2ZTohMCxjYXB0dXJlOiExfTtwLmdlc3R1cmVzPyhlLiR3cmFwcGVyRWwub2ZmKFwiZ2VzdHVyZXN0YXJ0XCIsXCIuc3dpcGVyLXNsaWRlXCIsdC5vbkdlc3R1cmVTdGFydCxhKSxlLiR3cmFwcGVyRWwub2ZmKFwiZ2VzdHVyZWNoYW5nZVwiLFwiLnN3aXBlci1zbGlkZVwiLHQub25HZXN0dXJlQ2hhbmdlLGEpLGUuJHdyYXBwZXJFbC5vZmYoXCJnZXN0dXJlZW5kXCIsXCIuc3dpcGVyLXNsaWRlXCIsdC5vbkdlc3R1cmVFbmQsYSkpOlwidG91Y2hzdGFydFwiPT09ZS50b3VjaEV2ZW50cy5zdGFydCYmKGUuJHdyYXBwZXJFbC5vZmYoZS50b3VjaEV2ZW50cy5zdGFydCxcIi5zd2lwZXItc2xpZGVcIix0Lm9uR2VzdHVyZVN0YXJ0LGEpLGUuJHdyYXBwZXJFbC5vZmYoZS50b3VjaEV2ZW50cy5tb3ZlLFwiLnN3aXBlci1zbGlkZVwiLHQub25HZXN0dXJlQ2hhbmdlLGEpLGUuJHdyYXBwZXJFbC5vZmYoZS50b3VjaEV2ZW50cy5lbmQsXCIuc3dpcGVyLXNsaWRlXCIsdC5vbkdlc3R1cmVFbmQsYSkpLGUuJHdyYXBwZXJFbC5vZmYoZS50b3VjaEV2ZW50cy5tb3ZlLFwiLlwiK2UucGFyYW1zLnpvb20uY29udGFpbmVyQ2xhc3MsdC5vblRvdWNoTW92ZSl9fX0scT17bG9hZEluU2xpZGU6ZnVuY3Rpb24oZSx0KXt2b2lkIDA9PT10JiYodD0hMCk7dmFyIGE9dGhpcyxzPWEucGFyYW1zLmxhenk7aWYodm9pZCAwIT09ZSYmMCE9PWEuc2xpZGVzLmxlbmd0aCl7dmFyIHI9YS52aXJ0dWFsJiZhLnBhcmFtcy52aXJ0dWFsLmVuYWJsZWQ/YS4kd3JhcHBlckVsLmNoaWxkcmVuKFwiLlwiK2EucGFyYW1zLnNsaWRlQ2xhc3MrJ1tkYXRhLXN3aXBlci1zbGlkZS1pbmRleD1cIicrZSsnXCJdJyk6YS5zbGlkZXMuZXEoZSksbj1yLmZpbmQoXCIuXCIrcy5lbGVtZW50Q2xhc3MrXCI6bm90KC5cIitzLmxvYWRlZENsYXNzK1wiKTpub3QoLlwiK3MubG9hZGluZ0NsYXNzK1wiKVwiKTshci5oYXNDbGFzcyhzLmVsZW1lbnRDbGFzcyl8fHIuaGFzQ2xhc3Mocy5sb2FkZWRDbGFzcyl8fHIuaGFzQ2xhc3Mocy5sb2FkaW5nQ2xhc3MpfHwobj1uLmFkZChyWzBdKSksMCE9PW4ubGVuZ3RoJiZuLmVhY2goZnVuY3Rpb24oZSxuKXt2YXIgbz1pKG4pO28uYWRkQ2xhc3Mocy5sb2FkaW5nQ2xhc3MpO3ZhciBsPW8uYXR0cihcImRhdGEtYmFja2dyb3VuZFwiKSxkPW8uYXR0cihcImRhdGEtc3JjXCIpLHA9by5hdHRyKFwiZGF0YS1zcmNzZXRcIiksYz1vLmF0dHIoXCJkYXRhLXNpemVzXCIpO2EubG9hZEltYWdlKG9bMF0sZHx8bCxwLGMsITEsZnVuY3Rpb24oKXtpZihudWxsIT1hJiZhJiYoIWF8fGEucGFyYW1zKSYmIWEuZGVzdHJveWVkKXtpZihsPyhvLmNzcyhcImJhY2tncm91bmQtaW1hZ2VcIiwndXJsKFwiJytsKydcIiknKSxvLnJlbW92ZUF0dHIoXCJkYXRhLWJhY2tncm91bmRcIikpOihwJiYoby5hdHRyKFwic3Jjc2V0XCIscCksby5yZW1vdmVBdHRyKFwiZGF0YS1zcmNzZXRcIikpLGMmJihvLmF0dHIoXCJzaXplc1wiLGMpLG8ucmVtb3ZlQXR0cihcImRhdGEtc2l6ZXNcIikpLGQmJihvLmF0dHIoXCJzcmNcIixkKSxvLnJlbW92ZUF0dHIoXCJkYXRhLXNyY1wiKSkpLG8uYWRkQ2xhc3Mocy5sb2FkZWRDbGFzcykucmVtb3ZlQ2xhc3Mocy5sb2FkaW5nQ2xhc3MpLHIuZmluZChcIi5cIitzLnByZWxvYWRlckNsYXNzKS5yZW1vdmUoKSxhLnBhcmFtcy5sb29wJiZ0KXt2YXIgZT1yLmF0dHIoXCJkYXRhLXN3aXBlci1zbGlkZS1pbmRleFwiKTtpZihyLmhhc0NsYXNzKGEucGFyYW1zLnNsaWRlRHVwbGljYXRlQ2xhc3MpKXt2YXIgaT1hLiR3cmFwcGVyRWwuY2hpbGRyZW4oJ1tkYXRhLXN3aXBlci1zbGlkZS1pbmRleD1cIicrZSsnXCJdOm5vdCguJythLnBhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzK1wiKVwiKTthLmxhenkubG9hZEluU2xpZGUoaS5pbmRleCgpLCExKX1lbHNle3ZhciBuPWEuJHdyYXBwZXJFbC5jaGlsZHJlbihcIi5cIithLnBhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzKydbZGF0YS1zd2lwZXItc2xpZGUtaW5kZXg9XCInK2UrJ1wiXScpO2EubGF6eS5sb2FkSW5TbGlkZShuLmluZGV4KCksITEpfX1hLmVtaXQoXCJsYXp5SW1hZ2VSZWFkeVwiLHJbMF0sb1swXSl9fSksYS5lbWl0KFwibGF6eUltYWdlTG9hZFwiLHJbMF0sb1swXSl9KX19LGxvYWQ6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9ZS4kd3JhcHBlckVsLGE9ZS5wYXJhbXMscz1lLnNsaWRlcyxyPWUuYWN0aXZlSW5kZXgsbj1lLnZpcnR1YWwmJmEudmlydHVhbC5lbmFibGVkLG89YS5sYXp5LGw9YS5zbGlkZXNQZXJWaWV3O2Z1bmN0aW9uIGQoZSl7aWYobil7aWYodC5jaGlsZHJlbihcIi5cIithLnNsaWRlQ2xhc3MrJ1tkYXRhLXN3aXBlci1zbGlkZS1pbmRleD1cIicrZSsnXCJdJykubGVuZ3RoKXJldHVybiEwfWVsc2UgaWYoc1tlXSlyZXR1cm4hMDtyZXR1cm4hMX1mdW5jdGlvbiBwKGUpe3JldHVybiBuP2koZSkuYXR0cihcImRhdGEtc3dpcGVyLXNsaWRlLWluZGV4XCIpOmkoZSkuaW5kZXgoKX1pZihcImF1dG9cIj09PWwmJihsPTApLGUubGF6eS5pbml0aWFsSW1hZ2VMb2FkZWR8fChlLmxhenkuaW5pdGlhbEltYWdlTG9hZGVkPSEwKSxlLnBhcmFtcy53YXRjaFNsaWRlc1Zpc2liaWxpdHkpdC5jaGlsZHJlbihcIi5cIithLnNsaWRlVmlzaWJsZUNsYXNzKS5lYWNoKGZ1bmN0aW9uKHQsYSl7dmFyIHM9bj9pKGEpLmF0dHIoXCJkYXRhLXN3aXBlci1zbGlkZS1pbmRleFwiKTppKGEpLmluZGV4KCk7ZS5sYXp5LmxvYWRJblNsaWRlKHMpfSk7ZWxzZSBpZigxPGwpZm9yKHZhciBjPXI7YzxyK2w7Yys9MSlkKGMpJiZlLmxhenkubG9hZEluU2xpZGUoYyk7ZWxzZSBlLmxhenkubG9hZEluU2xpZGUocik7aWYoby5sb2FkUHJldk5leHQpaWYoMTxsfHxvLmxvYWRQcmV2TmV4dEFtb3VudCYmMTxvLmxvYWRQcmV2TmV4dEFtb3VudCl7Zm9yKHZhciB1PW8ubG9hZFByZXZOZXh0QW1vdW50LGg9bCx2PU1hdGgubWluKHIraCtNYXRoLm1heCh1LGgpLHMubGVuZ3RoKSxmPU1hdGgubWF4KHItTWF0aC5tYXgoaCx1KSwwKSxtPXIrbDttPHY7bSs9MSlkKG0pJiZlLmxhenkubG9hZEluU2xpZGUobSk7Zm9yKHZhciBnPWY7ZzxyO2crPTEpZChnKSYmZS5sYXp5LmxvYWRJblNsaWRlKGcpfWVsc2V7dmFyIGI9dC5jaGlsZHJlbihcIi5cIithLnNsaWRlTmV4dENsYXNzKTswPGIubGVuZ3RoJiZlLmxhenkubG9hZEluU2xpZGUocChiKSk7dmFyIHc9dC5jaGlsZHJlbihcIi5cIithLnNsaWRlUHJldkNsYXNzKTswPHcubGVuZ3RoJiZlLmxhenkubG9hZEluU2xpZGUocCh3KSl9fX0sVz17TGluZWFyU3BsaW5lOmZ1bmN0aW9uKGUsdCl7dmFyIGEsaSxzLHIsbjtyZXR1cm4gdGhpcy54PWUsdGhpcy55PXQsdGhpcy5sYXN0SW5kZXg9ZS5sZW5ndGgtMSx0aGlzLmludGVycG9sYXRlPWZ1bmN0aW9uKGUpe3JldHVybiBlPyhuPWZ1bmN0aW9uKGUsdCl7Zm9yKGk9LTEsYT1lLmxlbmd0aDsxPGEtaTspZVtzPWEraT4+MV08PXQ/aT1zOmE9cztyZXR1cm4gYX0odGhpcy54LGUpLHI9bi0xLChlLXRoaXMueFtyXSkqKHRoaXMueVtuXS10aGlzLnlbcl0pLyh0aGlzLnhbbl0tdGhpcy54W3JdKSt0aGlzLnlbcl0pOjB9LHRoaXN9LGdldEludGVycG9sYXRlRnVuY3Rpb246ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczt0LmNvbnRyb2xsZXIuc3BsaW5lfHwodC5jb250cm9sbGVyLnNwbGluZT10LnBhcmFtcy5sb29wP25ldyBXLkxpbmVhclNwbGluZSh0LnNsaWRlc0dyaWQsZS5zbGlkZXNHcmlkKTpuZXcgVy5MaW5lYXJTcGxpbmUodC5zbmFwR3JpZCxlLnNuYXBHcmlkKSl9LHNldFRyYW5zbGF0ZTpmdW5jdGlvbihlLHQpe3ZhciBhLGkscz10aGlzLHI9cy5jb250cm9sbGVyLmNvbnRyb2w7ZnVuY3Rpb24gbihlKXt2YXIgdD1zLnJ0bFRyYW5zbGF0ZT8tcy50cmFuc2xhdGU6cy50cmFuc2xhdGU7XCJzbGlkZVwiPT09cy5wYXJhbXMuY29udHJvbGxlci5ieSYmKHMuY29udHJvbGxlci5nZXRJbnRlcnBvbGF0ZUZ1bmN0aW9uKGUpLGk9LXMuY29udHJvbGxlci5zcGxpbmUuaW50ZXJwb2xhdGUoLXQpKSxpJiZcImNvbnRhaW5lclwiIT09cy5wYXJhbXMuY29udHJvbGxlci5ieXx8KGE9KGUubWF4VHJhbnNsYXRlKCktZS5taW5UcmFuc2xhdGUoKSkvKHMubWF4VHJhbnNsYXRlKCktcy5taW5UcmFuc2xhdGUoKSksaT0odC1zLm1pblRyYW5zbGF0ZSgpKSphK2UubWluVHJhbnNsYXRlKCkpLHMucGFyYW1zLmNvbnRyb2xsZXIuaW52ZXJzZSYmKGk9ZS5tYXhUcmFuc2xhdGUoKS1pKSxlLnVwZGF0ZVByb2dyZXNzKGkpLGUuc2V0VHJhbnNsYXRlKGkscyksZS51cGRhdGVBY3RpdmVJbmRleCgpLGUudXBkYXRlU2xpZGVzQ2xhc3NlcygpfWlmKEFycmF5LmlzQXJyYXkocikpZm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKz0xKXJbb10hPT10JiZyW29daW5zdGFuY2VvZiBQJiZuKHJbb10pO2Vsc2UgciBpbnN0YW5jZW9mIFAmJnQhPT1yJiZuKHIpfSxzZXRUcmFuc2l0aW9uOmZ1bmN0aW9uKGUsdCl7dmFyIGEsaT10aGlzLHM9aS5jb250cm9sbGVyLmNvbnRyb2w7ZnVuY3Rpb24gcih0KXt0LnNldFRyYW5zaXRpb24oZSxpKSwwIT09ZSYmKHQudHJhbnNpdGlvblN0YXJ0KCksdC5wYXJhbXMuYXV0b0hlaWdodCYmZC5uZXh0VGljayhmdW5jdGlvbigpe3QudXBkYXRlQXV0b0hlaWdodCgpfSksdC4kd3JhcHBlckVsLnRyYW5zaXRpb25FbmQoZnVuY3Rpb24oKXtzJiYodC5wYXJhbXMubG9vcCYmXCJzbGlkZVwiPT09aS5wYXJhbXMuY29udHJvbGxlci5ieSYmdC5sb29wRml4KCksdC50cmFuc2l0aW9uRW5kKCkpfSkpfWlmKEFycmF5LmlzQXJyYXkocykpZm9yKGE9MDthPHMubGVuZ3RoO2ErPTEpc1thXSE9PXQmJnNbYV1pbnN0YW5jZW9mIFAmJnIoc1thXSk7ZWxzZSBzIGluc3RhbmNlb2YgUCYmdCE9PXMmJnIocyl9fSxqPXttYWtlRWxGb2N1c2FibGU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUuYXR0cihcInRhYkluZGV4XCIsXCIwXCIpLGV9LGFkZEVsUm9sZTpmdW5jdGlvbihlLHQpe3JldHVybiBlLmF0dHIoXCJyb2xlXCIsdCksZX0sYWRkRWxMYWJlbDpmdW5jdGlvbihlLHQpe3JldHVybiBlLmF0dHIoXCJhcmlhLWxhYmVsXCIsdCksZX0sZGlzYWJsZUVsOmZ1bmN0aW9uKGUpe3JldHVybiBlLmF0dHIoXCJhcmlhLWRpc2FibGVkXCIsITApLGV9LGVuYWJsZUVsOmZ1bmN0aW9uKGUpe3JldHVybiBlLmF0dHIoXCJhcmlhLWRpc2FibGVkXCIsITEpLGV9LG9uRW50ZXJLZXk6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxhPXQucGFyYW1zLmExMXk7aWYoMTM9PT1lLmtleUNvZGUpe3ZhciBzPWkoZS50YXJnZXQpO3QubmF2aWdhdGlvbiYmdC5uYXZpZ2F0aW9uLiRuZXh0RWwmJnMuaXModC5uYXZpZ2F0aW9uLiRuZXh0RWwpJiYodC5pc0VuZCYmIXQucGFyYW1zLmxvb3B8fHQuc2xpZGVOZXh0KCksdC5pc0VuZD90LmExMXkubm90aWZ5KGEubGFzdFNsaWRlTWVzc2FnZSk6dC5hMTF5Lm5vdGlmeShhLm5leHRTbGlkZU1lc3NhZ2UpKSx0Lm5hdmlnYXRpb24mJnQubmF2aWdhdGlvbi4kcHJldkVsJiZzLmlzKHQubmF2aWdhdGlvbi4kcHJldkVsKSYmKHQuaXNCZWdpbm5pbmcmJiF0LnBhcmFtcy5sb29wfHx0LnNsaWRlUHJldigpLHQuaXNCZWdpbm5pbmc/dC5hMTF5Lm5vdGlmeShhLmZpcnN0U2xpZGVNZXNzYWdlKTp0LmExMXkubm90aWZ5KGEucHJldlNsaWRlTWVzc2FnZSkpLHQucGFnaW5hdGlvbiYmcy5pcyhcIi5cIit0LnBhcmFtcy5wYWdpbmF0aW9uLmJ1bGxldENsYXNzKSYmc1swXS5jbGljaygpfX0sbm90aWZ5OmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuYTExeS5saXZlUmVnaW9uOzAhPT10Lmxlbmd0aCYmKHQuaHRtbChcIlwiKSx0Lmh0bWwoZSkpfSx1cGRhdGVOYXZpZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztpZighZS5wYXJhbXMubG9vcCl7dmFyIHQ9ZS5uYXZpZ2F0aW9uLGE9dC4kbmV4dEVsLGk9dC4kcHJldkVsO2kmJjA8aS5sZW5ndGgmJihlLmlzQmVnaW5uaW5nP2UuYTExeS5kaXNhYmxlRWwoaSk6ZS5hMTF5LmVuYWJsZUVsKGkpKSxhJiYwPGEubGVuZ3RoJiYoZS5pc0VuZD9lLmExMXkuZGlzYWJsZUVsKGEpOmUuYTExeS5lbmFibGVFbChhKSl9fSx1cGRhdGVQYWdpbmF0aW9uOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PWUucGFyYW1zLmExMXk7ZS5wYWdpbmF0aW9uJiZlLnBhcmFtcy5wYWdpbmF0aW9uLmNsaWNrYWJsZSYmZS5wYWdpbmF0aW9uLmJ1bGxldHMmJmUucGFnaW5hdGlvbi5idWxsZXRzLmxlbmd0aCYmZS5wYWdpbmF0aW9uLmJ1bGxldHMuZWFjaChmdW5jdGlvbihhLHMpe3ZhciByPWkocyk7ZS5hMTF5Lm1ha2VFbEZvY3VzYWJsZShyKSxlLmExMXkuYWRkRWxSb2xlKHIsXCJidXR0b25cIiksZS5hMTF5LmFkZEVsTGFiZWwocix0LnBhZ2luYXRpb25CdWxsZXRNZXNzYWdlLnJlcGxhY2UoL3t7aW5kZXh9fS8sci5pbmRleCgpKzEpKX0pfSxpbml0OmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLiRlbC5hcHBlbmQoZS5hMTF5LmxpdmVSZWdpb24pO3ZhciB0LGEsaT1lLnBhcmFtcy5hMTF5O2UubmF2aWdhdGlvbiYmZS5uYXZpZ2F0aW9uLiRuZXh0RWwmJih0PWUubmF2aWdhdGlvbi4kbmV4dEVsKSxlLm5hdmlnYXRpb24mJmUubmF2aWdhdGlvbi4kcHJldkVsJiYoYT1lLm5hdmlnYXRpb24uJHByZXZFbCksdCYmKGUuYTExeS5tYWtlRWxGb2N1c2FibGUodCksZS5hMTF5LmFkZEVsUm9sZSh0LFwiYnV0dG9uXCIpLGUuYTExeS5hZGRFbExhYmVsKHQsaS5uZXh0U2xpZGVNZXNzYWdlKSx0Lm9uKFwia2V5ZG93blwiLGUuYTExeS5vbkVudGVyS2V5KSksYSYmKGUuYTExeS5tYWtlRWxGb2N1c2FibGUoYSksZS5hMTF5LmFkZEVsUm9sZShhLFwiYnV0dG9uXCIpLGUuYTExeS5hZGRFbExhYmVsKGEsaS5wcmV2U2xpZGVNZXNzYWdlKSxhLm9uKFwia2V5ZG93blwiLGUuYTExeS5vbkVudGVyS2V5KSksZS5wYWdpbmF0aW9uJiZlLnBhcmFtcy5wYWdpbmF0aW9uLmNsaWNrYWJsZSYmZS5wYWdpbmF0aW9uLmJ1bGxldHMmJmUucGFnaW5hdGlvbi5idWxsZXRzLmxlbmd0aCYmZS5wYWdpbmF0aW9uLiRlbC5vbihcImtleWRvd25cIixcIi5cIitlLnBhcmFtcy5wYWdpbmF0aW9uLmJ1bGxldENsYXNzLGUuYTExeS5vbkVudGVyS2V5KX0sZGVzdHJveTpmdW5jdGlvbigpe3ZhciBlLHQsYT10aGlzO2EuYTExeS5saXZlUmVnaW9uJiYwPGEuYTExeS5saXZlUmVnaW9uLmxlbmd0aCYmYS5hMTF5LmxpdmVSZWdpb24ucmVtb3ZlKCksYS5uYXZpZ2F0aW9uJiZhLm5hdmlnYXRpb24uJG5leHRFbCYmKGU9YS5uYXZpZ2F0aW9uLiRuZXh0RWwpLGEubmF2aWdhdGlvbiYmYS5uYXZpZ2F0aW9uLiRwcmV2RWwmJih0PWEubmF2aWdhdGlvbi4kcHJldkVsKSxlJiZlLm9mZihcImtleWRvd25cIixhLmExMXkub25FbnRlcktleSksdCYmdC5vZmYoXCJrZXlkb3duXCIsYS5hMTF5Lm9uRW50ZXJLZXkpLGEucGFnaW5hdGlvbiYmYS5wYXJhbXMucGFnaW5hdGlvbi5jbGlja2FibGUmJmEucGFnaW5hdGlvbi5idWxsZXRzJiZhLnBhZ2luYXRpb24uYnVsbGV0cy5sZW5ndGgmJmEucGFnaW5hdGlvbi4kZWwub2ZmKFwia2V5ZG93blwiLFwiLlwiK2EucGFyYW1zLnBhZ2luYXRpb24uYnVsbGV0Q2xhc3MsYS5hMTF5Lm9uRW50ZXJLZXkpfX0sVT17aW5pdDpmdW5jdGlvbigpe3ZhciBlPXRoaXM7aWYoZS5wYXJhbXMuaGlzdG9yeSl7aWYoIXQuaGlzdG9yeXx8IXQuaGlzdG9yeS5wdXNoU3RhdGUpcmV0dXJuIGUucGFyYW1zLmhpc3RvcnkuZW5hYmxlZD0hMSx2b2lkKGUucGFyYW1zLmhhc2hOYXZpZ2F0aW9uLmVuYWJsZWQ9ITApO3ZhciBhPWUuaGlzdG9yeTthLmluaXRpYWxpemVkPSEwLGEucGF0aHM9VS5nZXRQYXRoVmFsdWVzKCksKGEucGF0aHMua2V5fHxhLnBhdGhzLnZhbHVlKSYmKGEuc2Nyb2xsVG9TbGlkZSgwLGEucGF0aHMudmFsdWUsZS5wYXJhbXMucnVuQ2FsbGJhY2tzT25Jbml0KSxlLnBhcmFtcy5oaXN0b3J5LnJlcGxhY2VTdGF0ZXx8dC5hZGRFdmVudExpc3RlbmVyKFwicG9wc3RhdGVcIixlLmhpc3Rvcnkuc2V0SGlzdG9yeVBvcFN0YXRlKSl9fSxkZXN0cm95OmZ1bmN0aW9uKCl7dGhpcy5wYXJhbXMuaGlzdG9yeS5yZXBsYWNlU3RhdGV8fHQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInBvcHN0YXRlXCIsdGhpcy5oaXN0b3J5LnNldEhpc3RvcnlQb3BTdGF0ZSl9LHNldEhpc3RvcnlQb3BTdGF0ZTpmdW5jdGlvbigpe3RoaXMuaGlzdG9yeS5wYXRocz1VLmdldFBhdGhWYWx1ZXMoKSx0aGlzLmhpc3Rvcnkuc2Nyb2xsVG9TbGlkZSh0aGlzLnBhcmFtcy5zcGVlZCx0aGlzLmhpc3RvcnkucGF0aHMudmFsdWUsITEpfSxnZXRQYXRoVmFsdWVzOmZ1bmN0aW9uKCl7dmFyIGU9dC5sb2NhdGlvbi5wYXRobmFtZS5zbGljZSgxKS5zcGxpdChcIi9cIikuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVyblwiXCIhPT1lfSksYT1lLmxlbmd0aDtyZXR1cm57a2V5OmVbYS0yXSx2YWx1ZTplW2EtMV19fSxzZXRIaXN0b3J5OmZ1bmN0aW9uKGUsYSl7aWYodGhpcy5oaXN0b3J5LmluaXRpYWxpemVkJiZ0aGlzLnBhcmFtcy5oaXN0b3J5LmVuYWJsZWQpe3ZhciBpPXRoaXMuc2xpZGVzLmVxKGEpLHM9VS5zbHVnaWZ5KGkuYXR0cihcImRhdGEtaGlzdG9yeVwiKSk7dC5sb2NhdGlvbi5wYXRobmFtZS5pbmNsdWRlcyhlKXx8KHM9ZStcIi9cIitzKTt2YXIgcj10Lmhpc3Rvcnkuc3RhdGU7ciYmci52YWx1ZT09PXN8fCh0aGlzLnBhcmFtcy5oaXN0b3J5LnJlcGxhY2VTdGF0ZT90Lmhpc3RvcnkucmVwbGFjZVN0YXRlKHt2YWx1ZTpzfSxudWxsLHMpOnQuaGlzdG9yeS5wdXNoU3RhdGUoe3ZhbHVlOnN9LG51bGwscykpfX0sc2x1Z2lmeTpmdW5jdGlvbihlKXtyZXR1cm4gZS50b1N0cmluZygpLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvXFxzKy9nLFwiLVwiKS5yZXBsYWNlKC9bXlxcdy1dKy9nLFwiXCIpLnJlcGxhY2UoLy0tKy9nLFwiLVwiKS5yZXBsYWNlKC9eLSsvLFwiXCIpLnJlcGxhY2UoLy0rJC8sXCJcIil9LHNjcm9sbFRvU2xpZGU6ZnVuY3Rpb24oZSx0LGEpe3ZhciBpPXRoaXM7aWYodClmb3IodmFyIHM9MCxyPWkuc2xpZGVzLmxlbmd0aDtzPHI7cys9MSl7dmFyIG49aS5zbGlkZXMuZXEocyk7aWYoVS5zbHVnaWZ5KG4uYXR0cihcImRhdGEtaGlzdG9yeVwiKSk9PT10JiYhbi5oYXNDbGFzcyhpLnBhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzKSl7dmFyIG89bi5pbmRleCgpO2kuc2xpZGVUbyhvLGUsYSl9fWVsc2UgaS5zbGlkZVRvKDAsZSxhKX19LEs9e29uSGFzaENhbmdlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxhPWUubG9jYXRpb24uaGFzaC5yZXBsYWNlKFwiI1wiLFwiXCIpO2lmKGEhPT10LnNsaWRlcy5lcSh0LmFjdGl2ZUluZGV4KS5hdHRyKFwiZGF0YS1oYXNoXCIpKXt2YXIgaT10LiR3cmFwcGVyRWwuY2hpbGRyZW4oXCIuXCIrdC5wYXJhbXMuc2xpZGVDbGFzcysnW2RhdGEtaGFzaD1cIicrYSsnXCJdJykuaW5kZXgoKTtpZih2b2lkIDA9PT1pKXJldHVybjt0LnNsaWRlVG8oaSl9fSxzZXRIYXNoOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcztpZihhLmhhc2hOYXZpZ2F0aW9uLmluaXRpYWxpemVkJiZhLnBhcmFtcy5oYXNoTmF2aWdhdGlvbi5lbmFibGVkKWlmKGEucGFyYW1zLmhhc2hOYXZpZ2F0aW9uLnJlcGxhY2VTdGF0ZSYmdC5oaXN0b3J5JiZ0Lmhpc3RvcnkucmVwbGFjZVN0YXRlKXQuaGlzdG9yeS5yZXBsYWNlU3RhdGUobnVsbCxudWxsLFwiI1wiK2Euc2xpZGVzLmVxKGEuYWN0aXZlSW5kZXgpLmF0dHIoXCJkYXRhLWhhc2hcIil8fFwiXCIpO2Vsc2V7dmFyIGk9YS5zbGlkZXMuZXEoYS5hY3RpdmVJbmRleCkscz1pLmF0dHIoXCJkYXRhLWhhc2hcIil8fGkuYXR0cihcImRhdGEtaGlzdG9yeVwiKTtlLmxvY2F0aW9uLmhhc2g9c3x8XCJcIn19LGluaXQ6ZnVuY3Rpb24oKXt2YXIgYT10aGlzO2lmKCEoIWEucGFyYW1zLmhhc2hOYXZpZ2F0aW9uLmVuYWJsZWR8fGEucGFyYW1zLmhpc3RvcnkmJmEucGFyYW1zLmhpc3RvcnkuZW5hYmxlZCkpe2EuaGFzaE5hdmlnYXRpb24uaW5pdGlhbGl6ZWQ9ITA7dmFyIHM9ZS5sb2NhdGlvbi5oYXNoLnJlcGxhY2UoXCIjXCIsXCJcIik7aWYocylmb3IodmFyIHI9MCxuPWEuc2xpZGVzLmxlbmd0aDtyPG47cis9MSl7dmFyIG89YS5zbGlkZXMuZXEocik7aWYoKG8uYXR0cihcImRhdGEtaGFzaFwiKXx8by5hdHRyKFwiZGF0YS1oaXN0b3J5XCIpKT09PXMmJiFvLmhhc0NsYXNzKGEucGFyYW1zLnNsaWRlRHVwbGljYXRlQ2xhc3MpKXt2YXIgbD1vLmluZGV4KCk7YS5zbGlkZVRvKGwsMCxhLnBhcmFtcy5ydW5DYWxsYmFja3NPbkluaXQsITApfX1hLnBhcmFtcy5oYXNoTmF2aWdhdGlvbi53YXRjaFN0YXRlJiZpKHQpLm9uKFwiaGFzaGNoYW5nZVwiLGEuaGFzaE5hdmlnYXRpb24ub25IYXNoQ2FuZ2UpfX0sZGVzdHJveTpmdW5jdGlvbigpe3RoaXMucGFyYW1zLmhhc2hOYXZpZ2F0aW9uLndhdGNoU3RhdGUmJmkodCkub2ZmKFwiaGFzaGNoYW5nZVwiLHRoaXMuaGFzaE5hdmlnYXRpb24ub25IYXNoQ2FuZ2UpfX0sXz17cnVuOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PWUuc2xpZGVzLmVxKGUuYWN0aXZlSW5kZXgpLGE9ZS5wYXJhbXMuYXV0b3BsYXkuZGVsYXk7dC5hdHRyKFwiZGF0YS1zd2lwZXItYXV0b3BsYXlcIikmJihhPXQuYXR0cihcImRhdGEtc3dpcGVyLWF1dG9wbGF5XCIpfHxlLnBhcmFtcy5hdXRvcGxheS5kZWxheSksZS5hdXRvcGxheS50aW1lb3V0PWQubmV4dFRpY2soZnVuY3Rpb24oKXtlLnBhcmFtcy5hdXRvcGxheS5yZXZlcnNlRGlyZWN0aW9uP2UucGFyYW1zLmxvb3A/KGUubG9vcEZpeCgpLGUuc2xpZGVQcmV2KGUucGFyYW1zLnNwZWVkLCEwLCEwKSxlLmVtaXQoXCJhdXRvcGxheVwiKSk6ZS5pc0JlZ2lubmluZz9lLnBhcmFtcy5hdXRvcGxheS5zdG9wT25MYXN0U2xpZGU/ZS5hdXRvcGxheS5zdG9wKCk6KGUuc2xpZGVUbyhlLnNsaWRlcy5sZW5ndGgtMSxlLnBhcmFtcy5zcGVlZCwhMCwhMCksZS5lbWl0KFwiYXV0b3BsYXlcIikpOihlLnNsaWRlUHJldihlLnBhcmFtcy5zcGVlZCwhMCwhMCksZS5lbWl0KFwiYXV0b3BsYXlcIikpOmUucGFyYW1zLmxvb3A/KGUubG9vcEZpeCgpLGUuc2xpZGVOZXh0KGUucGFyYW1zLnNwZWVkLCEwLCEwKSxlLmVtaXQoXCJhdXRvcGxheVwiKSk6ZS5pc0VuZD9lLnBhcmFtcy5hdXRvcGxheS5zdG9wT25MYXN0U2xpZGU/ZS5hdXRvcGxheS5zdG9wKCk6KGUuc2xpZGVUbygwLGUucGFyYW1zLnNwZWVkLCEwLCEwKSxlLmVtaXQoXCJhdXRvcGxheVwiKSk6KGUuc2xpZGVOZXh0KGUucGFyYW1zLnNwZWVkLCEwLCEwKSxlLmVtaXQoXCJhdXRvcGxheVwiKSl9LGEpfSxzdGFydDpmdW5jdGlvbigpe3ZhciBlPXRoaXM7cmV0dXJuIHZvaWQgMD09PWUuYXV0b3BsYXkudGltZW91dCYmIWUuYXV0b3BsYXkucnVubmluZyYmKGUuYXV0b3BsYXkucnVubmluZz0hMCxlLmVtaXQoXCJhdXRvcGxheVN0YXJ0XCIpLGUuYXV0b3BsYXkucnVuKCksITApfSxzdG9wOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztyZXR1cm4hIWUuYXV0b3BsYXkucnVubmluZyYmdm9pZCAwIT09ZS5hdXRvcGxheS50aW1lb3V0JiYoZS5hdXRvcGxheS50aW1lb3V0JiYoY2xlYXJUaW1lb3V0KGUuYXV0b3BsYXkudGltZW91dCksZS5hdXRvcGxheS50aW1lb3V0PXZvaWQgMCksZS5hdXRvcGxheS5ydW5uaW5nPSExLGUuZW1pdChcImF1dG9wbGF5U3RvcFwiKSwhMCl9LHBhdXNlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7dC5hdXRvcGxheS5ydW5uaW5nJiYodC5hdXRvcGxheS5wYXVzZWR8fCh0LmF1dG9wbGF5LnRpbWVvdXQmJmNsZWFyVGltZW91dCh0LmF1dG9wbGF5LnRpbWVvdXQpLHQuYXV0b3BsYXkucGF1c2VkPSEwLDAhPT1lJiZ0LnBhcmFtcy5hdXRvcGxheS53YWl0Rm9yVHJhbnNpdGlvbj8odC4kd3JhcHBlckVsWzBdLmFkZEV2ZW50TGlzdGVuZXIoXCJ0cmFuc2l0aW9uZW5kXCIsdC5hdXRvcGxheS5vblRyYW5zaXRpb25FbmQpLHQuJHdyYXBwZXJFbFswXS5hZGRFdmVudExpc3RlbmVyKFwid2Via2l0VHJhbnNpdGlvbkVuZFwiLHQuYXV0b3BsYXkub25UcmFuc2l0aW9uRW5kKSk6KHQuYXV0b3BsYXkucGF1c2VkPSExLHQuYXV0b3BsYXkucnVuKCkpKSl9fSxaPXtzZXRUcmFuc2xhdGU6ZnVuY3Rpb24oKXtmb3IodmFyIGU9dGhpcyx0PWUuc2xpZGVzLGE9MDthPHQubGVuZ3RoO2ErPTEpe3ZhciBpPWUuc2xpZGVzLmVxKGEpLHM9LWlbMF0uc3dpcGVyU2xpZGVPZmZzZXQ7ZS5wYXJhbXMudmlydHVhbFRyYW5zbGF0ZXx8KHMtPWUudHJhbnNsYXRlKTt2YXIgcj0wO2UuaXNIb3Jpem9udGFsKCl8fChyPXMscz0wKTt2YXIgbj1lLnBhcmFtcy5mYWRlRWZmZWN0LmNyb3NzRmFkZT9NYXRoLm1heCgxLU1hdGguYWJzKGlbMF0ucHJvZ3Jlc3MpLDApOjErTWF0aC5taW4oTWF0aC5tYXgoaVswXS5wcm9ncmVzcywtMSksMCk7aS5jc3Moe29wYWNpdHk6bn0pLnRyYW5zZm9ybShcInRyYW5zbGF0ZTNkKFwiK3MrXCJweCwgXCIrcitcInB4LCAwcHgpXCIpfX0sc2V0VHJhbnNpdGlvbjpmdW5jdGlvbihlKXt2YXIgdD10aGlzLGE9dC5zbGlkZXMsaT10LiR3cmFwcGVyRWw7aWYoYS50cmFuc2l0aW9uKGUpLHQucGFyYW1zLnZpcnR1YWxUcmFuc2xhdGUmJjAhPT1lKXt2YXIgcz0hMTthLnRyYW5zaXRpb25FbmQoZnVuY3Rpb24oKXtpZighcyYmdCYmIXQuZGVzdHJveWVkKXtzPSEwLHQuYW5pbWF0aW5nPSExO2Zvcih2YXIgZT1bXCJ3ZWJraXRUcmFuc2l0aW9uRW5kXCIsXCJ0cmFuc2l0aW9uZW5kXCJdLGE9MDthPGUubGVuZ3RoO2ErPTEpaS50cmlnZ2VyKGVbYV0pfX0pfX19LFE9e3NldFRyYW5zbGF0ZTpmdW5jdGlvbigpe3ZhciBlLHQ9dGhpcyxhPXQuJGVsLHM9dC4kd3JhcHBlckVsLHI9dC5zbGlkZXMsbj10LndpZHRoLG89dC5oZWlnaHQsbD10LnJ0bFRyYW5zbGF0ZSxkPXQuc2l6ZSxwPXQucGFyYW1zLmN1YmVFZmZlY3QsYz10LmlzSG9yaXpvbnRhbCgpLHU9dC52aXJ0dWFsJiZ0LnBhcmFtcy52aXJ0dWFsLmVuYWJsZWQsaD0wO3Auc2hhZG93JiYoYz8oMD09PShlPXMuZmluZChcIi5zd2lwZXItY3ViZS1zaGFkb3dcIikpLmxlbmd0aCYmKGU9aSgnPGRpdiBjbGFzcz1cInN3aXBlci1jdWJlLXNoYWRvd1wiPjwvZGl2PicpLHMuYXBwZW5kKGUpKSxlLmNzcyh7aGVpZ2h0Om4rXCJweFwifSkpOjA9PT0oZT1hLmZpbmQoXCIuc3dpcGVyLWN1YmUtc2hhZG93XCIpKS5sZW5ndGgmJihlPWkoJzxkaXYgY2xhc3M9XCJzd2lwZXItY3ViZS1zaGFkb3dcIj48L2Rpdj4nKSxhLmFwcGVuZChlKSkpO2Zvcih2YXIgdj0wO3Y8ci5sZW5ndGg7dis9MSl7dmFyIGY9ci5lcSh2KSxtPXY7dSYmKG09cGFyc2VJbnQoZi5hdHRyKFwiZGF0YS1zd2lwZXItc2xpZGUtaW5kZXhcIiksMTApKTt2YXIgZz05MCptLGI9TWF0aC5mbG9vcihnLzM2MCk7bCYmKGc9LWcsYj1NYXRoLmZsb29yKC1nLzM2MCkpO3ZhciB3PU1hdGgubWF4KE1hdGgubWluKGZbMF0ucHJvZ3Jlc3MsMSksLTEpLHk9MCx4PTAsVD0wO20lND09MD8oeT00Ki1iKmQsVD0wKToobS0xKSU0PT0wPyh5PTAsVD00Ki1iKmQpOihtLTIpJTQ9PTA/KHk9ZCs0KmIqZCxUPWQpOihtLTMpJTQ9PTAmJih5PS1kLFQ9MypkKzQqZCpiKSxsJiYoeT0teSksY3x8KHg9eSx5PTApO3ZhciBFPVwicm90YXRlWChcIisoYz8wOi1nKStcImRlZykgcm90YXRlWShcIisoYz9nOjApK1wiZGVnKSB0cmFuc2xhdGUzZChcIit5K1wicHgsIFwiK3grXCJweCwgXCIrVCtcInB4KVwiO2lmKHc8PTEmJi0xPHcmJihoPTkwKm0rOTAqdyxsJiYoaD05MCotbS05MCp3KSksZi50cmFuc2Zvcm0oRSkscC5zbGlkZVNoYWRvd3Mpe3ZhciBDPWM/Zi5maW5kKFwiLnN3aXBlci1zbGlkZS1zaGFkb3ctbGVmdFwiKTpmLmZpbmQoXCIuc3dpcGVyLXNsaWRlLXNoYWRvdy10b3BcIiksTT1jP2YuZmluZChcIi5zd2lwZXItc2xpZGUtc2hhZG93LXJpZ2h0XCIpOmYuZmluZChcIi5zd2lwZXItc2xpZGUtc2hhZG93LWJvdHRvbVwiKTswPT09Qy5sZW5ndGgmJihDPWkoJzxkaXYgY2xhc3M9XCJzd2lwZXItc2xpZGUtc2hhZG93LScrKGM/XCJsZWZ0XCI6XCJ0b3BcIikrJ1wiPjwvZGl2PicpLGYuYXBwZW5kKEMpKSwwPT09TS5sZW5ndGgmJihNPWkoJzxkaXYgY2xhc3M9XCJzd2lwZXItc2xpZGUtc2hhZG93LScrKGM/XCJyaWdodFwiOlwiYm90dG9tXCIpKydcIj48L2Rpdj4nKSxmLmFwcGVuZChNKSksQy5sZW5ndGgmJihDWzBdLnN0eWxlLm9wYWNpdHk9TWF0aC5tYXgoLXcsMCkpLE0ubGVuZ3RoJiYoTVswXS5zdHlsZS5vcGFjaXR5PU1hdGgubWF4KHcsMCkpfX1pZihzLmNzcyh7XCItd2Via2l0LXRyYW5zZm9ybS1vcmlnaW5cIjpcIjUwJSA1MCUgLVwiK2QvMitcInB4XCIsXCItbW96LXRyYW5zZm9ybS1vcmlnaW5cIjpcIjUwJSA1MCUgLVwiK2QvMitcInB4XCIsXCItbXMtdHJhbnNmb3JtLW9yaWdpblwiOlwiNTAlIDUwJSAtXCIrZC8yK1wicHhcIixcInRyYW5zZm9ybS1vcmlnaW5cIjpcIjUwJSA1MCUgLVwiK2QvMitcInB4XCJ9KSxwLnNoYWRvdylpZihjKWUudHJhbnNmb3JtKFwidHJhbnNsYXRlM2QoMHB4LCBcIisobi8yK3Auc2hhZG93T2Zmc2V0KStcInB4LCBcIistbi8yK1wicHgpIHJvdGF0ZVgoOTBkZWcpIHJvdGF0ZVooMGRlZykgc2NhbGUoXCIrcC5zaGFkb3dTY2FsZStcIilcIik7ZWxzZXt2YXIgaz1NYXRoLmFicyhoKS05MCpNYXRoLmZsb29yKE1hdGguYWJzKGgpLzkwKSxQPTEuNS0oTWF0aC5zaW4oMiprKk1hdGguUEkvMzYwKS8yK01hdGguY29zKDIqaypNYXRoLlBJLzM2MCkvMiksej1wLnNoYWRvd1NjYWxlLCQ9cC5zaGFkb3dTY2FsZS9QLEw9cC5zaGFkb3dPZmZzZXQ7ZS50cmFuc2Zvcm0oXCJzY2FsZTNkKFwiK3orXCIsIDEsIFwiKyQrXCIpIHRyYW5zbGF0ZTNkKDBweCwgXCIrKG8vMitMKStcInB4LCBcIistby8yLyQrXCJweCkgcm90YXRlWCgtOTBkZWcpXCIpfXZhciBJPVMuaXNTYWZhcml8fFMuaXNVaVdlYlZpZXc/LWQvMjowO3MudHJhbnNmb3JtKFwidHJhbnNsYXRlM2QoMHB4LDAsXCIrSStcInB4KSByb3RhdGVYKFwiKyh0LmlzSG9yaXpvbnRhbCgpPzA6aCkrXCJkZWcpIHJvdGF0ZVkoXCIrKHQuaXNIb3Jpem9udGFsKCk/LWg6MCkrXCJkZWcpXCIpfSxzZXRUcmFuc2l0aW9uOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuJGVsO3RoaXMuc2xpZGVzLnRyYW5zaXRpb24oZSkuZmluZChcIi5zd2lwZXItc2xpZGUtc2hhZG93LXRvcCwgLnN3aXBlci1zbGlkZS1zaGFkb3ctcmlnaHQsIC5zd2lwZXItc2xpZGUtc2hhZG93LWJvdHRvbSwgLnN3aXBlci1zbGlkZS1zaGFkb3ctbGVmdFwiKS50cmFuc2l0aW9uKGUpLHRoaXMucGFyYW1zLmN1YmVFZmZlY3Quc2hhZG93JiYhdGhpcy5pc0hvcml6b250YWwoKSYmdC5maW5kKFwiLnN3aXBlci1jdWJlLXNoYWRvd1wiKS50cmFuc2l0aW9uKGUpfX0sSj17c2V0VHJhbnNsYXRlOmZ1bmN0aW9uKCl7Zm9yKHZhciBlPXRoaXMsdD1lLnNsaWRlcyxhPWUucnRsVHJhbnNsYXRlLHM9MDtzPHQubGVuZ3RoO3MrPTEpe3ZhciByPXQuZXEocyksbj1yWzBdLnByb2dyZXNzO2UucGFyYW1zLmZsaXBFZmZlY3QubGltaXRSb3RhdGlvbiYmKG49TWF0aC5tYXgoTWF0aC5taW4oclswXS5wcm9ncmVzcywxKSwtMSkpO3ZhciBvPS0xODAqbixsPTAsZD0tclswXS5zd2lwZXJTbGlkZU9mZnNldCxwPTA7aWYoZS5pc0hvcml6b250YWwoKT9hJiYobz0tbyk6KHA9ZCxsPS1vLG89ZD0wKSxyWzBdLnN0eWxlLnpJbmRleD0tTWF0aC5hYnMoTWF0aC5yb3VuZChuKSkrdC5sZW5ndGgsZS5wYXJhbXMuZmxpcEVmZmVjdC5zbGlkZVNoYWRvd3Mpe3ZhciBjPWUuaXNIb3Jpem9udGFsKCk/ci5maW5kKFwiLnN3aXBlci1zbGlkZS1zaGFkb3ctbGVmdFwiKTpyLmZpbmQoXCIuc3dpcGVyLXNsaWRlLXNoYWRvdy10b3BcIiksdT1lLmlzSG9yaXpvbnRhbCgpP3IuZmluZChcIi5zd2lwZXItc2xpZGUtc2hhZG93LXJpZ2h0XCIpOnIuZmluZChcIi5zd2lwZXItc2xpZGUtc2hhZG93LWJvdHRvbVwiKTswPT09Yy5sZW5ndGgmJihjPWkoJzxkaXYgY2xhc3M9XCJzd2lwZXItc2xpZGUtc2hhZG93LScrKGUuaXNIb3Jpem9udGFsKCk/XCJsZWZ0XCI6XCJ0b3BcIikrJ1wiPjwvZGl2PicpLHIuYXBwZW5kKGMpKSwwPT09dS5sZW5ndGgmJih1PWkoJzxkaXYgY2xhc3M9XCJzd2lwZXItc2xpZGUtc2hhZG93LScrKGUuaXNIb3Jpem9udGFsKCk/XCJyaWdodFwiOlwiYm90dG9tXCIpKydcIj48L2Rpdj4nKSxyLmFwcGVuZCh1KSksYy5sZW5ndGgmJihjWzBdLnN0eWxlLm9wYWNpdHk9TWF0aC5tYXgoLW4sMCkpLHUubGVuZ3RoJiYodVswXS5zdHlsZS5vcGFjaXR5PU1hdGgubWF4KG4sMCkpfXIudHJhbnNmb3JtKFwidHJhbnNsYXRlM2QoXCIrZCtcInB4LCBcIitwK1wicHgsIDBweCkgcm90YXRlWChcIitsK1wiZGVnKSByb3RhdGVZKFwiK28rXCJkZWcpXCIpfX0sc2V0VHJhbnNpdGlvbjpmdW5jdGlvbihlKXt2YXIgdD10aGlzLGE9dC5zbGlkZXMsaT10LmFjdGl2ZUluZGV4LHM9dC4kd3JhcHBlckVsO2lmKGEudHJhbnNpdGlvbihlKS5maW5kKFwiLnN3aXBlci1zbGlkZS1zaGFkb3ctdG9wLCAuc3dpcGVyLXNsaWRlLXNoYWRvdy1yaWdodCwgLnN3aXBlci1zbGlkZS1zaGFkb3ctYm90dG9tLCAuc3dpcGVyLXNsaWRlLXNoYWRvdy1sZWZ0XCIpLnRyYW5zaXRpb24oZSksdC5wYXJhbXMudmlydHVhbFRyYW5zbGF0ZSYmMCE9PWUpe3ZhciByPSExO2EuZXEoaSkudHJhbnNpdGlvbkVuZChmdW5jdGlvbigpe2lmKCFyJiZ0JiYhdC5kZXN0cm95ZWQpe3I9ITAsdC5hbmltYXRpbmc9ITE7Zm9yKHZhciBlPVtcIndlYmtpdFRyYW5zaXRpb25FbmRcIixcInRyYW5zaXRpb25lbmRcIl0sYT0wO2E8ZS5sZW5ndGg7YSs9MSlzLnRyaWdnZXIoZVthXSl9fSl9fX0sZWU9e3NldFRyYW5zbGF0ZTpmdW5jdGlvbigpe2Zvcih2YXIgZT10aGlzLHQ9ZS53aWR0aCxhPWUuaGVpZ2h0LHM9ZS5zbGlkZXMscj1lLiR3cmFwcGVyRWwsbj1lLnNsaWRlc1NpemVzR3JpZCxvPWUucGFyYW1zLmNvdmVyZmxvd0VmZmVjdCxsPWUuaXNIb3Jpem9udGFsKCksZD1lLnRyYW5zbGF0ZSxjPWw/dC8yLWQ6YS8yLWQsdT1sP28ucm90YXRlOi1vLnJvdGF0ZSxoPW8uZGVwdGgsdj0wLGY9cy5sZW5ndGg7djxmO3YrPTEpe3ZhciBtPXMuZXEodiksZz1uW3ZdLGI9KGMtbVswXS5zd2lwZXJTbGlkZU9mZnNldC1nLzIpL2cqby5tb2RpZmllcix3PWw/dSpiOjAseT1sPzA6dSpiLHg9LWgqTWF0aC5hYnMoYiksVD1sPzA6by5zdHJldGNoKmIsRT1sP28uc3RyZXRjaCpiOjA7TWF0aC5hYnMoRSk8LjAwMSYmKEU9MCksTWF0aC5hYnMoVCk8LjAwMSYmKFQ9MCksTWF0aC5hYnMoeCk8LjAwMSYmKHg9MCksTWF0aC5hYnModyk8LjAwMSYmKHc9MCksTWF0aC5hYnMoeSk8LjAwMSYmKHk9MCk7dmFyIFM9XCJ0cmFuc2xhdGUzZChcIitFK1wicHgsXCIrVCtcInB4LFwiK3grXCJweCkgIHJvdGF0ZVgoXCIreStcImRlZykgcm90YXRlWShcIit3K1wiZGVnKVwiO2lmKG0udHJhbnNmb3JtKFMpLG1bMF0uc3R5bGUuekluZGV4PTEtTWF0aC5hYnMoTWF0aC5yb3VuZChiKSksby5zbGlkZVNoYWRvd3Mpe3ZhciBDPWw/bS5maW5kKFwiLnN3aXBlci1zbGlkZS1zaGFkb3ctbGVmdFwiKTptLmZpbmQoXCIuc3dpcGVyLXNsaWRlLXNoYWRvdy10b3BcIiksTT1sP20uZmluZChcIi5zd2lwZXItc2xpZGUtc2hhZG93LXJpZ2h0XCIpOm0uZmluZChcIi5zd2lwZXItc2xpZGUtc2hhZG93LWJvdHRvbVwiKTswPT09Qy5sZW5ndGgmJihDPWkoJzxkaXYgY2xhc3M9XCJzd2lwZXItc2xpZGUtc2hhZG93LScrKGw/XCJsZWZ0XCI6XCJ0b3BcIikrJ1wiPjwvZGl2PicpLG0uYXBwZW5kKEMpKSwwPT09TS5sZW5ndGgmJihNPWkoJzxkaXYgY2xhc3M9XCJzd2lwZXItc2xpZGUtc2hhZG93LScrKGw/XCJyaWdodFwiOlwiYm90dG9tXCIpKydcIj48L2Rpdj4nKSxtLmFwcGVuZChNKSksQy5sZW5ndGgmJihDWzBdLnN0eWxlLm9wYWNpdHk9MDxiP2I6MCksTS5sZW5ndGgmJihNWzBdLnN0eWxlLm9wYWNpdHk9MDwtYj8tYjowKX19KHAucG9pbnRlckV2ZW50c3x8cC5wcmVmaXhlZFBvaW50ZXJFdmVudHMpJiYoclswXS5zdHlsZS5wZXJzcGVjdGl2ZU9yaWdpbj1jK1wicHggNTAlXCIpfSxzZXRUcmFuc2l0aW9uOmZ1bmN0aW9uKGUpe3RoaXMuc2xpZGVzLnRyYW5zaXRpb24oZSkuZmluZChcIi5zd2lwZXItc2xpZGUtc2hhZG93LXRvcCwgLnN3aXBlci1zbGlkZS1zaGFkb3ctcmlnaHQsIC5zd2lwZXItc2xpZGUtc2hhZG93LWJvdHRvbSwgLnN3aXBlci1zbGlkZS1zaGFkb3ctbGVmdFwiKS50cmFuc2l0aW9uKGUpfX0sdGU9e2luaXQ6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9ZS5wYXJhbXMudGh1bWJzLGE9ZS5jb25zdHJ1Y3Rvcjt0LnN3aXBlciBpbnN0YW5jZW9mIGE/KGUudGh1bWJzLnN3aXBlcj10LnN3aXBlcixkLmV4dGVuZChlLnRodW1icy5zd2lwZXIub3JpZ2luYWxQYXJhbXMse3dhdGNoU2xpZGVzUHJvZ3Jlc3M6ITAsc2xpZGVUb0NsaWNrZWRTbGlkZTohMX0pLGQuZXh0ZW5kKGUudGh1bWJzLnN3aXBlci5wYXJhbXMse3dhdGNoU2xpZGVzUHJvZ3Jlc3M6ITAsc2xpZGVUb0NsaWNrZWRTbGlkZTohMX0pKTpkLmlzT2JqZWN0KHQuc3dpcGVyKSYmKGUudGh1bWJzLnN3aXBlcj1uZXcgYShkLmV4dGVuZCh7fSx0LnN3aXBlcix7d2F0Y2hTbGlkZXNWaXNpYmlsaXR5OiEwLHdhdGNoU2xpZGVzUHJvZ3Jlc3M6ITAsc2xpZGVUb0NsaWNrZWRTbGlkZTohMX0pKSxlLnRodW1icy5zd2lwZXJDcmVhdGVkPSEwKSxlLnRodW1icy5zd2lwZXIuJGVsLmFkZENsYXNzKGUucGFyYW1zLnRodW1icy50aHVtYnNDb250YWluZXJDbGFzcyksZS50aHVtYnMuc3dpcGVyLm9uKFwidGFwXCIsZS50aHVtYnMub25UaHVtYkNsaWNrKX0sb25UaHVtYkNsaWNrOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PWUudGh1bWJzLnN3aXBlcjtpZih0KXt2YXIgYT10LmNsaWNrZWRJbmRleCxzPXQuY2xpY2tlZFNsaWRlO2lmKCEocyYmaShzKS5oYXNDbGFzcyhlLnBhcmFtcy50aHVtYnMuc2xpZGVUaHVtYkFjdGl2ZUNsYXNzKXx8bnVsbD09YSkpe3ZhciByO2lmKHI9dC5wYXJhbXMubG9vcD9wYXJzZUludChpKHQuY2xpY2tlZFNsaWRlKS5hdHRyKFwiZGF0YS1zd2lwZXItc2xpZGUtaW5kZXhcIiksMTApOmEsZS5wYXJhbXMubG9vcCl7dmFyIG49ZS5hY3RpdmVJbmRleDtlLnNsaWRlcy5lcShuKS5oYXNDbGFzcyhlLnBhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzKSYmKGUubG9vcEZpeCgpLGUuX2NsaWVudExlZnQ9ZS4kd3JhcHBlckVsWzBdLmNsaWVudExlZnQsbj1lLmFjdGl2ZUluZGV4KTt2YXIgbz1lLnNsaWRlcy5lcShuKS5wcmV2QWxsKCdbZGF0YS1zd2lwZXItc2xpZGUtaW5kZXg9XCInK3IrJ1wiXScpLmVxKDApLmluZGV4KCksbD1lLnNsaWRlcy5lcShuKS5uZXh0QWxsKCdbZGF0YS1zd2lwZXItc2xpZGUtaW5kZXg9XCInK3IrJ1wiXScpLmVxKDApLmluZGV4KCk7cj12b2lkIDA9PT1vP2w6dm9pZCAwPT09bD9vOmwtbjxuLW8/bDpvfWUuc2xpZGVUbyhyKX19fSx1cGRhdGU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxhPXQudGh1bWJzLnN3aXBlcjtpZihhKXt2YXIgaT1cImF1dG9cIj09PWEucGFyYW1zLnNsaWRlc1BlclZpZXc/YS5zbGlkZXNQZXJWaWV3RHluYW1pYygpOmEucGFyYW1zLnNsaWRlc1BlclZpZXc7aWYodC5yZWFsSW5kZXghPT1hLnJlYWxJbmRleCl7dmFyIHMscj1hLmFjdGl2ZUluZGV4O2lmKGEucGFyYW1zLmxvb3Ape2Euc2xpZGVzLmVxKHIpLmhhc0NsYXNzKGEucGFyYW1zLnNsaWRlRHVwbGljYXRlQ2xhc3MpJiYoYS5sb29wRml4KCksYS5fY2xpZW50TGVmdD1hLiR3cmFwcGVyRWxbMF0uY2xpZW50TGVmdCxyPWEuYWN0aXZlSW5kZXgpO3ZhciBuPWEuc2xpZGVzLmVxKHIpLnByZXZBbGwoJ1tkYXRhLXN3aXBlci1zbGlkZS1pbmRleD1cIicrdC5yZWFsSW5kZXgrJ1wiXScpLmVxKDApLmluZGV4KCksbz1hLnNsaWRlcy5lcShyKS5uZXh0QWxsKCdbZGF0YS1zd2lwZXItc2xpZGUtaW5kZXg9XCInK3QucmVhbEluZGV4KydcIl0nKS5lcSgwKS5pbmRleCgpO3M9dm9pZCAwPT09bj9vOnZvaWQgMD09PW8/bjpvLXI9PXItbj9yOm8tcjxyLW4/bzpufWVsc2Ugcz10LnJlYWxJbmRleDthLnZpc2libGVTbGlkZXNJbmRleGVzLmluZGV4T2Yocyk8MCYmKGEucGFyYW1zLmNlbnRlcmVkU2xpZGVzP3M9cjxzP3MtTWF0aC5mbG9vcihpLzIpKzE6cytNYXRoLmZsb29yKGkvMiktMTpyPHMmJihzPXMtaSsxKSxhLnNsaWRlVG8ocyxlPzA6dm9pZCAwKSl9dmFyIGw9MSxkPXQucGFyYW1zLnRodW1icy5zbGlkZVRodW1iQWN0aXZlQ2xhc3M7aWYoMTx0LnBhcmFtcy5zbGlkZXNQZXJWaWV3JiYhdC5wYXJhbXMuY2VudGVyZWRTbGlkZXMmJihsPXQucGFyYW1zLnNsaWRlc1BlclZpZXcpLGEuc2xpZGVzLnJlbW92ZUNsYXNzKGQpLGEucGFyYW1zLmxvb3ApZm9yKHZhciBwPTA7cDxsO3ArPTEpYS4kd3JhcHBlckVsLmNoaWxkcmVuKCdbZGF0YS1zd2lwZXItc2xpZGUtaW5kZXg9XCInKyh0LnJlYWxJbmRleCtwKSsnXCJdJykuYWRkQ2xhc3MoZCk7ZWxzZSBmb3IodmFyIGM9MDtjPGw7Yys9MSlhLnNsaWRlcy5lcSh0LnJlYWxJbmRleCtjKS5hZGRDbGFzcyhkKX19fSxhZT1beiwkLEwsSSxPLE4sRyx7bmFtZTpcIm1vdXNld2hlZWxcIixwYXJhbXM6e21vdXNld2hlZWw6e2VuYWJsZWQ6ITEscmVsZWFzZU9uRWRnZXM6ITEsaW52ZXJ0OiExLGZvcmNlVG9BeGlzOiExLHNlbnNpdGl2aXR5OjEsZXZlbnRzVGFyZ2VkOlwiY29udGFpbmVyXCJ9fSxjcmVhdGU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2QuZXh0ZW5kKGUse21vdXNld2hlZWw6e2VuYWJsZWQ6ITEsZW5hYmxlOkIuZW5hYmxlLmJpbmQoZSksZGlzYWJsZTpCLmRpc2FibGUuYmluZChlKSxoYW5kbGU6Qi5oYW5kbGUuYmluZChlKSxoYW5kbGVNb3VzZUVudGVyOkIuaGFuZGxlTW91c2VFbnRlci5iaW5kKGUpLGhhbmRsZU1vdXNlTGVhdmU6Qi5oYW5kbGVNb3VzZUxlYXZlLmJpbmQoZSksbGFzdFNjcm9sbFRpbWU6ZC5ub3coKX19KX0sb246e2luaXQ6ZnVuY3Rpb24oKXt0aGlzLnBhcmFtcy5tb3VzZXdoZWVsLmVuYWJsZWQmJnRoaXMubW91c2V3aGVlbC5lbmFibGUoKX0sZGVzdHJveTpmdW5jdGlvbigpe3RoaXMubW91c2V3aGVlbC5lbmFibGVkJiZ0aGlzLm1vdXNld2hlZWwuZGlzYWJsZSgpfX19LHtuYW1lOlwibmF2aWdhdGlvblwiLHBhcmFtczp7bmF2aWdhdGlvbjp7bmV4dEVsOm51bGwscHJldkVsOm51bGwsaGlkZU9uQ2xpY2s6ITEsZGlzYWJsZWRDbGFzczpcInN3aXBlci1idXR0b24tZGlzYWJsZWRcIixoaWRkZW5DbGFzczpcInN3aXBlci1idXR0b24taGlkZGVuXCIsbG9ja0NsYXNzOlwic3dpcGVyLWJ1dHRvbi1sb2NrXCJ9fSxjcmVhdGU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2QuZXh0ZW5kKGUse25hdmlnYXRpb246e2luaXQ6WC5pbml0LmJpbmQoZSksdXBkYXRlOlgudXBkYXRlLmJpbmQoZSksZGVzdHJveTpYLmRlc3Ryb3kuYmluZChlKSxvbk5leHRDbGljazpYLm9uTmV4dENsaWNrLmJpbmQoZSksb25QcmV2Q2xpY2s6WC5vblByZXZDbGljay5iaW5kKGUpfX0pfSxvbjp7aW5pdDpmdW5jdGlvbigpe3RoaXMubmF2aWdhdGlvbi5pbml0KCksdGhpcy5uYXZpZ2F0aW9uLnVwZGF0ZSgpfSx0b0VkZ2U6ZnVuY3Rpb24oKXt0aGlzLm5hdmlnYXRpb24udXBkYXRlKCl9LGZyb21FZGdlOmZ1bmN0aW9uKCl7dGhpcy5uYXZpZ2F0aW9uLnVwZGF0ZSgpfSxkZXN0cm95OmZ1bmN0aW9uKCl7dGhpcy5uYXZpZ2F0aW9uLmRlc3Ryb3koKX0sY2xpY2s6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5uYXZpZ2F0aW9uLGE9dC4kbmV4dEVsLHM9dC4kcHJldkVsOyF0aGlzLnBhcmFtcy5uYXZpZ2F0aW9uLmhpZGVPbkNsaWNrfHxpKGUudGFyZ2V0KS5pcyhzKXx8aShlLnRhcmdldCkuaXMoYSl8fChhJiZhLnRvZ2dsZUNsYXNzKHRoaXMucGFyYW1zLm5hdmlnYXRpb24uaGlkZGVuQ2xhc3MpLHMmJnMudG9nZ2xlQ2xhc3ModGhpcy5wYXJhbXMubmF2aWdhdGlvbi5oaWRkZW5DbGFzcykpfX19LHtuYW1lOlwicGFnaW5hdGlvblwiLHBhcmFtczp7cGFnaW5hdGlvbjp7ZWw6bnVsbCxidWxsZXRFbGVtZW50Olwic3BhblwiLGNsaWNrYWJsZTohMSxoaWRlT25DbGljazohMSxyZW5kZXJCdWxsZXQ6bnVsbCxyZW5kZXJQcm9ncmVzc2JhcjpudWxsLHJlbmRlckZyYWN0aW9uOm51bGwscmVuZGVyQ3VzdG9tOm51bGwscHJvZ3Jlc3NiYXJPcHBvc2l0ZTohMSx0eXBlOlwiYnVsbGV0c1wiLGR5bmFtaWNCdWxsZXRzOiExLGR5bmFtaWNNYWluQnVsbGV0czoxLGZvcm1hdEZyYWN0aW9uQ3VycmVudDpmdW5jdGlvbihlKXtyZXR1cm4gZX0sZm9ybWF0RnJhY3Rpb25Ub3RhbDpmdW5jdGlvbihlKXtyZXR1cm4gZX0sYnVsbGV0Q2xhc3M6XCJzd2lwZXItcGFnaW5hdGlvbi1idWxsZXRcIixidWxsZXRBY3RpdmVDbGFzczpcInN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1hY3RpdmVcIixtb2RpZmllckNsYXNzOlwic3dpcGVyLXBhZ2luYXRpb24tXCIsY3VycmVudENsYXNzOlwic3dpcGVyLXBhZ2luYXRpb24tY3VycmVudFwiLHRvdGFsQ2xhc3M6XCJzd2lwZXItcGFnaW5hdGlvbi10b3RhbFwiLGhpZGRlbkNsYXNzOlwic3dpcGVyLXBhZ2luYXRpb24taGlkZGVuXCIscHJvZ3Jlc3NiYXJGaWxsQ2xhc3M6XCJzd2lwZXItcGFnaW5hdGlvbi1wcm9ncmVzc2Jhci1maWxsXCIscHJvZ3Jlc3NiYXJPcHBvc2l0ZUNsYXNzOlwic3dpcGVyLXBhZ2luYXRpb24tcHJvZ3Jlc3NiYXItb3Bwb3NpdGVcIixjbGlja2FibGVDbGFzczpcInN3aXBlci1wYWdpbmF0aW9uLWNsaWNrYWJsZVwiLGxvY2tDbGFzczpcInN3aXBlci1wYWdpbmF0aW9uLWxvY2tcIn19LGNyZWF0ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7ZC5leHRlbmQoZSx7cGFnaW5hdGlvbjp7aW5pdDpZLmluaXQuYmluZChlKSxyZW5kZXI6WS5yZW5kZXIuYmluZChlKSx1cGRhdGU6WS51cGRhdGUuYmluZChlKSxkZXN0cm95OlkuZGVzdHJveS5iaW5kKGUpLGR5bmFtaWNCdWxsZXRJbmRleDowfX0pfSxvbjp7aW5pdDpmdW5jdGlvbigpe3RoaXMucGFnaW5hdGlvbi5pbml0KCksdGhpcy5wYWdpbmF0aW9uLnJlbmRlcigpLHRoaXMucGFnaW5hdGlvbi51cGRhdGUoKX0sYWN0aXZlSW5kZXhDaGFuZ2U6ZnVuY3Rpb24oKXt0aGlzLnBhcmFtcy5sb29wP3RoaXMucGFnaW5hdGlvbi51cGRhdGUoKTp2b2lkIDA9PT10aGlzLnNuYXBJbmRleCYmdGhpcy5wYWdpbmF0aW9uLnVwZGF0ZSgpfSxzbmFwSW5kZXhDaGFuZ2U6ZnVuY3Rpb24oKXt0aGlzLnBhcmFtcy5sb29wfHx0aGlzLnBhZ2luYXRpb24udXBkYXRlKCl9LHNsaWRlc0xlbmd0aENoYW5nZTpmdW5jdGlvbigpe3RoaXMucGFyYW1zLmxvb3AmJih0aGlzLnBhZ2luYXRpb24ucmVuZGVyKCksdGhpcy5wYWdpbmF0aW9uLnVwZGF0ZSgpKX0sc25hcEdyaWRMZW5ndGhDaGFuZ2U6ZnVuY3Rpb24oKXt0aGlzLnBhcmFtcy5sb29wfHwodGhpcy5wYWdpbmF0aW9uLnJlbmRlcigpLHRoaXMucGFnaW5hdGlvbi51cGRhdGUoKSl9LGRlc3Ryb3k6ZnVuY3Rpb24oKXt0aGlzLnBhZ2luYXRpb24uZGVzdHJveSgpfSxjbGljazpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3QucGFyYW1zLnBhZ2luYXRpb24uZWwmJnQucGFyYW1zLnBhZ2luYXRpb24uaGlkZU9uQ2xpY2smJjA8dC5wYWdpbmF0aW9uLiRlbC5sZW5ndGgmJiFpKGUudGFyZ2V0KS5oYXNDbGFzcyh0LnBhcmFtcy5wYWdpbmF0aW9uLmJ1bGxldENsYXNzKSYmdC5wYWdpbmF0aW9uLiRlbC50b2dnbGVDbGFzcyh0LnBhcmFtcy5wYWdpbmF0aW9uLmhpZGRlbkNsYXNzKX19fSx7bmFtZTpcInNjcm9sbGJhclwiLHBhcmFtczp7c2Nyb2xsYmFyOntlbDpudWxsLGRyYWdTaXplOlwiYXV0b1wiLGhpZGU6ITEsZHJhZ2dhYmxlOiExLHNuYXBPblJlbGVhc2U6ITAsbG9ja0NsYXNzOlwic3dpcGVyLXNjcm9sbGJhci1sb2NrXCIsZHJhZ0NsYXNzOlwic3dpcGVyLXNjcm9sbGJhci1kcmFnXCJ9fSxjcmVhdGU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2QuZXh0ZW5kKGUse3Njcm9sbGJhcjp7aW5pdDpWLmluaXQuYmluZChlKSxkZXN0cm95OlYuZGVzdHJveS5iaW5kKGUpLHVwZGF0ZVNpemU6Vi51cGRhdGVTaXplLmJpbmQoZSksc2V0VHJhbnNsYXRlOlYuc2V0VHJhbnNsYXRlLmJpbmQoZSksc2V0VHJhbnNpdGlvbjpWLnNldFRyYW5zaXRpb24uYmluZChlKSxlbmFibGVEcmFnZ2FibGU6Vi5lbmFibGVEcmFnZ2FibGUuYmluZChlKSxkaXNhYmxlRHJhZ2dhYmxlOlYuZGlzYWJsZURyYWdnYWJsZS5iaW5kKGUpLHNldERyYWdQb3NpdGlvbjpWLnNldERyYWdQb3NpdGlvbi5iaW5kKGUpLG9uRHJhZ1N0YXJ0OlYub25EcmFnU3RhcnQuYmluZChlKSxvbkRyYWdNb3ZlOlYub25EcmFnTW92ZS5iaW5kKGUpLG9uRHJhZ0VuZDpWLm9uRHJhZ0VuZC5iaW5kKGUpLGlzVG91Y2hlZDohMSx0aW1lb3V0Om51bGwsZHJhZ1RpbWVvdXQ6bnVsbH19KX0sb246e2luaXQ6ZnVuY3Rpb24oKXt0aGlzLnNjcm9sbGJhci5pbml0KCksdGhpcy5zY3JvbGxiYXIudXBkYXRlU2l6ZSgpLHRoaXMuc2Nyb2xsYmFyLnNldFRyYW5zbGF0ZSgpfSx1cGRhdGU6ZnVuY3Rpb24oKXt0aGlzLnNjcm9sbGJhci51cGRhdGVTaXplKCl9LHJlc2l6ZTpmdW5jdGlvbigpe3RoaXMuc2Nyb2xsYmFyLnVwZGF0ZVNpemUoKX0sb2JzZXJ2ZXJVcGRhdGU6ZnVuY3Rpb24oKXt0aGlzLnNjcm9sbGJhci51cGRhdGVTaXplKCl9LHNldFRyYW5zbGF0ZTpmdW5jdGlvbigpe3RoaXMuc2Nyb2xsYmFyLnNldFRyYW5zbGF0ZSgpfSxzZXRUcmFuc2l0aW9uOmZ1bmN0aW9uKGUpe3RoaXMuc2Nyb2xsYmFyLnNldFRyYW5zaXRpb24oZSl9LGRlc3Ryb3k6ZnVuY3Rpb24oKXt0aGlzLnNjcm9sbGJhci5kZXN0cm95KCl9fX0se25hbWU6XCJwYXJhbGxheFwiLHBhcmFtczp7cGFyYWxsYXg6e2VuYWJsZWQ6ITF9fSxjcmVhdGU6ZnVuY3Rpb24oKXtkLmV4dGVuZCh0aGlzLHtwYXJhbGxheDp7c2V0VHJhbnNmb3JtOkYuc2V0VHJhbnNmb3JtLmJpbmQodGhpcyksc2V0VHJhbnNsYXRlOkYuc2V0VHJhbnNsYXRlLmJpbmQodGhpcyksc2V0VHJhbnNpdGlvbjpGLnNldFRyYW5zaXRpb24uYmluZCh0aGlzKX19KX0sb246e2JlZm9yZUluaXQ6ZnVuY3Rpb24oKXt0aGlzLnBhcmFtcy5wYXJhbGxheC5lbmFibGVkJiYodGhpcy5wYXJhbXMud2F0Y2hTbGlkZXNQcm9ncmVzcz0hMCx0aGlzLm9yaWdpbmFsUGFyYW1zLndhdGNoU2xpZGVzUHJvZ3Jlc3M9ITApfSxpbml0OmZ1bmN0aW9uKCl7dGhpcy5wYXJhbXMucGFyYWxsYXgmJnRoaXMucGFyYWxsYXguc2V0VHJhbnNsYXRlKCl9LHNldFRyYW5zbGF0ZTpmdW5jdGlvbigpe3RoaXMucGFyYW1zLnBhcmFsbGF4JiZ0aGlzLnBhcmFsbGF4LnNldFRyYW5zbGF0ZSgpfSxzZXRUcmFuc2l0aW9uOmZ1bmN0aW9uKGUpe3RoaXMucGFyYW1zLnBhcmFsbGF4JiZ0aGlzLnBhcmFsbGF4LnNldFRyYW5zaXRpb24oZSl9fX0se25hbWU6XCJ6b29tXCIscGFyYW1zOnt6b29tOntlbmFibGVkOiExLG1heFJhdGlvOjMsbWluUmF0aW86MSx0b2dnbGU6ITAsY29udGFpbmVyQ2xhc3M6XCJzd2lwZXItem9vbS1jb250YWluZXJcIix6b29tZWRTbGlkZUNsYXNzOlwic3dpcGVyLXNsaWRlLXpvb21lZFwifX0sY3JlYXRlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PXtlbmFibGVkOiExLHNjYWxlOjEsY3VycmVudFNjYWxlOjEsaXNTY2FsaW5nOiExLGdlc3R1cmU6eyRzbGlkZUVsOnZvaWQgMCxzbGlkZVdpZHRoOnZvaWQgMCxzbGlkZUhlaWdodDp2b2lkIDAsJGltYWdlRWw6dm9pZCAwLCRpbWFnZVdyYXBFbDp2b2lkIDAsbWF4UmF0aW86M30saW1hZ2U6e2lzVG91Y2hlZDp2b2lkIDAsaXNNb3ZlZDp2b2lkIDAsY3VycmVudFg6dm9pZCAwLGN1cnJlbnRZOnZvaWQgMCxtaW5YOnZvaWQgMCxtaW5ZOnZvaWQgMCxtYXhYOnZvaWQgMCxtYXhZOnZvaWQgMCx3aWR0aDp2b2lkIDAsaGVpZ2h0OnZvaWQgMCxzdGFydFg6dm9pZCAwLHN0YXJ0WTp2b2lkIDAsdG91Y2hlc1N0YXJ0Ont9LHRvdWNoZXNDdXJyZW50Ont9fSx2ZWxvY2l0eTp7eDp2b2lkIDAseTp2b2lkIDAscHJldlBvc2l0aW9uWDp2b2lkIDAscHJldlBvc2l0aW9uWTp2b2lkIDAscHJldlRpbWU6dm9pZCAwfX07XCJvbkdlc3R1cmVTdGFydCBvbkdlc3R1cmVDaGFuZ2Ugb25HZXN0dXJlRW5kIG9uVG91Y2hTdGFydCBvblRvdWNoTW92ZSBvblRvdWNoRW5kIG9uVHJhbnNpdGlvbkVuZCB0b2dnbGUgZW5hYmxlIGRpc2FibGUgaW4gb3V0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dFthXT1SW2FdLmJpbmQoZSl9KSxkLmV4dGVuZChlLHt6b29tOnR9KTt2YXIgYT0xO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnpvb20sXCJzY2FsZVwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gYX0sc2V0OmZ1bmN0aW9uKHQpe2lmKGEhPT10KXt2YXIgaT1lLnpvb20uZ2VzdHVyZS4kaW1hZ2VFbD9lLnpvb20uZ2VzdHVyZS4kaW1hZ2VFbFswXTp2b2lkIDAscz1lLnpvb20uZ2VzdHVyZS4kc2xpZGVFbD9lLnpvb20uZ2VzdHVyZS4kc2xpZGVFbFswXTp2b2lkIDA7ZS5lbWl0KFwiem9vbUNoYW5nZVwiLHQsaSxzKX1hPXR9fSl9LG9uOntpbml0OmZ1bmN0aW9uKCl7dGhpcy5wYXJhbXMuem9vbS5lbmFibGVkJiZ0aGlzLnpvb20uZW5hYmxlKCl9LGRlc3Ryb3k6ZnVuY3Rpb24oKXt0aGlzLnpvb20uZGlzYWJsZSgpfSx0b3VjaFN0YXJ0OmZ1bmN0aW9uKGUpe3RoaXMuem9vbS5lbmFibGVkJiZ0aGlzLnpvb20ub25Ub3VjaFN0YXJ0KGUpfSx0b3VjaEVuZDpmdW5jdGlvbihlKXt0aGlzLnpvb20uZW5hYmxlZCYmdGhpcy56b29tLm9uVG91Y2hFbmQoZSl9LGRvdWJsZVRhcDpmdW5jdGlvbihlKXt0aGlzLnBhcmFtcy56b29tLmVuYWJsZWQmJnRoaXMuem9vbS5lbmFibGVkJiZ0aGlzLnBhcmFtcy56b29tLnRvZ2dsZSYmdGhpcy56b29tLnRvZ2dsZShlKX0sdHJhbnNpdGlvbkVuZDpmdW5jdGlvbigpe3RoaXMuem9vbS5lbmFibGVkJiZ0aGlzLnBhcmFtcy56b29tLmVuYWJsZWQmJnRoaXMuem9vbS5vblRyYW5zaXRpb25FbmQoKX19fSx7bmFtZTpcImxhenlcIixwYXJhbXM6e2xhenk6e2VuYWJsZWQ6ITEsbG9hZFByZXZOZXh0OiExLGxvYWRQcmV2TmV4dEFtb3VudDoxLGxvYWRPblRyYW5zaXRpb25TdGFydDohMSxlbGVtZW50Q2xhc3M6XCJzd2lwZXItbGF6eVwiLGxvYWRpbmdDbGFzczpcInN3aXBlci1sYXp5LWxvYWRpbmdcIixsb2FkZWRDbGFzczpcInN3aXBlci1sYXp5LWxvYWRlZFwiLHByZWxvYWRlckNsYXNzOlwic3dpcGVyLWxhenktcHJlbG9hZGVyXCJ9fSxjcmVhdGU6ZnVuY3Rpb24oKXtkLmV4dGVuZCh0aGlzLHtsYXp5Ontpbml0aWFsSW1hZ2VMb2FkZWQ6ITEsbG9hZDpxLmxvYWQuYmluZCh0aGlzKSxsb2FkSW5TbGlkZTpxLmxvYWRJblNsaWRlLmJpbmQodGhpcyl9fSl9LG9uOntiZWZvcmVJbml0OmZ1bmN0aW9uKCl7dGhpcy5wYXJhbXMubGF6eS5lbmFibGVkJiZ0aGlzLnBhcmFtcy5wcmVsb2FkSW1hZ2VzJiYodGhpcy5wYXJhbXMucHJlbG9hZEltYWdlcz0hMSl9LGluaXQ6ZnVuY3Rpb24oKXt0aGlzLnBhcmFtcy5sYXp5LmVuYWJsZWQmJiF0aGlzLnBhcmFtcy5sb29wJiYwPT09dGhpcy5wYXJhbXMuaW5pdGlhbFNsaWRlJiZ0aGlzLmxhenkubG9hZCgpfSxzY3JvbGw6ZnVuY3Rpb24oKXt0aGlzLnBhcmFtcy5mcmVlTW9kZSYmIXRoaXMucGFyYW1zLmZyZWVNb2RlU3RpY2t5JiZ0aGlzLmxhenkubG9hZCgpfSxyZXNpemU6ZnVuY3Rpb24oKXt0aGlzLnBhcmFtcy5sYXp5LmVuYWJsZWQmJnRoaXMubGF6eS5sb2FkKCl9LHNjcm9sbGJhckRyYWdNb3ZlOmZ1bmN0aW9uKCl7dGhpcy5wYXJhbXMubGF6eS5lbmFibGVkJiZ0aGlzLmxhenkubG9hZCgpfSx0cmFuc2l0aW9uU3RhcnQ6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2UucGFyYW1zLmxhenkuZW5hYmxlZCYmKGUucGFyYW1zLmxhenkubG9hZE9uVHJhbnNpdGlvblN0YXJ0fHwhZS5wYXJhbXMubGF6eS5sb2FkT25UcmFuc2l0aW9uU3RhcnQmJiFlLmxhenkuaW5pdGlhbEltYWdlTG9hZGVkKSYmZS5sYXp5LmxvYWQoKX0sdHJhbnNpdGlvbkVuZDpmdW5jdGlvbigpe3RoaXMucGFyYW1zLmxhenkuZW5hYmxlZCYmIXRoaXMucGFyYW1zLmxhenkubG9hZE9uVHJhbnNpdGlvblN0YXJ0JiZ0aGlzLmxhenkubG9hZCgpfX19LHtuYW1lOlwiY29udHJvbGxlclwiLHBhcmFtczp7Y29udHJvbGxlcjp7Y29udHJvbDp2b2lkIDAsaW52ZXJzZTohMSxieTpcInNsaWRlXCJ9fSxjcmVhdGU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2QuZXh0ZW5kKGUse2NvbnRyb2xsZXI6e2NvbnRyb2w6ZS5wYXJhbXMuY29udHJvbGxlci5jb250cm9sLGdldEludGVycG9sYXRlRnVuY3Rpb246Vy5nZXRJbnRlcnBvbGF0ZUZ1bmN0aW9uLmJpbmQoZSksc2V0VHJhbnNsYXRlOlcuc2V0VHJhbnNsYXRlLmJpbmQoZSksc2V0VHJhbnNpdGlvbjpXLnNldFRyYW5zaXRpb24uYmluZChlKX19KX0sb246e3VwZGF0ZTpmdW5jdGlvbigpe3RoaXMuY29udHJvbGxlci5jb250cm9sJiZ0aGlzLmNvbnRyb2xsZXIuc3BsaW5lJiYodGhpcy5jb250cm9sbGVyLnNwbGluZT12b2lkIDAsZGVsZXRlIHRoaXMuY29udHJvbGxlci5zcGxpbmUpfSxyZXNpemU6ZnVuY3Rpb24oKXt0aGlzLmNvbnRyb2xsZXIuY29udHJvbCYmdGhpcy5jb250cm9sbGVyLnNwbGluZSYmKHRoaXMuY29udHJvbGxlci5zcGxpbmU9dm9pZCAwLGRlbGV0ZSB0aGlzLmNvbnRyb2xsZXIuc3BsaW5lKX0sb2JzZXJ2ZXJVcGRhdGU6ZnVuY3Rpb24oKXt0aGlzLmNvbnRyb2xsZXIuY29udHJvbCYmdGhpcy5jb250cm9sbGVyLnNwbGluZSYmKHRoaXMuY29udHJvbGxlci5zcGxpbmU9dm9pZCAwLGRlbGV0ZSB0aGlzLmNvbnRyb2xsZXIuc3BsaW5lKX0sc2V0VHJhbnNsYXRlOmZ1bmN0aW9uKGUsdCl7dGhpcy5jb250cm9sbGVyLmNvbnRyb2wmJnRoaXMuY29udHJvbGxlci5zZXRUcmFuc2xhdGUoZSx0KX0sc2V0VHJhbnNpdGlvbjpmdW5jdGlvbihlLHQpe3RoaXMuY29udHJvbGxlci5jb250cm9sJiZ0aGlzLmNvbnRyb2xsZXIuc2V0VHJhbnNpdGlvbihlLHQpfX19LHtuYW1lOlwiYTExeVwiLHBhcmFtczp7YTExeTp7ZW5hYmxlZDohMCxub3RpZmljYXRpb25DbGFzczpcInN3aXBlci1ub3RpZmljYXRpb25cIixwcmV2U2xpZGVNZXNzYWdlOlwiUHJldmlvdXMgc2xpZGVcIixuZXh0U2xpZGVNZXNzYWdlOlwiTmV4dCBzbGlkZVwiLGZpcnN0U2xpZGVNZXNzYWdlOlwiVGhpcyBpcyB0aGUgZmlyc3Qgc2xpZGVcIixsYXN0U2xpZGVNZXNzYWdlOlwiVGhpcyBpcyB0aGUgbGFzdCBzbGlkZVwiLHBhZ2luYXRpb25CdWxsZXRNZXNzYWdlOlwiR28gdG8gc2xpZGUge3tpbmRleH19XCJ9fSxjcmVhdGU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2QuZXh0ZW5kKGUse2ExMXk6e2xpdmVSZWdpb246aSgnPHNwYW4gY2xhc3M9XCInK2UucGFyYW1zLmExMXkubm90aWZpY2F0aW9uQ2xhc3MrJ1wiIGFyaWEtbGl2ZT1cImFzc2VydGl2ZVwiIGFyaWEtYXRvbWljPVwidHJ1ZVwiPjwvc3Bhbj4nKX19KSxPYmplY3Qua2V5cyhqKS5mb3JFYWNoKGZ1bmN0aW9uKHQpe2UuYTExeVt0XT1qW3RdLmJpbmQoZSl9KX0sb246e2luaXQ6ZnVuY3Rpb24oKXt0aGlzLnBhcmFtcy5hMTF5LmVuYWJsZWQmJih0aGlzLmExMXkuaW5pdCgpLHRoaXMuYTExeS51cGRhdGVOYXZpZ2F0aW9uKCkpfSx0b0VkZ2U6ZnVuY3Rpb24oKXt0aGlzLnBhcmFtcy5hMTF5LmVuYWJsZWQmJnRoaXMuYTExeS51cGRhdGVOYXZpZ2F0aW9uKCl9LGZyb21FZGdlOmZ1bmN0aW9uKCl7dGhpcy5wYXJhbXMuYTExeS5lbmFibGVkJiZ0aGlzLmExMXkudXBkYXRlTmF2aWdhdGlvbigpfSxwYWdpbmF0aW9uVXBkYXRlOmZ1bmN0aW9uKCl7dGhpcy5wYXJhbXMuYTExeS5lbmFibGVkJiZ0aGlzLmExMXkudXBkYXRlUGFnaW5hdGlvbigpfSxkZXN0cm95OmZ1bmN0aW9uKCl7dGhpcy5wYXJhbXMuYTExeS5lbmFibGVkJiZ0aGlzLmExMXkuZGVzdHJveSgpfX19LHtuYW1lOlwiaGlzdG9yeVwiLHBhcmFtczp7aGlzdG9yeTp7ZW5hYmxlZDohMSxyZXBsYWNlU3RhdGU6ITEsa2V5Olwic2xpZGVzXCJ9fSxjcmVhdGU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2QuZXh0ZW5kKGUse2hpc3Rvcnk6e2luaXQ6VS5pbml0LmJpbmQoZSksc2V0SGlzdG9yeTpVLnNldEhpc3RvcnkuYmluZChlKSxzZXRIaXN0b3J5UG9wU3RhdGU6VS5zZXRIaXN0b3J5UG9wU3RhdGUuYmluZChlKSxzY3JvbGxUb1NsaWRlOlUuc2Nyb2xsVG9TbGlkZS5iaW5kKGUpLGRlc3Ryb3k6VS5kZXN0cm95LmJpbmQoZSl9fSl9LG9uOntpbml0OmZ1bmN0aW9uKCl7dGhpcy5wYXJhbXMuaGlzdG9yeS5lbmFibGVkJiZ0aGlzLmhpc3RvcnkuaW5pdCgpfSxkZXN0cm95OmZ1bmN0aW9uKCl7dGhpcy5wYXJhbXMuaGlzdG9yeS5lbmFibGVkJiZ0aGlzLmhpc3RvcnkuZGVzdHJveSgpfSx0cmFuc2l0aW9uRW5kOmZ1bmN0aW9uKCl7dGhpcy5oaXN0b3J5LmluaXRpYWxpemVkJiZ0aGlzLmhpc3Rvcnkuc2V0SGlzdG9yeSh0aGlzLnBhcmFtcy5oaXN0b3J5LmtleSx0aGlzLmFjdGl2ZUluZGV4KX19fSx7bmFtZTpcImhhc2gtbmF2aWdhdGlvblwiLHBhcmFtczp7aGFzaE5hdmlnYXRpb246e2VuYWJsZWQ6ITEscmVwbGFjZVN0YXRlOiExLHdhdGNoU3RhdGU6ITF9fSxjcmVhdGU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2QuZXh0ZW5kKGUse2hhc2hOYXZpZ2F0aW9uOntpbml0aWFsaXplZDohMSxpbml0OksuaW5pdC5iaW5kKGUpLGRlc3Ryb3k6Sy5kZXN0cm95LmJpbmQoZSksc2V0SGFzaDpLLnNldEhhc2guYmluZChlKSxvbkhhc2hDYW5nZTpLLm9uSGFzaENhbmdlLmJpbmQoZSl9fSl9LG9uOntpbml0OmZ1bmN0aW9uKCl7dGhpcy5wYXJhbXMuaGFzaE5hdmlnYXRpb24uZW5hYmxlZCYmdGhpcy5oYXNoTmF2aWdhdGlvbi5pbml0KCl9LGRlc3Ryb3k6ZnVuY3Rpb24oKXt0aGlzLnBhcmFtcy5oYXNoTmF2aWdhdGlvbi5lbmFibGVkJiZ0aGlzLmhhc2hOYXZpZ2F0aW9uLmRlc3Ryb3koKX0sdHJhbnNpdGlvbkVuZDpmdW5jdGlvbigpe3RoaXMuaGFzaE5hdmlnYXRpb24uaW5pdGlhbGl6ZWQmJnRoaXMuaGFzaE5hdmlnYXRpb24uc2V0SGFzaCgpfX19LHtuYW1lOlwiYXV0b3BsYXlcIixwYXJhbXM6e2F1dG9wbGF5OntlbmFibGVkOiExLGRlbGF5OjNlMyx3YWl0Rm9yVHJhbnNpdGlvbjohMCxkaXNhYmxlT25JbnRlcmFjdGlvbjohMCxzdG9wT25MYXN0U2xpZGU6ITEscmV2ZXJzZURpcmVjdGlvbjohMX19LGNyZWF0ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7ZC5leHRlbmQoZSx7YXV0b3BsYXk6e3J1bm5pbmc6ITEscGF1c2VkOiExLHJ1bjpfLnJ1bi5iaW5kKGUpLHN0YXJ0Ol8uc3RhcnQuYmluZChlKSxzdG9wOl8uc3RvcC5iaW5kKGUpLHBhdXNlOl8ucGF1c2UuYmluZChlKSxvblRyYW5zaXRpb25FbmQ6ZnVuY3Rpb24odCl7ZSYmIWUuZGVzdHJveWVkJiZlLiR3cmFwcGVyRWwmJnQudGFyZ2V0PT09dGhpcyYmKGUuJHdyYXBwZXJFbFswXS5yZW1vdmVFdmVudExpc3RlbmVyKFwidHJhbnNpdGlvbmVuZFwiLGUuYXV0b3BsYXkub25UcmFuc2l0aW9uRW5kKSxlLiR3cmFwcGVyRWxbMF0ucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIndlYmtpdFRyYW5zaXRpb25FbmRcIixlLmF1dG9wbGF5Lm9uVHJhbnNpdGlvbkVuZCksZS5hdXRvcGxheS5wYXVzZWQ9ITEsZS5hdXRvcGxheS5ydW5uaW5nP2UuYXV0b3BsYXkucnVuKCk6ZS5hdXRvcGxheS5zdG9wKCkpfX19KX0sb246e2luaXQ6ZnVuY3Rpb24oKXt0aGlzLnBhcmFtcy5hdXRvcGxheS5lbmFibGVkJiZ0aGlzLmF1dG9wbGF5LnN0YXJ0KCl9LGJlZm9yZVRyYW5zaXRpb25TdGFydDpmdW5jdGlvbihlLHQpe3RoaXMuYXV0b3BsYXkucnVubmluZyYmKHR8fCF0aGlzLnBhcmFtcy5hdXRvcGxheS5kaXNhYmxlT25JbnRlcmFjdGlvbj90aGlzLmF1dG9wbGF5LnBhdXNlKGUpOnRoaXMuYXV0b3BsYXkuc3RvcCgpKX0sc2xpZGVyRmlyc3RNb3ZlOmZ1bmN0aW9uKCl7dGhpcy5hdXRvcGxheS5ydW5uaW5nJiYodGhpcy5wYXJhbXMuYXV0b3BsYXkuZGlzYWJsZU9uSW50ZXJhY3Rpb24/dGhpcy5hdXRvcGxheS5zdG9wKCk6dGhpcy5hdXRvcGxheS5wYXVzZSgpKX0sZGVzdHJveTpmdW5jdGlvbigpe3RoaXMuYXV0b3BsYXkucnVubmluZyYmdGhpcy5hdXRvcGxheS5zdG9wKCl9fX0se25hbWU6XCJlZmZlY3QtZmFkZVwiLHBhcmFtczp7ZmFkZUVmZmVjdDp7Y3Jvc3NGYWRlOiExfX0sY3JlYXRlOmZ1bmN0aW9uKCl7ZC5leHRlbmQodGhpcyx7ZmFkZUVmZmVjdDp7c2V0VHJhbnNsYXRlOlouc2V0VHJhbnNsYXRlLmJpbmQodGhpcyksc2V0VHJhbnNpdGlvbjpaLnNldFRyYW5zaXRpb24uYmluZCh0aGlzKX19KX0sb246e2JlZm9yZUluaXQ6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2lmKFwiZmFkZVwiPT09ZS5wYXJhbXMuZWZmZWN0KXtlLmNsYXNzTmFtZXMucHVzaChlLnBhcmFtcy5jb250YWluZXJNb2RpZmllckNsYXNzK1wiZmFkZVwiKTt2YXIgdD17c2xpZGVzUGVyVmlldzoxLHNsaWRlc1BlckNvbHVtbjoxLHNsaWRlc1Blckdyb3VwOjEsd2F0Y2hTbGlkZXNQcm9ncmVzczohMCxzcGFjZUJldHdlZW46MCx2aXJ0dWFsVHJhbnNsYXRlOiEwfTtkLmV4dGVuZChlLnBhcmFtcyx0KSxkLmV4dGVuZChlLm9yaWdpbmFsUGFyYW1zLHQpfX0sc2V0VHJhbnNsYXRlOmZ1bmN0aW9uKCl7XCJmYWRlXCI9PT10aGlzLnBhcmFtcy5lZmZlY3QmJnRoaXMuZmFkZUVmZmVjdC5zZXRUcmFuc2xhdGUoKX0sc2V0VHJhbnNpdGlvbjpmdW5jdGlvbihlKXtcImZhZGVcIj09PXRoaXMucGFyYW1zLmVmZmVjdCYmdGhpcy5mYWRlRWZmZWN0LnNldFRyYW5zaXRpb24oZSl9fX0se25hbWU6XCJlZmZlY3QtY3ViZVwiLHBhcmFtczp7Y3ViZUVmZmVjdDp7c2xpZGVTaGFkb3dzOiEwLHNoYWRvdzohMCxzaGFkb3dPZmZzZXQ6MjAsc2hhZG93U2NhbGU6Ljk0fX0sY3JlYXRlOmZ1bmN0aW9uKCl7ZC5leHRlbmQodGhpcyx7Y3ViZUVmZmVjdDp7c2V0VHJhbnNsYXRlOlEuc2V0VHJhbnNsYXRlLmJpbmQodGhpcyksc2V0VHJhbnNpdGlvbjpRLnNldFRyYW5zaXRpb24uYmluZCh0aGlzKX19KX0sb246e2JlZm9yZUluaXQ6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2lmKFwiY3ViZVwiPT09ZS5wYXJhbXMuZWZmZWN0KXtlLmNsYXNzTmFtZXMucHVzaChlLnBhcmFtcy5jb250YWluZXJNb2RpZmllckNsYXNzK1wiY3ViZVwiKSxlLmNsYXNzTmFtZXMucHVzaChlLnBhcmFtcy5jb250YWluZXJNb2RpZmllckNsYXNzK1wiM2RcIik7dmFyIHQ9e3NsaWRlc1BlclZpZXc6MSxzbGlkZXNQZXJDb2x1bW46MSxzbGlkZXNQZXJHcm91cDoxLHdhdGNoU2xpZGVzUHJvZ3Jlc3M6ITAscmVzaXN0YW5jZVJhdGlvOjAsc3BhY2VCZXR3ZWVuOjAsY2VudGVyZWRTbGlkZXM6ITEsdmlydHVhbFRyYW5zbGF0ZTohMH07ZC5leHRlbmQoZS5wYXJhbXMsdCksZC5leHRlbmQoZS5vcmlnaW5hbFBhcmFtcyx0KX19LHNldFRyYW5zbGF0ZTpmdW5jdGlvbigpe1wiY3ViZVwiPT09dGhpcy5wYXJhbXMuZWZmZWN0JiZ0aGlzLmN1YmVFZmZlY3Quc2V0VHJhbnNsYXRlKCl9LHNldFRyYW5zaXRpb246ZnVuY3Rpb24oZSl7XCJjdWJlXCI9PT10aGlzLnBhcmFtcy5lZmZlY3QmJnRoaXMuY3ViZUVmZmVjdC5zZXRUcmFuc2l0aW9uKGUpfX19LHtuYW1lOlwiZWZmZWN0LWZsaXBcIixwYXJhbXM6e2ZsaXBFZmZlY3Q6e3NsaWRlU2hhZG93czohMCxsaW1pdFJvdGF0aW9uOiEwfX0sY3JlYXRlOmZ1bmN0aW9uKCl7ZC5leHRlbmQodGhpcyx7ZmxpcEVmZmVjdDp7c2V0VHJhbnNsYXRlOkouc2V0VHJhbnNsYXRlLmJpbmQodGhpcyksc2V0VHJhbnNpdGlvbjpKLnNldFRyYW5zaXRpb24uYmluZCh0aGlzKX19KX0sb246e2JlZm9yZUluaXQ6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2lmKFwiZmxpcFwiPT09ZS5wYXJhbXMuZWZmZWN0KXtlLmNsYXNzTmFtZXMucHVzaChlLnBhcmFtcy5jb250YWluZXJNb2RpZmllckNsYXNzK1wiZmxpcFwiKSxlLmNsYXNzTmFtZXMucHVzaChlLnBhcmFtcy5jb250YWluZXJNb2RpZmllckNsYXNzK1wiM2RcIik7dmFyIHQ9e3NsaWRlc1BlclZpZXc6MSxzbGlkZXNQZXJDb2x1bW46MSxzbGlkZXNQZXJHcm91cDoxLHdhdGNoU2xpZGVzUHJvZ3Jlc3M6ITAsc3BhY2VCZXR3ZWVuOjAsdmlydHVhbFRyYW5zbGF0ZTohMH07ZC5leHRlbmQoZS5wYXJhbXMsdCksZC5leHRlbmQoZS5vcmlnaW5hbFBhcmFtcyx0KX19LHNldFRyYW5zbGF0ZTpmdW5jdGlvbigpe1wiZmxpcFwiPT09dGhpcy5wYXJhbXMuZWZmZWN0JiZ0aGlzLmZsaXBFZmZlY3Quc2V0VHJhbnNsYXRlKCl9LHNldFRyYW5zaXRpb246ZnVuY3Rpb24oZSl7XCJmbGlwXCI9PT10aGlzLnBhcmFtcy5lZmZlY3QmJnRoaXMuZmxpcEVmZmVjdC5zZXRUcmFuc2l0aW9uKGUpfX19LHtuYW1lOlwiZWZmZWN0LWNvdmVyZmxvd1wiLHBhcmFtczp7Y292ZXJmbG93RWZmZWN0Ontyb3RhdGU6NTAsc3RyZXRjaDowLGRlcHRoOjEwMCxtb2RpZmllcjoxLHNsaWRlU2hhZG93czohMH19LGNyZWF0ZTpmdW5jdGlvbigpe2QuZXh0ZW5kKHRoaXMse2NvdmVyZmxvd0VmZmVjdDp7c2V0VHJhbnNsYXRlOmVlLnNldFRyYW5zbGF0ZS5iaW5kKHRoaXMpLHNldFRyYW5zaXRpb246ZWUuc2V0VHJhbnNpdGlvbi5iaW5kKHRoaXMpfX0pfSxvbjp7YmVmb3JlSW5pdDpmdW5jdGlvbigpe3ZhciBlPXRoaXM7XCJjb3ZlcmZsb3dcIj09PWUucGFyYW1zLmVmZmVjdCYmKGUuY2xhc3NOYW1lcy5wdXNoKGUucGFyYW1zLmNvbnRhaW5lck1vZGlmaWVyQ2xhc3MrXCJjb3ZlcmZsb3dcIiksZS5jbGFzc05hbWVzLnB1c2goZS5wYXJhbXMuY29udGFpbmVyTW9kaWZpZXJDbGFzcytcIjNkXCIpLGUucGFyYW1zLndhdGNoU2xpZGVzUHJvZ3Jlc3M9ITAsZS5vcmlnaW5hbFBhcmFtcy53YXRjaFNsaWRlc1Byb2dyZXNzPSEwKX0sc2V0VHJhbnNsYXRlOmZ1bmN0aW9uKCl7XCJjb3ZlcmZsb3dcIj09PXRoaXMucGFyYW1zLmVmZmVjdCYmdGhpcy5jb3ZlcmZsb3dFZmZlY3Quc2V0VHJhbnNsYXRlKCl9LHNldFRyYW5zaXRpb246ZnVuY3Rpb24oZSl7XCJjb3ZlcmZsb3dcIj09PXRoaXMucGFyYW1zLmVmZmVjdCYmdGhpcy5jb3ZlcmZsb3dFZmZlY3Quc2V0VHJhbnNpdGlvbihlKX19fSx7bmFtZTpcInRodW1ic1wiLHBhcmFtczp7dGh1bWJzOntzd2lwZXI6bnVsbCxzbGlkZVRodW1iQWN0aXZlQ2xhc3M6XCJzd2lwZXItc2xpZGUtdGh1bWItYWN0aXZlXCIsdGh1bWJzQ29udGFpbmVyQ2xhc3M6XCJzd2lwZXItY29udGFpbmVyLXRodW1ic1wifX0sY3JlYXRlOmZ1bmN0aW9uKCl7ZC5leHRlbmQodGhpcyx7dGh1bWJzOntzd2lwZXI6bnVsbCxpbml0OnRlLmluaXQuYmluZCh0aGlzKSx1cGRhdGU6dGUudXBkYXRlLmJpbmQodGhpcyksb25UaHVtYkNsaWNrOnRlLm9uVGh1bWJDbGljay5iaW5kKHRoaXMpfX0pfSxvbjp7YmVmb3JlSW5pdDpmdW5jdGlvbigpe3ZhciBlPXRoaXMucGFyYW1zLnRodW1icztlJiZlLnN3aXBlciYmKHRoaXMudGh1bWJzLmluaXQoKSx0aGlzLnRodW1icy51cGRhdGUoITApKX0sc2xpZGVDaGFuZ2U6ZnVuY3Rpb24oKXt0aGlzLnRodW1icy5zd2lwZXImJnRoaXMudGh1bWJzLnVwZGF0ZSgpfSx1cGRhdGU6ZnVuY3Rpb24oKXt0aGlzLnRodW1icy5zd2lwZXImJnRoaXMudGh1bWJzLnVwZGF0ZSgpfSxyZXNpemU6ZnVuY3Rpb24oKXt0aGlzLnRodW1icy5zd2lwZXImJnRoaXMudGh1bWJzLnVwZGF0ZSgpfSxvYnNlcnZlclVwZGF0ZTpmdW5jdGlvbigpe3RoaXMudGh1bWJzLnN3aXBlciYmdGhpcy50aHVtYnMudXBkYXRlKCl9LHNldFRyYW5zaXRpb246ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy50aHVtYnMuc3dpcGVyO3QmJnQuc2V0VHJhbnNpdGlvbihlKX0sYmVmb3JlRGVzdHJveTpmdW5jdGlvbigpe3ZhciBlPXRoaXMudGh1bWJzLnN3aXBlcjtlJiZ0aGlzLnRodW1icy5zd2lwZXJDcmVhdGVkJiZlJiZlLmRlc3Ryb3koKX19fV07cmV0dXJuIHZvaWQgMD09PVAudXNlJiYoUC51c2U9UC5DbGFzcy51c2UsUC5pbnN0YWxsTW9kdWxlPVAuQ2xhc3MuaW5zdGFsbE1vZHVsZSksUC51c2UoYWUpLFB9KTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3dpcGVyLm1pbi5qcy5tYXAiXX0=
